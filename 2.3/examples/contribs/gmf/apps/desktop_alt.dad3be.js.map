{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/goog.asserts.prod.js","webpack:///./src/GeometryType.js","webpack:///./src/format/FeatureProperties.js","webpack:///./src/format/AttributeType.js","webpack:///./contribs/gmf/src/theme/Themes.js","webpack:///./src/rule/Rule.js","webpack:///./src/datasource/OGC.js","webpack:///./contribs/gmf/src/index.js","webpack:///./src/misc/FeatureHelper.js","webpack:///./src/misc/ToolActivate.js","webpack:///./src/utils.js","webpack:///./src/message/Message.js","webpack:///./src/CustomEvent.js","webpack:///./src/map/FeatureOverlayMgr.js","webpack:///./src/rule/Geometry.js","webpack:///./src/map/LayerHelper.js","webpack:///./src/layertree/Controller.js","webpack:///./src/interaction/Measure.js","webpack:///./src/misc/filters.js","webpack:///./src/query/MapQuerent.js","webpack:///./contribs/gmf/src/layertree/TreeManager.js","webpack:///./src/misc/WMSTime.js","webpack:///./src/misc/decorate.js","webpack:///./src/misc/debounce.js","webpack:///./src/misc/EventHelper.js","webpack:///./src/filter/Condition.js","webpack:///./src/rule/Date.js","webpack:///./src/rule/Text.js","webpack:///./src/filter/RuleHelper.js","webpack:///./src/datasource/File.js","webpack:///./src/datasource/FileGroup.js","webpack:///./src/datasource/OGCGroup.js","webpack:///./src/datasource/WMSGroup.js","webpack:///./contribs/gmf/src/datasource/ExternalDataSourcesManager.js","webpack:///./src/datasource/DataSources.js","webpack:///./contribs/gmf/src/layertree/SyncLayertreeMap.js","webpack:///./contribs/gmf/src/editing/editFeatureComponent.js","webpack:///./contribs/gmf/src/theme/Manager.js","webpack:///./src/datasource/DataSource.js","webpack:///./src/rule/Select.js","webpack:///./src/misc/ToolActivateMgr.js","webpack:///./src/misc/btnComponent.js","webpack:///./src/statemanager/Service.js","webpack:///./src/interaction/common.js","webpack:///./contribs/gmf/src/authentication/Service.js","webpack:///./src/misc/Time.js","webpack:///./src/message/popupComponent.js","webpack:///./src/message/Popup.js","webpack:///./src/interaction/DrawAzimut.js","webpack:///./src/interaction/MeasureAzimut.js","webpack:///./src/map/FeatureOverlay.js","webpack:///./src/format/XSDAttribute.js","webpack:///./src/datasource/Group.js","webpack:///./src/WFSDescribeFeatureType.js","webpack:///./src/query/Querent.js","webpack:///./src/format/WFSAttribute.js","webpack:///./src/datasource/Helper.js","webpack:///./contribs/gmf/src/editing/Snapping.js","webpack:///./src/interaction/Translate.js","webpack:///./src/interaction/Rotate.js","webpack:///./src/draw/features.js","webpack:///./src/Menu.js","webpack:///./src/statemanager/Location.js","webpack:///./src/download/service.js","webpack:///./contribs/gmf/src/datasource/DataSourceBeingFiltered.js","webpack:///./src/message/modalComponent.js","webpack:///./src/message/Notification.js","webpack:///./src/misc/php-date-formatter.js","webpack:///./contribs/gmf/src/permalink/ShareService.js","webpack:///./src/print/Utils.js","webpack:///./src/interaction/MeasureLength.js","webpack:///./src/interaction/MeasureArea.js","webpack:///./contribs/gmf/src/authentication/component.js","webpack:///./contribs/gmf/src/authentication/module.js","webpack:///./src/map/BackgroundLayerMgr.js","webpack:///./contribs/gmf/src/backgroundlayerselector/component.js","webpack:///./contribs/gmf/src/datasource/Helper.js","webpack:///./contribs/gmf/src/datasource/OGC.js","webpack:///./contribs/gmf/src/datasource/WFSAliases.js","webpack:///./contribs/gmf/src/datasource/Manager.js","webpack:///./contribs/gmf/src/datasource/module.js","webpack:///./src/message/Disclaimer.js","webpack:///./contribs/gmf/src/disclaimer/component.js","webpack:///./contribs/gmf/src/filters/SavedFilters.js","webpack:///./src/filter/ruleComponent.js","webpack:///./src/filter/component.js","webpack:///./contribs/gmf/src/filters/filterselectorComponent.js","webpack:///./contribs/gmf/src/filters/module.js","webpack:///./contribs/gmf/src/layertree/timeSliderComponent.js","webpack:///./contribs/gmf/src/layertree/module.js","webpack:///./contribs/gmf/src/permalink/module.js","webpack:///./src/map/component.js","webpack:///./src/map/scaleselector.js","webpack:///./src/map/module.js","webpack:///./contribs/gmf/src/map/component.js","webpack:///./contribs/gmf/src/map/mousepositionComponent.js","webpack:///./contribs/gmf/src/map/module.js","webpack:///./src/grid/Config.js","webpack:///./src/grid/component.js","webpack:///./contribs/gmf/src/query/gridComponent.js","webpack:///./src/misc/swipe.js","webpack:///./contribs/gmf/src/query/windowComponent.js","webpack:///./contribs/gmf/src/query/extraModule.js","webpack:///./contribs/gmf/src/search/module.js","webpack:///./contribs/gmf/src/theme/selectorComponent.js","webpack:///./contribs/gmf/src/theme/module.js","webpack:///./src/message/displaywindowComponent.js","webpack:///./src/misc/controlComponent.js","webpack:///./src/misc/filereaderComponent.js","webpack:///./src/misc/getBrowserLanguage.js","webpack:///./src/misc/extraModule.js","webpack:///./src/query/mapQueryComponent.js","webpack:///./contribs/gmf/src/controllers/AbstractAppController.js","webpack:///./src/interaction/ModifyCircle.js","webpack:///./src/interaction/ModifyRectangle.js","webpack:///./src/interaction/Modify.js","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.js","webpack:///./contribs/gmf/src/import/importdatasourceComponent.js","webpack:///./contribs/gmf/src/import/module.js","webpack:///./src/draw/Controller.js","webpack:///./src/draw/point.js","webpack:///./src/draw/rectangle.js","webpack:///./src/draw/text.js","webpack:///./src/measure/area.js","webpack:///./src/measure/azimut.js","webpack:///./src/measure/length.js","webpack:///./src/draw/component.js","webpack:///./contribs/gmf/src/editing/XSDAttributes.js","webpack:///./contribs/gmf/src/editing/EditFeature.js","webpack:///./contribs/gmf/src/raster/RasterService.js","webpack:///./src/statemanager/WfsPermalink.js","webpack:///./src/proj/somerc.js","webpack:///./src/proj/EPSG21781.js","webpack:///./src/search/searchDirective.js","webpack:///./src/misc/colorpickerComponent.js","webpack:///./src/misc/AutoProjection.js","webpack:///./contribs/gmf/src/search/FulltextSearch.js","webpack:///./src/download/Csv.js","webpack:///./src/map/resizemap.js","webpack:///./contribs/gmf/src/permalink/shareComponent.js","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.js","webpack:///./src/statemanager/module.js","webpack:///./contribs/gmf/src/permalink/Permalink.js","webpack:///./src/misc/datepickerComponent.js","webpack:///./src/format/Attribute.js","webpack:///./contribs/gmf/src/editing/EnumerateAttribute.js","webpack:///./src/misc/File.js","webpack:///./contribs/gmf/src/controllers/AbstractDesktopController.js","webpack:///./src/print/VectorEncoder.js","webpack:///./src/print/Service.js","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.js","webpack:///./contribs/gmf/src/editing/module.js","webpack:///./src/format/FeatureHashStyleType.js","webpack:///./src/format/FeatureHash.js","webpack:///./contribs/gmf/src/contextualdata/component.js","webpack:///./contribs/gmf/src/contextualdata/module.js","webpack:///./src/search/createGeoJSONBloodhound.js","webpack:///./src/search/createLocationSearchBloodhound.js","webpack:///./src/search/module.js","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.js","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.js","webpack:///./contribs/gmf/src/drawing/module.js","webpack:///./src/profile/d3Elevation.js","webpack:///./src/profile/elevationComponent.js","webpack:///./contribs/gmf/src/profile/component.js","webpack:///./contribs/gmf/src/profile/drawLineComponent.js","webpack:///./contribs/gmf/src/profile/module.js","webpack:///./src/query/bboxQueryComponent.js","webpack:///./contribs/gmf/src/raster/component.js","webpack:///./contribs/gmf/src/print/component.js","webpack:///./src/editing/createfeatureComponent.js","webpack:///./src/misc/datetimepickerComponent.js","webpack:///./src/editing/attributesComponent.js","webpack:///./src/editing/exportfeaturesComponent.js","webpack:///./src/misc/sortableComponent.js","webpack:///./src/message/popoverComponent.js","webpack:///./contribs/gmf/src/search/component.js","webpack:///./src/map/recenter.js","webpack:///./src/misc/syncArrays.js","webpack:///./src/layertree/component.js","webpack:///./src/olcs/constants.js","webpack:///./src/Popover.js","webpack:///./contribs/gmf/src/layertree/component.js","webpack:///./contribs/gmf/apps/appmodule.js","webpack:///./src/googlestreetview/component.js","webpack:///./src/googlestreetview/module.js","webpack:///./src/routing/NominatimService.js","webpack:///./src/routing/RoutingService.js","webpack:///./src/routing/NominatimInputComponent.js","webpack:///./src/routing/RoutingFeatureComponent.js","webpack:///./src/routing/RoutingComponent.js","webpack:///./src/routing/module.js","webpack:///./src/proj/EPSG2056.js","webpack:///./contribs/gmf/apps/desktop_alt/Controller.js","webpack:///./src/routing/routing.html","webpack:///./src/routing/routingfeature.html","webpack:///./src/routing/nominatiminput.html","webpack:///./src/googlestreetview/component.html","webpack:///./contribs/gmf/src/import/importdatasourceComponent.html","webpack:///./contribs/gmf/src/import/wmtsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/import/wmsCapabilityLayertreeComponent.html","webpack:///./contribs/gmf/src/raster/widgetComponent.html","webpack:///./contribs/gmf/src/profile/component.html","webpack:///./contribs/gmf/src/print/component.html","webpack:///./contribs/gmf/src/editing/editFeatureSelectorComponent.html","webpack:///./contribs/gmf/src/editing/editFeatureComponent.html","webpack:///./src/editing/attributescomponent.html","webpack:///./contribs/gmf/src/drawing/drawFeatureComponent.html","webpack:///./contribs/gmf/src/drawing/featureStyleComponent.html","webpack:///./src/message/displaywindowComponent.html","webpack:///./contribs/gmf/src/theme/selectorComponent.html","webpack:///./contribs/gmf/src/search/component.html","webpack:///./src/misc/colorpickerComponent.html","webpack:///./contribs/gmf/src/query/windowComponent.html","webpack:///./contribs/gmf/src/query/gridComponent.html","webpack:///./src/grid/component.html","webpack:///./contribs/gmf/src/map/mousepositionComponent.html","webpack:///./contribs/gmf/src/map/component.html","webpack:///./src/map/scaleselector.html","webpack:///./contribs/gmf/src/permalink/shareComponent.html","webpack:///./contribs/gmf/src/layertree/timesliderComponent.html","webpack:///./contribs/gmf/src/layertree/component.html","webpack:///./src/layertree/component.html","webpack:///./contribs/gmf/src/layertree/datasourceGroupTreeComponent.html","webpack:///./contribs/gmf/src/permalink/crosshair.svg","webpack:///./contribs/gmf/src/filters/filterselectorcomponent.html","webpack:///./src/filter/component.html","webpack:///./src/filter/rulecomponent.html","webpack:///./src/misc/datepickerComponent.html","webpack:///./src/message/popupcomponent.html","webpack:///./contribs/gmf/src/backgroundlayerselector/component.html","webpack:///./contribs/gmf/src/authentication/component.html"],"names":["webpackJsonpCallback","data","chunkIds","moreModules","executeModules","moduleId","chunkId","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","configurable","enumerable","get","r","value","n","__esModule","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","bind","slice","assert","condition","opt_message","var_args","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","assertInstanceof","type","assertObjectPrototypeIsIntact","CIRCLE","LINE_STRING","MULTI_LINE_STRING","MULTI_POINT","MULTI_POLYGON","POINT","POLYGON","RECTANGLE","TEXT","ANGLE","COLOR","IS_CIRCLE","IS_RECTANGLE","IS_TEXT","NAME","SHOW_LABEL","OPACITY","AZIMUT","SHOW_MEASURE","SIZE","STROKE","BOOLEAN","DATE","DATETIME","TIME","GEOMETRY","NUMBER","SELECT","$http","$injector","$q","ngeoLayerHelper","gettextCatalog","gmfThemesOptions","olEventsEventTarget","this","addBlankBackgroundLayer_","addBlankBackgroundLayer","undefined","$q_","$http_","treeUrl_","has","cacheVersion_","ngeoLocation_","layerHelper_","deferred_","defer","promise_","promise","loaded","bgLayerPromise_","olBase","findGroupByLayerNodeName","themes","ii","theme","jj","children","group","childNodes","getFlatNodes","findObjectByName","findGroupByName","internalNodes","getFlatInternalNodes","objects","objectName","olArray","findThemeByName","themeName","node","nodes","getBgLayers","_this","layerHelper","getIds","item","array","forEach","child","callback","layer","set","metadata","dimensions","ids","layerLayerCreationFn","ogcServers","gmfLayer","gmfLayerWMTS","googAsserts","url","createWMTSLayerFromCapabilitites","matrixSet","customOpenLayersOptions","then","response","message","console","error","resolve","gmfLayerWMS","ogcServer","server","imageType","opt_params","STYLES","styles","_iterator","entries","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","_ref","key","createBasicWMSLayer","layers","credential","fail","layerGroupCreationFn","orderedChildren","map","x","reverse","promises","all","collection","filter","olCollection","createBasicGroup","promiseSuccessFn","background_layers","itemType","values","getString","olLayerTile","label","thumbnail","getThemeObject","getThemesObject","getBackgroundLayersObject","getOgcServersObject","hasEditableLayers","hasEditableLayers_","_this2","some","hasNodeEditableLayers_","editable","getSnappingConfig","config","snappingConfig","getNodeMaxResolution","maxResolution","maxResolutionHint","getNodeMinResolution","minResolution","minResolutionHint","loadThemes","opt_roleId","_this3","params","role","cache_version","cache","withCredentials","errors","join","hasParam","alert","dispatchEvent","reject","NodeType","MIXED_GROUP","NOT_MIXED_GROUP","WMTS","WMS","angular","ngeoMapLayerHelper","service","options","_classCallCheck","active_","active","expression","lowerBoundary_","lowerBoundary","operator_","operator","upperBoundary_","upperBoundary","isCustom_","isCustom","name_","operators_","operators","propertyName_","propertyName","type_","listenerKeys","getExpression","setExpression","reset","destroy","olEvents","_createClass","OperatorType","BETWEEN","TemporalOperatorType","DURING","EQUAL_TO","GREATER_THAN","GREATER_THAN_OR_EQUAL_TO","LESSER_THAN","LESSER_THAN_OR_EQUAL_TO","LIKE","NOT_EQUAL_TO","SpatialOperatorType","CONTAINS","INTERSECTS","WITHIN","BEGINS","ENDS","EQUALS","_inherits","_ngeoDatasourceDataSo","_possibleConstructorReturn","dimensionsConfig_","dimensionsConfig","dimensionsFiltersConfig_","dimensionsFiltersConfig","filterCondition_","filterCondition","ngeoFilterCondition","AND","filterRules_","filterRules","filtrable_","filtrable","copyable_","copyable","dimensions_","geometryName_","geometryName","DEFAULT_GEOMETRY_NAME_","ogcImageType_","ogcImageType","ogcLayers_","ogcLayers","ogcServerType_","ogcServerType","ServerType","MAPSERVER","ogcType_","ogcType","Type","snappable_","snappable","snappingToEdges_","snappingToEdges","snappingToVertice_","snappingToVertice","snappingTolerance_","snappingTolerance","timeAttributeName_","timeAttributeName","timeLowerValue_","timeLowerValue","timeProperty_","timeProperty","timeUpperValue_","timeUpperValue","wfsFeatureNS_","wfsFeatureNS","WFSFeatureNS","wfsFeaturePrefix_","wfsFeaturePrefix","WFSFeaturePrefix","FEATURE","wfsOutputFormat_","wfsOutputFormat","WFSOutputFormat","GML3","wfsUrl_","wfsUrl","wmsInfoFormat_","wmsInfoFormat","WMSInfoFormat","GML","wmsIsSingleTile_","wmsIsSingleTile","wmsUrl_","wmsUrl","wmtsLayer_","wmtsLayer","wmtsUrl_","wmtsUrl","queryable","ogcLayer","wfsFormat","supportsWFS","format","olFormatGML3","GML2","olFormatGML2","olFormatWFS","featureNS","featureType","gmlFormat","wfsFormat_","wmsFormat","supportsWMS","olFormatWMSGetFeatureInfo","wmsFormat_","getAttributes","attributes","setAttributes","updateGeometryNameFromAttributes_","combinableWithDataSourceForWFS","dataSource","combinableForWFS","haveTheSameActiveDimensions","combinableWithDataSourceForWMS","combinableForWMS","isAnyOGCLayerInRange","res","queryableOnly","arguments","getInRangeOGCLayerNames","layerNames","_iterator2","_isArray2","_i2","maxRes","minRes","inMinRange","inMaxRange","inRange","getOGCLayerNames","_iterator3","_isArray3","_i3","_ref3","getFiltrableOGCLayerName","_iterator4","_isArray4","_i4","_ref4","attribute","ngeoFormatAttributeType","share","myActive","activeDimensions","itsActive","time","range","lower","upper","end","start","timeRangeValue","supportsOGCQueries","_iterator5","_isArray5","_i5","_ref5","ngeoDatasourceDataSource","guessServiceTypeByUrl","test","GEOSERVER","QGISSERVER","geoserver","mapserver","qgisserver","DATALAYERGROUP_NAME","EXTERNALLAYERGROUP_NAME","COORDINATES_LAYER_NAME","PermalinkParam","BG_LAYER","EXTERNAL_DATASOURCES_NAMES","EXTERNAL_DATASOURCES_URLS","FEATURES","MAP_CROSSHAIR","MAP_TOOLTIP","MAP_X","MAP_Y","MAP_Z","TREE_GROUPS","WFS_LAYER","WFS_NGROUPS","WFS_SHOW_FEATURES","$filter","$filter_","decimals_","precision_","numberFormat_","unitPrefixFormat_","ngeoNumberCoordinates_","pointFilterFn_","pointFilterArgs_","filterElements","split","filterName","projection_","download_","setProjection","projection","setStyle","feature","opt_select","getStyle","supportsVertex_","getVertexStyle","unshift","getHaloStyle_","getType","style","ngeoGeometryType","getLineStringStyle_","getPointStyle_","getPolygonStyle_","getTextStyle_","constructor","strokeWidth","getStrokeProperty","showLabel","getShowLabelProperty","showMeasure","getShowMeasureProperty","color","getRGBAColorProperty","olStyleStyle","stroke","olStyleStroke","width","textLabelValues","getMeasure","getNameProperty","textLabelValue","text","createTextStyle_","size","getSizeProperty","image","olStyleCircle","radius","fill","olStyleFill","font_size","point_to_px","offsetY","optNumber","attrib","getNumber","opacity","getOpacityProperty","fillColor","azimut","ngeoFormatFeatureProperties","line","getRadiusLine","ngeoInteractionMeasure","getFormattedLength","geometry","angle","olGeomPoint","getLastCoordinate","offsetX","Math","cos","PI","sin","exceedLength","getAngleProperty","createEditingStyles","white","blue","geom","getGeometry","zIndex","Infinity","opt_incGeomFunc","incGeomFunc","olStyleRegularShape","points","innerMultiCoordinates","multiCoordinates","coordinates","olGeomLineString","getCoordinates","olGeomMultiLineString","olGeomPolygon","olGeomMultiPolygon","concat","olGeomMultiPoint","supported","haloSize","getFilteredFeatureValues","properties","getProperties","getGeometryName","getColorProperty","olColor","export","features","formatType","FormatType","GPX","exportGPX","KML","exportKML","olFormatGPX","mimeType","fileName","export_","olFormatKML","opt_mimeType","clones","clone","olFeature","writeOptions","dataProjection","featureProjection","writeFeatures","rotation","font","olStyleText","measure","ngeoInteractionMeasureAzimut","getFormattedAzimutRadius","getFormattedArea","getFormattedPoint","args","panMapToFeature","opt_panDuration","panDuration","getSize","view","getView","extent","calculateExtent","intersectsExtent","mapCenter","getCenter","featureCenter","getCoordinateAt","getInteriorPoint","olExtent","getExtent","animate","center","duration","y","endPoint","getNonSpatialProperties","nonSpatialProperties","clearNonSpatialProperties","ngeoDownloadService","ngeoMiscFilters","toolContext","activePropertyName","getActive","setActive","newVal","toMulti","multiGeom","appendPoint","appendLineString","appendPolygon","isSafari","navigator","userAgent","indexOf","colorZeroPadding","hex","rgbArrayToHex","rgb","g","b","Error","hexR","toString","hexG","hexB","decodeQueryString","queryString","queryData","pairs","substring","pair","indexOfEquals","decodeURIComponent","encodeQueryString","queryItem","encodeURIComponent","deleteCondition","event","olEventsCondition","showMessage","show","msgObjects","getMessageObjects","ERROR","info","INFORMATION","success","SUCCESS","warn","WARNING","opt_type","msgObject","defaultType","msg","detail","olEventsEvent","featureUidToGroupIndex_","groups_","source_","olSourceVector","useSpatialIndex","layer_","olLayerVector","source","styleFunction_","updateWhileAnimating","updateWhileInteracting","addFeature","groupIndex","featureUid","removeFeature","clear","olObj","getLayer","getFeatureOverlay","styleFunction","olStyleDefaultFunction","ngeoMapFeatureOverlay","init","setMap","defaultFunction","toStyleFunction","resolution","_ngeoRuleRule","featureProperties","feature_","format_","olFormatGeoJSON","updatingExpression_","updatingGeometry_","geometryChangeListenerKey_","handleFeatureGeometryChange_","setGeometryFromExpression_","registerGeometryChange_","writeGeometry","handleGeometryChange_","evt","target","olGeomGeometry","readGeometry","setGeometry","ngeoRuleRule","ngeoTilesPreloadingLimit","tilesPreloadingLimit_","GROUP_KEY","REFRESH_PARAM","sourceURL","sourceLayersName","sourceFormat","opt_serverType","opt_time","opt_crossOrigin","opt_customSourceOptions","opt_customLayerOptions","FORMAT","LAYERS","olServerType","replace","assign","serverType","crossOrigin","olSourceImageWMS","updateParams","layerOptions","olLayerImage","createBasicWMSLayerFromDataSource","setVisible","visible","id","capabilitiesURL","layerName","opt_matrixSet","opt_dimensions","opt_customOptions","parser","olFormatWMTSCapabilities","preload","read","optionsFromCapabilities","olSourceWMTS","updateDimensions","setSource","elt","index","createWMTSLayerFromCapabilititesObj","capabilities","layerCap","capabilitiesStyles","opt_layers","OlLayerGroup","setLayers","getGroupFromMap","groupName","groups","getLayerGroup","getLayers","getArray","existingGroup","addLayer","getFlatLayers","sublayers","hasGroupLayer","sublayer","getFlatLayers_","computedOpacity","getOpacity","getLayerByName","found","getWMTSLegendURL","legendURL","getWMSLegendURL","opt_scale","opt_legendRule","opt_legendWidth","opt_legendHeight","opt_servertype","opt_dpi","opt_bbox","opt_srs","opt_additionalQueryString","TRANSPARENT","SERVICE","VERSION","REQUEST","LAYER","round","olUri","isLayerVisible","getVisible","currentResolution","getResolution","getMinResolution","getMaxResolution","refreshWMSLayer","getSource","olSourceTileWMS","getParams","random","setZIndexToFirstLevelChildren","element","ZIndex","innerGroupLayers","innerLayer","setZIndex","updateWMSLayerState","names","getQuerySourceIds","$scope","$rootScope","$attrs","isRoot","nodeExpr","rootScope_","state_","$watch","oldVal","$eval","mapExpr","parent","$parent","$on","uid","depth","nodelayerExpr","nodelayerexprExpr","newNodelayerExpr","treeCtrl","olLayerLayer","olLayerGroup","dataSource_","ngeoMiscDecorate","layerLoading","$broadcast","listenersExpr","listenersexprExpr","treeScope","getState","setState","state","opt_broadcast","setStateInternal_","refreshState","firstParents","getFirstParentTree","firstParent","newState","getCalculateState","childState","previousChildState","getSetActive","val","removeLayer","getDataSource","setDataSource","tree","VisitorDecision","STOP","SKIP","DESCEND","Visitor","traverseDepthFirst","visitor","decision","stop","controller","olInteractionInteraction","handleEvent","handleEvent_","helpTooltipElement_","helpTooltipOverlay_","measureTooltipElement_","measureTooltipOverlay_","measureTooltipOverlayCoord_","sketchFeature","continueMsg","decimals","precision","displayHelpTooltip_","displayHelpTooltip","startMsg","document","createElement","textContent","changeEventKey_","postcomposeEventKey_","vectorLayer_","drawInteraction_","createDrawInteraction","sketchStyle","shouldHandleDrawInteractionActiveChange_","handleDrawInteractionActiveChange_","onDrawStart_","onDrawEnd_","updateState_","polygon","transform","area","abs","olSphere","getFormattedCircleArea","circle","pow","getRadius","lineString","c1","olProj","c2","point","opt_template","dragging","helpMsg","olDom","appendChild","setPosition","coordinate","getDrawInteraction","prevMap","getMap","removeInteraction","addInteraction","createMeasureTooltip_","handleMeasure","coord","innerHTML","classList","add","setOffset","ngeoCustomEvent","unlistenerEvent_","createHelpTooltip_","removeHelpTooltip_","olOverlay","offset","positioning","addOverlay","removeOverlay","parentNode","removeChild","removeMeasureTooltip_","stopEvent","getTooltipElement","Scalify","numberFilter","filterFn","scale","Number","$locale","formats","NUMBER_FORMATS","number","opt_precision","groupSep","GROUP_SEP","decimalSep","DECIMAL_SEP","sign","nb_decimal","floor","log","factor","decimal","unit","str_number","str_unit","UnitPrefix","standardPrefix","binaryPrefix","opt_unit","divisor","prefix","index_max","postfix","space","NumberCoordinates","opt_fractionDigits","template","fractionDigits","parseInt","DMSCoordinates","degreesToStringHDMS","degrees","hemispheres","normalizedDegrees","olMath","dms","olString","charAt","xdms","ydms","trustHtmlFilter","$sce","input","trustAsHtml","Duration","TimeUnits","freeze","SECONDS","MINUTES","HOURS","DAYS","pluralize","amount","formattedUnit","getPlural","output","remainder","removeCDATA","$inject","ngeoDataSources","ngeoDataSourcesHelper","ngeoQuerent","ngeoQueryResult","dataSources_","ngeoDataSourcesHelper_","ngeoQuerent_","result_","limit_","limit","queryCountFirst_","queryCountFirst","tolerancePx_","tolerance","bboxAsGETParam_","bboxAsGETParam","dataSourceNames_","issue","queryableDataSources","dataSources","getQueryableDataSources","tolerancePx","wfsCount","pending","handleResult_","total","sources","queried","tooManyResults","totalFeatureCount","_loop","idStr","querentResultItem","tooManyFeatures","typeSeparatedFeatures","filteredProperties","alias","unset","setProperties","featuresByType","ngeoDatasourceDataSources","ngeoDatasourceHelper","ngeoQueryQuerent","$timeout","ngeoNotification","gmfThemes","ngeoStateManager","$timeout_","$injector_","gettextCatalog_","ngeoNotification_","gmfThemes_","root","rootCtrl","numberOfGroupsToAddInThisDigestLoop","groupsToAddInThisDigestLoop_","promiseForGroupsToAddInThisDigestLoop_","ngeoStateManager_","ogcServers_","handleThemesChange_","refreshFirstLevelGroups_","setFirstLevelGroups","firstLevelGroups","deleteParam","gmfBase","addFirstLevelGroups","opt_add","opt_silent","groupNotAdded","addFirstLevelGroup_","notifyCantAddGroups_","updateTreeGroupsState_","treeGroupsParam","updateState","cleanParams","alreadyAdded","groupID","rootChild","grp","cancel","addGroupByName","_this4","gmfThemeThemes","addGroupByLayerName","_this5","groupAdded","getTreeCtrlByNodeId","treeCtrlToActive","ngeoLayertreeController","removeGroup","removeAll","cloneGroupNode_","toggleNodeCheck_","_this6","childNode","isChecked","notify","ngeoMessageMessage","correspondingTreeCtrl","getOgcServer","mixed","firstLevelGroupCtrl","gmfGroup","_this7","firstLevelGroupsFullState","getFirstLevelGroupFullState_","nodesToRestore","nodeToRestore","fullState","setNodeMetadataFromFullState_","_this8","isExpanded","isLegendExpanded","nodeElement","$","hasClass","legendElement","is","_this9","ngeoMessageNotification","ngeoStatemanagerService","ngeoMiscTime","formatTimeValue","opt_useISOFormat","opt_toUTC","date","Date","utc","yearResolution","monthResolution","dayResolution","secondResolution","toISOString","formatWMSTimeParam","wmsTimeProperty","times","mode","interaction","olLayerBase","setOpacity","incrementEvents","decrementEvents","incrementLoadCount_","increment_","decrementLoadCount_","decrement_","on","olEvent","newLayer","olSourceTile","olSourceImage","$applyAsync","load_count","factory_","func","wait","invokeApply","timeout","_len","_key","context","later","factory","listenerKeys_","addListenerKey","initListenerKey_","clearListenerKey","NOT","OR","Text_inherits","Text_classCallCheck","Text_possibleConstructorReturn","ngeoFeatureHelper","ngeoWMSTime","RuleHelper_classCallCheck","ngeoFeatureHelper_","ngeoWMSTime_","createRulesFromAttributes","opt_isCustom","rules","createRuleFromAttribute","rule","ngeoRuleDate","ngeoRuleGeometry","ngeoRuleSelect","choices","ngeoRuleText","createRules","optionsList","createRule","selectOptions","cloneRule","extendRule","sourceRule","destRule","serializeRules","serializedRule","serializeRule","obj","createFilter","mainFilter","conditions","createFilterFromRule_","srsName","olFormatFilter","incTime","timeFilter","createTimeFilterFromDataSource_","incDimensions","dimensionsFilter","createDimensionsFilterFromDataSource_","createFilterString","filterString","filterNode","writeFilter","xmlSerializer","XMLSerializer","serializeToString","opt_srsName","rot","rsot","rtot","spatialTypes","numericTypes","beginValue","endValue","moment","selectedChoices","selectedChoice","numericExpression","stringExpression","String","field","momentEnd","subtract","startValue","ngeoMiscFeatureHelper","ngeoMiscWMSTime","featuresCollection_","wrapX","FileGroup_inherits","_ngeoDatasourceGroup","FileGroup_classCallCheck","FileGroup_possibleConstructorReturn","injector","unregister_","addDataSource","ngeoDatasourceFile","registerDataSource_","handleDataSourceVisibleChange_","oldValue","removeDataSource","unregisterDataSource_","ngeoDatasourceGroup","OGCGroup_inherits","OGCGroup_classCallCheck","OGCGroup_possibleConstructorReturn","url_","OGCGroup_createClass","WMSGroup_inherits","_ngeoDatasourceOGCGro","WMSGroup_classCallCheck","WMSGroup_possibleConstructorReturn","ngeoLayerHelper_","wmsDataSourceUnregister_","init_","ngeoDatasourceOGC","updateLayer_","unregister","WMSGroup_createClass","ngeoDatasourceOGCGroup","ngeoFile","ExternalDataSourcesManager_classCallCheck","injector_","q_","ngeoFile_","extDataSources_","files_","map_","fileGroup_","ngeoDatasourceFileGroup","title","wmsGroupsCollection_","wmtsGroupsCollection_","wmtsCache_","handleDataSourcesRemove_","addWMSGroup_","wmsGroup","wmsGroupsCollection","removeWMSGroup_","remove","getWMSGroup","wmsGroups","addWMTSGroup_","wmtsGroup","wmtsGroupsCollection","removeWMTSGroup_","getWMTSGroup","wmtsGroups","isExternalDataSource","addLayer_","layerGroup","removeLayer_","createAndAddDataSourceFromWMSCapability","getId","req","imagePngType","includes","infoFormats","ngeoDatasourceWMSGroup","createAndAddDataSourceFromWMTSCapability","layerObj","handleWMTSDataSourceVisibleChange_","createAndAddDataSourceFromFile","file","opt_callback","getFileDataSource_","fileGroup","isEmpty","fit","rejections","content","readOptions","getProjection","isKml","extractStyles","readFeatures","isGpx","removeFileDataSource_","removeOGCDataSource_","ExternalDataSourcesManager_createClass","ngeoMiscFile","collection_","handleDataSourcesAdd_","bindMap_","handleViewResolutionChange_","syncDataSourcesToResolution_","unbindMap_","olView","syncDataSourceToResolution_","supportsDynamicInRange","ogcServersObject_","ogcServersObject","sync_","createLayer","dataLayerGroup","opt_position","createGroup_","createLeafInAMixedGroup_","initGmfLayerInANotMixedGroup_","updateLayerState_","groupNode","isFirstLevelGroup","printNativeAngle","createLayerFromGroup_","position","insertAt","inAMixedGroup","isOneParentNotMixed_","timeParam","getTimeParam_","hasActiveChildren","ctrl","updateLayerReferences_","createWMTSLayer_","checked","leafNode","firstLevelGroup","getFirstLevelGroupCtrl_","querySourceIds","disclaimer","disclaimers","wmsTime","timeValues","getOptions","isOneParentNotMix","gmfEditingEditFeature","gmfEditingSnapping","gmfEditingXSDAttributes","ngeoEditingAttributesComponent","ngeoEditingCreatefeatureComponent","ngeoMessageModalComponent","ngeoMiscBtnComponent","ngeoMiscEventHelper","ngeoMiscToolActivateMgr","run","$templateCache","put","require","component_","scope","dirty","editableTreeCtrl","vectorLayer","closeAfterSave","bindToController","templateUrl","directive","Controller_","$element","gmfEditFeature","gmfSnapping","gmfXSDAttributes","ngeoEventHelper","ngeoToolActivateMgr","element_","scope_","timeout_","gmfEditFeature_","gmfSnapping_","gmfXSDAttributes_","ngeoEventHelper_","ngeoToolActivateMgr_","editableNode_","editableWMSLayer_","confirmDeferred_","unsavedModificationsModalShown","createActive","createToolActivate","ngeoMiscToolActivate","mapSelectActive","mapSelectToolActivate","handleFeatureChange_","featureId","interactions_","modify_","modifyToolActivate","menu_","ngeoMenu","actions","cls","translate_","rotate_","rotateToolActivate","translateToolActivate","geomType","showServerError","serverErrorMessage","serverErrorType","$onInit","lang","getCurrentLanguage","datetimepicker","setLocale","setDateFormatter","DateFormatter","getFeaturesCollection","gmfLayertreeSyncLayertreeMap","olInteractionModify","ngeoUtils","ngeoInteractionRotate","ngeoInteractionTranslate","initializeInteractions_","ensureSnapInteractionsOnTop","handleDestroy_","handleFeatureAdd_","handleMapSelectActiveChange_","newValue","State","STOP_EDITING_PENDING","confirmCancel","STOP_EDITING_EXECUTE","DEACTIVATE_PENDING","DEACTIVATE_EXECUTE","IDLE","setAttributes_","toggle_","save","setId","dateFormatter","parseDate","jsonFormat","setMinutes","getMinutes","getTimezoneOffset","formatDate","updateFeature","insertFeatures","handleEditFeature_","refresh","close","checkForModifications_","scopeApply","$apply","continueWithoutSaving","delete","confirm","deleteFeature","submit","find","click","resp","mask","geomAttr","ngeoFormatXSDAttribute","getGeometryAttribute","keys","createUid","otherUid","toolMgr","handleMenuActionClick_","handleTranslateEnd_","handleRotateEnd_","registerTool","unregisterTool","mapDiv","getViewport","handleMapClick_","handleMapContextMenu_","pixel","forEachFeatureAtPixel","ret","hitTolerance","buffer","getFeaturesInExtent","handleGetFeatures_","getEventPixel","getCoordinateFromPixel","open","preventDefault","stopPropagation","_this10","registerInteractions_","_this11","unregisterInteractions_","_this12","newFeature","oldFeature","_this13","handleFeaturePropertyChange_","action","gmfTreeManagerModeFlush","gmfTreeManager","$rootScope_","modeFlush","gmfTreeManager_","themeName_","addTheme","setThemeName","getThemeName","isLoading","updateCurrentTheme","fallbackThemeName","fallbackTheme","$emit","EventType","THEME_NAME_SET","gmfLayertreeTreeManager","inRange_","visible_","id_","identifierAttribute_","identifierAttribute","maxResolution_","minResolution_","choices_","tool","opt_defaultActivate","unlisten","deactivateTools_","activateDefault_","defaultTool","ENABLE_ASSERTS","defaultTools","entry","unregisterGroup","activateTool","deactivateTool","hasActiveTool","btnGroupComponent_","$parse","restrict","link","attrs","buttons_","buttonModel","BtnGroupController","activate","expressionFn","addButton","btnComponent_","ctrls","buttonsCtrl","ngModelCtrl","indexInGroup","ngModelGet","ngModelSet","$setViewValue","$viewValue","$render","toggleClass","ngeoLocation","ngeoUsedKeyRegexp","initialState","usedKeyRegexp","useLocalStorage_","setUseLocalStorage","paramKeys","getParamKeys","keyRegexp","match","localStorage","getParam","err","getInitialValue","getInitialStringValue","getInitialNumberValue","parseFloat","getInitialBooleanValue","ngeoStatemanagerLocation","RegExp","getDefaultDrawStyleFunction","createEditingStyle","getDefaultModifyStyleFunction","_olEventsEventTarget","authenticationBaseUrl","gmfUser","baseUrl_","user_","noReloadRole_","load_","RouteSuffix","IS_LOGGED_IN","handleLogin_","changePassword","oldPwd","newPwd","confPwd","CHANGE_PASSWORD","post","param","oldPassword","newPassword","confirmNewPassword","headers","Content-Type","is_password_changed","login","pwd","LOGIN","password","logout","noReload","LOGOUT","resetUser_","resetPassword","RESET_PASSWORD","successFn","respData","getFunctionalities","functionalities","getRoleId","role_id","checkingLoginStatus","setUser_","user","emitEvent","username","role_name","createDate","defaultValue","getTime","minDate","minValue","maxDate","maxValue","minDefaultDate","minDefValue","maxDefaultDate","maxDefValue","defaultValues","getUTCDate","localDate","getUTCFullYear","getUTCMonth","directive_","ngeoPopupTemplateUrl","addClass","css","$compile","$new","autoDestroy_","sce_","body","append","getOpen","setOpen","$destroy","setTitle","trustedTitle","setContent","opt_trusted","setUrl","setWidth","setHeight","height","setSize","setAutoDestroy","autoDestroy","Factory","ngeoMessagePopupComponent","olInteractionPointer","handleDownEvent","handleDownEvent_","handleUpEvent","handleUpEvent_","downPx_","started_","sketchFeature_","sketchPoint_","squaredClickTolerance_","sketchLayer_","ngeoInteractionCommon","downPx","clickPx","dx","dy","squaredDistance","pass","handlePointerMove_","startDrawing_","finishDrawing_","mapBrowserEvent","pointerHandleEvent","modifyDrawing_","createOrUpdateSketchPoint_","updateSketchFeatures_","sketchPointGeom","setCoordinates","sketchFeatures","addFeatures","olGeomCircle","olGeomGeometryCollection","geometries","getGeometriesArray","last","setRadius","getLength","abortDrawing_","shouldStopEvent","olFunctions","unitPrefixFormat","numberFormat","ngeoInteractionDrawAzimut","getGeometries","olProjProjection","formatLength","formatAzimut","getFormattedAzimut","getAzimut","coords","rad","acos","sqrt","manager","manager_","features_","index_","setFeatures","handleFeatureRemove_","olFormatXML","readFromDocument","doc","nodeType","Node","DOCUMENT_NODE","firstChild","nextSibling","ELEMENT_NODE","readFromNode","localName","elements","getElementsByTagName","readFromElementNode_","getAttribute","nillable","required","ngeoFormatAttribute","setGeometryType","setAttributeByXsdType_","enumerations","restrictions","restrictionNode","maxLengths","maxLength","numType","NumberType","FLOAT","INTEGER","geomAttribute","dataSourcesCollection_","title_","getDataSourceState","VisibilityState","ON","OFF","toggleVisibilityState","visibleToSet","visibilityState","otherState","INDETERMINATE","olXml","PARSERS_","readElement_","objectStack","len","pop","readComplexType_","COMPLEX_TYPE_PARSERS_","readComplexContent_","COMPLEX_CONTENT_PARSERS_","readExtension_","EXTENSION_PARSERS_","readSequence_","SEQUENCE_PARSERS_","NAMESPACE_URIS_","complexType","complexContent","extension","sequence","ngeoRuleHelper","http_","ngeoRuleHelper_","requestCancelers_","wmsGetCapabilitiesPromises_","wmtsGetCapabilitiesPromises_","cancelStillRunningRequests_","combinedWFSDataSources","getCombinableWFSDataSources_","wfs","issueCombinedWFS_","combinedWMSDataSources","getCombinableWMSDataSources_","wms","issueCombinedWMS_","handleCombinedQueryResult_","isDataSourceQueryable_","wfsDescribeFeatureType","supportsAttributes","ogcLayerNames","TYPENAME","ngeoWFSDescribeFeatureType","wmsFindLayerCapability","layerCapabilities","layerCapability","wmsGetCapabilities","baseUrl","opt_cache","olFormatWMSCapabilities","wmtsFindLayerCapability","wmtsGetCapabilities","combinedHash","hash","dataSourceIdStr","dataSourceId","handleQueryResult_","readAndTypeFeatures_","setUniqueIds_","featureTypes","getSetOlFormatTypes_","opt_types","types","setFeatureType","getFeatureType","combinedDataSources","maxFeatures","getCode","bbox","getFeatureCommonOptions","_iterator7","_isArray7","_i7","_ref7","featurePrefix","outputFormat","getFeatureDefer","countPromise","getCountOptions","resultType","featureCountXml","writeGetFeature","featureCountRequest","canceler","registerCanceler_","meta","readFeatureCollectionMetadata","numberOfFeatures","getFeatureOptions","featureRequestXml","featureRequest","_iterator6","_isArray6","_i6","_ref6","FEATURE_COUNT","projCode","_iterator8","_isArray8","_i8","_ref8","INFO_FORMAT","activeDimensionsSet","filtrableLayerName","_iterator9","_isArray9","_i9","_ref9","filterParamValue","filterParamValues","wmsSource","wmsGetFeatureInfoUrl","getGetFeatureInfoUrl","combinableDataSources","notCombinableDataSources","_iterator10","_isArray10","_i10","_ref10","combined","_iterator11","_isArray11","_i11","_ref11","combinableDataSource","_iterator12","_isArray12","_i12","_ref12","_iterator13","_isArray13","_i13","_ref13","ds","ogcDS","_iterator14","_isArray14","_i14","_ref14","CombinedDataSources","ngeoFilterRuleHelper","complexTypeElements","readFromComplexTypeElement_","Helper_classCallCheck","cache_","getDataSourceAttributes","wfsDescribeFeatureTypeDefer","ogcLayerName","ngeoFormatWFSAttribute","mapViewChangePromise_","treeCtrlsUnregister_","unregisterAllTreeCtrl_","$watchCollection","registerTreeCtrl_","handleMapMoveEnd_","wfsConfig","getWFSConfig_","stateWatcherUnregister","handleTreeCtrlStateChange_","requestDeferred","deactivateItem_","childLayers","ogcServerName","firstTreeCtrl","firstNode","wfsSupport","urlWfs","activateItem_","olInteractionSnap","edge","pixelTolerance","vertex","loadItemFeatures_","loadAllItems_","extend","Cache","CacheItem","WFSConfig","featureListenerKeys_","keyPressListenerKey_","myFeatures_","vectorSource_","centerFeatures_","olInteractionTranslate","handleKeyUp_","setState_","currentMap","addFeature_","handleFeaturesAdd_","handleFeaturesRemove_","elem","getTargetElement","cursor","removeFeature_","getGeometryCenterPoint_","centerFeature","keyCode","modified_","changingFeature_","pixelTolerance_","coordinate_","centerCoordinate_","overlay_","handleDown_","handleDragEvent","handleDrag_","handleUp_","getCenterCoordinate_","willModifyFeatures_","f","getFlatMidpoint","getFlatInteriorPoint","oldX","oldY","centerX","centerY","dx1","dy1","dx0","dy0","a0","atan2","a1","rotate","menuOptions","opt_overlayOptions","olOverlayPositioning","TOP_LEFT","clickOutListenerKey_","contentEl","class","autoClose_","autoClose","headerEl","appendTo","actionsEl","actions_","data-name","prepend","handleActionClick_","handleMapPointerMove_","documentElement","handleClickOut_","getElement","closest","originalEvent","Element","contains","location","history","history_","schema_","protocol","domain_","hostname","port_","port","path_","pathname","queryData_","search","fragment_","replaceState","getPath","getUriString","out","encodedQueryData","encodedFragment","hasFragmentParam","getFragmentParam","getParamAsInt","valueAsInt","isNaN","getParamAsFloat","valueAsFloat","getFragmentParamAsInt","getFragmentParamKeys","getParamKeysWithPrefix","getFragmentParamKeysWithPrefix","updateFragmentParams","deleteFragmentParam","setPath","path","LocationFactory","$window","lastUri","newUri","$evalAsync","MockProvider","$locationProvider","locationMock","absUrl","opt_path","host","opt_search","opt_paramValue","opt_url","download","opt_fileType","fileType","blob","Blob","saveAs","ngModel","transclude","bindings","resizable","closable","component","_class","$element_","$scope_","modal_","attr","dialog","draggable","modal","e","$onDestroy","container","container_","DEFAULT_DELAY_","clearMessageByCacheItem_","classNames","el","html","delay","DAY","HOUR","_compare","str1","str2","toLowerCase","_lpad","char","chr","_extend","_typeof","_indexOf","arr","defaultSettings","dateSettings","days","daysShort","months","monthsShort","meridiem","ordinal","suffixes","2","3","separators","validParts","intParts","tzParts","tzClip","self","getMonth","vDate","vFormat","year","month","day","hour","min","sec","vSettings","vDateFlag","vTimeFlag","vDatePart","iDatePart","vMonth","vMeriIndex","vMeriOffset","mer","vFormatParts","vDateParts","guessDate","vDateStr","vParts","vPattern","vDigit","iPart","iSec","vYear","substr","setMonth","setDate","getFullYear","setFullYear","setHours","setSeconds","parseFormat","vChar","fmt","backslash","doFormat","t","D","w","getDate","N","getDay","z","a","Y","W","F","M","L","A","G","B","H","getUTCHours","getUTCMinutes","getUTCSeconds","getHours","h","getSeconds","u","getMilliseconds","str","exec","I","UTC","O","tzo","P","T","Z","U","BACKSLASH","gmfShortenerCreateUrl","gmfShortenerCreateUrl_","getShortUrl","short_url","status","postShortUrl_","sendShortUrl","shortUrl","email","URL_MAX_LEN","URL_PATH_MAX_LEN","extentHalfHorizontalDistance_","extentHalfVerticalDistance_","INCHES_PER_METER_","DOTS_PER_INCH_","createPrintMaskPostcompose","getScale","opt_rotation","frameState","viewState","viewportWidth","pixelRatio","viewportHeight","olHas","ppi","ipm","extentHalfWidth","extentHalfHeight","beginPath","moveTo","lineTo","closePath","drawPrintZone_","drawPrintZoneWithRotation_","fillStyle","minx","miny","maxx","maxy","diagonal","gamma","atan","omega","x1","y1","x2","y2","x3","y3","x4","y4","getOptimalScale","mapSize","mapResolution","printMapSize","printMapScales","mapWidth","mapHeight","scaleWidth","scaleHeight","optimal","getOptimalResolution","printMapScale","dotsPerMeter","resolutionX","resolutionY","optimalResolution","max","getBottomLeftCorner","getBottomRightCorner","getUpLeftCorner","getUpRightCorner","br","olInteractionDraw","proj","verticesCount","gmfAuthenticationService","gmfAuthenticationTemplateUrl_","gmfAuthenticationTemplateUrl","allowPasswordReset","allowPasswordChange","passwordValidator","forcePasswordChange","infoMessage","AuthenticationController_","gmfAuthenticationService_","notification_","changingPassword","userMustChangeItsPassword","resetPasswordModalShown","loginVal","pwdVal","oldPwdVal","newPwdVal","newPwdConfVal","setError_","isPasswordValid","notValidMessage","changePasswordReset","catch","resetError_","resetPasswordSuccessFn","messageType","gmfAuthenticationComponent","olObservable","mapUids_","mapUid","BACKGROUNDLAYERGROUP_NAME","previous","bgGroup","setAt","removeAt","current","getOpacityBgLayer","setOpacityBgLayer","baseBgLayer","hasUpdates","updatedDimensions","ngeoMapBackgroundLayerMgr","gmfBackgroundlayerselectorTemplateUrl","opacityOptions","select","ngeoBackgroundLayerMgr","bgLayer","bgLayers","opacityLayer","backgroundLayerMgr_","indexOpa","findIndex","getSetBgLayerOpacity","setLayer","gmfEnumerateAttribute","gmfEnumerateAttribute_","prepareFiltrableDataSource","prepareFiltrableDataSourceDefer","enumAttributes","enumeratedAttributes","getAttributeValues","choice","gmfEditingEnumerateAttribute","_ngeoDatasourceOGC","OGC_classCallCheck","gmfLayer_","OGC_createClass","WFSAliases_classCallCheck","describe","gmfWFSAliases","Manager_classCallCheck","ngeoBackgroundLayerMgr_","ngeoDataSources_","gmfWFSAliases_","dataSourcesCache_","dimensionsWatcherUnregister","treeCtrlCache_","handleNgeoBackgroundLayerChange_","setDatasourceMap","setDimensions","handleDimensionsChange_","layerIds","getDataSourceLayer_","updateLayerFilter_","clearDataSources_","clearTreeCtrlCache_","promiseThemes","createDataSource_","promiseBgLayers","backgroundLayers","backgroundLayer","handleTreeManagerRootChildrenChange_","newTreeCtrls","treeCtrls","newTreeCtrl","cacheItem","getTreeCtrlCacheItem_","addTreeCtrlToCache_","removeTreeCtrlCacheItem_","queryLayers","wmsLayers","childLayer","isSingleTile","dimensionsFilters","identifierAttributeField","timeAttribute","gmfDatasourceOGC","filterRulesWatcherUnregister","hasFilters","isVisible","handleDataSourceFilterRulesChange_","timeLowerValueWatcherUnregister","timeUpperValueWatcherUnregister","wmsLayer","handleDataSourceTimeValueChange_","treeDataSource","_source$updateParams","layersParam","layersList","filterParam","hasFilter","wmsLayerName","dsLayer","currentTimeParam","previousBackgroundLayer","currentBackgroundLayer","gmfDatasourceWFSAliases","gmfDatasourceDataSourceBeingFiltered","gmfDatasourceExternalDataSourcesManager","gmfDatasourceHelper","gmfDatasourceManager","ngeoCreatePopup","createPopup_","messages_","closeMessage_","getMessageUid_","showInPopup","popup","button","ngeoMessagePopup","ngeoMessageDisclaimer","ngeoDisclaimer","external","visibility","msgs_","disclaimer_","eventHelper_","dataLayerGroup_","registerLayer_","handleLayersAdd_","handleLayersRemove_","unregisterLayer_","layerUid","showDisclaimerMessage_","closeDisclaimerMessage_","SavedFilters_classCallCheck","currentDataSourceId_","currentDataSourceItems_","localStorageKey_","items_","items","rePopulateCurrentDataSourceItems_","loadItemsFromLocalStorage_","JSON","parse","indexOfItem","idx","saveItemsInLocalStorage_","stringify","SavedFilters_createClass","Item","customRules","directedRules","ngeoDrawComponent","ngeoMiscDatepickerComponent","ngeoRuleTemplateUrl","RuleController_","_operators","_operatorsShortFormat","ruleComponent_classCallCheck","featureOverlay","toolGroup","operatorType","spatialOperatorType","temporalOperatorType","operatorsShortFormat","timeRangeMode","widget","createDate_","createWeekAgoDate_","interval","timeValueMode","toolActivate_","unlisteners_","drawActive","drawToolActivate","drawnFeatures","selectedFeatures","ngeoInteractionModify","handleActiveChange_","supportedTypes","hasExpression","isActive","editToolIsActive","toggle","toggleChoiceSelection","onDateSelected","onDateRangeSelected","opt_timeDelta","setTime","timeToDate","toLocaleDateString","oldActive","ruleFeature","cloneFeature","drawnFeature","getRuleGeometryType","removeMenu_","ngeoFilterRuleComponent","ngeoQueryMapQuerent","ngeoFilterTemplateUrl","aRuleIsActive","datasource","FilterController_","ngeoMapQuerent","component_classCallCheck","ngeoMapQuerent_","geometryAttributes","otherAttributes","ruleUnlisteners_","handleARuleIsActiveChange_","registerRule_","hasARule","getRulesWithValue_","getData","createAndAddCustomRule","setCondition","removeCustomRule","unregisterRule_","handleRuleActiveChange_","unlistener","ngeoMapFeatureOverlayMgr","ngeoFilterComponent","gmfFiltersSavedFilters","gmfFilterselectorTemplateUrl","gmfDataSourceBeingFiltered","gmfDataSourcesHelper","gmfSavedFilters","ngeoFeatureOverlayMgr","filterselectorComponent_classCallCheck","handleSelectedDataSourceChange_","gmfDataSourcesHelper_","currentDataSourceItems","saveFilterManageModalShown","gmfUser_","handleGmfUserFunctionalitiesChange_","filtrableDataSources","filtrableLayerNodeNames_","gmfDataSources_","readyDataSource","ruleCache_","saveFilterSaveModalShown","saveFilterName","enableDataSourceRegistration_","handleEnableDataSourceRegistrationChange_","defaultFiltrableDataSourceName_","toggleDataSourceRegistration_","usrFunc","newDataSourceRegistration","register","isDataSourceFiltrable_","opt_notify","gettext","msgs","p1","p2","p3","currentDataSourceId","getRuleCacheItem_","setRuleCacheItem_","directedFilterAttributes","directedAttributes","saveFilterShowModal","saveFilterSave","alreadyExist","saveFilterLoadItem","filterItem","saveFilterManage","saveFilterRemoveItem","RuleCache","RuleCacheItem","gmfFiltersFilterselectorComponent","pre","preLink","sliderOptions","onSliderReleased_","computeDates_","sliderUi","sDate","eDate","wmstime","getClosestValue_","dates","isModeRange","timeValueList","getTimeValueList_","initialOptions_","maxNbValues","endDate","nextDate","timestamp","leftIndex","rightIndex","leftDistance","rightDistance","targetDate","startDate","bestDate","bestDistance","distance","getLocalizedDate","gmfLayertreeComponent","gmfLayertreeDatasourceGroupTreeComponent","gmfLayertreeTimeSliderComponent","gmfPermalinkPermalink","gmfPermalinkShareService","gmfPermalinkShareComponent","prop","olMap","setTarget","manageResizeAttr","manageResizeProp","manageResize","resizeTransitionAttr","resizeTransitionProp","resizeTransition","now","loop","adjustSize","updateSize","renderSync","requestAnimationFrame","ngeoScaleselectorTemplateUrl","ScaleselectorController","scalesExpr","scales","zoomLevels","newLength","sort","optionsExpr","getOptions_","resolutionChangeKey_","currentScale","currentZoom","getZoom","handleViewChange_","registerResolutionChangeListener_","dropup","zoom","changeZoom","setZoom","handleResolutionChange_","ngeoMapComponent","ngeoMapRecenter","ngeoMapResizemap","ngeoMapScaleselector","gmfPermalinkModule","ngeoMapModule","gmfPermalink","ngeoFeatureOverlayMgr_","gmfPermalink_","gmfMapMousepositionTemplateUrl","projections","control_","initOlControl_","removeControl","formatFn","filterAndArgs","olControlMousePosition","className","coordinateFormat","undefinedHTML","addControl","code","gmfMapComponent","gmfMapMousepositionComponent","columnDefs","selectedRows","getRowUid","isRowSelected","getSelectedCount","getSelectedRows","row","selectRow","toggleRow","isSelected","selectAll","unselectAll","rowId","invertSelection","ngeoGridConfig","ngeoGridTemplateUrl","configuration","sortedBy","sortAscending","floatTheadConfig","scrollContainer","$table","columnName","asc","attributes1","attributes2","clickRow","shiftKey","isShiftKeyOnly_","platformModifierKey","isPlatformModifierKeyOnly_","clickRow_","selectRange_","targetUid","posClickedRow","posSelectedRows","currentRow","currentUid","posClosestRow","currentPos","currentDistance","rangeStart","rangeEnd","preventTextSelection","altKey","metaKey","ctrlKey","ngeoDownloadCsv","ngeoGridComponent","gmfDisplayquerygridTemplateUrl","featuresStyleFn","selectedFeatureStyleFn","getMapFn","removeEmptyColumnsFn","maxResultsFn","maxRecenterZoomFn","mergeTabs","ngeoCsvDownload","queryOptions","ngeoCsvDownload_","maxResults","gridSources","loadedGridSources","selectedTab","removeEmptyColumns_","maxRecenterZoom","featuresForSources_","highlightFeatures_","filename_","newQueryResult","oldQueryResult","updateData_","unregisterSelectWatcher_","featuresOverlay","featuresStyle","highlightFeaturesOverlay","highlightFeatureStyle","mapFn","getGridSources","sourceLabel","hasOneWithTooManyResults_","getMergedSources_","makeGrid_","escapeValue","collectData_","firstSourceId","selectTab","isInteger","toEscape","gridSource","allSources","mergedSources","mergedSource","getMergedSource_","mergedSourceId","mergeSourceId","currentMergeSourceId","sourceLabels","containsSource","mergeSource","allProperties","featureGeometriesNames","featuresForSource","featureGeometryName","cleanProperties_","gridCreated","removeEmptyColumnsFn_","keysToKeep","keyToRemove","gridConfig","getGridConfiguration_","ol_uid","columns","column","newSelected","oldSelectedRows","onSelectionChanged_","updateFeatures_","reflowGrid_","activePane","removeClass","getActiveGridSource","isOneSelected","getSelectedRowCount","zoomToSelection","maxZoom","downloadCsv","startDownload","MOVE_BUFFER_RADIUS","POINTER_EVENTS","mouse","move","touch","pointer","touches","changedTouches","clientX","clientY","getEvents","pointerTypes","eventType","pointerType","eventName","eventHandlers","totalX","totalY","startCoords","lastPos","events","makeSwipeDirective_","directiveName","direction","$verticalSwipe","MAX_HORIZONTAL_DISTANCE","MAX_HORIZONTAL_RATIO","MIN_VERTICAL_DISTANCE","swipeHandler","valid","validSwipe","deltaY","deltaX","isDefined","triggerHandler","$event","ngeoMiscSwipe","$animateProvider","classNameFilter","gmfDisplayquerywindowTemplateUrl","draggableContainment","defaultCollapsedFn","desktop","showUnqueriedLayers","collapsed","showUnqueriedLayers_","sourcesFilter","selectedSource","currentResult","isNext","updateQueryResult_","containment","minHeight","minWidth","setCurrentResult_","collectFeatures_","highlightCurrentFeature_","setHighlight","hasChanged","lastFeature","getResultLength","animate_","positionMax","queryResult","isFirst","isLast","getFeatureValues","opt_lastFeature","setSelectedSource","gmfQueryGridComponent","gmfQueryWindowComponent","gmfSearchComponent","gmfSearchFulltextSearch","gmfThemeManager","gmfThemeSelectorTemplateUrl","setThemes_","setTheme","gmfThemeSelectorComponent","ngeoMessageDisplaywindowTemplateUrl","displaywindowComponent_classCallCheck","clearOnClose","contentTemplate","contentScope","compile_","handle","updateContentTemplate_","compiled","displayWindow","empty","clear_","displaywindowComponent_createClass","trustAsResourceUrl","control","olControlControl","fileContent","changeEvent","fileReader","FileReader","onload","readAsText","files","availableLanguages","nav","browserLanguages","languages","language","browserLanguage","systemLanguage","userLanguage","supportedLanguages","ngeoMiscAutoProjection","ngeoMiscControlComponent","ngeoMiscDebounce","ngeoMiscFilereaderComponent","ngeoMiscGetBrowserLanguage","ngeoMiscSortableComponent","clickEventKey_","pointerMoveEventKey_","sourceids","hit","forEachLayerAtPixel","activate_","cursorHover","deactivate_","permalink_","gmfAuthentication","updateHasEditableLayers_","loginRedirectUrl","loginInfoMessage","loginActive","unbind","userChange","roleId","filterSelectorEnabled","open_panel","filterSelectorActive","previousThemeName","defaultThemeNameFromFunctionalities","setDefaultBackground_","searchDatasources","labelKey","groupValues","groupActions","srid","gmfDataSourcesManager","defaultDimensions","dim","leftNavVisible","rightNavVisible","queryFill","queryStroke","queryFeatureStyle","queryActive","queryAutoClear","printPanelActive","printActive","measurePointActive","measureLengthActive","drawFeatureActive","drawProfilePanelActive","getBrowserLanguage","stateManager","tmhDynamicLocale","defaultLang","langUrls","initLanguage","mapTools","mapToolsGroup","queryToolActivate","measurePointActivate","measureLengthActivate","drawFeatureActivate","drawProfilePanelActivate","printPanelActivate","$root","updateCurrentBackgroundLayer_","skipPermalink","background","getBackgroundLayer","defaultBasemapArray","default_basemap","defaultBasemapLabel","gmfx","openIframePopup","opt_width","opt_height","opt_apply","displaywindowUrl","openPopup_","openTextPopup","displaywindowContent","displaywindowTitle","displaywindowOpen","displaywindowWidth","displaywindowHeight","cgxp","tools","openInfoWindow","displaywindowDraggableContainment","getLayerByLabels","labels","switchLanguage","setCurrentLanguage","loadRemote","urlLanguage","getLocationIcon","arrow","arrowWrapper","gmfAuthenticationModule","gmfBackgroundlayerselectorComponent","gmfDatasourceModule","gmfDisclaimerComponent","gmfFiltersModule","gmfLayertreeModule","gmfMapModule","gmfQueryExtraModule","gmfSearchModule","gmfThemeModule","ngeoMessageDisplaywindowComponent","ngeoMiscExtraModule","ngeoQueryMapQueryComponent","ngeoStatemanagerModule","ngeoStatemanagerWfsPermalink","tmhDynamicLocaleProvider","angularLocaleScript","localeLocationPattern","handleDragEvent_","vertexFeature_","lastPixel_","rBush_","olStructsRBush","snappedToVertex_","dragSegments_","writeCircleGeometry_","handlePointerAtPixel_","removeFeatureSegmentData_","rBush","nodesToRemove","rings","segment","segmentData","insert","createOrUpdateVertexFeature_","vertexFeature","compareIndexes_","vertexExtent","segmentDataMatches","getInExtent","componentSegments","segmentDataMatch","olCoordinate","fromCircle","setGeometryCoordinates_","olMapBrowserPointerEvent","handled","getInteracting","handlingDownUpSequence","pixelCoordinate","sortByDistance","lowerLeft","upperRight","box","closestSegment","vertexPixel","getPixelFromCoordinate","pixel1","pixel2","squaredDist1","squaredDist2","dist","vertexSegments","vectorPoints_","params_","featureGeom","pointSource","corners","pointFeatures","cornerPoint","cornerFeature","corner","siblingX","siblingY","boxFeature","previousFeature","nextFeature","initializeParams_","origin","originPoint","originCoordinate","originPixel","siblingXPoint","siblingXCoordinate","siblingXPixel","vectorX","vectorXMagnitude","siblingYPoint","siblingYCoordinate","siblingYPixel","vectorY","vectorYMagnitude","destinationPixel","b2Pixel","calculateNewPixel_","b2Coordinate","c2Pixel","c2Coordinate","destination","vector","aVector","abScalarProduct","deltaVector","ModifyParams","otherFeatures_","circleFeatures_","ngeoInteractionModifyCircle","rectangleFeatures_","ngeoInteractionModifyRectangle","interactions","getFeatureCollection_","isCircle","isRectangle","gmfWmscapabilitylayertreenodeTemplateUrl","gmfExternalDataSourcesManager","gmfExternalDataSourcesManager_","createAndAddDataSource","getUid","gmfWmtscapabilitylayertreTemplateUrl","wmtsCapabilityLayertreeComponent_classCallCheck","gmfImportWmsCapabilityLayertreeComponent","gmfImportWmtsCapabilityLayertreeComponent","gmfImportdatasourceTemplateUrl","importdatasourceComponent_classCallCheck","fileInput_","hasError","hasErrorPromise_","Mode","ONLINE","modes","LOCAL","wmsCapabilities","wmtsCapabilities","serversEngine_","servers","serverUrls","Bloodhound","datumTokenizer","datum","originalDatumTokenizers","tokenizers","whitespace","datumTokenizers","originalDatumTokenizer","queryTokenizer","identify","local","$urlInput","$connectBtn","typeahead","hint","highlight","minLength","ttAdapter","ev","suggestion","focus","browse","connect","serviceType","startWorking_","stopWorking_","load","opt_hasError","nameAndSize","fileSize","gmfImportImportdatasourceComponent","ngeoFeatures","featureHelper_","ngeoFeatures_","drawPoint","measureLength","measureArea","measureAzimut","drawRectangle","drawText","registerInteraction","handleActiveChange","handleDrawEnd","sketch","ngeoDrawFeatures","drawFeatureCtrl","geometryFunction","maxPoints","ngeoDrawController","contMsg","ngeoInteractionMeasureArea","ngeoInteractionMeasureLength","ngeoDrawPoint","ngeoDrawRectangle","ngeoDrawText","ngeoMeasureArea","ngeoMeasureAzimut","ngeoMeasureLength","gmfLayersUrl","promises_","handleGetAttributes_","getFeaturesWithComparisonFilters","filters","layerId","geoJSON","writeFeature","gmfRasterUrl","getRaster","Param","X","handleGetRaster_","WfsPermalinkService","ngeoWfsPermalinkOptions","maxFeatures_","wfsTypes_","wfsTypes","wfsType","defaultFeatureNS_","defaultFeatureNS","defaultFeaturePrefix_","defaultFeaturePrefix","pointRecenterZoom_","pointRecenterZoom","clearResult_","typeName","createFilters_","filterGroups","issueRequest_","showFeatures","padding","getExtent_","resultSource","reduce","createFiltersForGroup","filterGroup","filterDef","or_","cond","equalTo","and_","joinFilters_","joinFn","combinedFilters","currentFilter","proj4","Proj","somerc","epsg21781def","epsg21781extent","defs","olProjProj4","setExtent","typeaheadOptionsExpr","typeaheadOptions","typeaheadDatasetsExpr","typeaheadDatasets","typeaheadListenersExpr","typeaheadListeners_","typeaheadListeners","adaptListeners_","dataset","cursorchange","autocomplete","query","datasetsempty","ngeoColorpickerTemplateUrl","colors","DEFAULT_COLORS","setColor","stringToCoordinates","getProjectionList","projectionsCodes","toUpperCase","tryProjections","viewProjection","opt_projections","tryProjectionsWithInversion","defaultParams_","queryParams","Promise","encoding_","extension_","includeHeader_","quote_","separator_","generateCsv","translatedColumnHeaders","columnHeader","header","getRow_","dataRows","rowValues","matchAllQuotesRegex","doubleQuote","stateExpr","animationDelayKey","animationDelay","cancelAnimationFrame","gmfPermalinkShareTemplateUrl","enableEmail","ShareComponentController","gmfShareService","gmfShareService_","shortLink","showLengthWarning","successfullySent","errorOnsend","errorOnGetShortUrl","when","permalink","$valid","gmfLayertreeDatasourceGroupTreeTemplateUrl","getGroupUid","toggleDataSource","ngeoDebounce","mapViewPropertyChangeEventKey_","ngeoDebounce_","featureOverlay_","gmfPermalinkOptions","useLocalStorage","crosshairEnabledByDefault_","crosshairEnabledByDefault","gmfObjectEditingManager_","gmfThemeManager_","defaultTheme_","ngeoWfsPermalink_","ngeoAutoProjection_","sourceProjections_","projectionCodes","crosshairFeature_","crosshairStyle_","crosshairStyle","olStyleIcon","src","mapTooltip_","featureHashFormat_","ngeoFormatFeatureHash","encodeStyles","propertiesType","fillOpacity","fontColor","fontSize","isBox","isLabel","pointRadius","strokeColor","handleBackgroundLayerManagerChange_","ParamPrefix","TREE_ENABLE","gmfLayerNames","TREE_GROUP_LAYERS","stateName","TREE_OPACITY","TREE_GROUP_OPACITY","getFeatures","addNgeoFeature_","handleNgeoFeaturesAdd_","handleNgeoFeaturesRemove_","setThemeInUrl_","setExternalDataSourcesStatePromise_","initExternalDataSources_","handleExternalDSGroupCollectionAdd_","handleExternalDSGroupCollectionRemove_","registerExternalDSGroup_","initLayers_","getMapCenter","targetProjection","reprojectedCenter","getMapZoom","getMapCrosshair","crosshair","setMapCrosshair","opt_center","crosshairCoordinate","getMapTooltip","setMapTooltip","tooltipText","tooltipPosition","div","ngeoPopover","DIMENSIONS","unregisterMap_","getFeature","registerMap_","oeFeature","enabled3d","ngeoOlcsConstants","Permalink3dParam","ENABLED","setCenter","wfsPermalinkData","getWfsPermalinkData_","refreshFirstLevelGroups","groupNodes","orderedNames","themeInUrl_","pathElements","indexOfTheme","defaultThemeName","decodeURI","tn","defaultTheme","default_theme","initialUri","href","authenticationRequired","groupsNames","enable","groupLayers","groupLayersArray","removeNgeoFeature_","handleNgeoFeaturesChange_","wfsLayer","numGroups","WFS","createFilterGroup_","showFeaturesParam","paramKey","gmfExtDSManager","layerNamesString","urlsString","ExtDSSeparator","LIST","urls","groupLayerNamesString","groupLayerNames","NAMES","getCapabilitiesDefer","_ret","responses","setExternalDataSourcesState_","dataSourcesCollection","containsLayerName","unregisterExternalDSGroup_","_this8$ngeoStateManag","wmsGroupLayerNames","wmsDataSource","wmtsGroupLayerNames","wmtsDataSource","startsWith","_iterator15","_isArray15","_i15","_ref15","OpenLayersLayerProperties","regexp","key1","key2","ngeoDatePickerTemplateUrl","sdateOptions","initialMinDate","initialMaxDate","onClose","selectedDate","datepicker","edateOptions","dp","ngeoTime","ngeoTime_","changeMonth","changeYear","sdate","edate","$watchGroup","newDates","oldDates","isDate","geomRegex","promiseId","handleGetAttributeValues_","isValidFileSize","isWmsGetCap","isWmtsGetCap","readyState","LOADING","abort","onerror","reason","onprogress","opt_cancelP","viewConfig","mapViewConfig","gmfControllersAbstractAppController","mapPixelRatio","controls","mapControls","olControlScaleLine","getElementById","olControlZoom","zoomInTipLabel","zoomOutTipLabel","olControlRotate","tipLabel","mapInteractions","olInteraction","pinchRotate","altShiftDragRotate","loadTilesWhileAnimating","loadTilesWhileInteracting","toolsActive","modalShareShown","editFeatureActive","routingfeatureActive","googleStreetViewActive","googleStreetViewStyle","importDataSourceActive","tooltip","trigger","selector","off","drawFeatureLayer","editFeatureVectorLayer","editFeatureActivate","googleStreetViewActivate","scaleSelectorOptions","profileLine","gmfContextualdataModule","gmfDrawingModule","gmfEditingModule","gmfPrintComponent","gmfProfileModule","gmfRasterComponent","ngeoQueryBboxQueryComponent","gmfImportModule","geojsonFormat","PrintStyleType","PrintStyleTypes_","LineString","Point","Polygon","MultiLineString","MultiPoint","MultiPolygon","encodeVectorLayer","geojsonFeatures","mapfishStyleObject","version","originalFeature","styleData","getStyleFunction","origGeojsonFeature","writeFeatureObject","isOriginalFeatureAdded","geojsonFeature","styledFeature","geometryType","featureStyleProp","styleId","encodeVectorStyle","geojsonFeatureCollection","geoJson","styleType","styleObject","symbolizers","getFill","imageStyle","getImage","strokeStyle","getStroke","textStyle","getText","encodeVectorStylePolygon","encodeVectorStyleLine","encodeVectorStylePoint","encodeTextStyle","encodeVectorStyleFill","symbolizer","getColor","encodeVectorStyleStroke","URL","getSrc","externalGraphic","graphicOpacity","graphicWidth","graphicHeight","getRotation","getPoints","graphicName","sizeShape","rotationShape","opacityShape","strokeShape","fillShape","strokeColorRgba","strokeOpacity","strokeDashstyle","getLineDash","getWidth","strokeLineCap","getLineCap","strokeLinecap","xAlign","yAlign","olTextAlign","getTextAlign","olTextBaseline","getTextBaseline","labelAlign","labelRotation","fontStyle","getFont","fontWeight","fontFamily","haloColor","haloOpacity","haloRadius","fillColorRgba","labelXOffset","getOffsetX","labelYOffset","getOffsetY","vectorEncoder","ngeoPrintVectorEncoder","printNativeAngle_","ref","opt_httpConfig","httpConfig","createSpec","dpi","layout","customAttributes","specMap","encodeMap_","currentLanguage","spec","viewCenter","viewResolution","viewRotation","mapLayerGroup","layer_a","layer_b","getZIndex","encodeLayer","encodeImageLayer_","encodeTileLayer_","encodeImageWmsLayer_","getUrl","encodeWmsLayer_","url_url","customParams","searchParams","baseURL","getAbsoluteUrl_","imageFormat","getOpacityOrInherited_","useNativeAngle","encodeURI","encodeTileWmtsLayer_","encodeTileWmsLayer_","tileGrid","getTileGrid","olTilegridWMTS","matrixIds","getMatrixIds","matrices","tileRange","getFullTileRange","identifier","scaleDenominator","getMetersPerUnit","tileSize","olSize","getTileSize","topLeftCorner","getOrigin","matrixSize","maxX","minX","maxY","minY","getDimensions","dimensionKeys","getWmtsUrl_","dimensionParams","getFormat","getMatrixSet","requestEncoding","getRequestEncoding","getVersion","getUrls","createReport","printSpec","getStatus","getReportUrl","getCapabilities","createPrintServiceFactory","gmfEditingEditFeatureComponent","selectedEditableTreeCtrl","updateEditableTreeCtrls","editables","editableTreeCtrls","treeCtrlsWatcherUnregister_","stopEditing","gmfEditingEditFeatureSelectorComponent","opt_options","olFormatTextFeature","accuracy_","accuracy","ACCURACY_","encodeStyles_","propertiesFunction_","defaultPropertiesFunction_","setStyle_","prevX_","prevY_","LegacyProperties_","defaultValues_","StyleTypes_","ngeoFormatFeatureHashStyleType","readFeature","CHAR64_","encodeSignedNumber_","num","signedNum","encodeNumber_","encodedNumber","encodedStyles","encodeStylePolygon_","encodeStyleLine_","encodeStylePoint_","encodeStyleText_","encodeStyleStroke_","encodeStyleFill_","opt_propertyName","fillColorHex","strokeColorHex","readLineStringGeometry_","flatCoordinates","decodeCoordinates_","setFlatCoordinates","olGeomGeometryLayout","XY","readMultiLineStringGeometry_","ends","lineStrings","multiLineString","readPointGeometry_","readMultiPointGeometry_","multiPoint","readPolygonGeometry_","readMultiPolygonGeometry_","endss","polygons","multipolygon","setStyleInFeature_","getStyleProperties_","setStyleProperties_","castValue_","numProperties","boolProperties","parts","part","keyVal","writeLineStringGeometry_","getFlatCoordinates","stride","getStride","encodeCoordinates_","writeMultiLineStringGeometry_","getEnds","lineStringCount","textArray","writePointGeometry_","writeMultiPointGeometry_","encodeRings_","linearRingCount","writePolygonGeometry_","writeMultiPolygonGeometry_","getEndss","polygonCount","GEOMETRY_READERS_","GEOMETRY_WRITERS_","opt_flatCoordinates","encodedCoordinates","readFeatureFromText","splitIndex","geometryText","readGeometryFromText","attributesAndStylesText","attributesText","stylesText","readFeaturesFromText","geometryReader","writeFeatureText","encodedParts","encodedGeometry","writeGeometryText","encodedProperties","propFunction","encoded","writeFeaturesText","geometryWriter","transformedGeometry","olFormatFeature","gmfRasterRasterService","gmfRaster","$compile_","gmfRaster_","gmfContextualdataOptions_","hidePopover","preparePopover_","setContent_","showPopover","content_","mapProjection","getRasterSuccess","getRasterError","rasterParams","setAttribute","autoPan","autoPanAnimation","contentDirective_","gmfContextualdatacontentTemplateUrl","gmfContextualdataComponent","opt_filter","opt_featureProjection","opt_dataProjection","opt_remoteOptions","bloodhoundOptions","remote","prepare","settings","parsedResponse","featureCollection","remoteOptions","Function","sourceProjection","ngeoProjEPSG21781","parseBbox","regex","removeHtmlTags","extractName","origins","results","geom_st_box2d","bhOptions","ngeoSearchSearchDirective","ngeoSearchCreateGeoJSONBloodhound","ngeoSearchCreateLocationSearchBloodhound","ngeoMiscColorpickerComponent","handleColorSet_","handleFeatureSet_","propName","newColor","currentColor","getSetAngle","getSetProperty_","getSetName","getSetShowLabel","getSetOpacity","getSetShowMeasure","getSetSize","getSetStroke","gmfDrawingFeatureStyleComponent","ngeoEditingExportfeaturesComponent","longPressTimeout_","selectedFeature","listSelectionInProgress_","nameProperty","drawUid","selectFeatureFromList","getFeaturesArray","clearFeatures","handleMapTouchStart_","handleMapTouchEnd_","setTimeout","clearTimeout","gmfDrawingDrawFeatureComponent","d3","bisector","axisBottom","axisLeft","scaleLinear","light","margin","top","right","bottom","left","hoverCallback","outCallback","distanceExtractor","linesConfiguration","numberOfLines","bisectDistance","poiExtractor","styleDefs","poiLabelAngle","i18n","xAxisLabel","xAxis","yAxisLabel","yAxis","formatter","xhover","units","toPrecision","yhover","ele","xtick","ytick","lightXAxis","svg","scaleModifier","xFactor","xUnits","xDomain","profile","selection","each","clientWidth","clientHeight","y0","firstLineName","zExtractor","svgEnter","enter","gEnter","clearPois","xHover","domain","yDomain","elevationsValues","every","isFinite","transition","yHover","defined","tickFormat","tickValues","ticks","tickSize","mouseout","mousemove","mouseX","x0","invert","clearHighlight","elevation","elevations","elevationsRef","lineName","xtranslate","yUnits","showPois","pois","pe","profileData","ps","poiEnterG","exit","optionsAttr","elevationData","poiData","origHoverCallback","origOutCallback","ngeoProfileD3Elevation","refreshData","ngeoProfileElevationComponent","gmfProfileTemplateUrl","getLinesConfigurationFn","getHoverPointStyleFn","getNbPointsFn","getOptionsFn","gmfProfileJsonUrl","pointHoverOverlay_","gmfProfileJsonUrl_","linesConfiguration_","layersNames_","nbPoints_","currentPoint","profileHighlight","measureTooltip_","snappedPoint_","profileLabels_","profileOptions","pointerMoveKey_","isErrored","updateEventsListening_","newLine","oldLine","update_","hoverPointStyle","hoverPointStyleFn","lineConfig","getZFactory_","getDist_","hoverCallback_","outCallback_","optionsFn","getJsonProfile_","onPointerMove_","getEventCoordinate","closestPoint","getClosestPoint","eventToLine","pixelDist","getDistanceOnALine_","pointOnLine","distOnLine","fakeExtent","forEachSegment","firstPoint","lastPoint","getTooltipHTML_","separator","elevationName","translatedElevationName","DistDecimal","int_value","lineConfiguration","getLayersNames","getZFn","nbPoints","method","paramSerializer","getProfileDataSuccess_","getProfileDataError_","hasDistance","rows","getStyleFn","overlay","styleFn","gmfProfileComponent","gmfProfileDrawLineComponent","olInteractionDragBox","handleBoxEnd","gmfElevationwidgetTemplateUrl","layersconfig","loading","toggleActive_","filter_","layersConfig","inViewport_","pointerStop_","getRasterSuccess_","getRasterError_","custom_args","widgetComponent_","WidgetController_","selectedElevationLayer","LayerConfig","ngeoPrintService","ngeoPrintUtils","PrintStateEnum","NOT_IN_USE","PRINTING","ERROR_ON_REPORT","CAPABILITIES_NOT_LOADED","ERROR_ON_GETCAPABILITIES","gmfPrintTemplateUrl","rotateMask","fieldValues","hiddenAttributeNames","attributesOut","optionsLegendType","optionsType","ngeoCreatePrint","gmfPrintUrl","gmfPrintState","gmfPrintState_","featureOverlayLayer_","ngeoPrintUtils_","ngeoPrint_","ngeoQueryResult_","scaleInput","gmfLegendOptions_","useBbox","legend","requestCanceler_","statusTimeoutPromise_","onDragPreviousMousePosition_","rotationTimeoutPromise_","postComposeListenerKey_","pointerDragListenerKey_","mapViewResolutionChangeKey_","curRef_","formats_","layouts_","layout_","paperSize_","layoutInfo","scaleManuallySelected_","rotationInput_","setRotation","postcomposeListener_","capabilities_","currentThemes_","updateRotation_","togglePrintPanel_","print","currentThemes","getSizeFn","getRotationFn","getScaleFn","getOptimalScale_","getCapabilities_","parseCapabilities_","onPointerDrag_","render","layouts","updateFields_","mapInfo","isAttributeInCurrentLayout_","clientInfo","updateCustomFields_","dpis","rawType","simpleAttributes","previousAttributes","default","p0x","p0y","p1x","p1y","centerToP0","centerToP1","sense","boost","increment","$digest","getDataSource_","getLegend_","setView","ol_layers","new_ol_layers","print_native_angle","server_name","layer_names","printLayers","setLayerGroup","handleCreateReportSuccess_","handleCreateReportError_","resetPrintStates_","opt_printState","datasourceObj","datasourceArr","tanslateColumns","table","mfResp","getStatus_","handleGetStatusSuccess_","classes","icons","getMetadataLegendImage_","serverType_","legendImage","setLayout","layoutName","getSetScale","contrainRes","constrainResolution","setResolution","setDpi","isState","stateEnumKey","interaction_","handleDrawEnd_","fromJson","ngeoMiscDatetimepickerComponent","ngeoAttributesTemplateUrl","disabled","form","updating_","handleInputChange","$menu","aria-labelledby","$item","handleMenuItemClick_","handleElementClick_","parentElement","sortable","resetUpDragDrop","optionsObject","callbackFn","callbackCtx","sortableElement","sortableOptions","axis","ui-sortable-helper","ui","oldIndex","newIndex","defaultHandleClassName","handleClassName","ngeoPopoverCtrl","anchorElm","popover","bodyElm","shown","placement","dismissPopover","anchorComponent","contentComponent","hide","PopoverController_","onMouseDown","clickEvent","ngeoSearchModule","ngeoMessagePopoverComponent","gmfSearchTemplateUrl_","gmfSearchTemplateUrl","inputValue","placeholder","datasources","featuresStyles","clearButton","colorChooser","coordinatesProjections","additionalListeners","onInitCallback","SearchController_","ngeoAutoProjection","fullTextSearch_","ngeoSearchCreateGeoJSONBloodhound_","styles_","datasets","displayColorPicker","listeners","coordProj","initStyles_","getSearchStyle_","initDatasets_","setStyleColor","mergeListeners_","select_","close_","datasetsempty_","searchQuery","resultIndex","mapZoom","fulltextsearch_","filterLayername_","filterAction_","createDataset_","datasetTitle","groupsKey","typeaheadDatasetOptions","createSearchCoordinates_","display","templates","componentScope","compile","bloodhoundEngine","createAndInitBloodhound_","typeaheadDataset","act","opt_layerName","featureLayerName","mapProjectionCode","getBloodhoudRemoteOptions_","bloodhound","initialize","rateLimitWait","xhrFields","suggestions","tt_source","radius2","customStyles","imageStrokeStyle","imageFillStyle","setImage","changed","setTTDropdownVisibility_","ttDropdown","onClearButton","ttmenu","inputs","blur","layer_name","leaveSearch_","selectFromGMF_","featureGeometry","_loop2","actionName","actionData","datasourcesActionsHaveAddLayer","groupAction","silent","fitArray","menu","opt_zoom","fitOptions","recenter","selected","selectedIndex","arr1","arr2","dereg1","dereg2","ngeoLayertreeTemplateUrl","__webpack_exports__","originalEl","closeEl_","contentEl_","one","ngeoLayertreeComponent","subTemplateUrl","gmfLayertreeTemplate","openLinksInNewWindow","gmfSyncLayertreeMap","gmfSyncLayertreeMap_","groupNodeStates_","ngeoMiscSyncArrays","updateDimensions_","updateLayerDimensions_","once","toggleActive","getNodeState","updateWMSTimeLayerState","layertreeCtrl","getLegendIconURL","iconUrl","legendRule","gmfOgcServer","getLegendsObject","legendsObject","gmfLayerDefaultName","wmtsLegendURL","layersNames","getScale_","getNumberOfLegendsObject","mpu","displayMetadata","metadataURL","afterReorder","currentTreeCtrls","removeNode","removeAllNodes","nodesCount","getResolutionStyle","zoomToResolution","toggleNodeLegend","legendNodeId","toggleFiltrableDataSource","isNodeLegendVisible","supportsCustomization","supportsLegend","supportsOpacityChange","$compileProvider","debugInfoEnabled","ngeoGooglestreetviewTemplateUrl","featureStyle","noDataAtLocation","panorama_","google","maps","StreetViewPanorama","pov","heading","pitch","panoramaListener_","point_","streetViewService_","StreetViewService","panoramaPositionChanging_","handleLocationChange_","hasLocation","handleReadyChange_","hasData","oldShow","addListener","handlePanoramaPositionChange_","removeListener","oldLocation","lonLat","toLonLat_","getPanorama","lat","lng","handleStreetViewServiceGetPanorama_","ready","oldReady","panorama","StreetViewStatus","OK","latLng","getPosition","fromLonLat_","ngeoGooglestreetviewComponent","nominatimUrl_","searchDefaultParams_","typeaheadDebounceDelay_","typeaheadSourceDebounced","typeaheadSource_","option","syncResults","asyncResults","onSuccess_","lon","display_name","onError_","routingOptions_","ngeoOsrmBackendUrl_","backendUrl","protocolVersion_","getRoute","coordinateString","getNearest","ngeoRoutingNominatimService","ngeoRoutingNominatimInputComponentTemplateUrl","Controller","ngeoNominatimService","onSelect","ngeoRoutingNominatimInputComponent","ngeoRoutingFeatureTemplateUrl","ngeoNominatimService_","featureLabel","onChange","vectorFeatures_","modifyFeature_","draw_","onSelect_","errorMessage","snapFeature_","onFeatureChange_","setFeature_","transformedCoordinate","newCoordinates","getLonLatFromPoint_","onSuccess","onError","ngeoRoutingRoutingService","ngeoRoutingRoutingFeatureComponent","ngeoRoutingTemplateUrl","ngeoRoutingService","ngeoRoutingService_","routingProfiles","profiles","selectedRoutingProfile","calculateRoute","startFeature_","targetFeature_","viaArray","start.fill","start.stroke","destination.fill","destination.stroke","via.fill","via.stroke","routeSource_","routeLayer_","routeDistance","routeDuration","regexIsFormattedCoord","debounceDelay","handleChange","clearRoute","reverseRoute","tmpFeature","parseRoute_","route","parsedRoutes","formatConfig","legs","leg","steps","step","coordFrom","coordTo","vias","via","routes","startRoute","endRoute","startToRoute","routeToEnd","routeConnections","addVia","deleteVia","ngeoRoutingRoutingComponent","epsg2056def","epsg2056extent","gmfControllersAbstractDesktopController","resolutions","searchCoordinatesProjections","ngeoProjEPSG2056","searchDelay","showInfobar","scaleSelectorValues","elevationLayers","elevationLayersConfig","profileLinesconfiguration","srtm","mousePositionProjections","gridMergeTabs","OSM_time_merged","transport (merged)","Learning [merged]","Fill","Stroke","Circle","default_search_style","Style","searchStyles","bgOpacityOptions","raven","Raven","addPlugin","RavenPluginsAngular","install","onKeydown","appBase","ngeoRoutingModule","ngeoGooglestreetviewModule"],"mappings":"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","file":"desktop_alt.dad3be.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([367,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","const exports = {};\n\nexports.assert = function(condition, opt_message, var_args) {\n  return condition;\n};\n\nexports.assertNumber = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertString = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertFunction = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObject = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertArray = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertBoolean = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertElement = function(value, opt_message, var_args) {\n  return value;\n};\n\nexports.assertInstanceof = function(value, type, opt_message, var_args) {\n  return value;\n};\n\nexports.assertObjectPrototypeIsIntact = function() {};\n\nexport default exports;\n","/**\n * @module ngeo.GeometryType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  CIRCLE: 'Circle',\n  /**\n   * @type {string}\n   * @export\n   */\n  LINE_STRING: 'LineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_LINE_STRING: 'MultiLineString',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POINT: 'MultiPoint',\n  /**\n   * @type {string}\n   * @export\n   */\n  MULTI_POLYGON: 'MultiPolygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  POINT: 'Point',\n  /**\n   * @type {string}\n   * @export\n   */\n  POLYGON: 'Polygon',\n  /**\n   * @type {string}\n   * @export\n   */\n  RECTANGLE: 'Rectangle',\n  /**\n   * @type {string}\n   * @export\n   */\n  TEXT: 'Text'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureProperties\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ANGLE: 'a',\n  /**\n   * @type {string}\n   * @export\n   */\n  COLOR: 'c',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_CIRCLE: 'l',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_RECTANGLE: 'r',\n  /**\n   * @type {string}\n   * @export\n   */\n  IS_TEXT: 't',\n  /**\n   * @type {string}\n   * @export\n   */\n  NAME: 'n',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_LABEL: 'b',\n  /**\n   * @type {string}\n   * @export\n   */\n  OPACITY: 'o',\n  /**\n   * @type {number}\n   * @export\n   */\n  AZIMUT: 'z',\n  /**\n   * @type {string}\n   * @export\n   */\n  SHOW_MEASURE: 'm',\n  /**\n   * @type {string}\n   * @export\n   */\n  SIZE: 's',\n  /**\n   * @type {string}\n   * @export\n   */\n  STROKE: 'k'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.AttributeType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   */\n  BOOLEAN: 'boolean',\n  /**\n   * @type {string}\n   */\n  DATE: 'date',\n  /**\n   * @type {string}\n   */\n  DATETIME: 'datetime',\n  /**\n   * @type {string}\n   */\n  TIME: 'time',\n  /**\n   * @type {string}\n   */\n  GEOMETRY: 'geometry',\n  /**\n   * @type {string}\n   */\n  NUMBER: 'number',\n  /**\n   * @type {string}\n   */\n  SELECT: 'select',\n  /**\n   * @type {string}\n   */\n  TEXT: 'text'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Themes\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * The Themes service. This service interacts\n * with c2cgeoportal's \"themes\" web service and exposes functions that return\n * objects in the tree returned by the \"themes\" web service.\n *\n * @constructor\n * @struct\n * @extends {ol.events.EventTarget}\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$q} $q Angular q service\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmfx.ThemesOptions} gmfThemesOptions Themes options.\n * @ngInject\n * @ngdoc service\n * @ngname gmfThemes\n */\nconst exports = function($http, $injector, $q, ngeoLayerHelper, gettextCatalog, gmfThemesOptions) {\n\n  olEventsEventTarget.call(this);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.addBlankBackgroundLayer_ = true;\n  if (gmfThemesOptions.addBlankBackgroundLayer !== undefined) {\n    this.addBlankBackgroundLayer_ = gmfThemesOptions.addBlankBackgroundLayer;\n  }\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.treeUrl_ = undefined;\n  if ($injector.has('gmfTreeUrl')) {\n    this.treeUrl_ = $injector.get('gmfTreeUrl');\n  }\n\n  this.cacheVersion_ = '0';\n  if ($injector.has('cacheVersion')) {\n    this.cacheVersion_ = $injector.get('cacheVersion');\n  }\n\n  /**\n   * @type {?ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = null;\n  if ($injector.has('ngeoLocation')) {\n    this.ngeoLocation_ = $injector.get('ngeoLocation');\n  }\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {angular.$q.Deferred}\n   * @private\n   */\n  this.deferred_ = $q.defer();\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promise_ = this.deferred_.promise;\n\n  /**\n   * @type {boolean}\n   */\n  this.loaded = false;\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.bgLayerPromise_ = null;\n};\n\nolBase.inherits(exports, olEventsEventTarget);\n\n\n/**\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The layer name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByLayerNodeName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const childNodes = [];\n      exports.getFlatNodes(group, childNodes);\n      if (exports.findObjectByName(childNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n/**\n * Find a layer group object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} name The group name.\n * @return {gmfThemes.GmfGroup} The group.\n */\nexports.findGroupByName = function(themes, name) {\n  for (let i = 0, ii = themes.length; i < ii; i++) {\n    const theme = themes[i];\n    for (let j = 0, jj = theme.children.length; j < jj; j++) {\n      const group = theme.children[j];\n      const internalNodes = [];\n      exports.getFlatInternalNodes(group, internalNodes);\n      if (exports.findObjectByName(internalNodes, name)) {\n        return group;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Find an object by its name. Return null if not found.\n * @param {Array.<T>} objects Array of objects with a 'name' attribute.\n * @param {string} objectName The object name.\n * @return {T} The object or null.\n * @template T\n */\nexports.findObjectByName = function(objects, objectName) {\n  return olArray.find(objects, object => object['name'] === objectName);\n};\n\n\n/**\n * Find a theme object by its name. Return null if not found.\n * @param {Array.<gmfThemes.GmfTheme>} themes Array of \"theme\" objects.\n * @param {string} themeName The theme name.\n * @return {gmfThemes.GmfTheme} The theme object or null.\n */\nexports.findThemeByName = function(themes, themeName) {\n  return exports.findObjectByName(themes, themeName);\n};\n\n\n/**\n * Fill the given \"nodes\" array with all internal nodes (non-leaf nones) in\n * the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatInternalNodes = function(node, nodes) {\n  const children = node.children;\n  if (children !== undefined) {\n    nodes.push(node);\n    for (let i = 0; i < children.length; i++) {\n      exports.getFlatInternalNodes(children[i], nodes);\n    }\n  }\n};\n\n\n/**\n * Fill the given \"nodes\" array with all leaf nodes in the given node.\n *\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layertree node.\n * @param {Array.<gmfThemes.GmfGroup|gmfThemes.GmfLayer>} nodes An array.\n */\nexports.getFlatNodes = function(node, nodes) {\n  let i;\n  const children = node.children;\n  if (children !== undefined) {\n    for (i = 0; i < children.length; i++) {\n      exports.getFlatNodes(children[i], nodes);\n    }\n  } else {\n    nodes.push(node);\n  }\n};\n\n\n/**\n * Get background layers.\n * @return {!angular.$q.Promise.<!Array.<!ol.layer.Base>>} Promise.\n */\nexports.prototype.getBgLayers = function() {\n  const gettextCatalog = this.gettextCatalog;\n  if (this.bgLayerPromise_) {\n    return this.bgLayerPromise_;\n  }\n  const $q = this.$q_;\n  const layerHelper = this.layerHelper_;\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item A group or a leaf.\n   * @param {Array.<number>} array Array of ids;\n   */\n  const getIds = function(item, array) {\n    array.push(olBase.getUid(item));\n    const children = item.children || [];\n    children.forEach((child) => {\n      getIds(child, array);\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} item The item.\n   * @param {ol.layer.Base} layer The layer.\n   * @return {ol.layer.Base} the provided layer.\n   */\n  const callback = function(item, layer) {\n    layer.set('label', item.name);\n    layer.set('metadata', item.metadata);\n    layer.set('dimensions', item.dimensions);\n    const ids = [];\n    getIds(item, ids);\n    layer.set('querySourceIds', ids);\n    return layer;\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} gmfLayer The item.\n   * @return {angular.$q.Promise.<ol.layer.Base>|ol.layer.Base} the created layer.\n   */\n  const layerLayerCreationFn = function(ogcServers, gmfLayer) {\n    if (gmfLayer.type === 'WMTS') {\n      const gmfLayerWMTS = /** @type gmfThemes.GmfLayerWMTS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMTS.url, 'Layer URL is required');\n      return layerHelper.createWMTSLayerFromCapabilitites(\n        gmfLayerWMTS.url,\n        gmfLayerWMTS.layer || '',\n        gmfLayerWMTS.matrixSet,\n        gmfLayer.dimensions,\n        gmfLayerWMTS.metadata.customOpenLayersOptions\n      ).then(callback.bind(null, gmfLayer)).then(null, (response) => {\n        let message = `Unable to build layer \"${gmfLayerWMTS.layer}\" from WMTSCapabilities: ${gmfLayerWMTS.url}\\n`;\n        message += `OpenLayers error is \"${response['message']}`;\n        console.error(message);\n        // Continue even if some layers have failed loading.\n        return $q.resolve(undefined);\n      });\n    } else if (gmfLayer.type === 'WMS') {\n      const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n      googAsserts.assert(gmfLayerWMS.ogcServer, 'An OGC server is required');\n      const server = ogcServers[gmfLayerWMS.ogcServer];\n      googAsserts.assert(server, 'The OGC server was not found');\n      googAsserts.assert(server.url, 'The server URL is required');\n      googAsserts.assert(server.imageType, 'The server image type is required');\n\n      // Manage WMS styles\n      const opt_params = {STYLES: gmfLayerWMS.styles};\n      if (gmfLayer.dimensions) {\n        for (const [key, value] of Object.entries(gmfLayer.dimensions)) {\n          opt_params[key] = value;\n        }\n      }\n\n      return callback(gmfLayer, layerHelper.createBasicWMSLayer(\n        server.url,\n        gmfLayerWMS.layers || '',\n        server.imageType,\n        server.type,\n        undefined, // time\n        opt_params,\n        server.credential ? 'use-credentials' : 'anonymous',\n        gmfLayerWMS.metadata.customOpenLayersOptions\n      ));\n    }\n    googAsserts.fail(`Unsupported type: ${gmfLayer.type}`);\n  };\n\n  /**\n   * @param {gmfThemes.GmfOgcServers} ogcServers The ogc servers.\n   * @param {gmfThemes.GmfGroup} item The item.\n   * @return {angular.$q.Promise.<ol.layer.Group>} the created layer.\n   */\n  const layerGroupCreationFn = function(ogcServers, item) {\n    // We assume no child is a layer group.\n    const orderedChildren = item.children.map(x => x).reverse(); // the order of insertion in OL3 is the contrary of the theme\n    const promises = orderedChildren.map(layerLayerCreationFn.bind(null, ogcServers));\n    return $q.all(promises).then((layers) => {\n      let collection;\n      if (layers) {\n        layers = layers.filter(l => l);\n        collection = new olCollection(layers);\n      }\n      const group = layerHelper.createBasicGroup(collection);\n      callback(item, group);\n      return group;\n    });\n  };\n\n  /**\n   * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n   *     response.\n   * @return {angular.$q.Promise.<Array.<ol.layer.Base>>} Promise.\n   */\n  const promiseSuccessFn = function(data) {\n    const promises = data.background_layers.map((item) => {\n      const itemType = item.type;\n      if (itemType === 'WMTS' || itemType === 'WMS') {\n        return layerLayerCreationFn(data.ogcServers, item);\n      } else if (item.children) {\n        // group of layers\n        return layerGroupCreationFn(data.ogcServers, item);\n      } else {\n        return undefined;\n      }\n    }, this);\n    return $q.all(promises);\n  }.bind(this);\n\n  this.bgLayerPromise_ = this.promise_.then(promiseSuccessFn).then((values) => {\n    const layers = [];\n\n    // (1) add a blank layer\n    if (this.addBlankBackgroundLayer_) {\n      // For i18n string collection\n      gettextCatalog.getString('blank');\n      layers.push(new olLayerTile({\n        'label': 'blank',\n        'metadata': {'thumbnail': ''}\n      }));\n    }\n\n    // (2) add layers that were returned\n    values.forEach((layer) => {\n      if (layer) {\n        layers.push(layer);\n      }\n    });\n    return layers;\n  });\n\n  return this.bgLayerPromise_;\n};\n\n\n/**\n * Get a theme object by its name.\n * @param {string} themeName Theme name.\n * @return {angular.$q.Promise.<gmfThemes.GmfTheme>} Promise.\n * @export\n */\nexports.prototype.getThemeObject = function(themeName) {\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfTheme?} The theme object for themeName, or null\n       *     if not found.\n       */\n    data => exports.findThemeByName(data.themes, themeName));\n};\n\n\n/**\n * Get an array of theme objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfTheme>>} Promise.\n * @export\n */\nexports.prototype.getThemesObject = function() {\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfTheme>} The themes object.\n       */\n    data => data.themes);\n};\n\n\n/**\n * Get an array of background layer objects.\n * @return {angular.$q.Promise.<!Array.<!gmfThemes.GmfLayer>>} Promise.\n */\nexports.prototype.getBackgroundLayersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {!gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {!Array.<!gmfThemes.GmfLayer>} The background layers object.\n       */\n    data => data.background_layers\n  );\n};\n\n\n/**\n * Get the `ogcServers` object.\n * @return {angular.$q.Promise.<!gmfThemes.GmfOgcServers>} Promise.\n * @export\n */\nexports.prototype.getOgcServersObject = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(\n    /**\n       * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service\n       *     response.\n       * @return {gmfThemes.GmfOgcServers} The `ogcServers` object.\n       */\n    data => data.ogcServers);\n};\n\n\n/**\n * Returns a promise to check if one of the layers in the themes is editable.\n * @return {angular.$q.Promise.<boolean>} Promise.\n */\nexports.prototype.hasEditableLayers = function() {\n  googAsserts.assert(this.promise_ !== null);\n  return this.promise_.then(this.hasEditableLayers_.bind(this));\n};\n\n\n/**\n * Returns if one of the layers in the themes is editable.\n * @param {gmfThemes.GmfThemesResponse} data The \"themes\" web service response.\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasEditableLayers_ = function(data) {\n  return data.themes.some((theme) => {\n    const hasEditableLayers = theme.children.some(this.hasNodeEditableLayers_.bind(this));\n    return hasEditableLayers;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Theme node\n * @return {boolean} Editable layers?\n */\nexports.prototype.hasNodeEditableLayers_ = function(node) {\n  if (node.editable) {\n    return true;\n  }\n\n  let hasEditableLayers = false;\n  const children = node.children;\n  if (children && children.length) {\n    hasEditableLayers = children.some(this.hasNodeEditableLayers_.bind(this));\n  }\n  return hasEditableLayers;\n};\n\n\n/**\n * Get the snapping configuration object from a Layertree controller\n * @param {gmfThemes.GmfLayer} node Layer node from the theme.\n * @return {?gmfThemes.GmfSnappingConfig} Snapping configuration, if found.\n * @export\n */\nexports.getSnappingConfig = function(node) {\n  const config = (node.metadata && node.metadata.snappingConfig !== undefined) ?\n    node.metadata.snappingConfig : null;\n  return config;\n};\n\n\n/**\n * Get the maximal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a maxResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the max resolution or undefined if any.\n */\nexports.getNodeMaxResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let maxResolution = gmfLayer.maxResolutionHint;\n  if (maxResolution === undefined && metadata !== undefined) {\n    maxResolution = metadata.maxResolution;\n  }\n  return maxResolution;\n};\n\n\n/**\n * Get the minimal resolution defined for this layer. Looks in the\n *     layer itself before to look into its metadata.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {number|undefined} the min resolution or undefined if any.\n */\nexports.getNodeMinResolution = function(gmfLayer) {\n  const metadata = gmfLayer.metadata;\n  let minResolution = gmfLayer.minResolutionHint;\n  if (minResolution === undefined && metadata !== undefined) {\n    minResolution = metadata.minResolution;\n  }\n  return minResolution;\n};\n\n\n/**\n * @param {number=} opt_roleId The role id to send in the request.\n * Load themes from the \"themes\" service.\n * @export\n */\nexports.prototype.loadThemes = function(opt_roleId) {\n\n  googAsserts.assert(this.treeUrl_, 'gmfTreeUrl should be defined.');\n\n  if (this.loaded) {\n    // reload the themes\n    this.deferred_ = this.$q_.defer();\n    this.promise_ = this.deferred_.promise;\n    this.bgLayerPromise_ = null;\n    this.loaded = false;\n  }\n\n  this.$http_.get(this.treeUrl_, {\n    params: opt_roleId !== undefined ? {\n      'role': opt_roleId,\n      'cache_version': this.cacheVersion_\n    } : {\n      'cache_version': this.cacheVersion_\n    },\n    cache: false,\n    withCredentials: true\n  }).then((response) => {\n    if (response.data.errors.length != 0) {\n      const message = `The themes contain some errors:\\n${\n        response.data.errors.join('\\n')}`;\n      console.error(message);\n      if (this.ngeoLocation_ !== null && this.ngeoLocation_.hasParam('debug')) {\n        window.alert(message);\n      }\n    }\n    this.deferred_.resolve(response.data);\n    this.dispatchEvent('change');\n    this.loaded = true;\n  }, (response) => {\n    this.deferred_.reject(response);\n  });\n};\n\n\n/**\n * @enum {string}\n */\nexports.NodeType = {\n  MIXED_GROUP: 'MixedGroup',\n  NOT_MIXED_GROUP: 'NotMixedGroup',\n  WMTS: 'WMTS',\n  WMS: 'WMS'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemes', [\n  ngeoMapLayerHelper.module.name,\n]);\nexports.module.value('gmfThemesOptions', {});\nexports.module.service('gmfThemes', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Rule\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @implements {ngeox.rule.Rule}\n */\nconst exports = class {\n\n  /**\n   * The abstract class for all filter rules.\n   *\n   * Rules are used to define filters that can be applied on data sources.\n   * A rule is usually a combination of 3 things:\n   *\n   * - a property name, for example 'city_name'\n   * - an operator, for example 'is equal to'\n   * - and an expression, for example 'Chicoutimi'.\n   *\n   * A rule is useful to hold those properties and change them on the fly.\n   * For example, changing an operator from 'is equal to' to 'like'.\n   *\n   * Also, a rule is especially useful for its `value` getter, which returns\n   * the combination of properties described above or `null` if there are some\n   * missing.  The `value` getter can be watched and used when the value is\n   * not null.\n   *\n   * When the operator is `between`, the `lowerBoundary` and `upperBoundary`\n   * properties are used instead of `expression`.\n   *\n   * @struct\n   * @param {!ngeox.rule.RuleOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * Whether the rule is active or not. Used by the `ngeo-rule` component.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = options.active === true;\n\n    /**\n     * The expression of the rule. The expression and boundaries are mutually\n     * exclusives.\n     *\n     * Note: exported (instead of private) due to the problem with the\n     * compiler. See the getter/setter methods below...  As a setter, the\n     * `expression` property would support being bond to an `ng-model`. Without\n     * it, it can't unless we expose the property directly.\n     *\n     * @type {?number|string}\n     * @export\n     */\n    this.expression = options.expression !== undefined ?\n      options.expression : null;\n\n    /**\n     * The lower boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.lowerBoundary_ = options. lowerBoundary !== undefined ?\n      options.lowerBoundary : null;\n\n    /**\n     * The rule operator.\n     * @type {?string}\n     * @private\n     */\n    this.operator_ = options.operator || null;\n\n    /**\n     * The upper boundary of the rule. The expression and boundaries are\n     * mutually exclusives.\n     * @type {?number}\n     * @private\n     */\n    this.upperBoundary_ = options. upperBoundary !== undefined ?\n      options.upperBoundary : null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the rule is a custom one or not.\n     * @type {boolean}\n     * @private\n     */\n    this.isCustom_ = options.isCustom !== false;\n\n    /**\n     * The human-readable name of the rule.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n\n    /**\n     * A list of rule operators.\n     * @type {?Array.<string>}\n     * @private\n     */\n    this.operators_ = options.operators || null;\n\n    /**\n     * The property name (a.k.a. the attribute name).\n     * @type {string}\n     * @private\n     */\n    this.propertyName_ = options.propertyName;\n\n    /**\n     * The type of rule.\n     * @type {string}\n     * @private\n     */\n    this.type_ = googAsserts.assert(options.type);\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @protected\n     */\n    this.listenerKeys = [];\n\n  }\n\n  // === Dynamic property getters/setters ===\n\n  /**\n   * @return {boolean} Active\n   * @export\n   */\n  get active() {\n    return this.active_;\n  }\n\n  /**\n   * @param {boolean} active Active\n   * @export\n   */\n  set active(active) {\n    this.active_ = active;\n  }\n\n  /**\n   * The `expression` property does not have conventionnal getter/setters\n   * method because of a limitation of the compiler. It doesn't support\n   * yet having such methods being extended in child classes.\n   *\n   * See: https://github.com/google/closure-compiler/issues/1089\n   *\n   * @return {?number|string} Expression\n   * @export\n   */\n  getExpression() {\n    return this.expression;\n  }\n\n  /**\n   * @param {?number|string} expression Expression\n   * @export\n   */\n  setExpression(expression) {\n    this.expression = expression;\n  }\n\n  /**\n   * @return {?number} Lower boundary\n   * @export\n   */\n  get lowerBoundary() {\n    return this.lowerBoundary_;\n  }\n\n  /**\n   * @param {?number} lowerBoundary Lower boundary\n   * @export\n   */\n  set lowerBoundary(lowerBoundary) {\n    this.lowerBoundary_ = lowerBoundary;\n  }\n\n  /**\n   * @return {?string} Operator\n   * @export\n   */\n  get operator() {\n    return this.operator_;\n  }\n\n  /**\n   * @param {?string} operator Operator\n   * @export\n   */\n  set operator(operator) {\n    this.operator_ = operator;\n  }\n\n  /**\n   * @return {?number} Upper boundary\n   * @export\n   */\n  get upperBoundary() {\n    return this.upperBoundary_;\n  }\n\n  /**\n   * @param {?number} upperBoundary Upper boundary\n   * @export\n   */\n  set upperBoundary(upperBoundary) {\n    this.upperBoundary_ = upperBoundary;\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {boolean} Is custom.\n   * @export\n   */\n  get isCustom() {\n    return this.isCustom_;\n  }\n\n  /**\n   * @return {string} name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n  /**\n   * @return {?Array.<string>} Operators\n   * @export\n   */\n  get operators() {\n    return this.operators_;\n  }\n\n  /**\n   * @return {string} Property name\n   * @export\n   */\n  get propertyName() {\n    return this.propertyName_;\n  }\n\n  /**\n   * @return {string} Type\n   * @export\n   */\n  get type() {\n    return this.type_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {?ngeox.rule.RuleSimpleValue|ngeox.rule.RuleRangeValue} Value.\n   * @export\n   */\n  get value() {\n    let value = null;\n\n    const expression = this.getExpression();\n    const lowerBoundary = this.lowerBoundary;\n    const operator = this.operator;\n    const propertyName = this.propertyName;\n    const upperBoundary = this.upperBoundary;\n\n    if (operator) {\n      if (operator === exports.OperatorType.BETWEEN ||\n          operator === exports.TemporalOperatorType.DURING) {\n        if (lowerBoundary !== null && upperBoundary !== null) {\n          value = {\n            operator,\n            lowerBoundary,\n            propertyName,\n            upperBoundary\n          };\n        }\n      } else {\n        if (expression !== null) {\n          value = {\n            expression,\n            operator,\n            propertyName\n          };\n        }\n      }\n    }\n\n    return value;\n  }\n\n  // === Other utility methods ===\n\n  /**\n   * Reset the following properties to `null`: expression, lowerBoundary,\n   * upperBoundary.\n   * @export\n   */\n  reset() {\n    if (this.getExpression() !== null) {\n      this.setExpression(null);\n    }\n    if (this.lowerBoundary !== null) {\n      this.lowerBoundary = null;\n    }\n    if (this.upperBoundary !== null) {\n      this.upperBoundary = null;\n    }\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.listenerKeys.forEach(olEvents.unlistenByKey);\n    this.listenerKeys.length = 0;\n  }\n\n};\n\n\n/**\n * @enum {string}\n */\nexports.OperatorType = {\n  BETWEEN: '..',\n  EQUAL_TO: '=',\n  GREATER_THAN: '>',\n  GREATER_THAN_OR_EQUAL_TO: '>=',\n  LESSER_THAN: '<',\n  LESSER_THAN_OR_EQUAL_TO: '<=',\n  LIKE: '~',\n  NOT_EQUAL_TO: '!='\n};\n\n\n/**\n * @enum {string}\n */\nexports.SpatialOperatorType = {\n  CONTAINS: 'contains',\n  INTERSECTS: 'intersects',\n  WITHIN: 'within'\n};\n\n\n/**\n * @enum {string}\n */\nexports.TemporalOperatorType = {\n  BEGINS: 'time_start',\n  DURING: 'time_during',\n  ENDS: 'time_end',\n  EQUALS: 'time_equal'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGC\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport olFormatGML2 from 'ol/format/GML2.js';\nimport olFormatGML3 from 'ol/format/GML3.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olFormatWMSGetFeatureInfo from 'ol/format/WMSGetFeatureInfo.js';\n\n/**\n * @implements {ngeox.datasource.OGC}\n */\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source contains information of a single source of data that can\n   * show or fetch the data using an OGC server. Several OGC service types are\n   * supported by this data source: WMS, WMTS and even WFS.\n   *\n   * You can use the information stored within an OGC data source to do all\n   * sorts of things:\n   * - issue WMS/WFS queries\n   * - apply filter rules on it\n   * - create `ol.layer.Layer` objects using the WMS, WMTS or event WFS\n   *   information\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === DYNAMIC properties (i.e. that can change / be watched) ===\n\n    /**\n     * The dimensions configuration for the data source.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensionsConfig_ = options.dimensionsConfig || null;\n\n    /**\n     * The dimensions applied by filters configuration for the data source.\n     * @type {?ngeox.DimensionsFiltersConfig}\n     * @private\n     */\n    this.dimensionsFiltersConfig_ = options.dimensionsFiltersConfig || null;\n\n    /**\n     * The filter condition to apply to the filter rules (if any).\n     * @type {string}\n     * @private\n     */\n    this.filterCondition_ = options.filterCondition || ngeoFilterCondition.AND;\n\n    /**\n     * A list of filter rules to apply to this data source using the filter\n     * condition.\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @private\n     */\n    this.filterRules_ = options.filterRules || null;\n\n    /**\n     * Whether the data source is filtrable or not. When `null`, that means\n     * that we do not know if the data source if filtrable or not, yet. In\n     * that case, the value of the property needs to be determined from an\n     * external way.\n     * @type {?boolean}\n     * @private\n     */\n    this.filtrable_ = options.filtrable || null;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * Whether the geometry from this data source can be copied to other data\n     * sources or not. Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.copyable_ = options.copyable === true;\n\n    /**\n     * A reference to the dimensions object.\n     * @type {?ngeox.Dimensions}\n     * @private\n     */\n    this.dimensions_ = options.dimensions || null;\n\n    /**\n     * The name of the geometry attribute.\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = options.geometryName ||\n      exports.DEFAULT_GEOMETRY_NAME_;\n\n    /**\n     * The type of images to fetch by queries by the (WMS) or (WMTS) .\n     * @type {string}\n     * @private\n     */\n    this.ogcImageType_ = options.ogcImageType || 'image/png';\n\n    /**\n     * A list of layer definitions that are used by (WMS) and (WFS) queries.\n     * These are **not** used by the (WMTS) queries (the wmtsLayers is used\n     * by WMTS queries).\n     * @type {?Array.<!ngeox.datasource.OGCLayer>}\n     * @private\n     */\n    this.ogcLayers_ = options.ogcLayers || null;\n\n    /**\n     * The type of OGC server making the requests.\n     * @type {string}\n     * @private\n     */\n    this.ogcServerType_ = options.ogcServerType ||\n      exports.ServerType.MAPSERVER;\n\n    /**\n     * The type data source. Can be: 'WMS' or 'WMTS'.\n     * @type {string}\n     * @private\n     */\n    this.ogcType_ = options.ogcType || exports.Type.WMS;\n\n    /**\n     * Whether the geometry from this data source can be used to snap the\n     * geometry of features from other data sources that are being edited.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.snappable_ = options.snappable === true;\n\n    /**\n     * Determines whether external features can be snapped to the edges of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToEdges_ = options.snappingToEdges !== false;\n\n    /**\n     * Determines whether external features can be snapped to the vertice of\n     * features from this data source or not. Defaults to `true`. Requires\n     * `snappable` to be set.\n     * @type {boolean}\n     * @private\n     */\n    this.snappingToVertice_ = options.snappingToVertice !== false;\n\n    /**\n     * The tolerance in pixels the snapping should occur. Defaults to `10`.\n     * @type {number}\n     * @private\n     */\n    this.snappingTolerance_ = options.snappingTolerance !== undefined ?\n      options.snappingTolerance : 10;\n\n    /**\n     * The name of the time attribute.\n     * @type {string|undefined}\n     * @private\n     */\n    this.timeAttributeName_ = options.timeAttributeName;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeLowerValue_ = options.timeLowerValue;\n\n    /**\n     * @type {?ngeox.TimeProperty}\n     * @private\n     */\n    this.timeProperty_ = options.timeProperty !== undefined ?\n      options.timeProperty : null;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.timeUpperValue_ = options.timeUpperValue;\n\n    /**\n     * The feature namespace to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeatureNS_ = options.wfsFeatureNS ||\n      exports.WFSFeatureNS[this.ogcServerType_];\n\n    /**\n     * The feature prefix to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsFeaturePrefix_ = options.wfsFeaturePrefix ||\n      exports.WFSFeaturePrefix.FEATURE;\n\n    /**\n     * The OutputFormat to use with WFS requests.\n     * @type {string}\n     * @private\n     */\n    this.wfsOutputFormat_ = options.wfsOutputFormat ||\n      exports.WFSOutputFormat.GML3;\n\n    /**\n     * The url to use for (WFS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wfsUrl_ = options.wfsUrl;\n\n    /**\n     * The InfoFormat to use with WMS requests.\n     * @type {string}\n     * @private\n     */\n    this.wmsInfoFormat_ = options.wmsInfoFormat ||\n      exports.WMSInfoFormat.GML;\n\n    /**\n     * Whether the (WMS) images returned by this data source\n     * should be single tiles or not.\n     * @type {boolean}\n     * @private\n     */\n    this.wmsIsSingleTile_ = options.wmsIsSingleTile === true;\n\n    /**\n     * The url to use for (WMS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmsUrl_ = options.wmsUrl;\n\n    /**\n     * The layer name to use for the (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsLayer_ = options.wmtsLayer;\n\n    /**\n     * The url to use for (WMTS) requests.\n     * @type {string|undefined}\n     * @private\n     */\n    this.wmtsUrl_ = options.wmtsUrl;\n\n\n    // === Calculated properties ===\n\n    // Get queryable ogc layer names\n    const layers = [];\n    if (this.queryable && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable) {\n          layers.push(ogcLayer.name);\n        }\n      }\n    }\n\n    let wfsFormat = null;\n    if (this.supportsWFS && layers.length) {\n      let format = undefined;\n      if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML3) {\n        format = new olFormatGML3();\n      } else if (this.wfsOutputFormat_ === exports.WFSOutputFormat.GML2) {\n        format = new olFormatGML2();\n      }\n      googAsserts.assert(format);\n      wfsFormat = new olFormatWFS({\n        featureNS: this.wfsFeatureNS,\n        featureType: layers,\n        gmlFormat: format\n      });\n    }\n\n    /**\n     * @type {?ol.format.WFS}\n     * @private\n     */\n    this.wfsFormat_ = wfsFormat;\n\n    let wmsFormat = null;\n    if (this.supportsWMS && layers.length) {\n      if (this.wmsInfoFormat === exports.WMSInfoFormat.GML) {\n        wmsFormat = new olFormatWMSGetFeatureInfo({\n          layers\n        });\n      }\n      // Todo, support more formats for WMS\n    }\n\n    /**\n     * @type {?ol.format.WMSGetFeatureInfo}\n     * @private\n     */\n    this.wmsFormat_ = wmsFormat;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n  /**\n   * @return {?ngeox.Dimensions} Current dimensions to use for this data source\n   * @export\n   */\n  get dimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * @return {?ngeox.Dimensions} Dimensions configuration for this data source\n   * @export\n   */\n  get dimensionsConfig() {\n    return this.dimensionsConfig_;\n  }\n\n  /**\n   * @param {?ngeox.Dimensions} dimensionsConfig Dimensions configuration\n   * @export\n   */\n  set dimensionsConfig(dimensionsConfig) {\n    this.dimensionsConfig_ = dimensionsConfig;\n  }\n\n  /**\n  * @return {?ngeox.DimensionsFiltersConfig} dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n  * @export\n  */\n  get dimensionsFiltersConfig() {\n    return this.dimensionsFiltersConfig_;\n  }\n\n  /**\n   * @param {?ngeox.DimensionsFiltersConfig}dimensionsFiltersConfig Dimensions\n  * filters configuration for this data source\n   * @export\n   */\n  set dimensionsFiltersConfig(dimensionsFiltersConfig) {\n    this.dimensionsFiltersConfig_ = dimensionsFiltersConfig;\n  }\n\n  /**\n   * @return {string} Filter condition\n   * @export\n   */\n  get filterCondition() {\n    return this.filterCondition_;\n  }\n\n  /**\n   * @param {string} filterCondition Filter condition\n   * @export\n   */\n  set filterCondition(filterCondition) {\n    this.filterCondition_ = filterCondition;\n  }\n\n  /**\n   * @return {?Array.<!ngeo.rule.Rule>} Filter rules\n   * @export\n   */\n  get filterRules() {\n    return this.filterRules_;\n  }\n\n  /**\n   * @param {?Array.<!ngeo.rule.Rule>} filterRules Filter rules\n   * @export\n   */\n  set filterRules(filterRules) {\n    this.filterRules_ = filterRules;\n  }\n\n  /**\n   * @return {number|undefined} Time lower value\n   * @export\n   */\n  get timeLowerValue() {\n    return this.timeLowerValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time lower value\n   * @export\n   */\n  set timeLowerValue(time) {\n    this.timeLowerValue_ = time;\n  }\n\n  /**\n   * @return {?ngeox.TimeRange} Time range value\n   * @export\n   */\n  get timeRangeValue() {\n    let range = null;\n    const lower = this.timeLowerValue;\n    const upper = this.timeUpperValue;\n    if (lower !== undefined) {\n      range = {\n        end: upper,\n        start: lower\n      };\n    }\n    return range;\n  }\n\n  /**\n   * @param {?ngeox.TimeRange} range Time range value\n   * @export\n   */\n  set timeRangeValue(range) {\n    if (range) {\n      this.timeUpperValue = range.end;\n      this.timeLowerValue = range.start;\n    } else {\n      this.timeUpperValue = undefined;\n      this.timeLowerValue = undefined;\n    }\n  }\n\n  /**\n   * @return {number|undefined} Time upper value\n   * @export\n   */\n  get timeUpperValue() {\n    return this.timeUpperValue_;\n  }\n\n  /**\n   * @param {number|undefined} time Time upper value\n   * @export\n   */\n  set timeUpperValue(time) {\n    this.timeUpperValue_ = time;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @inheritDoc\n   */\n  getAttributes() {\n    return super.attributes;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setAttributes(attributes) {\n    super.setAttributes(attributes);\n    this.updateGeometryNameFromAttributes_();\n  }\n\n  /**\n   * @return {boolean} Copyable\n   * @export\n   */\n  get copyable() {\n    return this.copyable_;\n  }\n\n  /**\n   * @return {?boolean} Filtrable.\n   * @export\n   */\n  get filtrable() {\n    return this.filtrable_;\n  }\n\n  /**\n   * @param {?boolean} filtrable Filtrable.\n   * @export\n   */\n  set filtrable(filtrable) {\n    this.filtrable_ = filtrable;\n  }\n\n  /**\n   * @return {string} Geometry name\n   * @export\n   */\n  get geometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * @return {string} OGC image type\n   * @export\n   */\n  get ogcImageType() {\n    return this.ogcImageType_;\n  }\n\n  /**\n   * @return {?Array.<!ngeox.datasource.OGCLayer>} OGC layers\n   * @export\n   */\n  get ogcLayers() {\n    return this.ogcLayers_;\n  }\n\n  /**\n   * @return {string} OGC server type\n   * @export\n   */\n  get ogcServerType() {\n    return this.ogcServerType_;\n  }\n\n  /**\n   * @return {string} OGC type\n   * @export\n   */\n  get ogcType() {\n    return this.ogcType_;\n  }\n\n  /**\n   * @return {boolean} Snappable\n   * @export\n   */\n  get snappable() {\n    return this.snappable_;\n  }\n\n  /**\n   * @return {boolean} Snapping to edges\n   * @export\n   */\n  get snappingToEdges() {\n    return this.snappingToEdges_;\n  }\n\n  /**\n   * @return {boolean} Snapping to vertices\n   * @export\n   */\n  get snappingToVertice() {\n    return this.snappingToVertice_;\n  }\n\n  /**\n   * @return {number} Snapping tolerance\n   * @export\n   */\n  get snappingTolerance() {\n    return this.snappingTolerance_;\n  }\n\n  /**\n   * @return {string|undefined} Time attribute name\n   * @export\n   */\n  get timeAttributeName() {\n    return this.timeAttributeName_;\n  }\n\n  /**\n   * @return {?ngeox.TimeProperty} Time property\n   * @export\n   */\n  get timeProperty() {\n    return this.timeProperty_;\n  }\n\n  /**\n   * @return {string} WFS feature namespace\n   * @export\n   */\n  get wfsFeatureNS() {\n    return this.wfsFeatureNS_;\n  }\n\n  /**\n   * @return {string} WFS feature prefix\n   * @export\n   */\n  get wfsFeaturePrefix() {\n    return this.wfsFeaturePrefix_;\n  }\n\n  /**\n   * @return {string} WFS output format\n   * @export\n   */\n  get wfsOutputFormat() {\n    return this.wfsOutputFormat_;\n  }\n\n  /**\n   * @export\n   * @return {string|undefined} WFS url\n   */\n  get wfsUrl() {\n    return this.wfsUrl_;\n  }\n\n  /**\n   * @return {string} WMS info format\n   * @export\n   */\n  get wmsInfoFormat() {\n    return this.wmsInfoFormat_;\n  }\n\n  /**\n   * @return {boolean} WMS is single tile\n   * @export\n   */\n  get wmsIsSingleTile() {\n    return this.wmsIsSingleTile_;\n  }\n\n  /**\n   * @return {string|undefined} WMS url\n   * @export\n   * @override\n   */\n  get wmsUrl() {\n    return this.wmsUrl_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS layer\n   * @export\n   */\n  get wmtsLayer() {\n    return this.wmtsLayer_;\n  }\n\n  /**\n   * @return {string|undefined} WMTS url\n   * @export\n   * @override\n   */\n  get wmtsUrl() {\n    return this.wmtsUrl_;\n  }\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {!ngeox.DimensionsActive} Active dimensions\n   * @export\n   */\n  get activeDimensions() {\n    const active = {};\n    const dimensions = this.dimensions_ || {};\n    const config = this.dimensionsConfig || {};\n\n    for (const key in config) {\n      if (config[key] === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          active[key] = dimensions[key];\n        }\n      } else {\n        active[key] = config[key];\n      }\n    }\n\n    return active;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WFS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  get combinableForWFS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * A data source can't be combined to other data source to issue a single\n   * WMS request if:\n   *\n   * - it has filter rules set\n   * - it has time range set\n   *\n   * @return {boolean} Whether the data source can be combined to an other\n   *     data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  get combinableForWMS() {\n    return this.filterRules_ === null &&\n      this.timeRangeValue === null;\n  }\n\n  /**\n   * Whether the data source is queryable or not. For an OGC data source to be\n   * queryable, it requires the support of WFS or WMS and at least one ogc\n   * layer to be querable.\n   * @export\n   */\n  get queryable() {\n    let queryable = false;\n    const supportsOGCQueries = this.supportsWMS || this.supportsWFS;\n    if (supportsOGCQueries && this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (ogcLayer.queryable === true) {\n          queryable = true;\n          break;\n        }\n      }\n    }\n    return queryable;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WFS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWFS() {\n    return this.wfsUrl !== undefined;\n  }\n\n  /**\n   * To be able to do advanced operations on a data source, such as editing\n   * or filtering, a data source must be bound to 1 set of attributes.\n   * These attributes are the ones defined by an ogcLayer.  This means that\n   * to be considered to support having attributes defined, you either need\n   * to define them directly when creating the data source, or if you let\n   * the querent service get them for you using a WFS DescribeFeatureType\n   * request, the data source must have only 1 ogcLayer set, which must\n   * be queryable.\n   * @return {boolean} Supports attributes.\n   * @export\n   */\n  get supportsAttributes() {\n    return this.attributes !== null || (\n      this.supportsWFS &&\n      this.ogcLayers !== null &&\n      this.ogcLayers.length === 1 &&\n      this.ogcLayers[0].queryable === true\n    );\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WMS requests\n   *     or not.\n   * @export\n   * @override\n   */\n  get supportsWMS() {\n    return this.wmsUrl !== undefined;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports making WTMS requests\n   *     or not.\n   * @export\n   */\n  get supportsWMTS() {\n    return this.wmtsUrl !== undefined;\n  }\n\n  /**\n   * @return {?ol.format.WFS} WFS format.\n   * @export\n   */\n  get wfsFormat() {\n    return this.wfsFormat_;\n  }\n\n  /**\n   * @return {?ol.format.WMSGetFeatureInfo} WMS format.\n   * @export\n   */\n  get wmsFormat() {\n    return this.wmsFormat_;\n  }\n\n  // ============================\n  // === Other public methods ===\n  // ============================\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WFS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWFS(dataSource) {\n    return this.combinableForWFS && dataSource.combinableForWFS &&\n      this.supportsWFS && dataSource.supportsWFS &&\n      this.queryable && dataSource.queryable &&\n      this.wfsUrl === dataSource.wfsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * @param {ngeox.datasource.OGC} dataSource Data source.\n   * @return {boolean} Whether this data source can be combined to the given\n   *     other data source to fetch features in a single WMS request.\n   * @export\n   * @override\n   */\n  combinableWithDataSourceForWMS(dataSource) {\n    return this.combinableForWMS && dataSource.combinableForWMS &&\n      this.supportsWMS && dataSource.supportsWMS &&\n      this.queryable && dataSource.queryable &&\n      this.wmsUrl === dataSource.wmsUrl &&\n      this.haveTheSameActiveDimensions(dataSource);\n  }\n\n  /**\n   * Check if there's at least one OGC layer in range of a given resolution.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {boolean} At least one OGC layer is in range.\n   * @export\n   */\n  isAnyOGCLayerInRange(res, queryableOnly = false) {\n    return !!(this.getInRangeOGCLayerNames(res, queryableOnly).length);\n  }\n\n  /**\n   * Returns a list of OGC layer names that are in range of a given resolution.\n   * If there's no OGC layers defined, an empty array is returned.\n   * @param {number} res Resolution.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names that are in range.\n   * @export\n   */\n  getInRangeOGCLayerNames(res, queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        const maxRes = ogcLayer.maxResolution;\n        const minRes = ogcLayer.minResolution;\n        const inMinRange = minRes === undefined || res >= minRes;\n        const inMaxRange = maxRes === undefined || res <= maxRes;\n        const inRange = inMinRange && inMaxRange;\n\n        if (inRange && (!queryableOnly || ogcLayer.queryable)) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the list of OGC layer names.\n   * @param {boolean} queryableOnly Whether to additionally check if the\n   *     OGC layer is queryable as well or not. Defaults to `false`.\n   * @return {Array.<string>} The OGC layer names.\n   * @export\n   */\n  getOGCLayerNames(queryableOnly = false) {\n\n    const layerNames = [];\n\n    if (this.ogcLayers) {\n      for (const ogcLayer of this.ogcLayers) {\n        if (!queryableOnly || ogcLayer.queryable) {\n          layerNames.push(ogcLayer.name);\n        }\n      }\n    }\n\n    return layerNames;\n  }\n\n  /**\n   * Returns the filtrable OGC layer name. This methods asserts that\n   * the name exists and is filtrable.\n   * @return {string} OGC layer name.\n   * @export\n   */\n  getFiltrableOGCLayerName() {\n    googAsserts.assert(this.filtrable);\n    const layerNames = this.getOGCLayerNames();\n    googAsserts.assert(layerNames.length === 1);\n    return layerNames[0];\n  }\n\n  /**\n   * Loop in the attributes of the data source. Update the `geometryName`\n   * property on the first geometry attribute found. If none is found, then\n   * the default geometry name is set.\n   * @private\n   */\n  updateGeometryNameFromAttributes_() {\n    let geometryName = exports.DEFAULT_GEOMETRY_NAME_;\n\n    if (this.attributes) {\n      for (const attribute of this.attributes) {\n        if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n          geometryName = attribute.name;\n          break;\n        }\n      }\n    }\n\n    this.geometryName_ = geometryName;\n  }\n\n  /**\n   * @param {!ngeox.datasource.OGC} dataSource Remote data source to\n   *     compare with this one.\n   * @return {boolean} Whether the two data sources have the same active\n   *     dimensions. If both have no dimensions, they are considered to be\n   *     sharing the same dimensions.\n   * @export\n   * @override\n   */\n  haveTheSameActiveDimensions(dataSource) {\n    let share = true;\n\n    const myActive = this.activeDimensions;\n    const itsActive = dataSource.activeDimensions;\n\n    for (const key in myActive) {\n      if (myActive[key] !== itsActive[key]) {\n        share = false;\n        break;\n      }\n    }\n\n    if (share) {\n      for (const key in itsActive) {\n        if (itsActive[key] !== myActive[key]) {\n          share = false;\n          break;\n        }\n      }\n    }\n\n    return share;\n  }\n};\n\n\n/**\n * Guess the type of OGC service from a given url. Default returned value is\n * WMS.\n * @param {string} url Url\n * @return {string} Guessed OGC service type.\n */\nexports.guessServiceTypeByUrl = function(url) {\n  let type;\n\n  if (/(wmts)/i.test(url)) {\n    type = exports.Type.WMTS;\n  } else {\n    type = exports.Type.WMS;\n  }\n\n  return type;\n};\n\n\n/**\n * Default name of the geometry attribute.\n * @type {string}\n * @private\n */\nexports.DEFAULT_GEOMETRY_NAME_ = 'the_geom';\n\n\n/**\n * Available OGC server types.\n * @enum {string}\n */\nexports.ServerType = {\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGISSERVER: 'qgisserver'\n};\n\n\n/**\n * Available OGC types.\n * @enum {string}\n */\nexports.Type = {\n  WMS: 'WMS',\n  WMTS: 'WMTS'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @const {Object.<string, string>}\n */\nexports.WFSFeatureNS = {\n  'geoserver': 'http://www.opengis.net/gml/3.2',\n  'mapserver': 'http://mapserver.gis.umn.edu/mapserver',\n  'qgisserver': 'http://www.qgis.org/gml'\n};\n\n\n/**\n * Available Feature namespace for WFS requests.\n * @enum {string}\n */\nexports.WFSFeaturePrefix = {\n  FEATURE: 'feature'\n};\n\n\n/**\n * Available OutputFormat for WFS requests.\n * @enum {string}\n */\nexports.WFSOutputFormat = {\n  GML2: 'GML2',\n  GML3: 'GML3'\n};\n\n\n/**\n * Available InfoFormat for WMS requests.\n * @enum {string}\n */\nexports.WMSInfoFormat = {\n  GML: 'application/vnd.ogc.gml'\n};\n\n\nexport default exports;\n","/**\n * @module gmf\n */\nconst exports = {};\n\n/**\n * The default template base URL for modules, used as-is by the template cache.\n * @type {string}\n */\n\n/**\n * @const\n * @export\n */\nexports.DATALAYERGROUP_NAME = 'data';\n\n/**\n * @const\n * @export\n */\nexports.EXTERNALLAYERGROUP_NAME = 'external';\n\n/**\n * @const\n * @export\n */\nexports.COORDINATES_LAYER_NAME = 'gmfCoordinatesLayerName';\n\n\n/**\n * @enum {string}\n */\nexports.PermalinkParam = {\n  BG_LAYER: 'baselayer_ref',\n  EXTERNAL_DATASOURCES_NAMES: 'eds_n',\n  EXTERNAL_DATASOURCES_URLS: 'eds_u',\n  FEATURES: 'rl_features',\n  MAP_CROSSHAIR: 'map_crosshair',\n  MAP_TOOLTIP: 'map_tooltip',\n  MAP_X: 'map_x',\n  MAP_Y: 'map_y',\n  MAP_Z: 'map_zoom',\n  TREE_GROUPS: 'tree_groups',\n  WFS_LAYER: 'wfs_layer',\n  WFS_NGROUPS: 'wfs_ngroups',\n  WFS_SHOW_FEATURES: 'wfs_showFeatures'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.FeatureHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olArray from 'ol/array.js';\nimport * as olColor from 'ol/color.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Provides methods for features, such as:\n *  - style setting / getting\n *  - measurement\n *  - export\n *\n * @constructor\n * @struct\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.$filter} $filter Angular filter.\n * @ngdoc service\n * @ngname ngeoFeatureHelper\n * @ngInject\n */\nconst exports = function($injector, $filter) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.decimals_ = undefined;\n  if ($injector.has('ngeoMeasureDecimals')) {\n    this.decimals_ = $injector.get('ngeoMeasureDecimals');\n  }\n\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.precision_ = undefined;\n  if ($injector.has('ngeoMeasurePrecision')) {\n    this.precision_ = $injector.get('ngeoMeasurePrecision');\n  }\n\n  /**\n   * @type {!ngeox.number}\n   */\n  this.numberFormat_ = /** @type {ngeox.number} */ ($filter('number'));\n\n  /**\n   * @type {!ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ ($filter('ngeoUnitPrefix'));\n\n  /**\n   * @type {!ngeox.numberCoordinates}\n   */\n  this.ngeoNumberCoordinates_ = /** @type {ngeox.numberCoordinates} */ ($filter('ngeoNumberCoordinates'));\n\n  /**\n   * Filter function to display point coordinates or null to don't use any filter.\n   * @type {function(*):string|null}\n   * @private\n   */\n  this.pointFilterFn_ = null;\n\n  /**\n   * Arguments to apply to the point filter function.\n   * @type {Array.<*>}\n   * @private\n   */\n  this.pointFilterArgs_ = [];\n\n  if ($injector.has('ngeoPointfilter')) {\n    const filterElements = $injector.get('ngeoPointfilter').split(':');\n    const filterName = filterElements.shift();\n    const filter = this.$filter_(filterName);\n    googAsserts.assertFunction(filter);\n    this.pointFilterFn_ = filter;\n    this.pointFilterArgs_ = filterElements;\n  } else {\n    this.pointFilterFn_ = null;\n  }\n\n  /**\n   * @type {!ol.proj.Projection}\n   * @private\n   */\n  this.projection_;\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n\n};\n\n\n/**\n * @param {!ol.proj.Projection} projection Projection.\n * @export\n */\nexports.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n// === STYLE METHODS ===\n\n\n/**\n * Set the style of a feature using its inner properties and depending on\n * its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @param {boolean=} opt_select Whether the feature should be rendered as\n *     selected, which includes additional vertex and halo styles.\n * @export\n */\nexports.prototype.setStyle = function(feature, opt_select) {\n  const styles = this.getStyle(feature);\n  if (opt_select) {\n    if (this.supportsVertex_(feature)) {\n      styles.push(this.getVertexStyle());\n    }\n    styles.unshift(this.getHaloStyle_(feature));\n  }\n  feature.setStyle(styles);\n};\n\n\n/**\n * Create and return a style object from a given feature using its inner\n * properties and depending on its geometry type.\n * @param {!ol.Feature} feature Feature.\n * @return {!Array.<!ol.style.Style>} The style object.\n * @export\n */\nexports.prototype.getStyle = function(feature) {\n  const type = this.getType(feature);\n  let style;\n\n  switch (type) {\n    case ngeoGeometryType.LINE_STRING:\n      style = this.getLineStringStyle_(feature);\n      break;\n    case ngeoGeometryType.POINT:\n      style = this.getPointStyle_(feature);\n      break;\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      style = this.getPolygonStyle_(feature);\n      break;\n    case ngeoGeometryType.TEXT:\n      style = this.getTextStyle_(feature);\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  let styles;\n  if (style.constructor === Array) {\n    styles = /** @type {!Array.<!ol.style.Style>}*/ (style);\n  } else {\n    styles = [style];\n  }\n\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with linestring geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getLineStringStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n\n  const styles = [new olStyleStyle({\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  //Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPointStyle_ = function(feature) {\n  const size = this.getSizeProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n  const styles = [new olStyleStyle({\n    image: new olStyleCircle({\n      radius: size,\n      fill: new olStyleFill({\n        color: color\n      })\n    })\n  })];\n  // Label Style\n  const textLabelValues = [];\n  if (showMeasure) {\n    textLabelValues.push(this.getMeasure(feature));\n  }\n  if (showLabel) {\n    textLabelValues.push(this.getNameProperty(feature));\n  }\n  if (showLabel ||  showMeasure) {\n    // display both label using  \\n\n    const textLabelValue = textLabelValues.join('\\n');\n    const font_size = 10;\n    // https://reeddesign.co.uk/test/points-pixels.html\n    const point_to_px = 1.3;\n    styles.push(new olStyleStyle({\n      text: this.createTextStyle_({\n        text: textLabelValue,\n        size: font_size,\n        offsetY: -(size + (font_size / 2) * textLabelValues.length * point_to_px + 4)\n      })\n    }));\n  }\n  return styles;\n};\n\n\n/**\n * Get an optional number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number|undefined}, The attribute value\n */\nexports.prototype.optNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (value !== undefined) {\n    if (typeof value == 'string') {\n      return +value;\n    } else {\n      return googAsserts.assertNumber(value);\n    }\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Get a number feature attribute.\n *\n * @param {!ol.Feature} feature Feature.\n * @param {string} attrib The attribute name.\n * @return {number}, The attribute value\n */\nexports.prototype.getNumber = function(feature, attrib) {\n  const value = feature.get(attrib);\n  if (typeof value == 'string') {\n    return +value;\n  } else {\n    return googAsserts.assertNumber(value);\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with polygon geometry.\n * @return {!Array.<!ol.style.Style>} Style.\n * @private\n */\nexports.prototype.getPolygonStyle_ = function(feature) {\n  const strokeWidth = this.getStrokeProperty(feature);\n  const opacity = this.getOpacityProperty(feature);\n  const color = this.getRGBAColorProperty(feature);\n  const showLabel = this.getShowLabelProperty(feature);\n  const showMeasure = this.getShowMeasureProperty(feature);\n\n  // fill color with opacity\n  const fillColor = color.slice();\n  fillColor[3] = opacity;\n\n  const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n\n  const styles = [new olStyleStyle({\n    fill: new olStyleFill({\n      color: fillColor\n    }),\n    stroke: new olStyleStroke({\n      color: color,\n      width: strokeWidth\n    })\n  })];\n  if (showMeasure || showLabel) {\n    if (showMeasure && azimut !== undefined) {\n      // Radius style:\n      const line = this.getRadiusLine(feature, azimut);\n      const length = ngeoInteractionMeasure.getFormattedLength(\n        line, this.projection_, this.precision_, this.unitPrefixFormat_);\n\n      styles.push(new olStyleStyle({\n        geometry: line,\n        fill: new olStyleFill({\n          color: fillColor\n        }),\n        stroke: new olStyleStroke({\n          color: color,\n          width: strokeWidth\n        }),\n        text: this.createTextStyle_({\n          text: length,\n          angle: ((azimut % 180) + 180) % 180 - 90\n        })\n      }));\n\n      // Azimut style\n      styles.push(new olStyleStyle({\n        geometry: new olGeomPoint(line.getLastCoordinate()),\n        text: this.createTextStyle_({\n          text: `${this.numberFormat_(azimut, this.decimals_)}°`,\n          size: 10,\n          offsetX: Math.cos((azimut - 90) * Math.PI / 180) * 20,\n          offsetY: Math.sin((azimut - 90) * Math.PI / 180) * 20\n        })\n      }));\n\n      //Label Style\n      if (showLabel) {\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: this.getNameProperty(feature),\n            offsetY: -8,\n            exceedLength: true\n          })\n        }));\n      }\n    } else {\n      //Label Style\n      const textLabelValues = [];\n      if (showMeasure) {\n        textLabelValues.push(this.getMeasure(feature));\n      }\n      if (showLabel) {\n        textLabelValues.push(this.getNameProperty(feature));\n      }\n      if (showLabel ||  showMeasure) {\n        // display both label using  \\n\n        const textLabelValue = textLabelValues.join('\\n');\n        styles.push(new olStyleStyle({\n          text: this.createTextStyle_({\n            text: textLabelValue,\n            exceedLength: true\n          })\n        }));\n      }\n    }\n  }\n  return styles;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature with point geometry, rendered as text.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getTextStyle_ = function(feature) {\n\n  return new olStyleStyle({\n    text: this.createTextStyle_({\n      text: this.getNameProperty(feature),\n      size: this.getSizeProperty(feature),\n      angle: this.getAngleProperty(feature),\n      color: this.getRGBAColorProperty(feature),\n      width: this.getStrokeProperty(feature)\n    })\n  });\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature to create the editing styles with.\n * @return {!Array.<!ol.style.Style>} List of style.\n * @export\n */\nexports.prototype.createEditingStyles = function(feature) {\n  // (1) Style definition depends on geometry type\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  const styles = [];\n\n  const geom = feature.getGeometry();\n  console.assert(geom);\n  const type = geom.getType();\n\n  if (type === 'Point') {\n    styles.push(\n      new olStyleStyle({\n        image: new olStyleCircle({\n          radius: width * 2,\n          fill: new olStyleFill({\n            color: blue\n          }),\n          stroke: new olStyleStroke({\n            color: white,\n            width: width / 2\n          })\n        }),\n        zIndex: Infinity\n      })\n    );\n  } else {\n    if (type === 'LineString') {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: white,\n            width: width + 2\n          })\n        })\n      );\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width\n          })\n        })\n      );\n    } else {\n      styles.push(\n        new olStyleStyle({\n          stroke: new olStyleStroke({\n            color: blue,\n            width: width / 2\n          }),\n          fill: new olStyleFill({\n            color: [255, 255, 255, 0.5]\n          })\n        })\n      );\n    }\n\n    // (2) Anything else than 'Point' requires the vertex style as well\n    styles.push(this.getVertexStyle(true));\n  }\n\n  return styles;\n};\n\n\n/**\n * Create and return a style object to be used for vertex.\n * @param {boolean=} opt_incGeomFunc Whether to include the geometry function\n *     or not. One wants to use the geometry function when you want to draw\n *     the vertex of features that don't have point geometries. One doesn't\n *     want to include the geometry function if you just want to have the\n *     style object itself to be used to draw features that have point\n *     geometries. Defaults to `true`.\n * @return {!ol.style.Style} Style.\n * @export\n */\nexports.prototype.getVertexStyle = function(opt_incGeomFunc) {\n  const incGeomFunc = opt_incGeomFunc !== undefined ? opt_incGeomFunc : true;\n\n  const options = {\n    image: new olStyleRegularShape({\n      radius: 6,\n      points: 4,\n      angle: Math.PI / 4,\n      fill: new olStyleFill({\n        color: [255, 255, 255, 0.5]\n      }),\n      stroke: new olStyleStroke({\n        color: [0, 0, 0, 1]\n      })\n    })\n  };\n\n  if (incGeomFunc) {\n    options.geometry = function(feature) {\n      const geom = feature.getGeometry();\n\n      if (geom.getType() == 'Point') {\n        return;\n      }\n\n      let innerMultiCoordinates;\n      let multiCoordinates = [];\n      let coordinates = [];\n      let i, ii;\n      if (geom instanceof olGeomLineString) {\n        coordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomMultiLineString) {\n        multiCoordinates = geom.getCoordinates();\n      } else if (geom instanceof olGeomPolygon) {\n        coordinates = geom.getCoordinates()[0];\n      } else if (geom instanceof olGeomMultiPolygon) {\n        innerMultiCoordinates = geom.getCoordinates();\n      }\n\n      if (innerMultiCoordinates) {\n        for (i = 0, ii = innerMultiCoordinates.length; i < ii; i++) {\n          multiCoordinates = multiCoordinates.concat(innerMultiCoordinates[i]);\n        }\n      }\n      for (i = 0, ii = multiCoordinates.length; i < ii; i++) {\n        coordinates = coordinates.concat(multiCoordinates[i]);\n      }\n\n      if (coordinates.length) {\n        return new olGeomMultiPoint(coordinates);\n      } else {\n        return geom;\n      }\n    };\n  }\n\n  return new olStyleStyle(options);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Whether the feature supports vertex or not.\n * @private\n */\nexports.prototype.supportsVertex_ = function(feature) {\n  const supported = [\n    ngeoGeometryType.LINE_STRING,\n    ngeoGeometryType.POLYGON,\n    ngeoGeometryType.RECTANGLE\n  ];\n  const type = this.getType(feature);\n  return olArray.includes(supported, type);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {!ol.style.Style} Style.\n * @private\n */\nexports.prototype.getHaloStyle_ = function(feature) {\n  const type = this.getType(feature);\n  let style;\n  const haloSize = 3;\n\n  switch (type) {\n    case ngeoGeometryType.POINT:\n      const size = this.getSizeProperty(feature);\n      style = new olStyleStyle({\n        image: new olStyleCircle({\n          radius: size + haloSize,\n          fill: new olStyleFill({\n            color: [255, 255, 255, 1]\n          })\n        })\n      });\n      break;\n    case ngeoGeometryType.LINE_STRING:\n    case ngeoGeometryType.CIRCLE:\n    case ngeoGeometryType.POLYGON:\n    case ngeoGeometryType.RECTANGLE:\n      const strokeWidth = this.getStrokeProperty(feature);\n      style = new olStyleStyle({\n        stroke: new olStyleStroke({\n          color: [255, 255, 255, 1],\n          width: strokeWidth + haloSize * 2\n        })\n      });\n      break;\n    case ngeoGeometryType.TEXT:\n      style = new olStyleStyle({\n        text: this.createTextStyle_({\n          text: this.getNameProperty(feature),\n          size: this.getSizeProperty(feature),\n          angle: this.getAngleProperty(feature),\n          width: haloSize * 3\n        })\n      });\n      break;\n    default:\n      break;\n  }\n\n  googAsserts.assert(style, 'Style should be thruthy');\n\n  return style;\n};\n\n\n// === PROPERTY GETTERS ===\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * Also delete the 'ngeo_feature_type_' from the ngeo query system.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Filtered properties of the current feature.\n * @export\n */\nexports.getFilteredFeatureValues = function(feature) {\n  const properties = feature.getProperties();\n  delete properties['boundedBy'];\n  delete properties[feature.getGeometryName()];\n  delete properties['ngeo_feature_type_'];\n  return properties;\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {number} Angle.\n * @export\n */\nexports.prototype.getAngleProperty = function(feature) {\n  const angle = +(/** @type {string} */ (\n    feature.get(ngeoFormatFeatureProperties.ANGLE)));\n  googAsserts.assertNumber(angle);\n  return angle;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Color.\n * @export\n */\nexports.prototype.getColorProperty = function(feature) {\n\n  const color = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.COLOR));\n\n  googAsserts.assertString(color);\n\n  return color;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {ol.Color} Color.\n * @export\n */\nexports.prototype.getRGBAColorProperty = function(feature) {\n  return olColor.fromString(this.getColorProperty(feature));\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {string} Name.\n * @export\n */\nexports.prototype.getNameProperty = function(feature) {\n  const name = googAsserts.assertString(feature.get(ngeoFormatFeatureProperties.NAME));\n  googAsserts.assertString(name);\n  return name;\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Opacity.\n * @export\n */\nexports.prototype.getOpacityProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.OPACITY);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show measure.\n * @export\n */\nexports.prototype.getShowMeasureProperty = function(feature) {\n  let showMeasure = feature.get(ngeoFormatFeatureProperties.SHOW_MEASURE);\n  if (showMeasure === undefined) {\n    showMeasure = false;\n  } else if (typeof showMeasure === 'string') {\n    showMeasure = (showMeasure === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showMeasure);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {boolean} Show feature label.\n * @export\n */\nexports.prototype.getShowLabelProperty = function(feature) {\n  let showLabel = feature.get(ngeoFormatFeatureProperties.SHOW_LABEL);\n  if (showLabel === undefined) {\n    showLabel = false;\n  } else if (typeof showLabel === 'string') {\n    showLabel = (showLabel === 'true') ? true : false;\n  }\n  return googAsserts.assertBoolean(showLabel);\n};\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Size.\n * @export\n */\nexports.prototype.getSizeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.SIZE);\n};\n\n\n/**\n * @param {!ol.Feature} feature Feature.\n * @return {number} Stroke.\n * @export\n */\nexports.prototype.getStrokeProperty = function(feature) {\n  return this.getNumber(feature, ngeoFormatFeatureProperties.STROKE);\n};\n\n\n// === EXPORT ===\n\n\n/**\n * Export features in the given format. The projection of the exported features\n * is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {string} formatType Format type to export the features.\n * @export\n */\nexports.prototype.export = function(features, formatType) {\n  switch (formatType) {\n    case exports.FormatType.GPX:\n      this.exportGPX(features);\n      break;\n    case exports.FormatType.KML:\n      this.exportKML(features);\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * Export features in GPX and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportGPX = function(features) {\n  const format = new olFormatGPX();\n  const mimeType = 'application/gpx+xml';\n  const fileName = 'export.gpx';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features in KML and download the result to the browser. The\n * projection of the exported features is: `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @export\n */\nexports.prototype.exportKML = function(features) {\n  const format = new olFormatKML();\n  const mimeType = 'application/vnd.google-earth.kml+xml';\n  const fileName = 'export.kml';\n  this.export_(features, format, fileName, mimeType);\n};\n\n\n/**\n * Export features using a given format to a specific filename and download\n * the result to the browser. The projection of the exported features is:\n * `EPSG:4326`.\n * @param {!Array.<!ol.Feature>} features Array of vector features.\n * @param {!ol.format.Feature} format Format\n * @param {string} fileName Name of the file.\n * @param {string=} opt_mimeType Mime type. Defaults to 'text/plain'.\n * @private\n */\nexports.prototype.export_ = function(features, format, fileName, opt_mimeType) {\n  const mimeType = opt_mimeType !== undefined ? opt_mimeType : 'text/plain';\n\n  // clone the features to apply the original style to the clone\n  // (the original may have select style active)\n  const clones = [];\n  let clone;\n  features.forEach((feature) => {\n    clone = new olFeature(feature.getProperties());\n    this.setStyle(clone, false);\n    clones.push(clone);\n  });\n\n  const writeOptions = this.projection_ ? {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.projection_\n  } : {};\n\n  const data = format.writeFeatures(clones, writeOptions);\n  this.download_(\n    data, fileName, `${mimeType};charset=utf-8`);\n};\n\n\n// === OTHER UTILITY METHODS ===\n\n\n/**\n * @param {!ngeox.style.TextOptions} options Options.\n * @return {!ol.style.Text} Style.\n * @private\n */\nexports.prototype.createTextStyle_ = function(options) {\n  if (options.angle) {\n    const angle = options.angle !== undefined ? options.angle : 0;\n    const rotation = angle * Math.PI / 180;\n    options.rotation = rotation;\n    delete options.angle;\n  }\n\n  options.font = ['normal', `${options.size || 10}pt`, 'Arial'].join(' ');\n\n  if (options.color) {\n    options.fill = new olStyleFill({color: options.color || [0, 0, 0, 1]});\n    delete options.color;\n  }\n\n  options.stroke = new olStyleStroke({\n    color: [255, 255, 255, 1],\n    width: options.width || 3\n  });\n  delete options.width;\n\n  return new olStyleText(options);\n};\n\n\n/**\n * Get the measure of the given feature as a string. For points, you can format\n * the result by setting a filter to apply on the coordinate with the function\n * {@link ngeo.misc.FeatureHelper.prototype.setPointFilterFn}.\n * @param {!ol.Feature} feature Feature.\n * @return {string} Measure.\n * @export\n */\nexports.prototype.getMeasure = function(feature) {\n\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be truthy');\n\n  let measure = '';\n\n  if (geometry instanceof olGeomPolygon) {\n    if (this.getType(feature) === ngeoGeometryType.CIRCLE) {\n      const azimut = this.optNumber(feature, ngeoFormatFeatureProperties.AZIMUT);\n      googAsserts.assertNumber(azimut);\n      const line = this.getRadiusLine(feature, azimut);\n\n      measure = ngeoInteractionMeasureAzimut.getFormattedAzimutRadius(\n        line, this.projection_, this.decimals_, this.precision_, this.unitPrefixFormat_, this.numberFormat_);\n    } else {\n      measure = ngeoInteractionMeasure.getFormattedArea(\n        geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n    }\n  } else if (geometry instanceof olGeomLineString) {\n    measure = ngeoInteractionMeasure.getFormattedLength(\n      geometry, this.projection_, this.precision_, this.unitPrefixFormat_);\n  } else if (geometry instanceof olGeomPoint) {\n    if (this.pointFilterFn_ === null) {\n      measure = ngeoInteractionMeasure.getFormattedPoint(\n        geometry, this.decimals_, this.ngeoNumberCoordinates_);\n    } else {\n      const coordinates = geometry.getCoordinates();\n      const args = this.pointFilterArgs_.slice(0);\n      args.unshift(coordinates);\n      measure = this.pointFilterFn_(...args);\n    }\n  }\n\n  return measure;\n};\n\n\n/**\n * Return the type of geometry of a feature using its geometry property and\n * some inner properties.\n * @param {!ol.Feature} feature Feature.\n * @return {string} The type of geometry.\n * @export\n */\nexports.prototype.getType = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n  let type;\n\n  if (geometry instanceof olGeomPoint) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_TEXT)) {\n      type = ngeoGeometryType.TEXT;\n    } else {\n      type = ngeoGeometryType.POINT;\n    }\n  } else if (geometry instanceof olGeomMultiPoint) {\n    type = ngeoGeometryType.MULTI_POINT;\n  } else if (geometry instanceof olGeomPolygon) {\n    if (feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n      type = ngeoGeometryType.CIRCLE;\n    } else if (feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE)) {\n      type = ngeoGeometryType.RECTANGLE;\n    } else {\n      type = ngeoGeometryType.POLYGON;\n    }\n  } else if (geometry instanceof olGeomMultiPolygon) {\n    type = ngeoGeometryType.MULTI_POLYGON;\n  } else if (geometry instanceof olGeomLineString) {\n    type = ngeoGeometryType.LINE_STRING;\n  } else if (geometry instanceof olGeomMultiLineString) {\n    type = ngeoGeometryType.MULTI_LINE_STRING;\n  }\n\n  googAsserts.assert(type, 'Type should be thruthy');\n\n  return type;\n};\n\n\n/**\n * This method first checks if a feature's extent intersects with the map view\n * extent. If it doesn't, then the view gets recentered with an animation to\n * the center of the feature.\n * @param {!ol.Feature} feature Feature.\n * @param {!ol.Map} map Map.\n * @param {number=} opt_panDuration Pan animation duration. Defaults to `250`.\n * @export\n */\nexports.prototype.panMapToFeature = function(feature, map,\n  opt_panDuration) {\n\n  const panDuration = opt_panDuration !== undefined ? opt_panDuration : 250;\n  const size = map.getSize();\n  googAsserts.assertArray(size);\n  const view = map.getView();\n  const extent = view.calculateExtent(size);\n  const geometry = feature.getGeometry();\n\n  if (!geometry.intersectsExtent(extent)) {\n    const mapCenter = view.getCenter();\n    googAsserts.assertArray(mapCenter);\n\n    let featureCenter;\n    if (geometry instanceof olGeomLineString) {\n      featureCenter = geometry.getCoordinateAt(0.5);\n    } else if (geometry instanceof olGeomPolygon) {\n      featureCenter = geometry.getInteriorPoint().getCoordinates();\n    } else if (geometry instanceof olGeomPoint) {\n      featureCenter = geometry.getCoordinates();\n    } else {\n      featureCenter = olExtent.getCenter(geometry.getExtent());\n    }\n\n    view.animate({\n      center: mapCenter,\n      duration: panDuration\n    }, {\n      center: featureCenter,\n      duration: panDuration\n    });\n  }\n};\n\n\n/**\n * This method generates a line string geometry that represents the radius for\n * a given azimut. It expects the input geometry to be a circle.\n * @param {!ol.Feature} feature Feature.\n * @param {number} azimut Azimut in degrees.\n * @return {!ol.geom.LineString} The line geometry.\n */\nexports.prototype.getRadiusLine = function(feature, azimut) {\n  const geometry = feature.getGeometry();\n  // Determine the radius for the circle\n  const extent = geometry.getExtent();\n  const radius = (extent[3] - extent[1]) / 2;\n\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const x = Math.cos((azimut - 90) * Math.PI / 180) * radius;\n  const y = -Math.sin((azimut - 90) * Math.PI / 180) * radius;\n  const endPoint = [x + center[0], y + center[1]];\n  return new olGeomLineString([center, endPoint]);\n};\n\n\n/**\n * Return the properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @return {!Object.<string, *>} Object.\n * @export\n */\nexports.prototype.getNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const nonSpatialProperties = {};\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      nonSpatialProperties[key] = properties[key];\n    }\n  }\n  return nonSpatialProperties;\n};\n\n\n/**\n * Clear all properties of a feature, with the exception of the geometry.\n * @param {!ol.Feature} feature Feature.\n * @export\n */\nexports.prototype.clearNonSpatialProperties = function(feature) {\n  const geometryName = feature.getGeometryName();\n  const properties = feature.getProperties();\n  for (const key in properties) {\n    if (key !== geometryName) {\n      feature.set(key, undefined);\n    }\n  }\n};\n\n\n// === FORMAT TYPES ===\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.FormatType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  GPX: 'GPX',\n  /**\n   * @type {string}\n   * @export\n   */\n  KML: 'KML'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureHelper', [\n  ngeoDownloadService.name,\n  ngeoMiscFilters.name,\n]);\nexports.module.service('ngeoFeatureHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivate\n */\n/**\n * A simple object that can be managed by `ngeo.misc.ToolActivateMgr`.\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {Object} toolContext An object which acts as the context for the tool.\n * @param {string} activePropertyName The name of a boolean property on\n *      `toolContext` which represents the active state of the tool.\n * @constructor\n * @struct\n * @ngname ngeoToolActivate\n * @export\n */\nconst exports = function(toolContext, activePropertyName) {\n\n  /**\n   * A getter function to get the active state of the tool.\n   * @return {boolean} Is active.\n   * @export\n   */\n  this.getActive = function() {\n    return toolContext[activePropertyName];\n  };\n\n  /**\n   * A setter function to set the active state of the tool.\n   * @param {boolean} newVal New active state.\n   * @export\n   */\n  this.setActive = function(newVal) {\n    toolContext[activePropertyName] = newVal;\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.utils\n */\nconst exports = {};\nimport * as olEventsCondition from 'ol/events/condition.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n\n/**\n * Utility method that converts a simple geometry to its multi equivalent. If\n * the geometry itself is already multi, it is returned as-is.\n * @param {ol.geom.Geometry} geometry A geometry\n * @return {ol.geom.Geometry} A multi geometry\n */\nexports.toMulti = function(geometry) {\n  let multiGeom;\n  if (geometry instanceof olGeomPoint) {\n    multiGeom = new olGeomMultiPoint([]);\n    multiGeom.appendPoint(geometry);\n  } else if (geometry instanceof olGeomLineString) {\n    multiGeom = new olGeomMultiLineString([]);\n    multiGeom.appendLineString(geometry);\n  } else if (geometry instanceof olGeomPolygon) {\n    multiGeom = new olGeomMultiPolygon([]);\n    multiGeom.appendPolygon(geometry);\n  } else {\n    multiGeom = geometry;\n  }\n  return multiGeom;\n};\n\n/**\n * Checks if on Safari.\n * @return {boolean} True if on Safari.\n */\nexports.isSafari = function() {\n  return navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n};\n\n/**\n * Takes a hex value and prepends a zero if it's a single digit.\n * @param {string} hex Hex value to prepend if single digit.\n * @return {string} hex value prepended with zero if it was single digit,\n *     otherwise the same value that was passed in.\n */\nexports.colorZeroPadding = function(hex) {\n  return hex.length == 1 ? `0${hex}` : hex;\n};\n\n/**\n * Converts a color from RGB to hex representation.\n * @param {!Array.<number>} rgb rgb representation of the color.\n * @return {string} hex representation of the color.\n */\nexports.rgbArrayToHex = function(rgb) {\n  const r = rgb[0];\n  const g = rgb[1];\n  const b = rgb[2];\n  if (r != (r & 255) || g != (g & 255) || b != (b & 255)) {\n    throw Error(`\"(${r},${g},${b})\" is not a valid RGB color`);\n  }\n  const hexR = exports.colorZeroPadding(r.toString(16));\n  const hexG = exports.colorZeroPadding(g.toString(16));\n  const hexB = exports.colorZeroPadding(b.toString(16));\n  return `#${hexR}${hexG}${hexB}`;\n};\n\n/**\n * Decode the encoded query string into a query data dictionary.\n * @param {string|undefined} queryString The queryString.\n * @return {!Object.<string, string>} The result.\n */\nexports.decodeQueryString = function(queryString) {\n  const queryData = {};\n  if (queryString) {\n    const pairs = queryString.substring(1).split('&');\n    for (const pair of pairs) {\n      const indexOfEquals = pair.indexOf('=');\n      if (indexOfEquals >= 0) {\n        const name = pair.substring(0, indexOfEquals);\n        const value = pair.substring(indexOfEquals + 1);\n        queryData[decodeURIComponent(name)] = decodeURIComponent(value);\n      } else {\n        queryData[pair] = '';\n      }\n    }\n  }\n  return queryData;\n};\n\n/**\n * Encode the query data dictionary into an encoded query string.\n * @param {!Object.<string, string>} queryData The queryData,\n * @return {string} The result.\n */\nexports.encodeQueryString = function(queryData) {\n  const queryItem = [];\n  for (const key in queryData) {\n    const value = queryData[key];\n    queryItem.push(`${encodeURIComponent(key)}=${encodeURIComponent(value)}`);\n  }\n  return queryItem.join('&');\n};\n\n\n/**\n * Delete condition passed to the modify interaction\n * @param {ol.MapBrowserEvent} event Browser event.\n * @return {boolean} The result.\n */\nexports.deleteCondition = function(event) {\n  return olEventsCondition.noModifierKeys(event) && olEventsCondition.singleClick(event);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Message\n */\n/**\n * Abstract class for services that display messages.\n *\n * @constructor\n * @struct\n * @abstract\n */\nconst exports = function() {};\n\n\n/**\n * Show the message.\n *\n * @abstract\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.showMessage = function(message) {};\n\n\n/**\n * Show disclaimer message string or object or list of disclame message\n * strings or objects.\n *\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.show = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.showMessage, this);\n};\n\n\n/**\n * Display the given error message or list of error messages.\n *\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.error = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.ERROR));\n};\n\n\n/**\n * Display the given info message or list of info messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.info = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.INFORMATION));\n};\n\n\n/**\n * Display the given success message or list of success messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.success = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.SUCCESS));\n};\n\n\n/**\n * Display the given warning message or list of warning messages.\n * @param {string|Array.<string>} message Message or list of messages.\n * @export\n */\nexports.prototype.warn = function(message) {\n  this.show(this.getMessageObjects(message, exports.Type.WARNING));\n};\n\n\n/**\n * Returns an array of message object from any given message string, list of\n * message strings, message object or list message objects. The type can be\n * overridden here as well OR defined (if the message(s) is/are string(s),\n * defaults to 'information').\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @param {string=} opt_type The type of message to override the messages with.\n * @return {Array.<ngeox.Message>} List of message objects.\n * @protected\n */\nexports.prototype.getMessageObjects = function(object, opt_type) {\n  const msgObjects = [];\n  let msgObject = null;\n  const defaultType = exports.Type.INFORMATION;\n\n  if (typeof object === 'string') {\n    msgObjects.push({\n      msg: object,\n      type: opt_type !== undefined ? opt_type : defaultType\n    });\n  } else if (Array.isArray(object)) {\n    object.forEach((msg) => {\n      if (typeof object === 'string') {\n        msgObject = {\n          msg: msg,\n          type: opt_type !== undefined ? opt_type : defaultType\n        };\n      } else {\n        msgObject = msg;\n        if (opt_type !== undefined) {\n          msgObject.type = opt_type;\n        }\n      }\n      msgObjects.push(msgObject);\n    }, this);\n  } else {\n    msgObject = object;\n    if (opt_type !== undefined) {\n      msgObject.type = opt_type;\n    }\n    if (msgObject.type === undefined) {\n      msgObject.type = defaultType;\n    }\n    msgObjects.push(msgObject);\n  }\n\n  return msgObjects;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.Type = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR: 'error',\n  /**\n   * @type {string}\n   * @export\n   */\n  INFORMATION: 'information',\n  /**\n   * @type {string}\n   * @export\n   */\n  SUCCESS: 'success',\n  /**\n   * @type {string}\n   * @export\n   */\n  WARNING: 'warning'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.CustomEvent\n */\nimport * as olBase from 'ol/index.js';\nimport olEventsEvent from 'ol/events/Event.js';\n\n/**\n * @constructor\n * @extends {ol.events.Event}\n * @param {string} type Event type.\n * @param {T} detail Event Detail.\n * @template T\n */\nconst exports = function(type, detail = {}) {\n\n  olEventsEvent.call(this, type);\n\n  /**\n   * @type {T}\n   */\n  this.detail = detail;\n\n};\n\nolBase.inherits(exports, olEventsEvent);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlayMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleStyle, {toFunction as toStyleFunction, createDefaultStyle as olStyleDefaultFunction} from 'ol/style/Style.js';\n\n\n/**\n * Provides a service that wraps an \"unmanaged\" vector layer,\n * used as a shared vector layer across the application.\n *\n * Example:\n *\n * The application's main component/controller initializes the feature\n * overlay manager with the map:\n *\n *     ngeoFeatureOverlayMgr.init(map);\n *\n * Once initialized, components of the application can use the manager to\n * create a feature overlay, configuring it with specific styles:\n *\n *     let featureOverlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n *     featureOverlay.setStyle(myStyle);\n *     featureOverlay.addFeature(myFeature);\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoFeatureOverlayMgr\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<string, number>}\n   * @private\n   */\n  this.featureUidToGroupIndex_ = {};\n\n  /**\n   * @type {Array.<ngeox.MapFeatureOverlayGroup>}\n   * @private\n   */\n  this.groups_ = [];\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.layer_ = new olLayerVector({\n    source: this.source_,\n    style: this.styleFunction_.bind(this),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.addFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  this.featureUidToGroupIndex_[featureUid] = groupIndex;\n  this.groups_[groupIndex].features[featureUid] = feature;\n  this.source_.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature The feature to add.\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.removeFeature = function(feature, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const featureUid = olBase.getUid(feature).toString();\n  delete this.featureUidToGroupIndex_[featureUid];\n  delete this.groups_[groupIndex].features[featureUid];\n  this.source_.removeFeature(feature);\n};\n\n\n/**\n * @param {number} groupIndex The group groupIndex.\n * @export\n */\nexports.prototype.clear = function(groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  const group = this.groups_[groupIndex];\n  for (const featureUid in group.features) {\n    this.removeFeature(group.features[featureUid], groupIndex);\n  }\n  googAsserts.assert(olObj.isEmpty(group.features));\n};\n\n\n/**\n * @return {ol.layer.Vector} The vector layer used internally.\n * @export\n */\nexports.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * @return {ngeo.map.FeatureOverlay} Feature overlay.\n * @export\n */\nexports.prototype.getFeatureOverlay = function() {\n  const groupIndex = this.groups_.length;\n  this.groups_.push({\n    styleFunction: olStyleDefaultFunction,\n    features: {}\n  });\n  return new ngeoMapFeatureOverlay(this, groupIndex);\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @export\n */\nexports.prototype.init = function(map) {\n  this.layer_.setMap(map);\n};\n\n\n/**\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @param {number} groupIndex Group index.\n * @export\n */\nexports.prototype.setStyle = function(style, groupIndex) {\n  googAsserts.assert(groupIndex >= 0);\n  googAsserts.assert(groupIndex < this.groups_.length);\n  this.groups_[groupIndex].styleFunction = style === null ?\n    olStyleStyle.defaultFunction : toStyleFunction(style);\n};\n\n\n/**\n * @param {ol.Feature|ol.render.Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<ol.style.Style>|ol.style.Style} Styles.\n * @private\n */\nexports.prototype.styleFunction_ = function(feature, resolution) {\n  const featureUid = olBase.getUid(feature).toString();\n  googAsserts.assert(featureUid in this.featureUidToGroupIndex_);\n  const groupIndex = this.featureUidToGroupIndex_[featureUid];\n  const group = this.groups_[groupIndex];\n  return group.styleFunction(feature, resolution);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlayMgr', [\n  ngeoMapFeatureOverlay.module.name\n]);\nexports.module.service('ngeoFeatureOverlayMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Geometry\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A rule bound to the geometry of a `ol.Feature` object. Changes made\n   * to the geometry are applied to the `expression` property of the rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.GeometryOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = ngeoFormatAttributeType.GEOMETRY;\n\n    super(options);\n\n    // === STATIC properties ===\n\n    const properties = options.featureProperties || {};\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature(properties);\n\n    /**\n     * @type {!ol.format.GeoJSON}\n     * @private\n     */\n    this.format_ = new olFormatGeoJSON();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingExpression_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updatingGeometry_ = false;\n\n    /**\n     * @type {?ol.EventsKey}\n     * @private\n     */\n    this.geometryChangeListenerKey_ = null;\n\n    this.listenerKeys.push(\n      olEvents.listen(\n        this.feature_,\n        `change:${this.feature.getGeometryName()}`,\n        this.handleFeatureGeometryChange_,\n        this\n      )\n    );\n\n    this.setGeometryFromExpression_();\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {!ol.Feature} Feature.\n   * @export\n   */\n  get feature() {\n    return this.feature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setExpression(expression) {\n    this.updatingExpression_ = true;\n    super.setExpression(expression);\n\n    if (!this.updatingGeometry_) {\n      this.setGeometryFromExpression_();\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingExpression_ = false;\n  }\n\n  // === Calculated property getters/setters ===\n\n  /**\n   * @return {?ol.geom.Geometry} Geometry\n   * @export\n   */\n  get geometry() {\n    return this.feature_.getGeometry() || null;\n  }\n\n  /**\n   * @param {?ol.geom.Geometry} geometry Geometry\n   * @export\n   */\n  set geometry(geometry) {\n    this.feature_.setGeometry(geometry);\n  }\n\n  // === Other methods ===\n\n  /**\n   * Called when the geometry property in the feature changes. Update the\n   * expression accordingly.\n   * @private\n   */\n  handleFeatureGeometryChange_() {\n    if (this.updatingExpression_) {\n      return;\n    }\n\n    this.updatingGeometry_ = true;\n\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.expression = this.format_.writeGeometry(geometry);\n    } else {\n      this.expression = null;\n    }\n\n    this.registerGeometryChange_();\n\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Called when the geometry of the features changes. Update the expression\n   * accordingly.\n   * @param {ol.Object.Event} evt Event\n   * @private\n   */\n  handleGeometryChange_(evt) {\n    const geometry = googAsserts.assertInstanceof(\n      evt.target, olGeomGeometry\n    );\n    this.updatingGeometry_ = true;\n    this.expression = this.format_.writeGeometry(geometry);\n    this.updatingGeometry_ = false;\n  }\n\n  /**\n   * Set geometry property using the expression property.\n   * @private\n   */\n  setGeometryFromExpression_() {\n    let geometry = null;\n    if (this.expression) {\n      // An expression can only have a string value with a geometry rule.\n      const expression = googAsserts.assertString(this.expression);\n      geometry = this.format_.readGeometry(expression);\n    }\n    this.geometry = geometry;\n  }\n\n  /**\n   * Unlisten the feature geometry change event, then listen to it if the\n   * feature has a geometry.\n   * @private\n   */\n  registerGeometryChange_() {\n\n    // (1) Unlisten\n    if (this.geometryChangeListenerKey_ !== null) {\n      olEvents.unlistenByKey(this.geometryChangeListenerKey_);\n      this.geometryChangeListenerKey_ = null;\n    }\n\n    // (2) Listen, if geom\n    const geometry = this.feature_.getGeometry();\n    if (geometry) {\n      this.geometryChangeListenerKey_ = olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      );\n    }\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.LayerHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport OlLayerGroup from 'ol/layer/Group.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS, {optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Provides help functions that helps you to create and manage layers.\n * @param {angular.$q} $q Angular promises/deferred service.\n * @param {angular.$http} $http Angular http service.\n * @param {number} ngeoTilesPreloadingLimit Load tiles up to preload levels. By default preload is Infinity,\n *     which means load all tiles on the top of the visible level. See also preload value\n *     in documentation for ol.Layer.Tile.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLayerHelper\n * @ngInject\n */\nconst exports = function($q, $http, ngeoTilesPreloadingLimit) {\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * The Tiles Preloading Limit value\n   * @type {number}\n   * @private\n   */\n  this.tilesPreloadingLimit_ = ngeoTilesPreloadingLimit;\n};\n\n\n/**\n * @const\n */\nexports.GROUP_KEY = 'groupName';\n\n\n/**\n * @const\n */\nexports.REFRESH_PARAM = 'random';\n\n\n/**\n * Create and return a basic WMS layer with only a source URL and a comma\n * separated layers names (see {@link ol.source.ImageWMS}).\n *\n * @param {string} sourceURL The source URL.\n * @param {string} sourceLayersName A comma separated names string.\n * @param {string} sourceFormat Image format, for example 'image/png'.\n * @param {string=} opt_serverType Type of the server (\"mapserver\",\n *     \"geoserver\", \"qgisserver\", …).\n * @param {string=} opt_time time parameter for layer queryable by time/periode\n * @param {Object.<string, string>=} opt_params WMS parameters.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @param {Object=} opt_customSourceOptions Some initial options.\n * @param {Object=} opt_customLayerOptions The layer opacity.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayer = function(sourceURL,\n  sourceLayersName, sourceFormat, opt_serverType, opt_time, opt_params, opt_crossOrigin,\n  opt_customSourceOptions, opt_customLayerOptions) {\n\n  const params = {\n    'FORMAT': sourceFormat,\n    'LAYERS': sourceLayersName\n  };\n  let olServerType;\n  if (opt_time) {\n    params['TIME'] = opt_time;\n  }\n  if (opt_serverType) {\n    params['SERVERTYPE'] = opt_serverType;\n    // OpenLayers expects 'qgis' insteads of 'qgisserver'\n    olServerType = opt_serverType.replace('qgisserver', 'qgis');\n  }\n  const options = Object.assign({}, opt_customSourceOptions, {\n    url: sourceURL,\n    params: params,\n    serverType: olServerType,\n    crossOrigin: opt_crossOrigin\n  });\n  const source = new olSourceImageWMS(options);\n  if (opt_params) {\n    source.updateParams(opt_params);\n  }\n\n  const layerOptions = Object.assign({}, opt_customLayerOptions, {source});\n  return new olLayerImage(layerOptions);\n};\n\n\n/**\n * Create and return a basic WMS layer using an OGC data source.\n *\n * @param {ngeo.datasource.OGC} dataSource OGC data source.\n * @param {string=} opt_crossOrigin crossOrigin.\n * @return {ol.layer.Image} WMS Layer.\n * @export\n */\nexports.prototype.createBasicWMSLayerFromDataSource = function(\n  dataSource, opt_crossOrigin\n) {\n  const url = dataSource.wmsUrl;\n  googAsserts.assert(url);\n\n  const layerNames = dataSource.getOGCLayerNames().join(',');\n  const serverType = dataSource.ogcServerType;\n  const imageType = dataSource.ogcImageType;\n\n  // (1) Layer creation\n  const layer = this.createBasicWMSLayer(\n    url,\n    layerNames,\n    imageType,\n    serverType,\n    undefined,\n    undefined,\n    opt_crossOrigin\n  );\n\n  // (2) Manage visibility\n  layer.setVisible(dataSource.visible);\n\n  // (3) Reference to the data source\n  layer.set('querySourceIds', [dataSource.id]);\n\n  return layer;\n};\n\n\n/**\n * Create and return a promise that provides a WMTS layer with source on\n * success, no layer else.\n * The WMTS layer source will be configured by the capabilities that are\n * loaded from the given capabilitiesUrl.\n * The style object described in the capabilities for this layer will be added\n * as key 'capabilitiesStyles' as param of the new layer.\n * @param {string} capabilitiesURL The getCapabilities url.\n * @param {string} layerName The name of the layer.\n * @param {string=} opt_matrixSet Optional WMTS matrix set.\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @param {Object=} opt_customOptions Some initial options.\n * @return {angular.$q.Promise.<ol.layer.Tile>} A Promise with a layer (with source) on success,\n *     no layer else.\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilitites = function(capabilitiesURL, layerName, opt_matrixSet, opt_dimensions, opt_customOptions) {\n  const parser = new olFormatWMTSCapabilities();\n  const layer = new olLayerTile({\n    preload: this.tilesPreloadingLimit_\n  });\n  const $q = this.$q_;\n\n  return this.$http_.get(capabilitiesURL, {cache: true}).then((response) => {\n    let result;\n    if (response.data) {\n      result = parser.read(response.data);\n    }\n    if (result) {\n      const options = Object.assign({}, opt_customOptions, optionsFromCapabilities(result, {\n        matrixSet: opt_matrixSet,\n        crossOrigin: 'anonymous',\n        layer: layerName\n      }));\n      const source = new olSourceWMTS(/** @type {olx.source.WMTSOptions} */ (options));\n      if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n        source.updateDimensions(opt_dimensions);\n      }\n      layer.setSource(source);\n\n      // Add styles from capabilities as param of the layer\n      const layers = result['Contents']['Layer'];\n      const l = olArray.find(layers, (elt, index, array) => elt['Identifier'] == layerName);\n      layer.set('capabilitiesStyles', l['Style']);\n\n      return $q.resolve(layer);\n    }\n    return $q.reject(`Failed to get WMTS capabilities from ${capabilitiesURL}`);\n  });\n};\n\n\n/**\n * Create and return a WMTS layer using a formatted capabilities response\n * and a capability layer.\n *\n * @param {!Object} capabilities The complete capabilities object of the service\n * @param {!Object} layerCap The layer capability object\n * @param {Object.<string, string>=} opt_dimensions WMTS dimensions.\n * @return {!ol.layer.Tile} WMTS layer\n * @export\n */\nexports.prototype.createWMTSLayerFromCapabilititesObj = function(\n  capabilities, layerCap, opt_dimensions\n) {\n\n  const options = optionsFromCapabilities(capabilities, {\n    crossOrigin: 'anonymous',\n    layer: layerCap['Identifier']\n  });\n\n  googAsserts.assert(options);\n  const source = new olSourceWMTS(\n    /** @type {olx.source.WMTSOptions} */ (options));\n\n  if (opt_dimensions && !olObj.isEmpty(opt_dimensions)) {\n    source.updateDimensions(opt_dimensions);\n  }\n\n  return new olLayerTile({\n    'capabilitiesStyles': layerCap['Style'],\n    preload: Infinity,\n    source: source\n  });\n};\n\n\n/**\n * Create and return an ol.layer.Group. You can pass a collection of layers to\n * directly add them in the returned group.\n * @param {ol.Collection.<ol.layer.Base>=} opt_layers The layer to add to the\n * returned Group.\n * @return {ol.layer.Group} Layer group.\n * @export\n */\nexports.prototype.createBasicGroup = function(opt_layers) {\n  const group = new OlLayerGroup();\n  if (opt_layers) {\n    group.setLayers(opt_layers);\n  }\n  return group;\n};\n\n\n/**\n * Retrieve (or create if it doesn't exist) and return a group of layer from\n * the base array of layers of a map. The given name is used as unique\n * identifier. If the group is created, it will be automatically added to\n * the map.\n * @param {ol.Map} map A map.\n * @param {string} groupName The name of the group.\n * @return {ol.layer.Group} The group corresponding to the given name.\n * @export\n */\nexports.prototype.getGroupFromMap = function(map, groupName) {\n  const groups = map.getLayerGroup().getLayers();\n  let group;\n  groups.getArray().some((existingGroup) => {\n    if (existingGroup.get(exports.GROUP_KEY) === groupName) {\n      group = /** @type {ol.layer.Group} */ (existingGroup);\n      return true;\n    } else {\n      return false;\n    }\n  });\n  if (!group) {\n    group = this.createBasicGroup();\n    group.set(exports.GROUP_KEY, groupName);\n    map.addLayer(group);\n  }\n  return group;\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @export\n */\nexports.prototype.getFlatLayers = function(layer) {\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers().getArray();\n    const hasGroupLayer = sublayers.some(sublayer => sublayer instanceof OlLayerGroup);\n    if (!hasGroupLayer) {\n      return sublayers.slice();\n    }\n  }\n  return this.getFlatLayers_(layer, [], undefined);\n};\n\n\n/**\n * Get an array of all layers in a group. The group can contain multiple levels\n * of others groups. When we flatten a group, we get the child layers.\n * If opacity is defined on the group, this value is lost.\n * Computed opacity is a custom 'back-up' value that contains\n * the calculated value of all ancestors and the given layer.\n * @param {ol.layer.Base} layer The base layer, mostly a group of layers.\n * @param {Array.<ol.layer.Base>} array An array to add layers.\n * @param {number|undefined} computedOpacity Opacity inherited from ancestor layer groups.\n * @return {Array.<ol.layer.Layer>} Layers.\n * @private\n */\nexports.prototype.getFlatLayers_ = function(layer, array, computedOpacity) {\n  const opacity = layer.getOpacity();\n  if (computedOpacity !== undefined) {\n    computedOpacity *= opacity;\n  } else {\n    computedOpacity = opacity;\n  }\n  if (layer instanceof OlLayerGroup) {\n    const sublayers = layer.getLayers();\n    sublayers.forEach((l) => {\n      this.getFlatLayers_(l, array, computedOpacity);\n    });\n  } else {\n    if (array.indexOf(layer) < 0) {\n      layer.set('inheritedOpacity', computedOpacity, true);\n      array.push(layer);\n    }\n  }\n  return array;\n};\n\n\n/**\n * Get a layer that has a `layerName` property equal to a given layer name from\n * an array of layers. If one of the layers in the array is a group, then the\n * layers contained in that group are searched as well.\n * @param {string} layerName The name of the layer we're looking for.\n * @param {Array.<ol.layer.Base>} layers Layers.\n * @return {?ol.layer.Base} Layer.\n * @export\n */\nexports.prototype.getLayerByName = function(layerName, layers) {\n  let found = null;\n  layers.some((layer) => {\n    if (layer instanceof OlLayerGroup) {\n      const sublayers = layer.getLayers().getArray();\n      found = this.getLayerByName(layerName, sublayers);\n    } else if (layer.get('layerNodeName') === layerName) {\n      found = layer;\n    }\n    return !!found;\n  });\n\n  return found;\n};\n\n\n/**\n * Get the WMTS legend URL for the given layer.\n * @param {ol.layer.Tile} layer Tile layer as returned by the\n * ngeo layerHelper service.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMTSLegendURL = function(layer) {\n  // FIXME case of multiple styles ?  case of multiple legendUrl ?\n  let url;\n  const styles = layer.get('capabilitiesStyles');\n  if (styles !== undefined) {\n    const legendURL = styles[0]['legendURL'];\n    if (legendURL !== undefined) {\n      url = legendURL[0]['href'];\n    }\n  }\n  return url;\n};\n\n\n/**\n * Get the WMS legend URL for the given node.\n * @param {string|undefined} url The base url of the wms service.\n * @param {string} layerName The name of a wms layer.\n * @param {number=} opt_scale A scale.\n * @param {string=} opt_legendRule rule parameters to add to the returned URL.\n * @param {number=} opt_legendWidth the legend width.\n * @param {number=} opt_legendHeight the legend height.\n * @param {string=} opt_servertype the OpenLayers server type.\n * @param {number=} opt_dpi the DPI.\n * @param {Array.number=} opt_bbox the bbox.\n * @param {string=} opt_srs The projection code.\n * @param {Object.<string, string>=} opt_additionalQueryString Additional query string parameters.\n * @return {string|undefined} The legend URL or undefined.\n * @export\n */\nexports.prototype.getWMSLegendURL = function(url,\n  layerName, opt_scale, opt_legendRule, opt_legendWidth, opt_legendHeight,\n  opt_servertype, opt_dpi, opt_bbox, opt_srs, opt_additionalQueryString) {\n  if (!url) {\n    return undefined;\n  }\n  const queryString = {\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'SERVICE': 'WMS',\n    'VERSION': '1.1.1',\n    'REQUEST': 'GetLegendGraphic',\n    'LAYER': layerName\n  };\n  if (opt_scale !== undefined) {\n    queryString['SCALE'] = opt_scale;\n  }\n  if (opt_legendRule !== undefined) {\n    queryString['RULE'] = opt_legendRule;\n    if (opt_legendWidth !== undefined) {\n      queryString['WIDTH'] = opt_legendWidth;\n    }\n    if (opt_legendHeight !== undefined) {\n      queryString['HEIGHT'] = opt_legendHeight;\n    }\n  }\n  if (opt_servertype == 'qgis') {\n    if (opt_dpi != undefined) {\n      queryString['DPI'] = opt_dpi;\n    }\n    if (opt_bbox != undefined && opt_srs != undefined && opt_scale != undefined && opt_dpi != undefined && opt_legendRule == undefined) {\n      queryString['BBOX'] = opt_bbox.join(',');\n      queryString['SRS'] = opt_srs;\n      queryString['WIDTH'] = Math.round((opt_bbox[2] - opt_bbox[0]) / opt_scale * 39.37 * opt_dpi);\n      queryString['HEIGHT'] = Math.round((opt_bbox[3] - opt_bbox[1]) / opt_scale * 39.37 * opt_dpi);\n    }\n  }\n  if (opt_additionalQueryString) {\n    Object.assign(queryString, opt_additionalQueryString);\n  }\n  return olUri.appendParams(url, queryString);\n};\n\n\n/**\n * Returns if this layer is visible at the current resolution.\n * @param {ol.layer.Base} layer Layer.\n * @param {ol.Map} map Map.\n * @return {boolean} Is the layer currently visible?\n */\nexports.prototype.isLayerVisible = function(layer, map) {\n  if (!layer.getVisible()) {\n    return false;\n  }\n\n  const currentResolution = map.getView().getResolution();\n  return currentResolution > layer.getMinResolution() &&\n      currentResolution < layer.getMaxResolution();\n};\n\n\n/**\n * Force a WMS layer to refresh using a random value.\n * @param {ol.layer.Image|ol.layer.Tile} layer Layer to refresh.\n */\nexports.prototype.refreshWMSLayer = function(layer) {\n  const source_ = layer.getSource();\n  googAsserts.assert(\n    source_ instanceof olSourceImageWMS ||\n    source_ instanceof olSourceTileWMS\n  );\n  const source = /** @type {ol.source.ImageWMS|ol.source.TileWMS} */ (source_);\n  const params = source.getParams();\n  params[exports.REFRESH_PARAM] = Math.random();\n  source.updateParams(params);\n};\n\n\n/**\n * Set ZIndex property to first level children elements\n * @param {ol.layer.Group|ol.layer.Base} element The group of layer with first level children layers.\n * @param {number} ZIndex The ZIndex for children element.\n */\nexports.prototype.setZIndexToFirstLevelChildren = function(element, ZIndex) {\n  if (!(element instanceof OlLayerGroup)) {\n    return;\n  }\n  const innerGroupLayers = element.getLayers();\n  innerGroupLayers.forEach(innerLayer => innerLayer.setZIndex(ZIndex));\n};\n\n\n/**\n * Update the LAYERS parameter of the source of the given WMS layer.\n * @param {ol.layer.Image} layer The WMS layer.\n * @param {string} names The names that will be used to set\n * the LAYERS parameter.\n * @param {string=} opt_time The start\n * and optionally the end datetime (for time range selection) selected by user\n * in a ISO-8601 string datetime or time interval format\n * @export\n */\nexports.prototype.updateWMSLayerState = function(layer, names, opt_time) {\n  // Don't send layer without parameters, hide layer instead;\n  if (names.length <= 0) {\n    layer.setVisible(false);\n  } else {\n    layer.setVisible(true);\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n    if (opt_time) {\n      source.updateParams({'LAYERS': names, 'TIME': opt_time});\n    } else {\n      source.updateParams({'LAYERS': names});\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Image} layer The WMS layer.\n * @return {Array.<number>|undefined} List of query source ids, a.k.a.\n *     the data source ids this layer is composed of.\n * @export\n */\nexports.prototype.getQuerySourceIds = function(layer) {\n  return /** @type {Array.<number>|undefined} */ (\n    layer.get('querySourceIds'));\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayerHelper', [])\n  .service('ngeoLayerHelper', exports)\n  .value('ngeoTilesPreloadingLimit', Infinity);\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.Controller\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\n\n/**\n * The controller for the \"tree node\" directive.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.Attributes} $attrs Attributes.\n * @constructor\n * @ngInject\n * @export\n * @struct\n * @ngdoc controller\n * @ngname NgeoLayertreeController\n */\nconst exports = function($scope, $rootScope, $attrs) {\n\n  const isRoot = $attrs['ngeoLayertreeNotroot'] === undefined;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isRoot = isRoot;\n\n  const nodeExpr = $attrs['ngeoLayertree'];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.properties = {};\n\n  /**\n   * @type {!string}\n   * @private\n   */\n  this.state_ = 'off';\n\n  /**\n   * @type {!Object}\n   * @export\n   */\n  this.node;\n\n  if (isRoot) {\n    $scope.$watch(nodeExpr, (newVal, oldVal) => {\n      this.node = newVal;\n    });\n  } else {\n    this.node = /** @type {!Object} */ ($scope.$eval(nodeExpr));\n    googAsserts.assert(this.node !== undefined);\n  }\n\n  const mapExpr = $attrs['ngeoLayertreeMap'];\n  const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assert(map !== undefined);\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.parent = $scope.$parent['layertreeCtrl'];\n\n  /**\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.children = [];\n\n  if (this.parent) {\n    this.parent.children.push(this);\n  }\n\n  $scope.$on('$destroy', () => {\n    if (this.parent) {\n      const index = this.parent.children.indexOf(this);\n      googAsserts.assert(index >= 0);\n      this.parent.children.splice(index, 1);\n    }\n  });\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.uid = olBase.getUid(this);\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.depth = isRoot ? 0 : this.parent.depth + 1;\n\n  // We set 'uid' and 'depth' in the scope as well to access the parent values\n  // in the inherited scopes. This is intended to be used in the javascript not\n  // in the templates.\n  $scope['uid'] = this.uid;\n  $scope['depth'] = this.depth;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = map;\n\n  let nodelayerExpr = $attrs['ngeoLayertreeNodelayer'];\n  if (nodelayerExpr === undefined) {\n    const nodelayerexprExpr = $attrs['ngeoLayertreeNodelayerexpr'];\n    const newNodelayerExpr = $scope.$eval(nodelayerexprExpr);\n    googAsserts.assertString(newNodelayerExpr);\n    nodelayerExpr = newNodelayerExpr;\n  }\n  googAsserts.assert(nodelayerExpr !== undefined);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nodelayerExpr = nodelayerExpr;\n\n  /**\n   * @type {?ol.layer.Layer|ol.layer.Group}\n   * @export\n   */\n  this.layer = null;\n  if (!isRoot) {\n    const layer = $scope.$eval(nodelayerExpr, {'treeCtrl': this}) || null;\n    if (layer) {\n      googAsserts.assert(\n        layer instanceof olLayerLayer || layer instanceof olLayerGroup\n      );\n      this.layer = layer;\n    }\n  }\n\n  /**\n   * @type {?ngeo.datasource.DataSource}\n   * @private\n   */\n  this.dataSource_ = null;\n\n  if (this.layer) {\n    ngeoMiscDecorate.layerLoading(this.layer, $scope);\n    ngeoMiscDecorate.layer(this.layer);\n\n    olEvents.listen(this.layer, 'change:opacity', () => {\n      this.rootScope_.$broadcast('ngeo-layertree-opacity', this);\n    });\n  }\n\n  let listenersExpr = $attrs['ngeoLayertreeListeners'];\n  if (listenersExpr === undefined) {\n    const listenersexprExpr = $attrs['ngeoLayertreeListenersexpr'];\n    listenersExpr = $scope.$eval(listenersexprExpr);\n  }\n\n  if (listenersExpr !== undefined) {\n    googAsserts.assertString(listenersExpr);\n  }\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.listenersExpr = listenersExpr;\n\n  // Eval function to bind functions to this tree's events.\n  if (listenersExpr) {\n    $scope.$eval(listenersExpr, {'treeScope': $scope, 'treeCtrl': this});\n  }\n\n  $scope['layertreeCtrl'] = this;\n};\n\n\n/**\n * Return the current state.\n * @return {string} 'on', 'off', 'indeterminate'.\n * @export\n */\nexports.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * Set the state of this treeCtrl. Update its children with its value and then\n * ask its parent to refresh its state.\n * @param {string} state 'on' or 'off'.\n * @param {boolean=} opt_broadcast Broadcast.\n * @export\n */\nexports.prototype.setState = function(state, opt_broadcast) {\n  if (state === this.state_) {\n    return;\n  }\n  this.setStateInternal_(state);\n\n  // Ask to its parent to update it's state.\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n\n  const firstParents = this.isRoot ? this.children : [exports.getFirstParentTree(this)];\n\n  if (opt_broadcast === undefined || opt_broadcast) {\n    firstParents.forEach((firstParent) => {\n      this.rootScope_.$broadcast('ngeo-layertree-state', this, firstParent);\n    });\n  }\n};\n\n\n/**\n * @param {string} state 'on' or 'off'.\n */\nexports.prototype.setStateInternal_ = function(state) {\n  // Set the state\n  this.state_ = state === 'on' ? 'on' : 'off';\n  // Asks to each child to set its state;\n  this.children.forEach((child) => {\n    child.setStateInternal_(this.state_);\n  });\n};\n\n\n/**\n * Refresh the state of this treeCtrl based on it's children value. The call its\n * parent to do the same.\n * @public\n */\nexports.prototype.refreshState = function() {\n  const newState = this.getCalculateState();\n  if (this.state_ === newState) {\n    return;\n  }\n  this.state_ = newState;\n  if (this.parent) {\n    this.parent.refreshState();\n  }\n};\n\n\n/**\n * Return the current state, calculate on all its children recursively.\n * @return {string} 'on', 'off' or 'indeterminate'.\n * @export\n */\nexports.prototype.getCalculateState = function() {\n  if (this.node.children === undefined) {\n    return this.state_;\n  }\n  let childState;\n  let previousChildState;\n  this.children.some((child) => {\n    childState = child.getCalculateState();\n    if (previousChildState) {\n      if (previousChildState !== childState) {\n        return childState = 'indeterminate';\n      }\n    }\n    previousChildState = childState;\n  });\n  return childState;\n};\n\n\n/**\n * @param {boolean|undefined} val Value.\n * @return {boolean|undefined} Value.\n * @export\n */\nexports.prototype.getSetActive = function(val) {\n  const layer = this.layer;\n  const map = this.map;\n  if (!layer) {\n    return;\n  }\n  if (val !== undefined) {\n    if (!val) {\n      map.removeLayer(layer);\n    } else {\n      map.addLayer(layer);\n    }\n  } else {\n    return map.getLayers().getArray().indexOf(layer) >= 0;\n  }\n};\n\n\n/**\n * @return {?ngeo.datasource.DataSource} dataSource The data source bound to\n *     this layer tree controller.\n * @export\n */\nexports.prototype.getDataSource = function() {\n  return this.dataSource_;\n};\n\n\n/**\n * @param {?ngeo.datasource.DataSource} dataSource Data source or null.\n * @export\n */\nexports.prototype.setDataSource = function(dataSource) {\n  this.dataSource_ = dataSource;\n};\n\n\n/**\n * Get the \"top level\" layertree (one of the first level child under the root\n * layertree). Can return itself.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} the top level layertree.\n * @public\n */\nexports.getFirstParentTree = function(treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisitorDecision = {\n  STOP: 'STOP',\n  SKIP: 'SKIP',\n  DESCEND: 'DESCEND'\n};\n\n\n/**\n * @typedef {\n *   function(ngeo.layertree.Controller): (!ngeo.layertree.Controller.VisitorDecision|undefined)\n * }\n */\nexports.Visitor;\n\n\n/**\n * Recursive method to traverse the layertree controller graph.\n * @param {ngeo.layertree.Controller.Visitor} visitor A visitor called for each node.\n * @return {boolean} whether to stop traversing.\n * @export\n */\nexports.prototype.traverseDepthFirst = function(visitor) {\n  // First visit the current controller\n  const decision = visitor(this) || exports.VisitorDecision.DESCEND;\n\n  switch (decision) {\n    case exports.VisitorDecision.STOP:\n      return true; // stop traversing\n    case exports.VisitorDecision.SKIP:\n      return false; // continue traversing but skip current branch\n    case exports.VisitorDecision.DESCEND:\n      for (let i = 0; i < this.children.length; ++i) {\n        const child = this.children[i];\n        const stop = child.traverseDepthFirst(visitor);\n        if (stop) {\n          return true; // stop traversing\n        }\n      }\n      return false; // continue traversing\n    default:\n      googAsserts.fail('Unhandled case');\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoLayertreeController', []);\nexports.module.controller('ngeoLayertreeController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Measure\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olDom from 'ol/dom.js';\nimport * as olProj from 'ol/proj.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olSphere from 'ol/sphere.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * Interaction that allows measuring (length, area, ...).\n *\n * @constructor\n * @struct\n * @abstract\n * @extends {ol.interaction.Interaction}\n * @param {ngeo.interaction.MeasureBaseOptions=} options Options\n */\nconst exports = function(options = /** @type {ngeo.interaction.MeasureBaseOptions} */ ({})) {\n\n  olInteractionInteraction.call(this, {\n    handleEvent: exports.handleEvent_\n  });\n\n  /**\n   * The help tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.helpTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the help messages.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.helpTooltipOverlay_ = null;\n\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltipOverlay_ = null;\n\n\n  /**\n   * The measurement overlay coordinate.\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.measureTooltipOverlayCoord_ = null;\n\n\n  /**\n   * The sketch feature.\n   * @type {ol.Feature}\n   * @protected\n   */\n  this.sketchFeature = null;\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {?Element}\n   */\n  this.continueMsg = null;\n\n  /**\n   * Defines the number of decimals to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.decimals = options.decimals;\n\n  /**\n   * Defines the number of precision to keep in the measurement. If not defined,\n   * then the default behaviour occurs depending on the measure type.\n   * @type {number|undefined}\n   * @protected\n   */\n  this.precision = options.precision;\n\n  /**\n   * Whether or not to display any tooltip\n   * @type {boolean}\n   * @private\n   */\n  this.displayHelpTooltip_ = options.displayHelpTooltip !== undefined ? options.displayHelpTooltip : true;\n\n  /**\n   * The message to show when user is about to start drawing.\n   * @type {Element}\n   */\n  this.startMsg;\n  if (options.startMsg !== undefined) {\n    this.startMsg = options.startMsg;\n  } else {\n    this.startMsg = document.createElement('span');\n    this.startMsg.textContent =  'Click to start drawing.';\n  }\n\n  /**\n   * The key for geometry change event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.changeEventKey_ = null;\n\n  /**\n   * The key for map postcompose event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.postcomposeEventKey_ = null;\n\n  const style = options.style !== undefined ? options.style : [\n    new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(255, 255, 255, 0.2)'\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: 'white',\n        width: 5\n      })\n    }),\n    new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 3\n      })\n    })\n  ];\n\n  /**\n   * The vector layer used to show final measure features.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: new olSourceVector(),\n    style: style\n  });\n\n  /**\n   * The draw interaction to be used.\n   * @type {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw}\n   * @private\n   */\n  this.drawInteraction_ = this.createDrawInteraction(options.sketchStyle,\n    this.vectorLayer_.getSource());\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n\n  olEvents.listen(this.drawInteraction_, 'change:active', this.handleDrawInteractionActiveChange_, this);\n  olEvents.listen(this.drawInteraction_, 'drawstart', this.onDrawStart_, this);\n  olEvents.listen(this.drawInteraction_, 'drawend', this.onDrawEnd_, this);\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * @const\n * @type {ol.Sphere}\n */\n\n\n/**\n * Calculate the area of the passed polygon and return a formatted string\n * of the area.\n * @param {!ol.geom.Polygon} polygon Polygon.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n * @this {ngeo.interaction.Measure}\n */\nexports.getFormattedArea = function(polygon, projection, precision, format) {\n  const geom = /** @type {ol.geom.Polygon} */ (polygon.clone().transform(projection, 'EPSG:4326'));\n  const area = Math.abs(olSphere.getArea(geom, {'projection': 'EPSG:4326'}));\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the area of the passed circle and return a formatted string\n * of the area.\n * @param {!ol.geom.Circle} circle Circle\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of the area.\n */\nexports.getFormattedCircleArea = function(circle, precision, format) {\n  const area = Math.PI * Math.pow(circle.getRadius(), 2);\n  return format(area, 'm²', 'square', precision);\n};\n\n\n/**\n * Calculate the length of the passed line string and return a formatted\n * string of the length.\n * @param {!ol.geom.LineString} lineString Line string.\n * @param {!ol.proj.Projection} projection Projection of the line string coords.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} format The format function.\n * @return {string} Formatted string of length.\n */\nexports.getFormattedLength = function(lineString, projection, precision, format) {\n  let length = 0;\n  const coordinates = lineString.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const c1 = olProj.transform(coordinates[i], projection, 'EPSG:4326');\n    const c2 = olProj.transform(coordinates[i + 1], projection, 'EPSG:4326');\n    length += olSphere.getDistance(c1, c2);\n  }\n  return format(length, 'm', 'unit', precision);\n};\n\n\n/**\n * Return a formatted string of the point.\n * @param {!ol.geom.Point} point Point.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.numberCoordinates} format A function to format coordinate into text\n * @param {string=} opt_template The template.\n * @return {string} Formatted string of coordinate.\n */\nexports.getFormattedPoint = function(point, decimals, format, opt_template) {\n  return format(point.getCoordinates(), decimals, opt_template);\n};\n\n\n/**\n * Handle map browser event.\n * @param {ol.MapBrowserEvent} evt Map browser event.\n * @return {boolean} `false` if event propagation should be stopped.\n * @this {ngeo.interaction.Measure}\n * @private\n */\nexports.handleEvent_ = function(evt) {\n  if (evt.type != 'pointermove' || evt.dragging) {\n    return true;\n  }\n\n  const helpMsg = this.sketchFeature === null ? this.startMsg : this.continueMsg;\n\n  if (this.displayHelpTooltip_) {\n    olDom.removeChildren(this.helpTooltipElement_);\n    this.helpTooltipElement_.appendChild(helpMsg);\n    this.helpTooltipOverlay_.setPosition(evt.coordinate);\n  }\n\n  return true;\n};\n\n\n/**\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The draw interaction.\n */\nexports.prototype.getDrawInteraction = function() {\n  return this.drawInteraction_;\n};\n\n\n/**\n * Creates the draw interaction.\n *\n * @abstract\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction|undefined}\n *     style The sketchStyle used for the drawing interaction.\n * @param {ol.source.Vector} source Vector source.\n * @return {ol.interaction.Draw|ngeo.interaction.DrawAzimut|ngeo.interaction.MobileDraw} The interaction\n * @protected\n */\nexports.prototype.createDrawInteraction = function(style, source) {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  this.vectorLayer_.setMap(map);\n\n  const prevMap = this.drawInteraction_.getMap();\n  if (prevMap !== null) {\n    prevMap.removeInteraction(this.drawInteraction_);\n  }\n\n  if (map !== null) {\n    map.addInteraction(this.drawInteraction_);\n  }\n};\n\n\n/**\n * Handle draw interaction `drawstart` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawStart_ = function(evt) {\n  this.sketchFeature = evt.feature || evt.detail.feature;\n  this.vectorLayer_.getSource().clear(true);\n  this.createMeasureTooltip_();\n\n  const geometry = this.sketchFeature.getGeometry();\n\n  googAsserts.assert(geometry !== undefined);\n  this.changeEventKey_ = olEvents.listen(geometry, 'change', () => {\n    this.handleMeasure((measure, coord) => {\n      if (coord !== null) {\n        this.measureTooltipElement_.innerHTML = measure;\n        this.measureTooltipOverlayCoord_ = coord;\n      }\n    });\n  });\n\n  this.postcomposeEventKey_ = olEvents.listen(this.getMap(), 'postcompose', () => {\n    this.measureTooltipOverlay_.setPosition(this.measureTooltipOverlayCoord_);\n  });\n};\n\n\n/**\n * Handle draw interaction `drawend` event.\n * @param {ol.interaction.Draw.Event|ngeox.DrawEvent} evt Event.\n * @private\n */\nexports.prototype.onDrawEnd_ = function(evt) {\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-static');\n  this.measureTooltipOverlay_.setOffset([0, -7]);\n  /** @type {ngeox.MeasureEvent} */\n  const event = new ngeoCustomEvent('measureend', {feature: this.sketchFeature});\n  this.dispatchEvent(event);\n  this.sketchFeature = null;\n  this.unlistenerEvent_();\n};\n\n/**\n * Handle unlistener events for 'end of drawing' interaction\n * @private\n */\nexports.prototype.unlistenerEvent_ = function() {\n  if (this.changeEventKey_ !== null && this.postcomposeEventKey_ !== null) {\n    olEvents.unlistenByKey(this.changeEventKey_);\n    olEvents.unlistenByKey(this.postcomposeEventKey_);\n    this.changeEventKey_ = null;\n    this.postcomposeEventKey_ = null;\n  }\n};\n\n/**\n * Creates a new help tooltip\n * @private\n */\nexports.prototype.createHelpTooltip_ = function() {\n  this.removeHelpTooltip_();\n  if (this.displayHelpTooltip_) {\n    this.helpTooltipElement_ = document.createElement('div');\n    this.helpTooltipElement_.classList.add('tooltip');\n    this.helpTooltipOverlay_ = new olOverlay({\n      element: this.helpTooltipElement_,\n      offset: [15, 0],\n      positioning: 'center-left'\n    });\n    this.getMap().addOverlay(this.helpTooltipOverlay_);\n  }\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeHelpTooltip_ = function() {\n  if (this.displayHelpTooltip_) {\n    this.getMap().removeOverlay(this.helpTooltipOverlay_);\n    if (this.helpTooltipElement_ !== null) {\n      this.helpTooltipElement_.parentNode.removeChild(this.helpTooltipElement_);\n    }\n    this.helpTooltipElement_ = null;\n    this.helpTooltipOverlay_ = null;\n  }\n};\n\n\n/**\n * Creates a new measure tooltip\n * @private\n */\nexports.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.classList.add('tooltip');\n  this.measureTooltipElement_.classList.add('ngeo-tooltip-measure');\n  this.measureTooltipOverlay_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center',\n    stopEvent: false\n  });\n  this.getMap().addOverlay(this.measureTooltipOverlay_);\n};\n\n\n/**\n * Destroy the help tooltip\n * @private\n */\nexports.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.measureTooltipOverlay_ = null;\n    this.measureTooltipOverlayCoord_ = null;\n  }\n};\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const active = this.getActive();\n  this.shouldHandleDrawInteractionActiveChange_ = false;\n  this.drawInteraction_.setActive(active);\n  this.shouldHandleDrawInteractionActiveChange_ = true;\n  if (!this.getMap()) {\n    return;\n  }\n  if (active) {\n    if (!this.measureTooltipOverlay_) {\n      this.createMeasureTooltip_();\n      this.createHelpTooltip_();\n    }\n  } else {\n    this.vectorLayer_.getSource().clear(true);\n    this.getMap().removeOverlay(this.measureTooltipOverlay_);\n    this.removeMeasureTooltip_();\n    this.removeHelpTooltip_();\n    this.unlistenerEvent_();\n  }\n};\n\n\n/**\n * Function implemented in inherited classes to compute measurement, determine\n * where to place the tooltip and determine which help message to display.\n *\n * @abstract\n * @param {function(string, ?ol.Coordinate)} callback The function\n *     to be called.\n * @protected\n */\nexports.prototype.handleMeasure = function(callback) {};\n\n\n/**\n * Get a reference to the tooltip element.\n * @return {Element} Tooltip Element.\n */\nexports.prototype.getTooltipElement = function() {\n  return this.measureTooltipElement_;\n};\n\n\n/**\n * Called when the draw interaction `active` property changes. If the\n * change is due to something else than this measure interactino, then\n * update follow the its active state accordingly.\n *\n * @private\n */\nexports.prototype.handleDrawInteractionActiveChange_ = function() {\n  if (this.shouldHandleDrawInteractionActiveChange_) {\n    this.setActive(this.drawInteraction_.getActive());\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filters\n */\nimport * as olMath from 'ol/math.js';\nimport * as olString from 'ol/string.js';\nconst exports = angular.module('ngeoAngularFilters', []);\n\n/**\n * Format a number as a localized scale.\n * For instance:\n *  - For 'fr-CH' the value 25000 will become '1 : 25 000'.\n *  - For 'en-US' the value 25000 will become '1 : 25,000'.\n *\n * Example:\n *\n *      <p>{{25000 | ngeoScalify}}</p>\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {function(number): string} A function to format number into a 'scale'\n *     string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoScalify\n */\nexports.Scalify = function($filter) {\n  const numberFilter = $filter('number');\n  const filterFn = function(scale) {\n    const text = numberFilter(scale, 0);\n    return text ? `1\\u00a0:\\u00a0${text}` : '';\n  };\n  filterFn['$stateful'] = true;\n  return filterFn;\n};\n\nexports.filter('ngeoScalify', exports.Scalify);\n\n/**\n * A filter used to format a number with a precision, using the locale.\n *\n * Arguments:\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{0.1234 | ngeoNumber}} => 0.123\n *      {{1.234 | ngeoNumber}} => 1.23\n *      {{12.34 | ngeoNumber}} => 12.3\n *      {{123.4 | ngeoNumber}} => 123\n *      {{1234 | ngeoNumber}} => 1230\n *\n * @param {angular.$locale} $locale Angular locale\n * @return {ngeox.number} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumber\n */\nexports.Number = function($locale) {\n  const formats = $locale.NUMBER_FORMATS;\n\n  /**\n   * @param {number} number The number to format.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_precision) {\n    const groupSep = formats.GROUP_SEP;\n    const decimalSep = formats.DECIMAL_SEP;\n    if (opt_precision === undefined) {\n      opt_precision = 3;\n    }\n\n    if (number === Infinity) {\n      return '\\u221e';\n    } else if (number === -Infinity) {\n      return '-\\u221e';\n    } else if (number === 0) {\n      // 0 will creates infinity values\n      return '0';\n    }\n    const sign = number < 0;\n    number = Math.abs(number);\n\n    const nb_decimal = opt_precision - Math.floor(Math.log(number) / Math.log(10)) - 1;\n    const factor = Math.pow(10, nb_decimal);\n    number = Math.round(number * factor);\n    let decimal = '';\n    const unit = Math.floor(number / factor);\n\n    if (nb_decimal > 0) {\n      let str_number = `${number}`;\n      // 0 padding\n      while (str_number.length < nb_decimal) {\n        str_number = `0${str_number}`;\n      }\n      decimal = str_number.substring(str_number.length - nb_decimal);\n      while (decimal[decimal.length - 1] === '0') {\n        decimal = decimal.substring(0, decimal.length - 1);\n      }\n    }\n\n    const groups = [];\n    let str_unit = `${unit}`;\n    while (str_unit.length > 3) {\n      const index = str_unit.length - 3;\n      groups.unshift(str_unit.substring(index));\n      str_unit = str_unit.substring(0, index);\n    }\n    groups.unshift(str_unit);\n\n    return (sign ? '-' : '') + groups.join(groupSep) + (\n      decimal.length === 0 ? '' : decimalSep + decimal\n    );\n  };\n  return result;\n};\n\nexports.filter('ngeoNumber', exports.Number);\n\n/**\n * A filter used to format a number with the prefix and unit\n *\n * Arguments:\n * - opt_unit: The unit to used, default is ''.\n * - opt_type: (unit|square|binary) the type of units, default is 'unit'.\n * - opt_precision: The used precision, default is 3.\n *\n * Examples:\n *\n *      {{25000 | ngeoUnitPrefix}} => 25 k\n *      {{25000 | ngeoUnitPrefix:'m'}} => 25 km\n *      {{25000000 | ngeoUnitPrefix:'m²':'square'}} => 25 km²\n *      {{2048 | ngeoUnitPrefix:'o':'binary'}} => 2 Kio\n *\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.unitPrefix} Function used to format number into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoUnitPrefix\n */\nexports.UnitPrefix = function($filter) {\n  const numberFilter = $filter('ngeoNumber');\n  const standardPrefix = ['', 'k', 'M', 'G', 'T', 'P'];\n  const binaryPrefix = ['', 'Ki', 'Mi', 'Gi', 'Ti', 'Pi'];\n  /**\n   * @param {number} number The number to format.\n   * @param {string=} opt_unit The unit to used, default is ''.\n   * @param {string=} opt_type (unit|square|binary) the type of units, default is 'unit'.\n   * @param {number=} opt_precision The used precision, default is 3.\n   * @return {string} The formatted string.\n   */\n  const result = function(number, opt_unit, opt_type, opt_precision) {\n    if (opt_unit === undefined) {\n      opt_unit = '';\n    }\n    let divisor = 1000;\n    let prefix = standardPrefix;\n    if (opt_type === 'square') {\n      divisor = 1000000;\n    } else if (opt_type === 'binary') {\n      divisor = 1024;\n      prefix = binaryPrefix;\n    }\n\n    let index = 0;\n    const index_max = prefix.length - 1;\n    while (number >= divisor && index < index_max) {\n      number = number / divisor;\n      index++;\n    }\n\n    const postfix = prefix[index] + opt_unit;\n    const space = postfix.length == 0 ? '' : '\\u00a0';\n    return numberFilter(number, opt_precision) + space + postfix;\n  };\n  return result;\n};\n\nexports.filter('ngeoUnitPrefix', exports.UnitPrefix);\n\n/**\n * Format a couple of numbers as number coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates}}</p>\n *      <!-- will Become 7 47 -->\n *\n * Example with defined fractionDigits and template (en-US localization):\n *\n *      <!-- With en-US localization -->\n *      <p>{{[7.1234, 46.9876] | ngeoNumberCoordinates:2:'co {x} E; {y} N'}}</p>\n *      <!-- will Become co 7.12 E; 46.99 N -->\n *      <br/>\n *      <!-- With en-US localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2,600,000, 1,600,000 -->\n *      <br/>\n *      <!-- With fr-CH localization -->\n *      <p>{{[2600000, 1600000] | ngeoNumberCoordinates:0:'{x}, {y}'}}</p>\n *      <!-- will Become 2'600'000, 1'600'000 -->\n *\n * @param {angular.$filter} $filter Angular filter\n * @return {ngeox.numberCoordinates} A function to format numbers into coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoNumberCoordinates\n */\nexports.NumberCoordinates = function($filter) {\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to '{x} {y}'.\n   *     Where \"{x}\" will be replaced by the easting coordinate and \"{y}\" by the\n   *     northing one. Note: Use a html entity to use the semicolon symbol\n   *     into a template.\n   * @return {string} Number formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const template = opt_template ? opt_template : '{x} {y}';\n    let x = coordinates[0];\n    let y = coordinates[1];\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n    x = $filter('number')(x, fractionDigits);\n    y = $filter('number')(y, fractionDigits);\n    return template.replace('{x}', x).replace('{y}', y);\n  };\n  return filterFn;\n};\n\nexports.filter('ngeoNumberCoordinates', exports.NumberCoordinates);\n\n\n/**\n * Format coordinates as DMS coordinates.\n *\n * Example without parameters:\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates}}</p>\n *      <!-- will Become  7° 07' 24'' E 46° 59' 15'' N-->\n *\n * Example with defined fractionDigits and a template.\n *\n *      <p>{{[7.1234, 46.9876] | ngeoDMSCoordinates:2:'[{y}; {x]'}}</p>\n *      <!-- will Become [46° 59' 15.36'' N; 7° 07' 24.24'' E] -->\n *\n * @return {ngeox.dmsCoordinates} A function to format numbers into a DMS coordinates string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDMSCoordinates\n */\nexports.DMSCoordinates = function() {\n  const degreesToStringHDMS = function(degrees, hemispheres, fractionDigits) {\n    const normalizedDegrees = olMath.modulo(degrees + 180, 360) - 180;\n    const dms = Math.abs(3600 * normalizedDegrees);\n    const d = Math.floor(dms / 3600);\n    const m = Math.floor((dms / 60) % 60);\n    const s = (dms % 60);\n    return `${d}\\u00b0 ${\n      olString.padNumber(m, 2)}\\u2032 ${\n      olString.padNumber(s, 2, fractionDigits)}\\u2033 ${\n      hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)}`;\n  };\n\n  /**\n   * @param {ol.Coordinate} coordinates Array of two numbers.\n   * @param {(number|string)=} opt_fractionDigits Optional number of digit.\n   *     Default to 0.\n   * @param {string=} opt_template Optional template. Default to\n   *     '{x} {y}'. Where \"{x}\" will be replaced by the easting\n   *     coordinate, {y} by the northing one. Note: Use a html entity to use the\n   *     semicolon symbol into a template.\n   * @return {string} DMS formatted coordinates.\n   */\n  const filterFn = function(coordinates, opt_fractionDigits, opt_template) {\n    const fractionDigits = parseInt(opt_fractionDigits, 10) | 0;\n\n    const template = opt_template ? opt_template : '{x} {y}';\n\n    const xdms = degreesToStringHDMS(coordinates[0], 'EW', fractionDigits);\n    const ydms = degreesToStringHDMS(coordinates[1], 'NS', fractionDigits);\n\n    return template.replace('{x}', xdms).replace('{y}', ydms);\n  };\n\n  return filterFn;\n};\n\nexports.filter('ngeoDMSCoordinates', exports.DMSCoordinates);\n\n\n/**\n * A filter to mark a value as trusted HTML.\n *\n * Usage:\n *\n *    <p ng-bind-html=\"ctrl.someValue | ngeoTrustHtml\"></p>\n *\n * If you use it, you don't require the \"ngSanitize\".\n * @return {function(?):string} The filter function.\n * @ngInject\n * @ngdoc filter\n * @param {angular.$sce} $sce Angular sce service.\n * @ngname ngeoTrustHtml\n */\nexports.trustHtmlFilter = function($sce) {\n  return function(input) {\n    if (input !== undefined && input !== null) {\n      return $sce.trustAsHtml(`${input}`);\n    } else {\n      return $sce.trustAsHtml('&nbsp;');\n    }\n  };\n};\n\nexports.filter('ngeoTrustHtml', exports.trustHtmlFilter);\n\n\n/**\n * A filter used to format a time duration in seconds into a more\n * readable form.\n * Only the two largest units will be shown.\n *\n * Examples:\n *      {{42 | ngeoDuration}} => 42 seconds\n *      {{132 | ngeoDuration}} => 2 minutes 12 seconds\n *      {{3910 | ngeoDuration}} => 1 hour 5 minutes\n *        -> Note: the remaining 10 seconds will be dropped\n *\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @return {ngeox.duration} Function used to format a time duration in seconds into a string.\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nexports.Duration = function(gettextCatalog) {\n  // time unit enum\n  const TimeUnits = Object.freeze({\n    SECONDS: Symbol('seconds'),\n    MINUTES: Symbol('minutes'),\n    HOURS: Symbol('hours'),\n    DAYS: Symbol('days')\n  });\n\n  /**\n   * @param {number} amount Amount of time.\n   * @param {symbol} unit Unit of time.\n   * @return {string} formatted and translated string\n   */\n  const pluralize = function(amount, unit) {\n    let formattedUnit = '';\n    switch (unit) {\n      case TimeUnits.SECONDS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'second', 'seconds');\n        break;\n      case TimeUnits.MINUTES:\n        formattedUnit = gettextCatalog.getPlural(amount, 'minute', 'minutes');\n        break;\n      case TimeUnits.HOURS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'hour', 'hours');\n        break;\n      case TimeUnits.DAYS:\n        formattedUnit = gettextCatalog.getPlural(amount, 'day', 'days');\n        break;\n      default:\n        break;\n    }\n    return `${amount} ${formattedUnit}`;\n  };\n\n  /**\n   * @param {number} duration The duration in seconds.\n   * @return {string} The formatted string.\n   */\n  const result = function(duration) {\n    // round to next integer\n    duration = Math.round(duration);\n\n    // just seconds\n    let output;\n    if (duration < 60) {\n      return pluralize(duration, TimeUnits.SECONDS);\n    }\n\n    // minutes (+ seconds)\n    let remainder = duration % 60; // seconds\n    duration = Math.floor(duration / 60); // minutes\n    if (duration < 60) { // less than an hour\n      output = pluralize(duration, TimeUnits.MINUTES);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.SECONDS)}`;\n      }\n      return output;\n    }\n\n    // hours (+ minutes)\n    remainder = duration % 60; // minutes\n    duration = Math.floor(duration / 60); // hours\n    if (duration < 24) { // less than a day\n      output = pluralize(duration, TimeUnits.HOURS);\n      if (remainder > 0) {\n        output += ` ${pluralize(remainder, TimeUnits.MINUTES)}`;\n      }\n      return output;\n    }\n\n    // days (+ hours)\n    remainder = duration % 24; // hours\n    duration = Math.floor(duration / 24); // days\n    output = pluralize(duration, TimeUnits.DAYS);\n    if (remainder > 0) {\n      output += ` ${pluralize(remainder, TimeUnits.HOURS)}`;\n    }\n    return output;\n  };\n\n  return result;\n};\n\nexports.filter('ngeoDuration', exports.Duration);\n\n\n/**\n * A filter used to remove the CDATA prefix and postfix.\n *\n * @return {function(string): string} Retult string\n * @ngInject\n * @ngdoc filter\n * @ngname ngeoDuration\n */\nconst removeCDATA = function() {\n  return function(input) {\n    if (input) {\n      return input.replace(/<!\\[CDATA\\[(.*)\\]\\]>/, '$1');\n    }\n  };\n};\n\nexports.filter('removeCDATA', removeCDATA);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.MapQuerent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport * as olObj from 'ol/obj.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Map Querent is the service bound to a map that issues\n   * queries using the Querent service. The result is stored inside this\n   * service.\n   *\n   * @struct\n   * @param {angular.$injector} $injector Main injector.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     sources helper service.\n   * @param {ngeo.query.Querent} ngeoQuerent The ngeo querent service.\n   * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($injector, ngeoDataSources, ngeoDataSourcesHelper, ngeoQuerent,\n    ngeoQueryResult) {\n\n    const options = /** @type {ngeox.QueryOptions} */ (\n      $injector.has('ngeoQueryOptions') ?\n        $injector.get('ngeoQueryOptions') : {});\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.result_ = ngeoQueryResult;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.limit_ = options.limit !== undefined ? options.limit : 50;\n\n    /**\n     * When set, before making WFS GetFeature requests to fetch features,\n     * WFS GetFeature requests with `resultType = 'hits'` are made first. If\n     * the number of records for the request would exceed the limit, then\n     * no features are returned.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.queryCountFirst_ = options.queryCountFirst !== undefined ?\n      options.queryCountFirst : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerancePx_ = options.tolerance !== undefined ?\n      options.tolerance : 3;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.bboxAsGETParam_ = options.bboxAsGETParam || false;\n\n    /**\n     * A hash of data source names classified by ids.\n     * @type {Object.<number, string>}\n     * @private\n     */\n    this.dataSourceNames_ = {};\n  }\n\n  /**\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @export\n   */\n  issue(options) {\n    // (1) Clear previous result\n    this.clear();\n\n    // (2) Get queryable data sources, unless they are already set\n    let queryableDataSources;\n    if (options.dataSources === undefined &&\n        options.queryableDataSources === undefined\n    ) {\n      queryableDataSources = this.ngeoQuerent_.getQueryableDataSources(\n        this.dataSources_.getArray(),\n        options.map\n      );\n    }\n\n    // (3) Update query options, update the pending property and issue the\n    //     request.\n    const limit = options.limit !== undefined ? options.limit : this.limit_;\n    olObj.assign(options, {\n      queryableDataSources: queryableDataSources,\n      limit: limit,\n      tolerancePx: this.tolerancePx_,\n      wfsCount: this.queryCountFirst_,\n      bboxAsGETParam: this.bboxAsGETParam_\n    });\n    this.result_.pending = true;\n    this.ngeoQuerent_.issue(options).then(this.handleResult_.bind(this));\n  }\n\n  /**\n   * Clear result, i.e. clear all 'result source' from their features and other\n   * information.\n   * @export\n   */\n  clear() {\n    this.result_.total = 0;\n    for (const source of this.result_.sources) {\n      source.features.length = 0;\n      source.pending = false;\n      source.queried = false;\n      source.tooManyResults = false;\n      source.totalFeatureCount = undefined;\n    }\n    this.result_.sources.length = 0; // Clear previous result sources\n    this.result_.pending = false;\n  }\n\n  /**\n   * Called after a request to the querent service. Update the result.\n   *\n   * @param {ngeox.QuerentResult} response Response\n   * @private\n   */\n  handleResult_(response) {\n    let total = 0;\n\n    // (1) Update result sources, i.e. add them\n    for (const idStr in response) {\n      const id = Number(idStr);\n      const dataSource = this.ngeoDataSourcesHelper_.getDataSource(id);\n      let label = dataSource.name;\n      googAsserts.assert(dataSource);\n\n      const querentResultItem = response[id];\n      const features = querentResultItem.features;\n      const limit = querentResultItem.limit;\n      const tooManyResults = querentResultItem.tooManyFeatures === true;\n      const totalFeatureCount = querentResultItem.totalFeatureCount;\n\n      const typeSeparatedFeatures = {};\n      features.forEach((feature) => {\n        const type = googAsserts.assertString(feature.get('ngeo_feature_type_'));\n        if (!typeSeparatedFeatures[type]) {\n          typeSeparatedFeatures[type] = [];\n        }\n        // Use properties aliases if any\n        if (dataSource.attributes && dataSource.attributes.length) {\n          const properties = feature.getProperties();\n          const filteredProperties = {};\n          dataSource.attributes.forEach((attribute) => {\n            if (attribute.alias) {\n              filteredProperties[attribute.alias] = properties[attribute.name];\n              feature.unset(attribute.name, /* silent */ true);\n            } else {\n              // No alias is available => use the attribute as is.\n              filteredProperties[attribute.name] = properties[attribute.name];\n            }\n          });\n          feature.setProperties(filteredProperties, /* silent */ true);\n        }\n        typeSeparatedFeatures[type].push(feature);\n      });\n\n      for (const type in typeSeparatedFeatures) {\n        label = type ? type : label;\n        const featuresByType = typeSeparatedFeatures[type];\n        this.result_.sources.push({\n          features: featuresByType,\n          id: id,\n          label: label,\n          limit: limit,\n          pending: false,\n          queried: true,\n          tooManyResults: tooManyResults,\n          totalFeatureCount: totalFeatureCount\n        });\n        total += features.length;\n      }\n    }\n\n    // (2) Update total & pending\n    this.result_.total = total;\n    this.result_.pending = false;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoMapQuerent', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoDatasourceHelper.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoMapQuerent', exports);\n\n\n/**\n * The `ngeoQueryResult` is the value service where the features of the query\n * result are added.\n */\nexports.module.value('ngeoQueryResult', /** @type {ngeox.QueryResult} */ ({\n  sources: [],\n  total: 0,\n  pending: false\n}));\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.TreeManager\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *     let module = angular.module('app');\n *     module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @struct\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.$injector} $injector Angular injector service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($timeout, $injector, gettextCatalog, ngeoLayerHelper,\n  ngeoNotification, gmfThemes, ngeoStateManager) {\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {angular.$injector}\n   * @private\n   */\n  this.$injector_ = $injector;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.message.Notification}\n   * @private\n   */\n  this.ngeoNotification_ = ngeoNotification;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * The root node and its children used to generate the layertree (with the\n   * same ordre).\n   * @type {gmfThemes.GmfRootNode}\n   * @public\n   */\n  this.root = /** @type {gmfThemes.GmfRootNode} */ ({\n    children: []\n  });\n\n  /**\n   * The controller of the (unique) root layer tree.\n   * The array of top level layer trees is available through `rootCtrl.children`.\n   * The order doesn't match with the ordre of the displayed layertree.\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.rootCtrl = null;\n\n  /**\n   * Number of groups to add to the layertree during one single Angular\n   * digest loop.\n   * @type {number}\n   * @public\n   */\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  /**\n   * @type {Array.<gmfThemes.GmfGroup>}\n   * @private\n   */\n  this.groupsToAddInThisDigestLoop_ = [];\n\n  /**\n   * @type {angular.$q.Promise}\n   * @private\n   */\n  this.promiseForGroupsToAddInThisDigestLoop_ = null;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n  olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n};\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * The themes could have been changed so it also call a refresh of the\n * layertree.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n\n  if (this.rootCtrl && this.rootCtrl.children) {\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      this.refreshFirstLevelGroups_(themes);\n    });\n  }\n};\n\n/**\n * Set some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme group.\n * @return {boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.setFirstLevelGroups = function(firstLevelGroups) {\n  this.root.children.length = 0;\n  this.ngeoStateManager_.deleteParam(gmfBase.PermalinkParam.TREE_GROUPS);\n  return this.addFirstLevelGroups(firstLevelGroups);\n};\n\n/**\n * Add some groups as tree's children. If the service use mode 'flush', the\n * previous tree's children will be removed. Add only groups that are not\n * already in the tree.\n * @param {Array.<gmfThemes.GmfGroup>} firstLevelGroups An array of gmf theme\n *     group.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called.\n * @return{boolean} True if the group has been added. False otherwise.\n * @export\n */\nexports.prototype.addFirstLevelGroups = function(firstLevelGroups,\n  opt_add, opt_silent) {\n  const groupNotAdded = [];\n\n  firstLevelGroups.slice().reverse().forEach((group) => {\n    if (!this.addFirstLevelGroup_(group)) {\n      groupNotAdded.push(group);\n    }\n  });\n  if (groupNotAdded.length > 0 && !opt_silent) {\n    this.notifyCantAddGroups_(groupNotAdded);\n  }\n\n  return groupNotAdded.length === 0;\n};\n\n\n/**\n * Update the application state with the list of first level groups in the tree\n * @param {Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n * @private\n */\nexports.prototype.updateTreeGroupsState_ = function(groups) {\n  const treeGroupsParam = {};\n  treeGroupsParam[gmfBase.PermalinkParam.TREE_GROUPS] = groups.map(node => node.name).join(',');\n  this.ngeoStateManager_.updateState(treeGroupsParam);\n  if (this.$injector_.has('gmfPermalink')) {\n    /** @type {gmf.permalink.Permalink} */(this.$injector_.get('gmfPermalink')).cleanParams(groups);\n  }\n};\n\n\n/**\n * Add a group as tree's children without consideration of this service 'mode'.\n * Add it only if it's not already in the tree.\n * @param {gmfThemes.GmfGroup} group The group to add.\n * @return {boolean} true if the group has been added.\n * @private\n */\nexports.prototype.addFirstLevelGroup_ = function(group) {\n  let alreadyAdded = false;\n  const groupID = group.id;\n  this.root.children.some((rootChild) => {\n    if (groupID === rootChild.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  this.groupsToAddInThisDigestLoop_.some((grp) => {\n    if (groupID === grp.id) {\n      return alreadyAdded = true;\n    }\n  }, this);\n  if (alreadyAdded) {\n    return false;\n  }\n\n  // Add groups in the list of groups to add and be sure that the counter of\n  // groups to add is reset.\n  this.groupsToAddInThisDigestLoop_.push(group);\n  this.numberOfGroupsToAddInThisDigestLoop = 0;\n\n  // Delete previous timeout promise if it exists to do this action only once.\n  if (this.promiseForGroupsToAddInThisDigestLoop_ !== null) {\n    this.$timeout_.cancel(this.promiseForGroupsToAddInThisDigestLoop_);\n  }\n\n  // Add the groups only when there is no more group to come during this digest\n  // loop. The purpose of this is to preserve a consistent order between the\n  // layertree (generated by a template) and the layers in the map.\n  this.promiseForGroupsToAddInThisDigestLoop_ = this.$timeout_(() => {\n    // Set the number of group to add.\n    this.numberOfGroupsToAddInThisDigestLoop = this.groupsToAddInThisDigestLoop_.length;\n    // Add each first-level-groups.\n    this.groupsToAddInThisDigestLoop_.forEach((grp) => {\n      this.root.children.unshift(grp);\n    });\n    //Update the permalink\n    this.updateTreeGroupsState_(this.root.children);\n    // Reset the groups and the promise state. Don't reset the\n    // numberOfGroupsToAddInThisDigestLoop, it must persist because the layers\n    // will be added into the map after that the layertree template is\n    // generated (so in the next angular loop).\n    this.groupsToAddInThisDigestLoop_.length = 0;\n    this.promiseForGroupsToAddInThisDigestLoop_ = null;\n  });\n\n  return true;\n};\n\n\n/**\n * Retrieve a group (first found) by its name and add in the tree. Do nothing\n * if any corresponding group is found.\n * @param {string} groupName Name of the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @export\n */\nexports.prototype.addGroupByName = function(groupName, opt_add) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByName(themes, groupName);\n    if (group) {\n      this.addFirstLevelGroups([group], opt_add, false);\n    }\n  });\n};\n\n\n/**\n * Retrieve a group by the name of a layer that is contained in this group\n * (first found). This group will be added in the tree. Do nothing if any\n * corresponding group is found.\n * @param {string} layerName Name of the layer inside the group to add.\n * @param {boolean=} opt_add if true, force to use the 'add' mode this time.\n * @param {boolean=} opt_silent if true notifyCantAddGroups_ is not called\n * @export\n */\nexports.prototype.addGroupByLayerName = function(layerName, opt_add, opt_silent) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const group = gmfThemeThemes.findGroupByLayerNodeName(themes, layerName);\n    if (group) {\n      const groupAdded = this.addFirstLevelGroups([group], opt_add, opt_silent);\n      this.$timeout_(() => {\n        const treeCtrl = this.getTreeCtrlByNodeId(group.id);\n        if (!treeCtrl) {\n          console.warn('Tree controller not found, unable to add the group');\n          return;\n        }\n        let treeCtrlToActive;\n        treeCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.name === layerName) {\n            treeCtrlToActive = treeCtrl;\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n\n        // Deactive all layers in the group if it's not in the tree.\n        if (groupAdded)  {\n          treeCtrl.setState('off');\n        }\n\n        // Active it.\n        if (treeCtrlToActive) {\n          treeCtrlToActive.setState('on');\n        }\n      });\n    }\n  });\n};\n\n\n/**\n * Remove a group from this tree's children. The first group that is found (\n * based on its name) will be removed. If any is found, nothing will append.\n * @param {gmfThemes.GmfGroup} group The group to remove.\n * @export\n */\nexports.prototype.removeGroup = function(group) {\n  const children = this.root.children;\n  let index = 0, found = false;\n  children.some((child) => {\n    if (child.name === group.name) {\n      return found = true;\n    }\n    index++;\n  });\n  if (found) {\n    children.splice(index, 1);\n    this.updateTreeGroupsState_(children);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  while (this.root.children.length) {\n    this.removeGroup(this.root.children[0]);\n  }\n};\n\n\n/**\n * Clone a group node and recursively set all child node `isChecked` using\n * the given list of layer names.\n * @param {gmfThemes.GmfGroup} group The original group node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @return {gmfThemes.GmfGroup} Cloned node.\n * @private\n */\nexports.prototype.cloneGroupNode_ = function(group, names) {\n  const clone = /** @type {gmfThemes.GmfGroup} */ (olObj.assign({}, group));\n  this.toggleNodeCheck_(clone, names);\n  return clone;\n};\n\n\n/**\n * Set the child nodes metadata `isChecked` if its name is among the list of\n * given names. If a child node also has children, check those instead.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node The original node.\n * @param {Array.<string>} names Array of node names to check (i.e. that\n *     should have their checkbox checked)\n * @private\n */\nexports.prototype.toggleNodeCheck_ = function(node, names) {\n  if (!node.children) {\n    return;\n  }\n  node.children.forEach((childNode) => {\n    if (childNode.children) {\n      this.toggleNodeCheck_(childNode, names);\n    } else if (childNode.metadata) {\n      childNode.metadata.isChecked = olArray.includes(names, childNode.name);\n    }\n  });\n};\n\n\n/**\n * Display a notification that informs that the given groups are already in the\n * tree.\n * @param {Array.<gmfThemes.GmfGroup>} groups An array of groups that already in\n *   the tree.\n * @private\n */\nexports.prototype.notifyCantAddGroups_ = function(groups) {\n  const names = [];\n  const gettextCatalog = this.gettextCatalog_;\n  groups.forEach((group) => {\n    names.push(gettextCatalog.getString(group.name));\n  });\n  const msg = (names.length < 2) ?\n    gettextCatalog.getString('group is already loaded.') :\n    gettextCatalog.getString('groups are already loaded.');\n  this.ngeoNotification_.notify({\n    msg: `${names.join(', ')} ${msg}`,\n    type: ngeoMessageMessage.Type.INFORMATION\n  });\n};\n\n\n/**\n * Get a treeCtrl based on it's node id.\n * @param {number} id the id of a GMFThemesGroup or a GMFThemesLeaf.\n * @return {ngeo.layertree.Controller?} treeCtrl The associated controller or null.\n * @public\n */\nexports.prototype.getTreeCtrlByNodeId = function(id) {\n  let correspondingTreeCtrl = null;\n  if (this.rootCtrl && this.rootCtrl.traverseDepthFirst) {\n    this.rootCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.id === id) {\n        correspondingTreeCtrl = treeCtrl;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  return correspondingTreeCtrl;\n};\n\n\n/**\n * Get the OGC server.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {gmfThemes.GmfOgcServer} The OGC server.\n */\nexports.prototype.getOgcServer = function(treeCtrl) {\n  if (treeCtrl.parent.node.mixed) {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n    googAsserts.assert(gmfLayerWMS.ogcServer);\n    return this.ogcServers_[gmfLayerWMS.ogcServer];\n  } else {\n    let firstLevelGroupCtrl = treeCtrl;\n    while (!firstLevelGroupCtrl.parent.isRoot) {\n      firstLevelGroupCtrl = firstLevelGroupCtrl.parent;\n    }\n    const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (firstLevelGroupCtrl.node);\n    googAsserts.assert(gmfGroup.ogcServer);\n    return this.ogcServers_[gmfGroup.ogcServer];\n  }\n};\n\n\n/**\n * Keep the state of each existing first-level-groups in the layertree then\n * remove it and recreate it with nodes that come from the new theme and\n * the corresponding saved state (when possible, otherwise, juste take the\n * corresponding new node).\n * FIXME: Currently doesn't save nor restore the opacity.\n * @param {Array.<gmfThemes.GmfTheme>} themes the array of themes to be based on.\n * @private\n */\nexports.prototype.refreshFirstLevelGroups_ = function(themes) {\n  const firstLevelGroupsFullState = {};\n\n  // Save state of each child\n  this.rootCtrl.children.map((treeCtrl) => {\n    const name = treeCtrl.node.name;\n    firstLevelGroupsFullState[name] = this.getFirstLevelGroupFullState_(treeCtrl);\n  });\n\n  // Get nodes and set their state\n  const nodesToRestore = [];\n  // Iterate on the root to keep the same order in the tree as before.\n  this.root.children.map((node) => {\n    const name = node.name;\n\n    // Find the right firstlevelgroup in the new theme.\n    const nodeToRestore = gmfThemeThemes.findGroupByName(themes, name);\n    if (nodeToRestore) {\n      // Restore state.\n      const fullState = firstLevelGroupsFullState[name];\n      if (fullState) {\n        this.setNodeMetadataFromFullState_(nodeToRestore, fullState);\n      }\n      nodesToRestore.push(nodeToRestore);\n    }\n  });\n\n  // Readd the firstlevelgroups.\n  this.setFirstLevelGroups(nodesToRestore);\n\n  // Wait that Angular has created the layetree, then update the permalink.\n  this.$timeout_(() => {\n    this.updateTreeGroupsState_(this.root.children);\n  });\n};\n\n\n/**\n * Return a gmfx.TreeManagerFullState that keeps the state of the given\n * treeCtrl including the state of its children.\n * @param {ngeo.layertree.Controller} treeCtrl the ngeo layertree controller to\n *     save.\n * @return {gmfx.TreeManagerFullState!} the fullState object.\n * @private\n */\nexports.prototype.getFirstLevelGroupFullState_ = function(treeCtrl) {\n  const children = {};\n  // Get the state of the treeCtrl children recursively.\n  treeCtrl.children.map((child) => {\n    children[child.node.name] = this.getFirstLevelGroupFullState_(child);\n  });\n\n  let isChecked, isExpanded, isLegendExpanded;\n  if (treeCtrl.children.length > 0) {\n    const nodeElement = $(`#gmf-layertree-layer-group-${treeCtrl.uid}`);\n    // Set isExpanded only in groups.\n    if (nodeElement) {\n      isExpanded = nodeElement.hasClass('in');\n    }\n  } else {\n    // Set state and isLegendExpanded only in leaves.\n    isChecked = treeCtrl.getState();\n    if (isChecked === 'on') {\n      isChecked = true;\n    } else if (isChecked === 'off') {\n      isChecked = false;\n    } else {\n      isChecked = undefined;\n    }\n    const legendElement = $(`#gmf-layertree-node-${treeCtrl.uid}-legend`);\n    if (legendElement) {\n      isLegendExpanded = legendElement.is(':visible');\n    }\n  }\n\n  return {\n    children,\n    isChecked,\n    isExpanded,\n    isLegendExpanded\n  };\n};\n\n\n/**\n * Set a node's metadata with the given fullState. Update also its children\n * recursively with the fullState children.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node to update.\n * @param {gmfx.TreeManagerFullState|undefined} fullState the fullState object\n *     to use.\n * @return {gmfThemes.GmfGroup|gmfThemes.GmfLayer} the node with modification.\n * @private\n */\nexports.prototype.setNodeMetadataFromFullState_ = function(node, fullState) {\n  if (!fullState) {\n    return node;\n  }\n\n  // Set the metadata of the node children recursively.\n  if (node.children) {\n    node.children.map((child) => {\n      this.setNodeMetadataFromFullState_(child, fullState.children[child.name]);\n    });\n  }\n\n  // Set the metadata with the fullState object information.\n  const metadata = node.metadata;\n  metadata.isChecked = fullState.isChecked;\n  metadata.isExpanded = fullState.isExpanded;\n  metadata.isLegendExpanded = fullState.isLegendExpanded;\n\n  return node;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfTreeManager', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoStatemanagerService.module.name,\n]);\nexports.module.service('gmfTreeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.WMSTime\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * ngeo - WMS time service\n * @extends {ngeo.misc.Time}\n * @param {angular.$filter} $filter angular filter service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoWMSTime\n */\nconst exports = function($filter, gettextCatalog) {\n\n  /**\n   * @private\n   * @type {angular.$filter}\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  ngeoMiscTime.call(this);\n};\n\nolBase.inherits(exports, ngeoMiscTime);\n\n\n/**\n * Format time regarding a resolution\n * @param  {number} time (in ms format) timestamp to format\n * @param  {(ngeox.TimePropertyResolutionEnum|undefined)} resolution resolution to use\n * @param  {boolean=} opt_useISOFormat True to a ISO-8601 date string that can be used\n *     as a WMS-T Parameter. Otherwise, use a localized date format.\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} Date string regarding the resolution.\n */\nexports.prototype.formatTimeValue = function(time, resolution, opt_useISOFormat, opt_toUTC) {\n  const date = new Date(time);\n  const utc = opt_toUTC ? 'UTC' : undefined;\n\n  // ISO-8601 format to use date as a WMS-T Parameter.\n  let yearResolution = 'yyyy';\n  let monthResolution = 'yyyy-MM';\n  let dayResolution = 'yyyy-MM-dd';\n  let secondResolution = undefined;\n\n  // Localized format.\n  if (!opt_useISOFormat) {\n    const gettextCatalog = this.gettextCatalog_;\n    yearResolution = gettextCatalog.getString('yyyy');\n    monthResolution = gettextCatalog.getString('M/yyyy');\n    dayResolution = gettextCatalog.getString('M/d/yyyy');\n    secondResolution = gettextCatalog.getString('M/d/yyyy HH:MM:ss');\n  }\n\n  switch (resolution) {\n    case 'year':\n      return this.$filter_('date')(date, yearResolution, utc);\n    case 'month':\n      return this.$filter_('date')(date, monthResolution, utc);\n    case 'day':\n      return this.$filter_('date')(date, dayResolution, utc);\n    case 'second':\n      if (secondResolution) {\n        return this.$filter_('date')(date, secondResolution, utc);\n      } else {\n        return date.toISOString().replace(/\\.\\d{3}/, '');\n      }\n    default:\n      //case \"second\":\n      return date.toISOString().replace(/\\.\\d{3}/, '');\n  }\n};\n\n\n/**\n * Format time to be used as a WMS Time query parameter\n * @param  {ngeox.TimeProperty} wmsTimeProperty a wmstime property from a node\n * @param  {{start : number, end : (number|undefined)}} times start & end time selected (in ms format)\n * @param  {boolean=} opt_toUTC to get the UTC date\n * @return {string} ISO-8601 date string ready to be used as a query parameter for a\n * WMS request\n * @export\n */\nexports.prototype.formatWMSTimeParam = function(wmsTimeProperty, times, opt_toUTC) {\n  googAsserts.assert(wmsTimeProperty.resolution !== undefined);\n  if (wmsTimeProperty.mode === 'range') {\n    googAsserts.assert(times.end !== undefined);\n    return (\n      `${this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC)}/${\n        this.formatTimeValue(times.end, wmsTimeProperty.resolution, true, opt_toUTC)}`\n    );\n  } else {\n    return this.formatTimeValue(times.start, wmsTimeProperty.resolution, true, opt_toUTC);\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoWMSTime', [\n  ngeoMiscTime.module.name,\n]);\nexports.module.service('ngeoWMSTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.decorate\n */\nconst exports = {};\nimport googAsserts from 'goog/asserts.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImage from 'ol/source/Image.js';\nimport olSourceTile from 'ol/source/Tile.js';\n\n\n/**\n * Provides a function that adds an \"active\" property (using\n * `Object.defineProperty`) to an interaction, making it possible to use ngModel\n * to activate/deactivate interactions.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"interaction.active\" />\n *\n * @param {ol.interaction.Interaction} interaction Interaction to decorate.\n */\nexports.interaction = function(interaction) {\n  googAsserts.assertInstanceof(interaction, olInteractionInteraction);\n\n  Object.defineProperty(interaction, 'active', {\n    get: () => interaction.getActive(),\n    set: (val) => {\n      interaction.setActive(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds properties (using\n * `Object.defineProperty`) to the layer, making it possible to control layer\n * properties with ngModel.\n *\n * Example:\n *\n *      <input type=\"checkbox\" ngModel=\"layer.visible\" />\n *\n * @param {ol.layer.Base} layer Layer to decorate.\n */\nexports.layer = function(layer) {\n  googAsserts.assertInstanceof(layer, olLayerBase);\n\n  Object.defineProperty(layer, 'visible', {\n    configurable: true,\n    /**\n     * @return {boolean} Visible.\n     */\n    get: () => layer.getVisible(),\n    /**\n     * @param {boolean} val Visible.\n     */\n    set: (val) => {\n      layer.setVisible(val);\n    }\n  });\n\n  Object.defineProperty(layer, 'opacity', {\n    configurable: true,\n    /**\n     * @return {number} Opacity.\n     */\n    get: () => layer.getOpacity(),\n    /**\n     * @param {number} val Opacity.\n     */\n    set: (val) => {\n      layer.setOpacity(val);\n    }\n  });\n};\n\n\n/**\n * Provides a function that adds a 'loading 'property (using\n * `Object.defineProperty`) to an ol.layer.Group or a layer with\n * an ol.source.Tile or an ol.source.Image source.\n * This property is true when the layer is loading and false otherwise.\n *\n * Example:\n *\n *      <span ng-if=\"layer.loading\">please wait</span>\n *\n * @param {ol.layer.Base} layer layer.\n * @param {angular.Scope} $scope Scope.\n */\nexports.layerLoading = function(layer, $scope) {\n\n  let source;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let incrementEvents = null;\n\n  /**\n   * @type {Array<string>|null}\n   */\n  let decrementEvents = null;\n\n  /**\n   * @function\n   * @private\n   */\n  const incrementLoadCount_ = increment_;\n\n  /**\n   * @function\n   * @private\n   */\n  const decrementLoadCount_ = decrement_;\n\n  layer.set('load_count', 0, true);\n\n  if (layer instanceof olLayerGroup) {\n    layer.getLayers().on('add', (olEvent) => {\n      const newLayer = olEvent.element;\n      newLayer.set('parent_group', layer);\n    });\n  }\n\n  if (layer instanceof olLayerLayer) {\n    source = layer.getSource();\n    if (source === null) {\n      return;\n    } else if (source instanceof olSourceTile) {\n      incrementEvents = ['tileloadstart'];\n      decrementEvents = ['tileloadend', 'tileloaderror'];\n    } else if (source instanceof olSourceImage) {\n      incrementEvents = ['imageloadstart'];\n      decrementEvents = ['imageloadend', 'imageloaderror'];\n    } else {\n      googAsserts.fail('unsupported source type');\n    }\n\n    source.on(incrementEvents, () => {\n      incrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n\n    source.on(decrementEvents, () => {\n      decrementLoadCount_(layer);\n      $scope.$applyAsync();\n    });\n  }\n\n  Object.defineProperty(layer, 'loading', {\n    configurable: true,\n    get: () => /** @type {number} */ (layer.get('load_count')) > 0\n  });\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function increment_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', ++load_count, true);\n    if (parent) {\n      increment_(parent);\n    }\n  }\n\n  /**\n   * @function\n   * @param {ol.layer.Base} layer Layer\n   * @private\n   */\n  function decrement_(layer) {\n    let load_count = /** @type {number} */ (layer.get('load_count'));\n    const parent = /** @type {ol.layer.Base} */ (layer.get('parent_group'));\n    layer.set('load_count', --load_count, true);\n    if (parent) {\n      decrement_(parent);\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.debounce\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDebounce', []);\n\n\n/**\n * Provides a debounce service. That service is a function\n * used to debounce calls to a user-provided function.\n *\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.miscDebounce} The debounce function.\n *\n * @ngdoc service\n * @ngname ngeoDebounce\n * @ngInject\n */\nexports.factory_ = function($timeout) {\n  return (\n    // FIXME: eslint can't detect that the function returns a function\n    /**\n     * @param {function(?)} func The function to debounce.\n     * @param {number} wait The wait time in ms.\n     * @param {boolean} invokeApply Whether the call to `func` is wrapped\n     *    into an `$apply` call.\n     * return {function()} The wrapper function.\n     */\n    function(func, wait, invokeApply) {\n      /**\n       * @type {?angular.$q.Promise}\n       */\n      let timeout = null;\n      return (\n        function(...args) {\n          const context = this;\n          const later = function() {\n            timeout = null;\n            func.apply(context, args);\n          };\n          if (timeout !== null) {\n            $timeout.cancel(timeout);\n          }\n          timeout = $timeout(later, wait, invokeApply);\n        });\n    });\n};\n\nexports.factory('ngeoDebounce', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.EventHelper\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * Provides methods to manage the listening/unlistening of OpenLayers events\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoEventHelper\n * @ngInject\n */\nconst exports = function() {\n\n  /**\n   * @type {Object.<number|string, Array.<ol.EventsKey>>}\n   * @private\n   */\n  this.listenerKeys_ = {};\n\n};\n\n\n/**\n * Utility method to add a listener key bound to a unique id. The key has\n * to come from `ol.events`.\n * @param {number|string} uid Unique id.\n * @param {ol.EventsKey} key Key.\n * @export\n */\nexports.prototype.addListenerKey = function(uid, key) {\n  if (!this.listenerKeys_[uid]) {\n    this.initListenerKey_(uid);\n  }\n  this.listenerKeys_[uid].push(/** @type {ol.EventsKey} */ (key));\n};\n\n\n/**\n * Clear all listener keys from the given unique id.\n * @param {number|string} uid Unique id.\n * @export\n */\nexports.prototype.clearListenerKey = function(uid) {\n  this.initListenerKey_(uid);\n};\n\n\n/**\n * Utility method that does 2 things:\n * - initialize the listener keys of a given uid with an array (if that key\n *   has not array set yet)\n * - unlisten any events if the array already exists for the given uid and\n *   empty the array.\n * @param {number|string} uid Unique id.\n * @private\n */\nexports.prototype.initListenerKey_ = function(uid) {\n  if (!this.listenerKeys_[uid]) {\n    this.listenerKeys_[uid] = [];\n  } else {\n    if (this.listenerKeys_[uid].length) {\n      this.listenerKeys_[uid].forEach(olEvents.unlistenByKey);\n      this.listenerKeys_[uid].length = 0;\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoEventHelper', []);\nexports.module.service('ngeoEventHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.Condition\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  /**\n   * @type {string}\n   * @export\n   */\n  AND: '&&',\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT: '!',\n  /**\n   * @type {string}\n   * @export\n   */\n  OR: '||'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Date\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A date rule.\n   *\n   * @struct\n   * @param {!ngeox.rule.DateOptions} options Options.\n   */\n  constructor(options) {\n\n    options.type = options.type || ngeoFormatAttributeType.DATE;\n\n    super(options);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Text\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A text rule, which always compares the value with the LIKE operator, by\n   * default.\n   *\n   * @struct\n   * @param {!ngeox.rule.TextOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = options.operator || ngeoRuleRule.OperatorType.LIKE;\n    options.type = ngeoFormatAttributeType.TEXT;\n\n    super(options);\n\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.RuleHelper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport ngeoRuleDate from 'ngeo/rule/Date.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport ngeoRuleText from 'ngeo/rule/Text.js';\nimport {writeFilter} from 'ol/format/WFS.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport * as olArray from 'ol/array.js';\n\nimport moment from 'moment';\n\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to create `ngeo.rule.Rule`\n   * objects.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoRuleHelper\n   * @ngInject\n   */\n  constructor(gettextCatalog, ngeoFeatureHelper, ngeoWMSTime) {\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.Attribute>} attributes Attributes.\n   * @param {boolean=} opt_isCustom Whether the created rules should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRulesFromAttributes(attributes, opt_isCustom) {\n    const rules = [];\n    for (const attribute of attributes) {\n      rules.push(this.createRuleFromAttribute(attribute, opt_isCustom));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.Attribute} attribute Attribute.\n   * @param {boolean=} opt_isCustom Whether the created rule should be marked\n   *     as custom or not. Defaults to `false`.\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRuleFromAttribute(attribute, opt_isCustom) {\n\n    let rule;\n    const isCustom = opt_isCustom === true;\n\n    /**\n     * @type {string}\n     */\n    const name = this.gettextCatalog_.getString(attribute.name);\n\n    // Todo: support geometry\n\n    switch (attribute.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        if (isCustom) {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.EQUALS,\n            operators: [\n              ngeoRuleRule.TemporalOperatorType.EQUALS,\n              ngeoRuleRule.TemporalOperatorType.BEGINS,\n              ngeoRuleRule.TemporalOperatorType.ENDS\n            ],\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        } else {\n          rule = new ngeoRuleDate({\n            name: name,\n            operator: ngeoRuleRule.TemporalOperatorType.DURING,\n            propertyName: attribute.name,\n            type: attribute.type\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry({\n          name: name,\n          operator: ngeoRuleRule.SpatialOperatorType.WITHIN,\n          operators: [\n            ngeoRuleRule.SpatialOperatorType.CONTAINS,\n            ngeoRuleRule.SpatialOperatorType.INTERSECTS,\n            ngeoRuleRule.SpatialOperatorType.WITHIN\n          ],\n          propertyName: attribute.name,\n          type: attribute.type\n        });\n        break;\n      case ngeoFormatAttributeType.NUMBER:\n        if (isCustom) {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.EQUAL_TO,\n            operators: [\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.GREATER_THAN,\n              ngeoRuleRule.OperatorType.GREATER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.LESSER_THAN,\n              ngeoRuleRule.OperatorType.LESSER_THAN_OR_EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        } else {\n          rule = new ngeoRuleRule({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.BETWEEN,\n            propertyName: attribute.name,\n            type: ngeoFormatAttributeType.NUMBER\n          });\n        }\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        rule = new ngeoRuleSelect({\n          choices: googAsserts.assert(attribute.choices),\n          name: name,\n          propertyName: attribute.name\n        });\n        break;\n      default:\n        if (isCustom) {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            operators: [\n              ngeoRuleRule.OperatorType.LIKE,\n              ngeoRuleRule.OperatorType.EQUAL_TO,\n              ngeoRuleRule.OperatorType.NOT_EQUAL_TO\n            ],\n            propertyName: attribute.name\n          });\n        } else {\n          rule = new ngeoRuleText({\n            name: name,\n            operator: ngeoRuleRule.OperatorType.LIKE,\n            propertyName: attribute.name\n          });\n        }\n        break;\n    }\n\n    return rule;\n  }\n\n  /**\n   * @param {!Array.<!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions>} optionsList List of options\n   * @return {Array.<!ngeo.rule.Rule>} Rules.\n   * @export\n   */\n  createRules(optionsList) {\n    const rules = [];\n    for (const options of optionsList) {\n      rules.push(this.createRule(options));\n    }\n    return rules;\n  }\n\n  /**\n   * @param {!ngeox.rule.RuleOptions|!ngeox.rule.SelectOptions} options Options\n   * @return {!ngeo.rule.Rule} Rule.\n   * @export\n   */\n  createRule(options) {\n    let rule;\n    switch (options.type) {\n      case ngeoFormatAttributeType.DATE:\n      case ngeoFormatAttributeType.DATETIME:\n        rule = new ngeoRuleDate(options);\n        break;\n      case ngeoFormatAttributeType.GEOMETRY:\n        rule = new ngeoRuleGeometry(options);\n        break;\n      case ngeoFormatAttributeType.SELECT:\n        const selectOptions = /** @type {!ngeox.rule.SelectOptions} */ (\n          options);\n        googAsserts.assert(selectOptions.choices);\n        rule = new ngeoRuleSelect(selectOptions);\n        break;\n      default:\n        rule = new ngeoRuleText(options);\n        break;\n    }\n    return rule;\n  }\n\n  /**\n   * Create a new `ngeo.rule.Rule` object using an other given rule.\n   *\n   * @param {!ngeo.rule.Rule} rule Original rule to clone.\n   * @return {!ngeo.rule.Rule} A clone rule.\n   * @export\n   */\n  cloneRule(rule) {\n\n    let clone;\n\n    let expression = rule.getExpression();\n    if (expression === null) {\n      expression = undefined;\n    }\n    const isCustom = rule.isCustom;\n    const lowerBoundary = rule.lowerBoundary !== null ? rule.lowerBoundary :\n      undefined;\n    const name = rule.name;\n    const operator = rule.operator !== null ? rule.operator : undefined;\n    const operators = rule.operators ? rule.operators.slice(0) : undefined;\n    const propertyName = rule.propertyName;\n    const type = rule.type !== null ? rule.type : undefined;\n    const upperBoundary = rule.upperBoundary !== null ? rule.upperBoundary :\n      undefined;\n\n    const options = {\n      expression,\n      isCustom,\n      lowerBoundary,\n      name,\n      operator,\n      operators,\n      propertyName,\n      type,\n      upperBoundary\n    };\n\n    if (rule instanceof ngeoRuleDate) {\n      clone = new ngeoRuleDate(options);\n    } else if (rule instanceof ngeoRuleGeometry) {\n      clone = new ngeoRuleGeometry(options);\n      clone.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(rule.feature)\n      );\n    } else if (rule instanceof ngeoRuleSelect) {\n      options.choices = rule.choices.slice(0);\n      clone = new ngeoRuleSelect(options);\n    } else if (rule instanceof ngeoRuleText) {\n      clone = new ngeoRuleText(options);\n    } else {\n      clone = new ngeoRuleRule(options);\n    }\n\n    return clone;\n  }\n\n  /**\n   * Extend the dynamic properties from a source rule to destination rule.\n   * The source rule remains unchanged, while the destination rule changes.\n   *\n   * @param {!ngeo.rule.Rule} sourceRule Source rule to collect the dynamic\n   *     properties from.\n   * @param {!ngeo.rule.Rule} destRule Destination rule where the dynamic\n   *     properties are set.\n   * @export\n   */\n  extendRule(sourceRule, destRule) {\n\n    if (destRule.getExpression() !== sourceRule.getExpression()) {\n      destRule.setExpression(sourceRule.getExpression());\n    }\n\n    if (destRule.lowerBoundary !== sourceRule.lowerBoundary) {\n      destRule.lowerBoundary = sourceRule.lowerBoundary;\n    }\n\n    if (destRule.operator !== sourceRule.operator) {\n      destRule.operator = sourceRule.operator;\n    }\n\n    if (destRule.upperBoundary !== sourceRule.upperBoundary) {\n      destRule.upperBoundary = sourceRule.upperBoundary;\n    }\n\n    if (sourceRule instanceof ngeoRuleGeometry &&\n       destRule instanceof ngeoRuleGeometry\n    ) {\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(destRule.feature);\n      destRule.feature.setProperties(\n        this.ngeoFeatureHelper_.getNonSpatialProperties(sourceRule.feature)\n      );\n    }\n  }\n\n  /**\n   * @param {!Array.<!ngeo.rule.Rule>} rules Rules\n   * @return {!Array.<!ngeox.rule.AnyOptions>} List of serialized rule options.\n   * @export\n   */\n  serializeRules(rules) {\n    return rules.map((rule) => {\n      const serializedRule = this.serializeRule(rule);\n      return serializedRule;\n    });\n  }\n\n  /**\n   * Selialize a rule into options to re-create it later.\n   * @param {!ngeo.rule.Rule} rule Rule to serialize.\n   * @return {!ngeox.rule.AnyOptions} Serialized rule options.\n   * @export\n   */\n  serializeRule(rule) {\n    const obj = {\n      name: rule.name,\n      propertyName: rule.propertyName,\n      type: rule.type\n    };\n\n    if (rule.expression !== null) {\n      obj.expression = rule.expression;\n    }\n\n    if (rule.lowerBoundary !== null) {\n      obj.lowerBoundary = rule.lowerBoundary;\n    }\n\n    if (rule.operator !== null) {\n      obj.operator = rule.operator;\n    }\n\n    if (rule.operators !== null) {\n      obj.operators = rule.operators.slice(0);\n    }\n\n    if (rule.upperBoundary !== null) {\n      obj.upperBoundary = rule.upperBoundary;\n    }\n\n    if (rule instanceof ngeoRuleGeometry) {\n      obj.featureProperties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        rule.feature);\n    }\n\n    if (rule instanceof ngeoRuleSelect) {\n      obj.choices = rule.choices;\n    }\n\n    return obj;\n  }\n\n  /**\n   * Create a `ol.format.filter.Filter` object for a given data source.\n   * See the `ngeox.CreateFilterOptions` to learn more.\n   *\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?ol.format.filter.Filter} Filter.\n   * @export\n   */\n  createFilter(options) {\n\n    const dataSource = /** @type {ngeo.datasource.OGC} */ (options.dataSource);\n    let mainFilter = null;\n\n    if (options.filter) {\n      mainFilter = options.filter;\n    } else {\n      const rules = options.filterRules || dataSource.filterRules;\n      const conditions = [];\n\n      if (rules && rules.length) {\n        for (const rule of rules) {\n          const filter = this.createFilterFromRule_(\n            rule,\n            dataSource,\n            options.srsName\n          );\n          if (filter) {\n            conditions.push(filter);\n          }\n        }\n      }\n\n      const condition = dataSource.filterCondition;\n      if (conditions.length === 1) {\n        mainFilter = conditions[0];\n      } else if (conditions.length >= 2) {\n        if (condition === ngeoFilterCondition.AND) {\n          mainFilter = olFormatFilter.and.apply(null, conditions);\n        } else if (condition === ngeoFilterCondition.OR ||\n                   condition === ngeoFilterCondition.NOT\n        ) {\n          mainFilter = olFormatFilter.or.apply(null, conditions);\n        }\n      }\n      if (mainFilter && condition === ngeoFilterCondition.NOT) {\n        mainFilter = olFormatFilter.not(mainFilter);\n      }\n    }\n\n    if (options.incTime) {\n      const timeFilter = this.createTimeFilterFromDataSource_(dataSource);\n      if (timeFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(\n            null,\n            [\n              mainFilter,\n              timeFilter\n            ]\n          );\n        } else {\n          mainFilter = timeFilter;\n        }\n      }\n    }\n\n    if (options.incDimensions) {\n      const dimensionsFilter = this.createDimensionsFilterFromDataSource_(dataSource);\n      if (dimensionsFilter) {\n        if (mainFilter) {\n          mainFilter = olFormatFilter.and.apply(null, [mainFilter, dimensionsFilter]);\n        } else {\n          mainFilter = dimensionsFilter;\n        }\n      }\n    }\n\n    return mainFilter;\n  }\n\n  /**\n   * @param {ngeox.CreateFilterOptions} options Options.\n   * @return {?string} Filter string.\n   * @export\n   */\n  createFilterString(options) {\n    let filterString = null;\n    const filter = this.createFilter(options);\n    if (filter) {\n      const filterNode = writeFilter(filter);\n      const xmlSerializer = new XMLSerializer();\n      filterString = xmlSerializer.serializeToString(filterNode);\n    }\n    return filterString;\n  }\n\n  /**\n   * @param {ngeo.rule.Rule} rule Rule.\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @param {string=} opt_srsName SRS name. No srsName attribute will be\n   *     set on geometries when this is not provided.\n   * @return {?ol.format.filter.Filter} filter Filter;\n   * @private\n   */\n  createFilterFromRule_(rule, dataSource, opt_srsName) {\n\n    let filter = null;\n\n    const value = rule.value;\n    if (!value) {\n      return null;\n    }\n\n    const expression = value.expression;\n    const lowerBoundary = value.lowerBoundary;\n    const operator = value.operator;\n    const propertyName = value.propertyName;\n    const upperBoundary = value.upperBoundary;\n\n    const rot =  ngeoRuleRule.OperatorType;\n    const rsot = ngeoRuleRule.SpatialOperatorType;\n    const rtot = ngeoRuleRule.TemporalOperatorType;\n\n    const spatialTypes = [\n      rsot.CONTAINS,\n      rsot.INTERSECTS,\n      rsot.WITHIN\n    ];\n\n    const numericTypes = [\n      rot.GREATER_THAN,\n      rot.GREATER_THAN_OR_EQUAL_TO,\n      rot.LESSER_THAN,\n      rot.LESSER_THAN_OR_EQUAL_TO\n    ];\n\n    if (rule instanceof ngeoRuleDate) {\n      let beginValue;\n      let endValue;\n\n      if (operator === rtot.DURING) {\n        beginValue = moment(lowerBoundary).format('YYYY-MM-DD');\n        endValue = moment(upperBoundary).format('YYYY-MM-DD');\n      } else if (operator === rtot.EQUALS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        endValue = beginValue;\n      } else if (operator === rtot.BEGINS) {\n        beginValue = moment(expression)\n          .format('YYYY-MM-DD');\n        // NOTE: end value is CURRENT + 30 years\n        endValue = moment(expression)\n          .add(30, 'years')\n          .format('YYYY-MM-DD');\n      } else if (operator === rtot.ENDS) {\n        // NOTE: begin value is hardcoded to 1970-01-01\n        beginValue = '1970-01-01';\n        endValue = moment(expression)\n          .format('YYYY-MM-DD');\n      }\n      if (beginValue && endValue) {\n        filter = olFormatFilter.during(\n          propertyName,\n          beginValue,\n          endValue\n        );\n      }\n    } else if (rule instanceof ngeoRuleSelect) {\n      const selectedChoices = rule.selectedChoices;\n      if (selectedChoices.length === 1) {\n        filter = olFormatFilter.equalTo(\n          propertyName,\n          selectedChoices[0]\n        );\n      } else if (selectedChoices.length >= 2) {\n        const conditions = [];\n        for (const selectedChoice of selectedChoices) {\n          conditions.push(\n            olFormatFilter.equalTo(\n              propertyName,\n              selectedChoice\n            )\n          );\n        }\n        filter = olFormatFilter.or.apply(null, conditions);\n      }\n    } else if (olArray.includes(spatialTypes, operator)) {\n      const geometryName = dataSource.geometryName;\n      googAsserts.assertInstanceof(rule, ngeoRuleGeometry);\n      const geometry = googAsserts.assert(rule.geometry);\n      if (operator === rsot.CONTAINS) {\n        filter = olFormatFilter.contains(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.INTERSECTS) {\n        filter = olFormatFilter.intersects(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      } else if (operator === rsot.WITHIN) {\n        filter = olFormatFilter.within(\n          geometryName,\n          geometry,\n          opt_srsName\n        );\n      }\n    } else if (olArray.includes(numericTypes, operator)) {\n      const numericExpression = googAsserts.assertNumber(expression);\n      if (operator === rot.GREATER_THAN) {\n        filter = olFormatFilter.greaterThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.GREATER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.greaterThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN) {\n        filter = olFormatFilter.lessThan(\n          propertyName,\n          numericExpression\n        );\n      } else if (operator === rot.LESSER_THAN_OR_EQUAL_TO) {\n        filter = olFormatFilter.lessThanOrEqualTo(\n          propertyName,\n          numericExpression\n        );\n      }\n    } else if (operator === rot.BETWEEN) {\n      filter = olFormatFilter.between(\n        propertyName,\n        lowerBoundary,\n        upperBoundary\n      );\n    } else if (operator === rot.EQUAL_TO) {\n      filter = olFormatFilter.equalTo(\n        propertyName,\n        expression\n      );\n    } else if (operator === rot.LIKE) {\n      const stringExpression = String(expression)\n        .replace(/!/g, '!!')\n        .replace(/\\./g, '!.')\n        .replace(/\\*/g, '!*');\n      filter = olFormatFilter.like(\n        propertyName,\n        `*${stringExpression}*`,\n        '*', /* wildCard */\n        '.', /* singleChar */\n        '!', /* escapeChar */\n        false /* matchCase */\n      );\n    } else if (operator === rot.NOT_EQUAL_TO) {\n      filter = olFormatFilter.notEqualTo(\n        propertyName,\n        expression\n      );\n    }\n\n    return filter;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * dimensions filters configuration within the data source.\n   * @param {ngeo.DataSource} dataSource Data source from which to create the\n   *     filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createDimensionsFilterFromDataSource_(dataSource) {\n    const config = dataSource.dimensionsFiltersConfig;\n    const dimensions = dataSource.dimensions;\n\n    const conditions = [];\n    for (const key in config) {\n      let value = config[key].value;\n      if (value === null) {\n        if (dimensions[key] !== undefined && dimensions[key] !== null) {\n          value = dimensions[key];\n        }\n      }\n      if (value !== null) {\n        conditions.push(olFormatFilter.equalTo(config[key].field, value, true));\n      }\n    }\n    if (conditions.length === 1) {\n      return conditions[0];\n    } else if (conditions.length >= 2) {\n      return olFormatFilter.and.apply(null, conditions);\n    }\n    return null;\n  }\n\n  /**\n   * Create and return an OpenLayers filter object using the available\n   * time properties within the data source.\n   * @param {ngeo.datasource.OGC} dataSource Data source from which to\n   *     create the filter.\n   * @return {?ol.format.filter.Filter} Filter\n   * @private\n   */\n  createTimeFilterFromDataSource_(dataSource) {\n    let filter = null;\n    const range = dataSource.timeRangeValue;\n    const timeProperty = dataSource.timeProperty;\n    const name = dataSource.timeAttributeName;\n\n    if (range && timeProperty && name) {\n\n      if (range.end !== undefined) {\n        // Case 1: the range has both 'start' and 'end' values.  Use them to\n        //         create a During filter.\n\n        const values = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        ).split('/');\n\n        filter = olFormatFilter.during(name, values[0], values[1]);\n      } else {\n\n        // Case 2: we only have a 'start' value. We need to calculate the 'end'\n        //         using the resolution of the time property.\n\n        const resolution = timeProperty.resolution || 'seconds';\n        const value = this.ngeoWMSTime_.formatWMSTimeParam(\n          timeProperty,\n          range\n        );\n        let momentEnd;\n\n        switch (resolution) {\n          case 'year':\n            momentEnd = moment(value).add(1, 'years').subtract(1, 'seconds');\n            break;\n          case 'month':\n            momentEnd = moment(value).add(1, 'months').subtract(1, 'seconds');\n            break;\n          case 'day':\n            momentEnd = moment(value).add(1, 'days').subtract(1, 'seconds');\n            break;\n          default:\n            //case \"second\":\n            // This would require a TContains filter, which neither OpenLayers\n            // and MapServer support. Skip...\n        }\n\n        if (momentEnd) {\n          const startValue = moment(value).utc().format('YYYY-MM-DD HH:mm:ss');\n          const endValue = momentEnd.utc().format('YYYY-MM-DD HH:mm:ss');\n          filter = olFormatFilter.during(name, startValue, endValue);\n        }\n      }\n    }\n\n    return filter;\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRuleHelper', [\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoRuleHelper', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.File\n */\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\nconst exports = class extends ngeoDatasourceDataSource {\n\n  /**\n   * A data source that contains vector features that were loaded from a file.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @private\n     */\n    this.featuresCollection_ = options.features || new olCollection();\n\n    /**\n     * @type {!ol.source.Vector}\n     * @private\n     */\n    this.source_ = new olSourceVector({\n      features: this.featuresCollection_,\n      wrapX: false\n    });\n\n    /**\n     * @type {!ol.layer.Vector}\n     * @private\n     */\n    this.layer_ = new olLayerVector({\n      source: this.source_\n    });\n  }\n\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ol.Feature>} Features\n   * @export\n   */\n  get features() {\n    return this.featuresCollection_.getArray();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {!ol.Collection.<!ol.Feature>} Features collection\n   * @export\n   */\n  get featuresCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * @return {!ol.layer.Vector} Vector layer.\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {ol.Extent} Extent.\n   * @export\n   */\n  get extent() {\n    return this.source_.getExtent();\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.FileGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A FileGroup data source combines multiple `ngeo.datasource.File` objects.\n   * Its main goal is to synchronize the added data source 'visible' properties\n   * with the visibility of their layer 'visible' property.\n   *\n   * @struct\n   * @param {ngeox.datasource.FileGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.unregister_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    this.unregister_[dataSource.id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this, dataSource)\n    );\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source.\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(dataSource, value, oldValue) {\n    if (value !== undefined) {\n      dataSource.layer.setVisible(value);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceFile);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.File} dataSource File data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    this.unregister_[dataSource.id]();\n    delete this.unregister_[dataSource.id];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.OGCGroup\n */\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\n\nconst exports = class extends ngeoDatasourceGroup {\n\n  /**\n   * A OGCGroup data source combines multiple `ngeo.datasource.OGC` objects.\n   *\n   * @struct\n   * @param {ngeox.datasource.OGCGroupOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.url_ = options.url;\n  }\n\n  /**\n   * @return {string} Url\n   * @export\n   */\n  get url() {\n    return this.url_;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.WMSGroup\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class extends ngeoDatasourceOGCGroup {\n\n  /**\n   * A WMSGroup data source combines multiple `ngeo.datasource.OGC` objects\n   * that have the 'WMS' type. Its main goal is to create a single\n   * `ol.layer.Image` object in which the data source visible properties\n   * determine the WMS LAYERS parameter.\n   *\n   * Note: the layer is not added to the map here.\n   *\n   * @struct\n   * @param {ngeox.datasource.WMSGroupOptions} options Options.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper the ngeo map LayerHelper service.\n   */\n  constructor(options, ngeoLayerHelper) {\n\n    super(options);\n\n    const injector = options.injector;\n\n\n    // === PRIVATE properties ===\n\n    /**\n     * @type {ol.layer.Image}\n     * @private\n     */\n    this.layer_;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = injector.get('$rootScope');\n\n    /**\n     * The functions to call to unregister the `watch` event on data sources\n     * that are registered. Key is the id of the data source.\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.wmsDataSourceUnregister_ = {};\n\n\n    this.init_();\n  }\n\n  /**\n   * @private\n   */\n  init_() {\n    googAsserts.assert(\n      this.dataSources.length, 'At least one data source is required.');\n\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  destroy() {\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      this.unregisterDataSource_(dataSource);\n    }\n    super.destroy();\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {ol.layer.Image} layer\n   * @export\n   */\n  get layer() {\n    return this.layer_;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @inheritDoc\n   */\n  addDataSource(dataSource) {\n    super.addDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.registerDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to register.\n   * @private\n   */\n  registerDataSource_(dataSource) {\n\n    const id = dataSource.id;\n\n    this.wmsDataSourceUnregister_[id] = this.rootScope_.$watch(\n      () => dataSource.visible,\n      this.handleDataSourceVisibleChange_.bind(this)\n    );\n\n    if (!this.layer_) {\n      this.layer_ = this.ngeoLayerHelper_.createBasicWMSLayerFromDataSource(\n        dataSource\n      );\n    } else {\n      this.layer_.get('querySourceIds').push(id);\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleDataSourceVisibleChange_(value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      this.updateLayer_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLayer_() {\n    const layer = this.layer;\n    let layerNames = [];\n\n    // (1) Collect layer names from data sources in the group\n    for (const dataSource of this.dataSources) {\n      googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n      if (dataSource.visible) {\n        layerNames = layerNames.concat(dataSource.getOGCLayerNames());\n      }\n    }\n\n    // (2) Update layer object\n    this.ngeoLayerHelper_.updateWMSLayerState(layer, layerNames.join(','));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeDataSource(dataSource) {\n    super.removeDataSource(dataSource);\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    this.unregisterDataSource_(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGC} dataSource OGC data source to unregister.\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n\n    const id = dataSource.id;\n    const layer = this.layer;\n\n    // Unregister watcher\n    const unregister = this.wmsDataSourceUnregister_[id];\n    unregister();\n    delete this.wmsDataSourceUnregister_[id];\n\n    // Remove DS from the group\n    olArray.remove(this.dataSources, dataSource);\n\n    // Remove query source id\n    const ids = this.ngeoLayerHelper_.getQuerySourceIds(layer);\n    if (ids) {\n      olArray.remove(ids, id);\n    }\n\n    if (this.dataSources.length) {\n      this.updateLayer_();\n    }\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.ExternalDataSourcesManager\n */\n// TODO - MaxScaleDenominator\n// TODO - MinScaleDenominator\n\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoDatasourceFile from 'ngeo/datasource/File.js';\nimport ngeoDatasourceFileGroup from 'ngeo/datasource/FileGroup.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoDatasourceOGCGroup from 'ngeo/datasource/OGCGroup.js';\nimport ngeoDatasourceWMSGroup from 'ngeo/datasource/WMSGroup.js';\nimport * as olBase from 'ol/index.js';\nimport {isEmpty} from 'ol/extent.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatGPX from 'ol/format/GPX.js';\nimport olFormatKML from 'ol/format/KML.js';\n\nconst exports = class {\n\n  /**\n   * External data sources come remote online resources, such as WMS/WMTS\n   * servers, and also files such as KML/GPX. This service is responsible of\n   * creating, storing and managing them.\n   *\n   * @param {!angularGettext.Catalog} gettextCatalog service.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.$q} $q The Angular $q service.\n   * @param {!angular.Scope} $rootScope The rootScope provider.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   * @param {!ngeo.misc.File} ngeoFile Ngeo file.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo layer helper service\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfExternalDataSourcesManager\n   */\n  constructor(gettextCatalog, $injector, $q, $rootScope, ngeoDataSources,\n    ngeoFile, ngeoLayerHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angular.$injector}\n     * @private\n     */\n    this.injector_ = $injector;\n\n    /**\n     * @type {!angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * The collection of DataSources from ngeo. When this service creates\n     * a data source, its gets added to that collection.\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.misc.File}\n     * @private\n     */\n    this.ngeoFile_ = ngeoFile;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * All external data sources that are created are stored here. The key\n     * is the data source id.\n     *\n     * Note: This cache is never cleaned and elements are never removed from it.\n     * If a data source with an id already exists in this cache, it is used\n     * instead of being re-created.\n     *\n     * @type {Object.<number, !ngeo.datasource.OGC|!ngeo.datasource.File>}\n     * @private\n     */\n    this.extDataSources_ = {};\n\n    /**\n     * File external data sources, with the key being the file name.\n     * @type {Object.<string, !ngeo.datasource.File>}\n     * @private\n     */\n    this.files_ = {};\n\n    /**\n     * @type {?ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * Group that contains file data sources.\n     * @type {!ngeo.datasource.FileGroup}\n     * @private\n     */\n    this.fileGroup_ = new ngeoDatasourceFileGroup({\n      dataSources: [],\n      injector: this.injector_,\n      title: gettextCatalog.getString('Local files')\n    });\n\n    /**\n     * Collection of WMS groups.\n     * @type {!ol.Collection.<!ngeo.datasource.WMSGroup>}\n     * @private\n     */\n    this.wmsGroupsCollection_ = new olCollection();\n\n    /**\n     * Collection of groups for WMTS data sources.\n     * @type {!ol.Collection.<!ngeo.datasource.OGCGroup>}\n     * @private\n     */\n    this.wmtsGroupsCollection_ = new olCollection();\n\n    /**\n     * Cache that stores the information of a WMTS data source. The key is the\n     * data source id.\n     * @type {!Object.<number, gmfx.datasource.ExternalDataSourcesManagerWMTSCacheItem>}\n     * @private\n     */\n    this.wmtsCache_ = {};\n\n    olEvents.listen(this.dataSources_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n\n  // === File Group ===\n\n  /**\n   * @return {!ngeo.datasource.FileGroup} File group.\n   * @export\n   */\n  get fileGroup() {\n    return this.fileGroup_;\n  }\n\n\n  // === WMS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  addWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.push(wmsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.WMSGroup} wmsGroup WMS group.\n   * @private\n   */\n  removeWMSGroup_(wmsGroup) {\n    this.wmsGroupsCollection.remove(wmsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.WMSGroup} WMS group.\n   */\n  getWMSGroup(url) {\n    let found = null;\n    for (const wmsGroup of this.wmsGroups) {\n      if (wmsGroup.url === url) {\n        found = wmsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.WMSGroup>} List of WMS groups.\n   * @export\n   */\n  get wmsGroups() {\n    return this.wmsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.WMSGroup>} Collection of WMS\n   *     groups.\n   * @export\n   */\n  get wmsGroupsCollection() {\n    return this.wmsGroupsCollection_;\n  }\n\n\n  // === WMTS Groups ===\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  addWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.push(wmtsGroup);\n  }\n\n  /**\n   * @param {!ngeo.datasource.OGCGroup} wmtsGroup Group for WMTS data sources.\n   * @private\n   */\n  removeWMTSGroup_(wmtsGroup) {\n    this.wmtsGroupsCollection.remove(wmtsGroup);\n  }\n\n  /**\n   * @param {string} url Online resource url\n   * @return {?ngeo.datasource.OGCGroup} WMTS group.\n   */\n  getWMTSGroup(url) {\n    let found = null;\n    for (const wmtsGroup of this.wmtsGroups) {\n      if (wmtsGroup.url === url) {\n        found = wmtsGroup;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @return {!Array.<!ngeo.datasource.OGCGroup>} List of groups for WMTS data\n   *     sources.\n   * @export\n   */\n  get wmtsGroups() {\n    return this.wmtsGroupsCollection_.getArray();\n  }\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.OGCGroup>} Collection of groups\n   *     for WMTS data sources.\n   * @export\n   */\n  get wmtsGroupsCollection() {\n    return this.wmtsGroupsCollection_;\n  }\n\n\n  // === Other methods ===\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source\n   * @return {boolean} Whether the given data source is external or not. To\n   *     be considered external, it needs to be in the external data source\n   *     hash (cache).\n   */\n  isExternalDataSource(dataSource) {\n    return !!this.extDataSources_[dataSource.id];\n  }\n\n  /**\n   * @return {ol.layer.Group} Layer group where to push layers created by\n   *     this service.\n   */\n  get layerGroup() {\n    const map = this.map_;\n    googAsserts.assert(map);\n    return this.ngeoLayerHelper_.getGroupFromMap(\n      map,\n      gmfBase.EXTERNALLAYERGROUP_NAME\n    );\n  }\n\n  /**\n   * @param {?ol.Map} map Map\n   */\n  set map(map) {\n    this.map_ = map;\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  addLayer_(layer) {\n    this.layerGroup.getLayers().push(layer);\n  }\n\n  /**\n   * @param {ol.layer.Layer} layer Layer.\n   * @private\n   */\n  removeLayer_(layer) {\n    this.layerGroup.getLayers().remove(layer);\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object.\n   * @param {!Object} capabilities  WMS Capabilities definition\n   * @param {string} url The WMS service url.\n   * @export\n   */\n  createAndAddDataSourceFromWMSCapability(layer, capabilities, url) {\n\n    const id = exports.getId(layer);\n    const service = capabilities['Service'];\n\n    url = service['OnlineResource'] || url;\n\n    let dataSource;\n\n    // (1) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n      const req = capabilities['Capability']['Request'];\n\n      // ogcImageType\n      const formats = req['GetMap']['Format'];\n      const imagePngType = 'image/png';\n      const ogcImageType = formats.includes(imagePngType) ?\n        imagePngType : formats[0];\n\n      // wmsInfoFormat\n      const infoFormats = req['GetFeatureInfo']['Format'];\n      const wmsInfoFormat = infoFormats.includes(\n        ngeoDatasourceOGC.WMSInfoFormat.GML\n      ) ? ngeoDatasourceOGC.WMSInfoFormat.GML : undefined;\n\n      // queryable\n      const queryable = layer['queryable'] === true &&\n          wmsInfoFormat !== undefined;\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: layer['Title'],\n        ogcImageType: ogcImageType,\n        ogcLayers: [{\n          name: layer['Name'],\n          queryable: queryable\n        }],\n        ogcType: ngeoDatasourceOGC.Type.WMS,\n        visible: true,\n        wmsInfoFormat: wmsInfoFormat,\n        wmsUrl: url\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n\n    // (2) Add data source in WMS group, unless it's already in there.\n    //     Will also add the data source to the `ngeo.DataSources` collection.\n    //     If the group is created, its inner OL layer is also added to the map.\n    let wmsGroup = this.getWMSGroup(url);\n    if (wmsGroup) {\n      if (!wmsGroup.dataSources.includes(dataSource)) {\n        wmsGroup.addDataSource(dataSource);\n        this.dataSources_.push(dataSource);\n      }\n    } else {\n      wmsGroup = new ngeoDatasourceWMSGroup({\n        dataSources: [dataSource],\n        injector: this.injector_,\n        title: service['Title'],\n        url: url\n      }, this.ngeoLayerHelper_);\n      this.addLayer_(wmsGroup.layer);\n      this.addWMSGroup_(wmsGroup);\n      this.dataSources_.push(dataSource);\n    }\n  }\n\n  /**\n   * @param {!Object} layer WTMS Capability Layer object.\n   * @param {!Object} capabilities  WMTS Capabilities definition\n   * @param {string} wmtsUrl The WMTS capabilities url\n   * @export\n   */\n  createAndAddDataSourceFromWMTSCapability(layer, capabilities, wmtsUrl) {\n    const id = exports.getId(layer);\n\n    // (1) No need to do anything if there's already a WMTS data source (and its\n    // layer in the map)\n    if (this.wmtsCache_[id]) {\n      return;\n    }\n\n    let dataSource;\n\n    // (2) Get data source from cache if it exists, otherwise create it\n    if (this.extDataSources_[id]) {\n      dataSource = this.extDataSources_[id];\n    } else {\n\n      const name = googAsserts.assertString(layer['Title']);\n      const wmtsLayer = googAsserts.assertString(layer['Identifier']);\n\n      // TODO - MaxScaleDenominator\n      // TODO - MinScaleDenominator\n      dataSource = new ngeoDatasourceOGC({\n        id: id,\n        name: name,\n        ogcType: ngeoDatasourceOGC.Type.WMTS,\n        visible: true,\n        wmtsLayer: wmtsLayer,\n        wmtsUrl: wmtsUrl\n      });\n\n      // Keep a reference to the external data source in the cache\n      this.extDataSources_[id] = dataSource;\n    }\n\n    // (3) Get/Create group, then add data source to group\n    let wmtsGroup = this.getWMTSGroup(wmtsUrl);\n    if (!wmtsGroup) {\n      wmtsGroup = new ngeoDatasourceOGCGroup({\n        dataSources: [],\n        title: capabilities['ServiceIdentification']['Title'],\n        url: wmtsUrl\n      });\n      this.addWMTSGroup_(wmtsGroup);\n    }\n    wmtsGroup.addDataSource(dataSource);\n\n    // (4) Create and add the OL layer\n    const layerObj = this.ngeoLayerHelper_.createWMTSLayerFromCapabilititesObj(\n      capabilities,\n      layer\n    );\n    this.addLayer_(layerObj);\n\n    // (5) Add data source to ngeo collection\n    this.dataSources_.push(dataSource);\n\n    // (6) Create and set WMTS cache item\n    this.wmtsCache_[id] = {\n      layerObj: layerObj,\n      // This watcher synchronizes the data source visible property to\n      // the OL layer object visible property\n      unregister: this.rootScope_.$watch(\n        () => dataSource.visible,\n        this.handleWMTSDataSourceVisibleChange_.bind(this, layerObj)\n      )\n    };\n  }\n\n  /**\n   * @param {!File} file File.\n   * @param {function(boolean):*?} opt_callback Callback called with true if the file is loaded and added.\n   *     Otherwise with false.\n   * @export\n   */\n  createAndAddDataSourceFromFile(file, opt_callback) {\n    this.getFileDataSource_(file).then(\n      (dataSource) => {\n        let success = true;\n        const fileGroup = this.fileGroup_;\n\n        // Look if the extent is valid (and so at least one geometry)\n        if (isEmpty(dataSource.extent)) {\n          success = false;\n\n        } else {\n          // (1) No need to do anything if the file has already been added...\n          if (fileGroup.dataSources.includes(dataSource)) {\n            return;\n          }\n\n          // (2) Okay, we need to add this data source. First, add its layer  to the map.\n          this.addLayer_(dataSource.layer);\n\n          // (3) Add it to the file group\n          fileGroup.addDataSource(dataSource);\n\n          // (4) Recenter the map view onto its extent if there is at least one geometry (and so a valid extent)\n          this.map_.getView().fit(dataSource.extent);\n\n          // (5) Finally, add it to the ngeo collection\n          this.dataSources_.push(dataSource);\n        }\n        // Call the callback.\n        if (opt_callback) {\n          opt_callback(success);\n        }\n      },\n      (rejections) => {\n        console.error(`Failed to load file: ${file.name}`);\n        if (opt_callback) {\n          opt_callback(false);\n        }\n      }\n    );\n  }\n\n  /**\n   * Get file data source from cache, else create, store and return a new one.\n   * @param {!File} file File.\n   * @return {!angular.$q.Promise} Promise\n   * @private\n   */\n  getFileDataSource_(file) {\n\n    const defer = this.q_.defer();\n\n    if (this.files_[file.name]) {\n      defer.resolve(this.files_[file.name]);\n    } else {\n      const ngeoFile = this.ngeoFile_;\n      ngeoFile.read(file).then((content) => {\n        let features;\n        const readOptions = {\n          featureProjection: this.map_.getView().getProjection()\n        };\n\n        if (ngeoFile.isKml(content)) {\n          features = new olFormatKML({extractStyles: false}).readFeatures(content, readOptions);\n        } else if (ngeoFile.isGpx(content)) {\n          features = new olFormatGPX().readFeatures(content, readOptions);\n        }\n\n        if (features) {\n          const id = exports.getId(file);\n\n          const dataSource = new ngeoDatasourceFile({\n            features: new olCollection(features),\n            id: id,\n            name: file.name,\n            visible: true\n          });\n\n          // Keep a reference if both caches\n          this.files_[file.name] = dataSource;\n          this.extDataSources_[id] = dataSource;\n\n          defer.resolve(dataSource);\n        } else {\n          defer.reject();\n        }\n      });\n    }\n\n    return defer.promise;\n  }\n\n  /**\n   * @param {!ol.layer.Tile} layer WMTS layer\n   * @param {boolean|undefined} value Current visible property of the DS\n   * @param {boolean|undefined} oldValue Old visible property of the DS\n   * @private\n   */\n  handleWMTSDataSourceVisibleChange_(layer, value, oldValue) {\n    if (value !== undefined && value !== oldValue) {\n      layer.setVisible(value);\n    }\n  }\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If it's an external data source, remove it from its WMS Group\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (this.extDataSources_[dataSource.id] === dataSource) {\n      if (dataSource instanceof ngeoDatasourceFile) {\n        this.removeFileDataSource_(dataSource);\n      } else if (dataSource instanceof ngeoDatasourceOGC) {\n        this.removeOGCDataSource_(dataSource);\n      }\n    }\n  }\n\n  /**\n   * Remove a data source from its group. Remove its layer from the map as well.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.File} dataSource External File data source.\n   * @private\n   */\n  removeFileDataSource_(dataSource) {\n    this.removeLayer_(dataSource.layer);\n    this.fileGroup_.removeDataSource(dataSource);\n  }\n\n  /**\n   * Remove the data source from its group. If the group no longer has\n   * any data source in it, it is removed then destroyed and its layer is\n   * removed from the map.\n   *\n   * Note: it is expected that the data source has already been removed\n   * from the ngeo collection.\n   *\n   * @param {!ngeo.datasource.OGC} dataSource External OGC data source.\n   * @private\n   */\n  removeOGCDataSource_(dataSource) {\n    if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMS) {\n      // WMS data source\n      const url = dataSource.wmsUrl;\n      googAsserts.assert(url);\n\n      const wmsGroup = this.getWMSGroup(url);\n      if (wmsGroup && wmsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmsGroup.removeDataSource(dataSource);\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the group, and remove the layer from the map as well.\n        if (!wmsGroup.dataSources.length) {\n          this.removeLayer_(wmsGroup.layer);\n          wmsGroup.destroy();\n          this.removeWMSGroup_(wmsGroup);\n        }\n      }\n    } else if (dataSource.ogcType === ngeoDatasourceOGC.Type.WMTS) {\n      // WMTS data source\n      const url = dataSource.wmtsUrl;\n      googAsserts.assert(url);\n\n      const wmtsGroup = this.getWMTSGroup(url);\n      if (wmtsGroup && wmtsGroup.dataSources.includes(dataSource)) {\n        // Remove from group\n        wmtsGroup.removeDataSource(dataSource);\n\n        // Remove the cache item, in addition to removing the layer from the\n        // map and unregister the watcher\n        const id = dataSource.id;\n        this.removeLayer_(this.wmtsCache_[id].layerObj);\n        this.wmtsCache_[id].unregister();\n        delete this.wmtsCache_[id];\n\n        // In case we removed the last data source from the group, then remove\n        // and destroy the groug.\n        if (!wmtsGroup.dataSources.length) {\n          wmtsGroup.destroy();\n          this.removeWMTSGroup_(wmtsGroup);\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Get the data source id from a WMS or WMTS Capability Layer object, or\n * from a File object.\n *\n * Please, note that this is used to generate a unique id for the created\n * external data sources and since a WMS/WMTS Capability Layer objects don't\n * natively contains an id by themselves, then it is programmatically generated\n * using the `ol.getUid` method, plus a million.\n *\n * @param {!Object} layer WMS/WMTS Capability Layer object.\n * @return {number} Data source id.\n * @export\n */\nexports.getId = function(layer) {\n  return olBase.getUid(layer) + 1000000;\n};\n\n\nexports.module = angular.module('gmfExternalDataSourcesManager', [\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoDatasourceDataSources.module.name,\n]);\nexports.module.service('gmfExternalDataSourcesManager',\n  exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSources\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olView from 'ol/View.js';\n\nconst exports = class {\n\n  /**\n   * This service is responsible of the synchronization between the ngeo\n   * collection of data sources and a specific map. It listens to events\n   * that come directly or indirectly from the map and update the inner\n   * properties of the data sources.\n   *\n   * The following data sources properties are synchronized here:\n   *\n   * - inRange: The map view 'change:resolution' event is listened and the\n   *   property is updated depending on the current resolution.\n   *\n   * @struct\n   * @ngdoc service\n   * @ngname ngeoDataSources\n   * @ngInject\n   */\n  constructor() {\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = new olCollection();\n\n    /**\n     * @type {ol.Map}\n     * @private\n     */\n    this.map_ = null;\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n  }\n\n  /**\n   * Set a map to this service. Null can be given to unset the map.\n   * @param {?ol.Map} map Map.\n   */\n  set map(map) {\n    if (this.map_ === map) {\n      return;\n    }\n\n    if (this.map_) {\n      this.unbindMap_(this.map_);\n    }\n\n    this.map_ = map;\n\n    if (map) {\n      this.bindMap_(map);\n    }\n  }\n\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Bind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  bindMap_(map) {\n\n    // (1) Event listeners\n    const view = map.getView();\n    this.listenerKeys_.push(\n      olEvents.listen(view, 'change:resolution', this.handleViewResolutionChange_, this)\n    );\n\n    // (2) Sync resolution with existing data sources\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Unbind a map to this service.\n   * @param {ol.Map} map Map.\n   * @private\n   */\n  unbindMap_(map) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_ = [];\n  }\n\n  /**\n   * Called when the resolution of the map view changes. Synchronize the\n   * datasources to current resolution of the view.\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleViewResolutionChange_(evt) {\n    const view = evt.target;\n    googAsserts.assertInstanceof(view, olView);\n    const resolution = view.getResolution();\n    googAsserts.assertNumber(resolution);\n    this.syncDataSourcesToResolution_(resolution);\n  }\n\n  /**\n   * Synchronize all datasources in the ngeo collection with a given resolution.\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourcesToResolution_(resolution) {\n    this.collection_.forEach((dataSource) => {\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    });\n  }\n\n  /**\n   * Synchronize a data source `inRange` property with a given resolution.\n   * @param {ngeo.datasource.DataSource} dataSource Data source\n   * @param {number} resolution Resolution\n   * @private\n   */\n  syncDataSourceToResolution_(dataSource, resolution) {\n    // No need to do anything if the data source doesn't support dynamic\n    // setting of inRange\n    if (!dataSource.supportsDynamicInRange) {\n      return;\n    }\n\n    const maxResolution = dataSource.maxResolution;\n    const minResolution = dataSource.minResolution;\n\n    const inMinRange = minResolution === null ||\n        minResolution === undefined ||\n        resolution >= minResolution;\n    const inMaxRange = maxResolution === null ||\n        maxResolution === undefined ||\n        resolution <= maxResolution;\n    const inRange = inMinRange && inMaxRange;\n\n    dataSource.inRange = inRange;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. If there's\n   * map bound, update its `inRange` right away.\n   * @param {!ol.Collection.Event} event Event\n   * @private\n   */\n  handleDataSourcesAdd_(event) {\n    const dataSource = googAsserts.assertInstanceof(\n      event.element, ngeoDatasourceDataSource);\n    if (this.map_) {\n      const resolution = this.map_.getView().getResolution();\n      googAsserts.assertNumber(resolution);\n      this.syncDataSourceToResolution_(dataSource, resolution);\n    }\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSources', []);\n// DataSources with the ngeox.datasource.DataSources type.\nexports.module.service('ngeoDataSources', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.SyncLayertreeMap\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\n\n/**\n * Service to create layer based on a ngeo.layertree.Controller with a\n * GMFThemesGroup or a GMFThemesLeaf as node object.\n * This layer is also used to synchronise a state of ngeo.layertree.Controller\n * and its corresponding layer in the map.\n *\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSyncLayertreeMap\n */\nconst exports = function($rootScope, ngeoLayerHelper, ngeoWMSTime,\n  gmfThemes) {\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {gmfThemes.GmfOgcServers}\n   * @private\n   */\n  this.ogcServersObject_;\n\n  gmfThemes.getOgcServersObject().then((ogcServersObject) => {\n    this.ogcServersObject_ = ogcServersObject;\n  });\n\n  $rootScope.$on('ngeo-layertree-state', (map, treeCtrl, firstParent) => {\n    this.sync_(/** @type ol.Map */ (map), firstParent);\n  });\n};\n\n\n/**\n * Create, insert (or update) and return a layer from the GmfGroup or the\n * GmfLayer of the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Base|ol.layer.Group} a new layer.\n * @public\n */\nexports.prototype.createLayer = function(treeCtrl, map, dataLayerGroup, opt_position) {\n  /**\n   * @type {ol.layer.Base|ol.layer.Group}\n   */\n  let layer = null;\n  if (treeCtrl.node.children !== undefined && treeCtrl.node.mixed) {\n    // Mixed groups\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  } else if (treeCtrl.node.children === undefined && treeCtrl.parent.node.mixed) {\n    // Layers in a mixed group\n    layer = this.createLeafInAMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.node.children === undefined) {\n    // Layers in a non mixed group\n    this.initGmfLayerInANotMixedGroup_(treeCtrl, map);\n  } else if (treeCtrl.depth === 1 && !treeCtrl.node.mixed) {\n    // First level group non mix\n    layer = this.createGroup_(treeCtrl, map, dataLayerGroup, opt_position);\n  }\n\n  if (layer && treeCtrl.node.metadata.opacity) {\n    layer.setOpacity(treeCtrl.node.metadata.opacity);\n  }\n\n  return layer;\n};\n\n\n/**\n * Synchronise the state of each layers corresponding to the given tree and\n * all its children.\n * @param {ol.Map} map A map that contains the layers.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.sync_ = function(map, treeCtrl) {\n  treeCtrl.traverseDepthFirst((treeCtrl) => {\n    if (treeCtrl.layer && !treeCtrl.node.mixed) {\n      this.updateLayerState_(/** @type ol.layer.Image|ol.layer.Tile */ (treeCtrl.layer), treeCtrl);\n    }\n  });\n};\n\n\n/**\n * Set the active state of a layer based on its treeCtrl state.\n * @param {ol.layer.Tile|ol.layer.Image} layer A layer.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @private\n */\nexports.prototype.updateLayerState_ = function(layer, treeCtrl) {\n  const active = treeCtrl.getState() === 'on';\n  if (treeCtrl.node.type === 'WMTS') {\n    layer.setVisible(active);\n  } else if (!treeCtrl.node.mixed && treeCtrl.depth === 1) {\n    // First level non mixed group\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    const names = [];\n    const styles = [];\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.getState() === 'on') {\n        names.push(treeCtrl.node.layers);\n        const style = (treeCtrl.node.style !== undefined) ? treeCtrl.node.style : '';\n        styles.push(style);\n      }\n    });\n    if (names.length === 0) {\n      layer.setVisible(false);\n    }\n    /** @type {ol.source.ImageWMS} */ (layer.getSource()).updateParams({\n      'LAYERS': names.reverse().join(','),\n      'STYLES': styles.reverse().join(',')\n    });\n    if (names.length !== 0) {\n      layer.setVisible(true);\n    }\n  } else {\n    // WMS mixed layer\n    googAsserts.assertInstanceof(layer, olLayerImage);\n    layer.setVisible(active);\n  }\n};\n\n\n/**\n * Create insert and return a layer group (for not mixed case) or a wmsLayer (for\n * mixed case). Take care about the insertion order in the map in case of first\n * level group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the not first\n *     level group layer.\n * @param {ol.layer.Group} dataLayerGroup the layer group to insert the first\n *     level group layer.\n * @param {number=} opt_position for first level Group, you can precise the\n *     position to add the group in the array of layers of the dataLayerGroup.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createGroup_ = function(treeCtrl, map,\n  dataLayerGroup, opt_position) {\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  let layer = null;\n  const isFirstLevelGroup = treeCtrl.parent.isRoot;\n\n  let printNativeAngle = true;\n  if (groupNode.metadata.printNativeAngle !== undefined) {\n    printNativeAngle = groupNode.metadata.printNativeAngle;\n  }\n\n  if (isFirstLevelGroup) { // First level group\n    layer = this.createLayerFromGroup_(treeCtrl, !!groupNode.mixed);\n    // Insert the layer at the right place\n    const position = opt_position | 0;\n    dataLayerGroup.getLayers().insertAt(position, layer);\n\n  } else { // Other Groups, create a group layer only in mixed groups\n    const inAMixedGroup = !this.isOneParentNotMixed_(treeCtrl);\n    if (inAMixedGroup) {\n      layer = this.createLayerFromGroup_(treeCtrl, true);\n      const layerGroup = /** @type {ol.layer.Group} */ (\n        exports.getLayer(treeCtrl.parent));\n      layerGroup.getLayers().insertAt(0, layer);\n    }\n  }\n\n  layer.set('printNativeAngle', printNativeAngle);\n  return layer;\n};\n\n\n/**\n * Create, insert and return a layer group (for not mixed case) or a wmsLayer\n * for mixed case).\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {boolean} mixed True for a group layer, false for a WMS layer.\n * @return {ol.layer.Image|ol.layer.Group} a new layer.\n * @private\n */\nexports.prototype.createLayerFromGroup_ = function(treeCtrl,\n  mixed) {\n  let layer;\n  const groupNode = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.node);\n  if (mixed) { // Will be one ol.layer per each node.\n    layer = this.layerHelper_.createBasicGroup();\n  } else { // Will be one ol.layer for multiple WMS nodes.\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[groupNode.ogcServer || ''];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(ogcServer.imageType);\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      '',\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      undefined, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n    let hasActiveChildren = false;\n    treeCtrl.traverseDepthFirst((ctrl) => {\n      // Update layer information and tree state.\n      this.updateLayerReferences_(/** @type gmfThemes.GmfLayer */ (ctrl.node), layer);\n      if (ctrl.node.metadata.isChecked) {\n        ctrl.setState('on', false);\n        this.updateLayerState_(/** @type {ol.layer.Image} */ (layer), ctrl);\n        hasActiveChildren = true;\n      }\n    });\n    layer.setVisible(hasActiveChildren);\n    layer.set('layerNodeName', groupNode.name); //Really useful ?\n  }\n  return layer;\n};\n\n\n/**\n * Create and insert a layer from a leaf in a mixed group.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the group to insert the layer.\n * @return {ol.layer.Tile|ol.layer.Image} a new layer.\n * @private\n */\nexports.prototype.createLeafInAMixedGroup_ = function(treeCtrl, map) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  let layer;\n  // Make layer.\n  if (gmfLayer.type === 'WMTS') {\n    layer = this.createWMTSLayer_(/** @type gmfThemes.GmfLayerWMTS */ (gmfLayer));\n  } else {\n    const gmfLayerWMS = /** @type gmfThemes.GmfLayerWMS */ (gmfLayer);\n    const timeParam = this.getTimeParam_(treeCtrl);\n    const ogcServer = this.ogcServersObject_[/** @type string */ (gmfLayerWMS.ogcServer)];\n    googAsserts.assert(ogcServer);\n    googAsserts.assert(ogcServer.url);\n    googAsserts.assert(ogcServer.type);\n    googAsserts.assert(gmfLayerWMS.layers);\n    googAsserts.assert(ogcServer.imageType);\n\n    const opt_params = {STYLES: gmfLayerWMS.style};\n\n    layer = this.layerHelper_.createBasicWMSLayer(\n      ogcServer.url,\n      gmfLayerWMS.layers,\n      ogcServer.imageType,\n      ogcServer.type,\n      timeParam,\n      opt_params, // WMS parameters\n      ogcServer.credential ? 'use-credentials' : 'anonymous'\n    );\n  }\n  // Update layer information and tree state.\n  layer.set('layerNodeName', gmfLayer.name); // Really useful ?\n  this.updateLayerReferences_(gmfLayer, layer);\n  const checked = gmfLayer.metadata.isChecked === true;\n  if (checked) {\n    treeCtrl.setState('on', false);\n  }\n  layer.setVisible(checked);\n  // Insert layer in the map.\n  const layerGroup = /** @type {ol.layer.Group} */ (\n    exports.getLayer(treeCtrl.parent));\n  layerGroup.getLayers().insertAt(0, layer);\n  return layer;\n};\n\n\n/**\n * Update a WMS layer with the given treeCtrl node information. Assumes that\n * the first parent with ogcServer information is linked to the layer to update\n * and that this treeCtrl node is a leafNode.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @param {ol.Map} map A map that contains the layer to update.\n * @private\n */\nexports.prototype.initGmfLayerInANotMixedGroup_ = function(treeCtrl, map) {\n  const leafNode = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const firstLevelGroup = this.getFirstLevelGroupCtrl_(treeCtrl);\n  googAsserts.assert(firstLevelGroup);\n  const layer = /** @type {ol.layer.Image} */ (firstLevelGroup.layer);\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  // Update layer information and tree state.\n  this.updateLayerReferences_(leafNode, layer);\n  if (leafNode.metadata.isChecked) {\n    treeCtrl.setState('on', false);\n    this.updateLayerState_(layer, firstLevelGroup);\n  } else {\n    treeCtrl.parent.refreshState();\n  }\n};\n\n\n/**\n * Create and return a Tile layer.\n * @param {gmfThemes.GmfLayerWMTS} gmfLayerWMTS A leaf node.\n * @return {ol.layer.Tile} a Tile WMTS layer. (Source and capabilities can come\n *     later).\n * @private\n */\nexports.prototype.createWMTSLayer_ = function(gmfLayerWMTS) {\n  const newLayer = new olLayerTile();\n  googAsserts.assert(gmfLayerWMTS.url);\n  googAsserts.assert(gmfLayerWMTS.layer);\n  this.layerHelper_.createWMTSLayerFromCapabilitites(gmfLayerWMTS.url,\n    gmfLayerWMTS.layer, gmfLayerWMTS.matrixSet, gmfLayerWMTS.dimensions).then((layer) => {\n    newLayer.setSource(layer.getSource());\n    newLayer.set('capabilitiesStyles', layer.get('capabilitiesStyles'));\n  });\n  return newLayer;\n};\n\n\n/**\n * Update properties of a layer with the node of a given leafNode.\n * @param {gmfThemes.GmfLayer} leafNode a leaf node.\n * @param {ol.layer.Base} layer A layer.\n * @private\n */\nexports.prototype.updateLayerReferences_ = function(leafNode, layer) {\n  const id = olBase.getUid(leafNode);\n  const querySourceIds = layer.get('querySourceIds') || [];\n  querySourceIds.push(id);\n  layer.set('querySourceIds', querySourceIds);\n\n  const disclaimer = leafNode.metadata.disclaimer;\n  if (disclaimer) {\n    const disclaimers = layer.get('disclaimers') || [];\n    disclaimers.push(leafNode.metadata.disclaimer);\n    layer.set('disclaimers', disclaimers);\n  }\n};\n\n\n/**\n * Get the time parameter for a WMS Layer. If it's a group and it doesn't have\n * time, get the first time parameter available in any child.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {string|undefined} A wms time param.\n * @private\n */\nexports.prototype.getTimeParam_ = function(treeCtrl) {\n  let wmsTime;\n  let timeParam;\n  const node = treeCtrl.node;\n  if (node.time) {\n    wmsTime = node.time;\n  } else if (node.children) {\n    treeCtrl.traverseDepthFirst((treeCtrl) => {\n      if (treeCtrl.node.children === undefined && treeCtrl.node.time) {\n        wmsTime = treeCtrl.node.time;\n        return ngeoLayertreeController.VisitorDecision.STOP;\n      }\n    });\n  }\n  if (wmsTime) {\n    const timeValues = this.ngeoWMSTime_.getOptions(wmsTime)['values'];\n    timeParam = this.ngeoWMSTime_.formatWMSTimeParam(wmsTime, {\n      start: timeValues[0] || timeValues,\n      end: timeValues[1]\n    });\n  }\n  return timeParam;\n};\n\n\n/**\n * Return true if a parent tree is mixed, based on its node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {boolean} True is any parent is mixed. False Otherwise.\n * @private\n */\nexports.prototype.isOneParentNotMixed_ = function(treeCtrl) {\n  let tree = treeCtrl.parent;\n  let isOneParentNotMix = false;\n  do {\n    isOneParentNotMix = tree.node.mixed === false;\n    tree = tree.parent;\n  }\n  while (tree.parent && !isOneParentNotMix);\n  return isOneParentNotMix;\n};\n\n\n/**\n * Return the first parent, from the root parent, that is not mixed.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ngeo.layertree.Controller} The first not mixed parent.\n * @private\n */\nexports.prototype.getFirstLevelGroupCtrl_ = function(\n  treeCtrl) {\n  let tree = treeCtrl;\n  while (!tree.parent.isRoot) {\n    tree = tree.parent;\n  }\n  return tree;\n};\n\n\n/**\n * Return the layer used by the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller.\n * @return {ol.layer.Base} The layer.\n * @public\n */\nexports.getLayer = function(treeCtrl) {\n  let tree = treeCtrl;\n  let layer = null;\n  while (!tree.isRoot && layer === null) {\n    if (tree.layer) {\n      layer = tree.layer;\n    }\n    tree = tree.parent;\n  }\n  return layer;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSyncLayertreeMap', [\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfSyncLayertreeMap', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureComponent\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\n\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport googAsserts from 'goog/asserts.js';\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/** @suppress {extraRequire} */\nimport ngeoEditingAttributesComponent from 'ngeo/editing/attributesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingCreatefeatureComponent from 'ngeo/editing/createfeatureComponent.js';\n\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\n\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureComponent', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n  ngeoEditingAttributesComponent.name,\n  ngeoEditingCreatefeatureComponent.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureComponent', require('./editFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to insert, modify and delete features from a single layer.\n * It allows you to modify the geometry of the feature in addition to its\n * attributes.\n *\n * In order to modify or delete a feature, you must click on the map at the\n * location of the feature to select it first.\n *\n * In order to create a new feature, you use the \"Draw\" button and digitize\n * the feature on the map.\n *\n * Example:\n *\n *     <gmf-editfeature\n *         gmf-editfeature-dirty=\"ctrl.dirty\"\n *         gmf-editfeature-editabletreectrl=\"::ctrl.treeCtrl\"\n *         gmf-editfeature-map=\"::ctrl.map\"\n *         gmf-editfeature-state=\"efsCtrl.state\"\n *         gmf-editfeature-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeature-vector=\"::ctrl.vectorLayer\">\n *         gmf-editfeature-closeaftersave=\"::ctrl.closeaftersave\">\n *     </gmf-editfeature>\n *\n * @htmlAttribute {boolean} gmf-editfeature-dirty Flag that is toggled as soon\n *     as the feature changes, i.e. if any of its properties change, which\n *     includes the geometry.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeature-editabletreectrl\n *     A reference to the editable Layertree controller, which contains a\n *     a reference to the node and WMS layer.\n * @htmlAttribute {ol.Map} gmf-editfeature-map The map.\n * @htmlAttribute {string} gmf-editfeature-state The state property shared\n *     with the `gmf-editfeatureselector` directive. For more info, see in\n *     that directive.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeature-vector The vector layer in\n *     which to draw the vector features.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureController as efCtrl',\n    scope: {\n      'dirty': '=gmfEditfeatureDirty',\n      'editableTreeCtrl': '=gmfEditfeatureEditabletreectrl',\n      'map': '<gmfEditfeatureMap',\n      'state': '=gmfEditfeatureState',\n      'tolerance': '<?gmfEditfeatureTolerance',\n      'vectorLayer': '<gmfEditfeatureVector',\n      'closeAfterSave': '=?gmfEditfeatureCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeature',\n  exports.component_);\n\n\n/**\n * @param {jQuery} $element Element.\n * @param {angular.$q} $q Angular $q service.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {gmf.editing.EditFeature} gmfEditFeature Gmf edit feature service.\n * @param {gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @param {gmf.editing.XSDAttributes} gmfXSDAttributes The gmf XSDAttributes service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureController\n */\nexports.Controller_ = function($element, $q, $scope, $timeout,\n  gettextCatalog, gmfEditFeature, gmfSnapping, gmfXSDAttributes,\n  ngeoEventHelper, ngeoFeatureHelper, ngeoLayerHelper, ngeoToolActivateMgr) {\n\n\n  // === Binding properties ===\n\n  /**\n   * Flag that is toggled as soon as the feature changes, i.e. if any of its\n   * properties change, which includes the geometry.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty;\n\n  /**\n   * @type {ngeo.layertree.Controller}\n   * @export\n   */\n  this.editableTreeCtrl;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * The state property shared with the `gmf-editfeatureselector` directive.\n   * For more info, see in that directive.\n   * @type {string}\n   * @export\n   */\n  this.state;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave = false;\n\n  // === Injected properties ===\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {gmf.editing.EditFeature}\n   * @private\n   */\n  this.gmfEditFeature_ = gmfEditFeature;\n\n  /**\n   * @type {gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n\n  /**\n   * @type {gmf.editing.XSDAttributes}\n   * @private\n   */\n  this.gmfXSDAttributes_ = gmfXSDAttributes;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n  // === Private properties ===\n\n  /**\n   * @type {gmfThemes.GmfLayer}\n   * @private\n   */\n  this.editableNode_;\n\n  /**\n   * @type {ol.layer.Image|ol.layer.Tile}\n   * @private\n   */\n  this.editableWMSLayer_;\n\n  /**\n   * A deferred object resolved after the confirm modal \"continue w/o saving\" or\n   * \"save\" buttons are clicked.\n   * @type {angular.$q.Deferred|null}\n   * @private\n   */\n  this.confirmDeferred_ = null;\n\n  /**\n   * Flag that controls the visibility of the modal that manages unsaved\n   * modifications.\n   * @type {boolean}\n   * @export\n   */\n  this.unsavedModificationsModalShown = false;\n\n  /**\n   * Flag that is toggled while a request is pending, either one to get\n   * features when a map is clicked or when saving\n   * @private\n   */\n  this.pending = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.createActive = false;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.createToolActivate = new ngeoMiscToolActivate(this, 'createActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  this.scope_.$watch(\n    () => this.feature,\n    this.handleFeatureChange_.bind(this)\n  );\n\n  /**\n   * @type {number|string|undefined}\n   * @export\n   */\n  this.featureId = undefined;\n\n  /**\n   * @type {ol.Collection}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modify_;\n\n  /**\n   * @type {ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate;\n\n  /**\n   * @type {ngeo.Menu}\n   * @private\n   */\n  this.menu_ = new ngeoMenu({\n    actions: [{\n      cls: 'fa fa-arrows',\n      label: gettextCatalog.getString('Move'),\n      name: 'move'\n    }, {\n      cls: 'fa fa-rotate-right',\n      label: gettextCatalog.getString('Rotate'),\n      name: 'rotate'\n    }]\n  });\n\n  /**\n   * @type {ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_;\n\n  /**\n   * @type {ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?Array.<!ngeox.Attribute>}\n   * @export\n   */\n  this.attributes = null;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showServerError = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorMessage = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.serverErrorType = null;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n\n  // (1) Set default values and other properties\n  this.dirty = this.dirty === true;\n  this.editableNode_ = /** @type {gmfThemes.GmfLayer} */ (\n    this.editableTreeCtrl.node);\n  this.features = this.vectorLayer.getSource().getFeaturesCollection();\n  this.tolerance = this.tolerance !== undefined ? this.tolerance : 10;\n\n  // (1.1) Set editable WMS layer\n  const layer = gmfLayertreeSyncLayertreeMap.getLayer(this.editableTreeCtrl);\n  googAsserts.assert(\n    layer instanceof olLayerImage || layer instanceof olLayerTile);\n  this.editableWMSLayer_ = layer;\n\n  // (1.2) Create, set and initialize interactions\n  this.modify_ = new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.features,\n    style: this.ngeoFeatureHelper_.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.features,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  this.initializeInteractions_();\n\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  // (1.3) Add menu to map\n  this.map.addOverlay(this.menu_);\n\n\n  // (2) Watchers and event listeners\n  this.scope_.$watch(\n    () => this.createActive,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.gmfSnapping_.ensureSnapInteractionsOnTop();\n      }\n    }\n  );\n\n  this.scope_.$on('$destroy', this.handleDestroy_.bind(this));\n\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(\n      this.features,\n      'add',\n      this.handleFeatureAdd_,\n      this\n    )\n  );\n\n  this.scope_.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  this.scope_.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      const state = exports.State;\n      if (newValue === state.STOP_EDITING_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.STOP_EDITING_EXECUTE;\n        });\n      } else if (newValue === state.DEACTIVATE_PENDING) {\n        this.confirmCancel().then(() => {\n          this.state = state.DEACTIVATE_EXECUTE;\n        });\n      }\n    }\n  );\n\n  this.scope_.$watch(\n    () => this.unsavedModificationsModalShown,\n    (newValue, oldValue) => {\n      // Reset stop request when closing the confirmation modal\n      if (oldValue && !newValue) {\n        this.state = exports.State.IDLE;\n      }\n    }\n  );\n\n\n  // (3) Get attributes\n  this.gmfXSDAttributes_.getAttributes(this.editableNode_.id).then(\n    this.setAttributes_.bind(this));\n\n\n  // (4) Toggle\n  this.toggle_(true);\n\n};\n\n\n/**\n * Save the currently selected feature modifications.\n * @export\n */\nexports.Controller_.prototype.save = function() {\n  googAsserts.assert(this.attributes);\n\n  const feature = this.feature.clone();\n  feature.setId(this.feature.getId());\n  const id = this.featureId;\n\n  this.pending = true;\n\n  const dateFormatter = new DateFormatter();\n  for (const attribute of this.attributes) {\n    if (attribute.format) {\n      if (this.feature.get(attribute.name)) {\n        const name = this.feature.get(attribute.name);\n        googAsserts.assertString(name);\n        const value = dateFormatter.parseDate(name, attribute.format);\n        let jsonFormat = 'Y-m-d\\\\TH:i:s';\n        if (attribute.type === 'date') {\n          jsonFormat = 'Y-m-d';\n        } else if (attribute.type === 'time') {\n          jsonFormat = 'H:i:s';\n        } else if (attribute.type === 'datetime') {\n          // Time zone correction\n          value.setMinutes(value.getMinutes() + value.getTimezoneOffset());\n        }\n        feature.set(attribute.name, dateFormatter.formatDate(value, jsonFormat));\n      } else {\n        // Shouldn't be set to an empty string\n        feature.set(attribute.name, null);\n      }\n    }\n  }\n\n  const promise = id ?\n    this.gmfEditFeature_.updateFeature(\n      this.editableNode_.id,\n      feature\n    ) :\n    this.gmfEditFeature_.insertFeatures(\n      this.editableNode_.id,\n      [feature]\n    );\n  promise.then(\n    (response) => {\n      this.dirty = false;\n      this.pending = false;\n      this.handleEditFeature_(response);\n      this.gmfSnapping_.refresh();\n      if (this.closeAfterSave) {\n        this.cancel();\n      }\n    },\n    (response) => {\n      this.showServerError = true;\n      this.pending = false;\n      this.serverErrorType =  `error type : ${response.data['error_type']}`;\n      this.serverErrorMessage = `error message : ${response.data['message']}`;\n    }\n  );\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.cancel = function() {\n  this.dirty = false;\n  this.feature = null;\n  this.features.clear();\n  this.menu_.close();\n  this.unsavedModificationsModalShown = false;\n};\n\n\n/**\n * Check if there are unsaved modifications. If there aren't, then cancel.\n * Used by the 'cancel' button in the template.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @export\n */\nexports.Controller_.prototype.confirmCancel = function() {\n  return this.checkForModifications_().then(() => {\n    this.cancel();\n  });\n};\n\n\n/**\n * Check if there's a feature selected and if it contains modifications\n * (a.k.a. is dirty), then the confirmation modal is shown.\n * @param {boolean=} scopeApply Whether to force scope to refresh or not.\n *     when the confirm modal is not dismissed.\n * @return {angular.$q.Promise} The promise attached to the confirm deferred\n *     object.\n * @private\n */\nexports.Controller_.prototype.checkForModifications_ = function(\n  scopeApply) {\n  this.confirmDeferred_ = this.q_.defer();\n  if (this.feature && this.dirty) {\n    this.unsavedModificationsModalShown = true;\n    if (scopeApply) {\n      this.scope_.$apply();\n    }\n  } else {\n    this.confirmDeferred_.resolve();\n  }\n\n  return this.confirmDeferred_.promise;\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.continueWithoutSaving = function() {\n  this.cancel();\n  this.confirmDeferred_.resolve();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.delete = function() {\n  const msg = this.gettextCatalog_.getString(\n    'Do you really want to delete the selected feature?');\n  // Confirm deletion first\n  if (confirm(msg)) {\n    this.pending = true;\n\n    // (1) Launch request\n    this.gmfEditFeature_.deleteFeature(\n      this.editableNode_.id,\n      this.feature\n    ).then(\n      (response) => {\n        this.dirty = false;\n        this.pending = false;\n        this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n\n        // (2) Reset selected feature\n        this.cancel();\n      },\n      (response) => {\n        this.showServerError = true;\n        this.pending = false;\n        this.serverErrorType =  `error type : ${response.data['error_type']}`;\n        this.serverErrorMessage = `error message : ${response.data['message']}`;\n      }\n    );\n\n  }\n};\n\n\n/**\n * Called when the modal 'save' button is clicked. Do as if the user had\n * clicked on the 'save' input button in the form, which allows the form\n * to be validated.\n * @export\n */\nexports.Controller_.prototype.submit = function() {\n  // Use timeout to prevent the digest already in progress\n  // due to clicking on the modal button to throw an error.\n  this.timeout_(() => {\n    this.element_.find('input[type=\"submit\"]').click();\n  }, 0);\n};\n\n/**\n * Called after an insert, update or delete request.\n * @param {angular.$http.Response} resp Ajax response.\n * @private\n */\nexports.Controller_.prototype.handleEditFeature_ = function(resp) {\n  const features = new olFormatGeoJSON().readFeatures(resp.data);\n  if (features.length) {\n    this.feature.setId(features[0].getId());\n    this.ngeoLayerHelper_.refreshWMSLayer(this.editableWMSLayer_);\n  }\n  if (this.confirmDeferred_) {\n    this.confirmDeferred_.resolve();\n  }\n};\n\n\n/**\n * @param {!Array.<ngeox.Attribute>} attributes Attributes.\n * @private\n */\nexports.Controller_.prototype.setAttributes_ = function(attributes) {\n  // Set attributes\n  this.attributes = attributes;\n  for (const attribute of attributes) {\n    if (attribute.type == 'date') {\n      attribute.format = 'Y-m-d';\n      attribute.mask = '9999-19-39';\n    } else if (attribute.type == 'time') {\n      attribute.format = 'H:i';\n      attribute.mask = '29:59';\n    } else if (attribute.type == 'datetime') {\n      attribute.format = 'Y-m-d H:i';\n      attribute.mask = '9999-19-39 29:59';\n    }\n  }\n\n  // Get geom type from attributes and set\n  const geomAttr = ngeoFormatXSDAttribute.getGeometryAttribute(\n    this.attributes\n  );\n  if (geomAttr && geomAttr.geomType) {\n    this.geomType = geomAttr.geomType;\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeatureAdd_ = function(evt) {\n  this.feature = null;\n  this.timeout_(() => {\n    googAsserts.assert(this.attributes);\n    const feature = evt.element;\n    googAsserts.assertInstanceof(feature, olFeature);\n    const dateFormatter = new DateFormatter();\n    for (const attribute of this.attributes) {\n      if (attribute.format) {\n        if (feature.get(attribute.name)) {\n          let value;\n          if (attribute.type === 'datetime') {\n            value = new Date(feature.get(attribute.name));\n            // Time zone correction\n            value.setMinutes(value.getMinutes() - value.getTimezoneOffset());\n          } else {\n            let jsonFormat = '';\n            if (attribute.type === 'date') {\n              jsonFormat = 'Y-m-d';\n            } else if (attribute.type === 'time') {\n              jsonFormat = 'H:i:s';\n            }\n            const name = feature.get(attribute.name);\n            googAsserts.assertString(name);\n            value = dateFormatter.parseDate(name, jsonFormat);\n          }\n          feature.set(attribute.name, dateFormatter.formatDate(value, attribute.format));\n        } else {\n          // Shouldn't be set to an empty string\n          feature.set(attribute.name, null);\n        }\n      }\n    }\n    this.feature = feature;\n    this.createActive = false;\n    if (!feature.getId()) {\n      this.dirty = true;\n    }\n    this.scope_.$apply();\n  }, 0);\n};\n\n\n/**\n * Activate or deactivate this directive.\n * @param {boolean} active Whether to activate this directive or not.\n * @private\n */\nexports.Controller_.prototype.toggle_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const createUid = ['create-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n\n    // FIXME\n    //this.registerInteractions_();\n\n    keys.push(olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this));\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(createUid, this.createToolActivate, false);\n    toolMgr.registerTool(createUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.createToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n  } else {\n\n    // FIXME\n    //this.unregisterInteractions_();\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(createUid, this.createToolActivate);\n    toolMgr.unregisterTool(createUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.createToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.createActive = false;\n    this.cancel();\n  }\n\n  this.modify_.setActive(active);\n  this.mapSelectActive = active;\n  this.editableTreeCtrl.properties['editing'] = active;\n\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n  }\n};\n\n\n/**\n * Called when the map is clicked.\n *\n * (1) If a vector feature was clicked, don't do anything (i.e. allow the\n *     interactions to do their bidings without selecting a new feature).\n *\n * (2) Otherwise, if there is a feature being edited and has unsaved\n *     modifications, show the confirmation modal asking the user what to do\n *     about it.\n *\n * (3) If there's no feature selected or we have one without unsaved\n *     modifications or with modifications that were canceled, launch a query\n *     to fetch the features at the clicked location.\n *\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n  const coordinate = evt.coordinate;\n  const pixel = evt.pixel;\n\n  // (1) Check if we clicked on an existing vector feature, i.e the one\n  //     selected. In that case, no need to do any further action.\n  const feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  if (feature) {\n    return;\n  }\n\n  // (2) If a feature is being edited and has unsaved changes, show modal\n  //     to let the user decide what to do\n  this.checkForModifications_(true).then(() => {\n\n    const map = this.map;\n    const view = map.getView();\n    const resolution = view.getResolution();\n    const buffer = resolution * this.tolerance;\n    const extent = olExtent.buffer(\n      [coordinate[0], coordinate[1], coordinate[0], coordinate[1]],\n      buffer\n    );\n\n    // (3) Launch query to fetch features\n    this.gmfEditFeature_.getFeaturesInExtent(\n      [this.editableNode_.id],\n      extent\n    ).then(this.handleGetFeatures_.bind(this));\n\n    // (4) Clear any previously selected feature\n    this.cancel();\n\n    // (5) Pending\n    this.pending = true;\n  });\n};\n\n\n/**\n * @param {Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    const type = this.ngeoFeatureHelper_.getType(feature);\n    if (type === ngeoGeometryType.POLYGON || type === ngeoGeometryType.MULTI_POLYGON ||\n        type === ngeoGeometryType.LINE_STRING || type === ngeoGeometryType.MULTI_LINE_STRING) {\n      this.menu_.open(coordinate);\n    }\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @private\n */\nexports.Controller_.prototype.handleGetFeatures_ = function(features) {\n  this.pending = false;\n\n  this.timeout_(() => {\n    if (features.length) {\n      const feature = features[0];\n      this.feature = feature;\n      this.features.push(feature);\n    }\n  }, 0);\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Unregister interactions, i.e. set them inactive and remove them from the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * @param {?ol.Feature} newFeature The new feature.\n * @param {?ol.Feature} oldFeature The old feature.\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function(\n  newFeature, oldFeature\n) {\n\n  let geom;\n  if (oldFeature) {\n    olEvents.unlisten(oldFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = oldFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.unlisten(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.unregisterInteractions_();\n  }\n\n  if (newFeature) {\n    this.featureId = newFeature.getId();\n    olEvents.listen(newFeature, 'propertychange', this.handleFeaturePropertyChange_, this);\n    geom = newFeature.getGeometry();\n    googAsserts.assert(geom);\n    olEvents.listen(\n      geom,\n      'change',\n      this.handleFeatureGeometryChange_,\n      this\n    );\n    this.registerInteractions_();\n\n    this.gmfSnapping_.ensureSnapInteractionsOnTop();\n\n    // The `ui-date` triggers an unwanted change, i.e. it converts the text\n    // to Date, which makes the directive dirty when it shouldn't... to\n    // bypass this, we reset the dirty state here. We do so only if we're\n    // editing an existing feature\n    if (this.featureId) {\n      this.timeout_(() => {\n        this.dirty = false;\n        this.scope_.$apply();\n      }, 0);\n    }\n  } else {\n    this.featureId = undefined;\n  }\n\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function() {\n  this.dirty = true;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureGeometryChange_ = function() {\n  this.dirty = true;\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      break;\n  }\n};\n\n\n/**\n * @param {ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.features.clear();\n  this.handleFeatureChange_(null, this.feature);\n  this.feature = null;\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.toggle_(false);\n  this.handleMapSelectActiveChange_(false);\n  this.unregisterInteractions_();\n};\n\n\nexports.controller('GmfEditfeatureController',\n  exports.Controller_);\n\n\n/**\n * The different possible values of the `state` inner property.\n * @enum {string}\n */\nexports.State = {\n  /**\n   * The default state. While idle, nothing happens.\n   * @type {string}\n   */\n  IDLE: 'idle',\n  /**\n   * The state active after the deactivation of the editing tools and the\n   * unsaved modifications were saved or discarded.\n   * @type {string}\n   */\n  DEACTIVATE_EXECUTE: 'deactivate_execute',\n  /**\n   * The state active when the deactivation of the editing tools is in\n   * progress while there are unsaved modifications.\n   * @type {string}\n   */\n  DEACTIVATE_PENDING: 'deactivate_pending',\n  /**\n   * Final state set after the \"stop editing\" button has been clicked while\n   * no unsaved modifications were made or if the user saved them or confirmed\n   * to continue without saving.\n   * @type {string}\n   */\n  STOP_EDITING_EXECUTE: 'stop_editing_execute',\n  /**\n   * The state that is active while when the \"stop editing\" button has been\n   * clicked but before any confirmation has been made to continue.\n   * @type {string}\n   */\n  STOP_EDITING_PENDING: 'stop_editing_pending'\n};\n\n\nexport default exports;\n","/**\n * @module gmf.theme.Manager\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * Manage a tree with children. This service can be used in mode 'flush'\n * (default) or not (mode 'add'). In mode 'flush', each theme, group or group\n * by layer that you add will replace the previous children's array. In mode\n * 'add', children will be just pushed in this array. The default state can be\n * changed by setting the value `gmfTreeManagerModeFlush`, e.g.:\n *\n *    let module = angular.module('app');\n *    module.value('gmfTreeManagerModeFlush', false);\n *\n * This service's theme is a GmfTheme with only children and a name.\n * Thought to be the tree source of the gmf layertree directive.\n * @constructor\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n * @param {boolean} gmfTreeManagerModeFlush Flush mode active?\n * @param {gmf.layertree.TreeManager} gmfTreeManager the tree manager.\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @ngInject\n * @struct\n * @ngdoc service\n * @ngname gmfTreeManager\n */\nconst exports = function($rootScope, gmfThemes, gmfTreeManagerModeFlush,\n  gmfTreeManager, ngeoStateManager) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$rootScope_ = $rootScope;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modeFlush = gmfTreeManagerModeFlush;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.themeName_ = '';\n};\n\n\n/**\n * Set the current theme name (mode 'flush' only) and add its children. Add\n * only groups that are not already in the tree.\n * @param {!gmfThemes.GmfTheme} theme A theme object.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.prototype.addTheme = function(theme, opt_silent) {\n  if (this.modeFlush) {\n    this.ngeoStateManager_.updateState({\n      'theme': theme.name\n    });\n    this.setThemeName(theme.name);\n    this.gmfTreeManager_.setFirstLevelGroups(theme.children);\n  } else {\n    this.gmfTreeManager_.addFirstLevelGroups(theme.children, false, opt_silent);\n  }\n};\n\n\n/**\n * @return {string} The theme name. Will be empty on 'not flush' mode.\n * @export\n */\nexports.prototype.getThemeName = function() {\n  return this.themeName_;\n};\n\n\n/**\n * @return {boolean} true if the theme is loading.\n * @export\n */\nexports.prototype.isLoading = function() {\n  return !this.gmfThemes_.loaded;\n};\n\n\n/**\n * @param {string} themeName wanted theme name.\n * @param {string} fallbackThemeName fallback theme name.\n * @export\n */\nexports.prototype.updateCurrentTheme = function(themeName, fallbackThemeName) {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    if (!themeName && this.modeFlush) {\n      // In flush mode load current theme private groups\n      const fallbackTheme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (fallbackThemeName));\n      if (fallbackTheme) {\n        this.gmfTreeManager_.addFirstLevelGroups(fallbackTheme.children, false, false);\n      }\n    }\n    if (themeName) {\n      const theme = gmfThemeThemes.findThemeByName(themes, /** @type {string} */ (themeName));\n      if (theme) {\n        this.addTheme(theme, true);\n      }\n    } else {\n      this.setThemeName(fallbackThemeName);\n    }\n  });\n};\n\n\n/**\n * @param {string} name The new theme name.\n * @param {boolean=} opt_silent Don't emit a theme change event, default is false.\n */\nexports.prototype.setThemeName = function(name, opt_silent) {\n  this.themeName_ = name;\n  if (!opt_silent) {\n    this.$rootScope_.$emit(exports.EventType.THEME_NAME_SET, name);\n  }\n};\n\n\n/**\n * Remove all groups.\n * @export\n */\nexports.prototype.removeAll = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @enum {string}\n */\nexports.EventType = {\n  /**\n   * Triggered when the theme name change.\n   */\n  THEME_NAME_SET: 'gmf-thememanager-theme_name_set'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfThemeManager', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoStatemanagerService.module.name,\n]);\n\n/**\n * The default value for `modeFlush` that `gmf.layertree.TreeManager` is initialized with.\n */\nexports.module.value('gmfTreeManagerModeFlush', true);\n\nexports.module.service('gmfThemeManager', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.DataSource\n */\n/**\n * @implements {ngeox.datasource.DataSource}\n */\nconst exports = class {\n\n  /**\n   * A `ngeo.datasource.DataSource` represents a single source of data, which\n   * can combine different type of servers to display or fetch the data. It can\n   * serve as a point of entry to get all the information about a single data\n   * source.\n   *\n   * You can use the information in a data source to do all sorts of things:\n   *  - create `ol.layer.Layer` objects using the WMS, WMTS or even WFS\n   *    information\n   *  - issue WMS/WFS queries\n   *  - know whether the data is visible or not\n   *  - apply filter rules on it\n   *\n   * @struct\n   * @param {ngeox.datasource.DataSourceOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * A data source is considered 'in range' when it is synchronized to\n     * a map view and the resolution of that view is within the range of\n     * the `maxResolution` and `minResolution`. These 2 properties are\n     * required for the `inRange` property to be dynamic, otherwise its\n     * value is always `true` by default.\n     *\n     * The synchronization is made in the `ngeo.datasource.DataSources`\n     * service.\n     *\n     * @type {boolean}\n     * @private\n     */\n    this.inRange_ = options.inRange !== false;\n\n    /**\n     * Whether the data source is visible or not, i.e. whether its is ON or OFF.\n     * Defaults to `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible === true;\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * The attributes of the data source.\n     *\n     * Note: `attributes` is not using the conventionnal getter/setter due\n     * to:  See: https://github.com/google/closure-compiler/issues/1089\n     *\n     * @type {?Array.<ngeox.Attribute>}\n     * @export\n     */\n    this.attributes = options.attributes || null;\n\n    /**\n     * (Required) The data source id.\n     * @type {number}\n     * @private\n     */\n    this.id_ = options.id;\n\n    /**\n     * The name of an attribute among the attributes of the data source.\n     * The value of that attribute, in records, can be used to identify\n     * each record individually.\n     * @type {string|undefined}\n     * @private\n     */\n    this.identifierAttribute_ = options.identifierAttribute;\n\n    /**\n     * Maximum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.maxResolution_ = options.maxResolution;\n\n    /**\n     * Minimum resolution where the data source can be displayed or queried.\n     * @type {number|undefined}\n     * @private\n     */\n    this.minResolution_ = options.minResolution;\n\n    /**\n     * (Required) A human-readable name for the data source.\n     * @type {string}\n     * @private\n     */\n    this.name_ = options.name;\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {boolean} In range\n   * @export\n   */\n  get inRange() {\n    return this.inRange_;\n  }\n\n  /**\n   * @param {boolean} inRange In range\n   * @export\n   */\n  set inRange(inRange) {\n    this.inRange_ = inRange;\n  }\n\n  /**\n   * @return {boolean} Visible\n   * @export\n   */\n  get visible() {\n    return this.visible_;\n  }\n\n  /**\n   * @param {boolean} visible Visible\n   * @export\n   */\n  set visible(visible) {\n    this.visible_ = visible;\n  }\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {?Array.<ngeox.Attribute>} Attributes\n   * @export\n   */\n  getAttributes() {\n    return this.attributes;\n  }\n\n  /**\n   * @param {?Array.<ngeox.Attribute>} attributes Attributes\n   * @export\n   */\n  setAttributes(attributes) {\n    this.attributes = attributes;\n  }\n\n  /**\n   * @return {number} Id\n   * @export\n   */\n  get id() {\n    return this.id_;\n  }\n\n  /**\n   * @return {string|undefined} Identifier attribute\n   * @export\n   */\n  get identifierAttribute() {\n    return this.identifierAttribute_;\n  }\n\n  /**\n   * @return {number|undefined} Maximum resolution\n   * @export\n   */\n  get maxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * @return {number|undefined} Minimum resolution\n   * @export\n   */\n  get minResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * @return {string} Name\n   * @export\n   */\n  get name() {\n    return this.name_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * Whether the data source is queryable or not.\n   * @return {boolean} Whether the data source is queryable or not.\n   * @export\n   */\n  get queryable() {\n    return false;\n  }\n\n  /**\n   * @return {boolean} Whether the data source supports a dynamic `inRange`\n   *     property or not, i.e. whether it can be calculated.\n   * @export\n   */\n  get supportsDynamicInRange() {\n    return this.maxResolution !== null || this.minResolution !== null;\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.rule.Select\n */\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\n\nconst exports = class extends ngeoRuleRule {\n\n  /**\n   * A select rule, which allows the selection of multiple values among a list\n   * of choices.\n   *\n   * The expression property holds the list of selected choices, which is\n   * comma-separated.\n   *\n   * @struct\n   * @param {!ngeox.rule.SelectOptions} options Options.\n   */\n  constructor(options) {\n\n    options.operator = ngeoRuleRule.OperatorType.EQUAL_TO;\n    options.type = ngeoFormatAttributeType.SELECT;\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.choices_ = options.choices;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {Array.<string>} Choices\n   * @export\n   */\n  get choices() {\n    return this.choices_;\n  }\n\n  // === Calculated property getters ===\n\n  /**\n   * @return {Array.<string>} Selected choices\n   * @export\n   */\n  get selectedChoices() {\n    let selectedChoices;\n    if (this.expression) {\n      const stringExpression = String(this.expression);\n      selectedChoices = stringExpression.split(',');\n    } else {\n      selectedChoices = [];\n    }\n    return selectedChoices;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.ToolActivateMgr\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a service to manage the activation of `ngeo.misc.ToolActivate` objects.\n *\n * Example:\n *\n * Each tool must be registered before using it.\n *\n *     let tool = new ngeo.misc.ToolActivate(interaction, 'active');\n *     ngeoToolActivateMgr.registerTool('mapTools', tool);\n *\n * A tool will be registered in a group identified by a group name.\n * Once registered a tool can be activated and deactivated. When activating a\n * tool, all others tools in the same group will be deactivated.\n *\n *     ngeoToolActivateMgr.activateTool(tool);\n *     ngeoToolActivateMgr.deactivateTool(tool);\n *\n * See our live examples:\n * [../examples/mapquery.html](../examples/mapquery.html)\n * [../examples/toolActivate.html](../examples/toolActivate.html)\n *\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoToolActivateMgr\n * @ngInject\n */\nconst exports = function($rootScope) {\n\n  /**\n   * @type {!Object.<string, Array.<ngeox.miscToolActivateMgrEntry>>}\n   * @private\n   */\n  this.groups_ = {};\n\n  /**\n   * The scope.\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $rootScope;\n};\n\n\n/**\n * Register a tool.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to register.\n * @param {boolean=} opt_defaultActivate If true, this tool will be activated\n *     when all other tools in the group are deactivated.\n * @export\n */\nexports.prototype.registerTool = function(groupName, tool,\n  opt_defaultActivate) {\n  let entries = this.groups_[groupName];\n  if (!entries) {\n    entries = this.groups_[groupName] = [];\n  }\n\n  const unlisten = this.scope_.$watch(\n    tool.getActive,\n    (newVal, oldVal) => {\n      if (newVal === oldVal) {\n        return;\n      }\n      if (newVal) {\n        this.deactivateTools_(groupName, tool);\n      } else {\n        this.activateDefault_(groupName);\n      }\n    });\n\n  entries.push({\n    tool: tool,\n    defaultTool: opt_defaultActivate || false,\n    unlisten: unlisten\n  });\n\n  if (googAsserts.ENABLE_ASSERTS) {\n    // check that only one default tool per group exists\n    let defaultTools = 0;\n    entries.forEach((entry) => {\n      if (entry.defaultTool) {\n        defaultTools++;\n      }\n    });\n    googAsserts.assert(\n      defaultTools <= 1, `more than one default tool in group ${groupName}`);\n  }\n};\n\n\n/**\n * Unregister a tool from a group.\n * @param {string} groupName Name of the group of this tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to unregister.\n * @export\n */\nexports.prototype.unregisterTool = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      if (entries[i].tool == tool) {\n        entries[i].unlisten();\n        entries.splice(i, 1);\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * Unregister each tool from a group.\n * @param {string} groupName Name of the group of tools to unregister.\n * @export\n */\nexports.prototype.unregisterGroup = function(groupName) {\n  const entries = this.groups_[groupName];\n  if (entries) {\n    for (let i = 0; i < entries.length; i++) {\n      entries[i].unlisten();\n    }\n    delete this.groups_[groupName];\n  }\n};\n\n\n/**\n * Activate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @export\n */\nexports.prototype.activateTool = function(tool) {\n  tool.setActive(true);\n};\n\n\n/**\n * Deactivate a tool.\n * @param {ngeo.misc.ToolActivate} tool Tool to deactivate.\n * @export\n */\nexports.prototype.deactivateTool = function(tool) {\n  tool.setActive(false);\n};\n\n\n/**\n * Deactivate all tools except the given one.\n *\n * @param {string} groupName Name of the group.\n * @param {ngeo.misc.ToolActivate} tool Tool to activate.\n * @private\n */\nexports.prototype.deactivateTools_ = function(groupName, tool) {\n  const entries = this.groups_[groupName];\n  for (let i = 0; i < entries.length; i++) {\n    if (tool != entries[i].tool) {\n      entries[i].tool.setActive(false);\n    }\n  }\n};\n\n\n/**\n * Activate the default tool in the given group if no other tool is active.\n *\n * @param {string} groupName Name of the group.\n * @private\n */\nexports.prototype.activateDefault_ = function(groupName) {\n  const entries = this.groups_[groupName];\n  let defaultTool = null;\n  let hasActiveTool = false;\n\n  for (let i = 0; i < entries.length; i++) {\n    hasActiveTool = hasActiveTool || entries[i].tool.getActive();\n\n    if (entries[i].defaultTool) {\n      defaultTool = entries[i].tool;\n    }\n  }\n\n  if (!hasActiveTool && defaultTool !== null) {\n    defaultTool.setActive(true);\n  }\n};\n\n\nexports.module = angular.module('ngeoToolActivateMgr', []);\nexports.module.service('ngeoToolActivateMgr', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.btnComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoBtnComponent', []);\n\n\n/**\n * Provides two directives: ngeo-btn-group and ngeo-btn.\n *\n * The ngeo-btn-group directive allows creating \"toggle\" groups. It works with\n * the ngeo-btn directive.\n *\n * Example:\n *\n *     <div ngeo-btn-group>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawPoint.active\"></button>\n *       <button ngeo-btn class=\"btn\" ng-model=\"ctrl.drawLine.active\"></button>\n *     </div>\n *\n * In that example the ngeo-btn are combined together in a \"toggle group\",\n * where activating a button will deactivate the others.\n *\n * One can use `ng-model` directive at the group level in order to know if\n * a button is active.\n *\n * Example:\n *\n *     <div ngeo-btn-group ngeo-btn-group-active=\"ctrl.drawToolActive\">\n *\n * See our live example: [../examples/interactionbtngroup.html](../examples/interactionbtngroup.html)\n *\n * @htmlAttribute {*} ngeo-btn-group-active Any property of the scope.\n * Tells whether at least one button of the group is active.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtnGroup\n */\nexports.btnGroupComponent_ = function($parse) {\n  return {\n    restrict: 'A',\n    controller: 'ngeoBtnGroupController',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!ngeo.misc.btnComponent.BtnGroupController=} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      const setActive = $parse(attrs['ngeoBtnGroupActive']).assign;\n\n      if (setActive) {\n        scope.$watch(\n          // return true if at least one button is active otherwise false\n          () => controller.buttons_.some(buttonModel => buttonModel(scope) === true),\n          (newValue) => {\n            setActive(scope, newValue);\n          }\n        );\n      }\n    }\n  };\n};\n\n\nexports.directive('ngeoBtnGroup', exports.btnGroupComponent_);\n\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoBtnGroupController\n */\nexports.BtnGroupController = function($scope) {\n  /**\n   * @type {!Array.<!angular.parse.Expression>}\n   * @private\n   */\n  this.buttons_ = [];\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n};\n\n\n/**\n * @param {number} index Index of the button in buttons array.\n */\nexports.BtnGroupController.prototype.activate = function(index) {\n  this.buttons_.forEach((expressionFn, i) => {\n    if (i != index) {\n      expressionFn.assign(this.scope_, false);\n    }\n  });\n};\n\n\n/**\n * @param {angular.parse.Expression} expressionFn Expression function.\n * @return {number} Index of the pushed setter.\n */\nexports.BtnGroupController.prototype.addButton = function(expressionFn) {\n  this.buttons_.push(expressionFn);\n  return this.buttons_.length - 1;\n};\n\n\nexports.controller('ngeoBtnGroupController',\n  exports.BtnGroupController);\n\n\n/**\n * The ngeo-btn allows creating toggle buttons working with ng-model. It is\n * typically used with Bootstrap buttons (`btn`).\n *\n * Example:\n *\n *     <button ngeo-btn class=\"btn\" ng-model=\"ctrl.interaction.active\"></button>\n *\n * This example is about creating a Bootstrap button that can pressed/depressed\n * to activate/deactivate an OpenLayers interaction.\n *\n * @htmlAttribute {*} ng-model Any property on the scope. Ideally a boolean.\n * @param {angular.$parse} $parse Angular parse service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBtn\n */\nexports.btnComponent_ = function($parse) {\n  return {\n    require: ['?^ngeoBtnGroup', 'ngModel'],\n    restrict: 'A',\n    /**\n     * @param {!angular.Scope} scope Scope.\n     * @param {!angular.JQLite=} element Element.\n     * @param {!angular.Attributes=} attrs Attributes.\n     * @param {!Array.<!Object>=} ctrls Controller.\n     */\n    link: (scope, element, attrs, ctrls) => {\n      const buttonsCtrl = ctrls[0];\n      const ngModelCtrl = ctrls[1];\n      let indexInGroup = -1;\n\n      const ngModelGet = $parse(attrs['ngModel']);\n      const ngModelSet = ngModelGet.assign;\n\n      // Set ng-model value to false if undefined\n      if (ngModelGet(scope) === undefined) {\n        ngModelSet(scope, false);\n      }\n      if (buttonsCtrl !== null) {\n        indexInGroup = buttonsCtrl.addButton(ngModelGet);\n      }\n\n      // UI -> model\n      element.on('click', () => {\n        scope.$apply(() => {\n          ngModelCtrl.$setViewValue(!ngModelCtrl.$viewValue);\n          ngModelCtrl.$render();\n        });\n      });\n\n      // model -> UI\n      ngModelCtrl.$render = function() {\n        if (ngModelCtrl.$viewValue && buttonsCtrl !== null) {\n          buttonsCtrl.activate(indexInGroup);\n        }\n        element.toggleClass('active', ngModelCtrl.$viewValue);\n      };\n    }\n  };\n};\n\n\nexports.directive('ngeoBtn', exports.btnComponent_);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\n/**\n * Provides a service for managing the application state.\n * The application state is written to both the URL and the local storage.\n * @constructor\n * @struct\n * @param {!ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {!Array.<!RegExp>} ngeoUsedKeyRegexp regexp used to identify the used keys.\n * @ngInject\n */\nconst exports = function(ngeoLocation, ngeoUsedKeyRegexp) {\n\n  /**\n   * Object representing the application's initial state.\n   * @type {!Object.<string, string>}\n   */\n  this.initialState = {};\n\n  /**\n   * @type {!ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = ngeoLocation;\n\n\n  /**\n   * @type {!Array.<!RegExp>}\n   */\n  this.usedKeyRegexp = ngeoUsedKeyRegexp;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.useLocalStorage_;\n\n  this.setUseLocalStorage(false);\n\n  // Populate initialState with the application's initial state. The initial\n  // state is read from the location URL, or from the local storage if there\n  // is no state in the location URL.\n\n  const paramKeys = ngeoLocation.getParamKeys().filter(key => key != 'debug' && key != 'no_redirect');\n\n  if (paramKeys.length === 0) {\n    if (this.useLocalStorage_) {\n      for (const key in window.localStorage) {\n        googAsserts.assert(key);\n\n        this.usedKeyRegexp.some((keyRegexp) => {\n          if (key.match(keyRegexp)) {\n            const value = window.localStorage[key];\n            if (value !== undefined || value !== null) {\n              this.initialState[key] = value;\n            } else {\n              this.initialState[key] = '';\n            }\n            return true;\n          }\n        });\n      }\n    }\n  } else {\n    paramKeys.forEach((key) => {\n      this.usedKeyRegexp.some((keyRegexp) => {\n        if (key.match(keyRegexp)) {\n          const value = this.ngeoLocation.getParam(key);\n          if (value !== undefined) {\n            this.initialState[key] = value;\n            return true;\n          }\n        }\n      });\n    });\n  }\n};\n\n\n/**\n * @param {boolean} value Use localStorage\n * @return {boolean} localStorage will be used.\n */\nexports.prototype.setUseLocalStorage = function(value) {\n  this.useLocalStorage_ = value;\n\n  // check if localStorage is supported\n  if (this.useLocalStorage_) {\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n  }\n  return this.useLocalStorage_;\n};\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialValue = function(key) {\n  return this.initialState[key];\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {string|undefined} State value.\n */\nexports.prototype.getInitialStringValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value;\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {number|undefined} State value.\n */\nexports.prototype.getInitialNumberValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return parseFloat(value);\n};\n\n\n/**\n * Get the state value for `key`.\n * @param {string} key State key.\n * @return {boolean|undefined} State value.\n */\nexports.prototype.getInitialBooleanValue = function(key) {\n  const value = this.initialState[key];\n  if (value === undefined) {\n    return undefined;\n  }\n  return value === 'true';\n};\n\n\n/**\n * Update the application state with the values in `object`.\n * @param {!Object.<string, string>} object Object.\n */\nexports.prototype.updateState = function(object) {\n  this.ngeoLocation.updateParams(object);\n  if (this.useLocalStorage_) {\n    for (const key in object) {\n      googAsserts.assert(key);\n      const value = object[key];\n      googAsserts.assert(value !== undefined);\n      window.localStorage[key] = value;\n    }\n  }\n};\n\n\n/**\n * Delete a parameter\n * @param {string} key Key.\n */\nexports.prototype.deleteParam = function(key) {\n  this.ngeoLocation.deleteParam(key);\n  if (this.useLocalStorage_) {\n    delete window.localStorage[key];\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoStateManager', [\n  ngeoStatemanagerLocation.module.name\n]);\nexports.module.service('ngeoStateManager', exports);\nexports.module.value('ngeoUsedKeyRegexp', [new RegExp('.*')]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.common\n */\nconst exports = {};\nimport {createEditingStyle} from 'ol/style/Style.js';\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultDrawStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[feature.getGeometry().getType()];\n  };\n};\n\n\n/**\n * @return {ol.StyleFunction} Styles.\n */\nexports.getDefaultModifyStyleFunction = function() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[/**@type {ol.geom.GeometryType} */ ('Point')];\n  };\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.Service\n */\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport olEventsEventTarget from 'ol/events/EventTarget.js';\n\n/**\n * An \"authentication\" service for a GeoMapFish application. Upon loading, it\n * launches a request to determine whether a user is currently logged in or\n * not.\n *\n * The possible API requests it supports, which are all self-explanatory, are:\n *\n * - changePassword\n * - login\n * - logout\n * - resetPassword\n *\n * @extends {ol.events.EventTarget}\n */\nconst exports = class extends olEventsEventTarget {\n\n  /**\n   * @param {angular.$http} $http Angular http service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angular.Scope} $rootScope The directive's scope.\n   * @param {string} authenticationBaseUrl URL to \"authentication\" web service.\n   * @param {gmfx.User} gmfUser User.\n   * @ngInject\n   */\n  constructor($http, $injector, $rootScope, authenticationBaseUrl, gmfUser) {\n\n    super();\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.$http_ = $http;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * The authentication url without trailing slash\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = authenticationBaseUrl.replace(/\\/$/, '');\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.user_ = gmfUser;\n\n    /**\n      * Don't request a new user object from the back-end after\n      * logging out if the logged-in user's role has this role.\n      * @type {?string}\n      * @private\n      */\n    this.noReloadRole_ =  $injector.has('gmfAuthenticationNoReloadRole')\n      ? $injector.get('gmfAuthenticationNoReloadRole')\n      : null;\n\n    this.load_();\n  }\n\n  /**\n   * Load the authentication service, which sends an asynch request to\n   * determine whether the user is currently connected or not.\n   * @private\n   */\n  load_() {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.IS_LOGGED_IN}`;\n    this.$http_.get(url, {withCredentials: true}).then(\n      this.handleLogin_.bind(this, true)\n    );\n  }\n\n  /**\n   * @param {string} oldPwd Old password.\n   * @param {string} newPwd New password.\n   * @param {string} confPwd New password confirmation.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  changePassword(oldPwd, newPwd, confPwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.CHANGE_PASSWORD}`;\n\n    return this.$http_.post(url, $.param({\n      'oldPassword': oldPwd,\n      'newPassword': newPwd,\n      'confirmNewPassword': confPwd\n    }), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(((response) => {\n      this.user_.is_password_changed = true;\n    }));\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @param {string} pwd Password.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  login(login, pwd) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGIN}`;\n\n    return this.$http_.post(url, $.param({'login': login, 'password': pwd}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n      withCredentials: true\n    }).then(\n      this.handleLogin_.bind(this, false));\n  }\n\n  /**\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  logout() {\n    const noReload = this.user_['role_name'] === this.noReloadRole_;\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.LOGOUT}`;\n    return this.$http_.get(url, {withCredentials: true}).then(() => {\n      this.resetUser_(noReload);\n    });\n  }\n\n  /**\n   * @param {string} login Login name.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  resetPassword(login) {\n    const url = `${this.baseUrl_}/${exports.RouteSuffix.RESET_PASSWORD}`;\n\n    /**\n     * @param {angular.$http.Response} resp Ajax response.\n     * @return {gmfx.AuthenticationDefaultResponse} Response.\n     */\n    const successFn = function(resp) {\n      const respData = /** @type gmfx.AuthenticationDefaultResponse} */ (\n        resp.data);\n      return respData;\n    }.bind(this);\n\n    return this.$http_.post(url, $.param({'login': login}), {\n      headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n    }).then(successFn);\n  }\n\n  /**\n   * @return {?gmfx.AuthenticationFunctionalities} The role functionalities.\n   */\n  getFunctionalities() {\n    return this.user_.functionalities;\n  }\n\n  /**\n   * @return {number|null} The role ID.\n   */\n  getRoleId() {\n    return this.user_.role_id;\n  }\n\n  /**\n   * @param {boolean} checkingLoginStatus Checking the login status?\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {angular.$http.Response} Response.\n   * @private\n   */\n  handleLogin_(checkingLoginStatus, resp) {\n    const respData = /** @type {gmfx.AuthenticationLoginResponse} */ (resp.data);\n    this.setUser_(respData, !checkingLoginStatus);\n    if (checkingLoginStatus) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('ready', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n    return resp;\n  }\n\n  /**\n   * @param {gmfx.AuthenticationLoginResponse} respData Response.\n   * @param {boolean} emitEvent Emit a login event?\n   * @private\n   */\n  setUser_(respData, emitEvent) {\n    for (const key in respData) {\n      this.user_[key] = respData[key];\n    }\n    if (emitEvent && respData.username !== undefined) {\n      /** @type {gmfx.AuthenticationEvent} */\n      const event = new ngeoCustomEvent('login', {user: this.user_});\n      this.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @private\n   * @param {boolean} noReload Don't request a new user object from\n   * the back-end after logging out, defaults to false.\n   */\n  resetUser_(noReload) {\n    noReload = noReload || false;\n    for (const key in this.user_) {\n      this.user_[key] = null;\n    }\n    /** @type {gmfx.AuthenticationEvent} */\n    const event = new ngeoCustomEvent('logout', {user: this.user_});\n    this.dispatchEvent(event);\n    if (!noReload) {\n      this.load_();\n    }\n  }\n};\n\n/**\n * @enum {string}\n */\nexports.RouteSuffix = {\n  CHANGE_PASSWORD: 'loginchange',\n  IS_LOGGED_IN: 'loginuser',\n  LOGIN: 'login',\n  LOGOUT: 'logout',\n  RESET_PASSWORD: 'loginresetpassword'\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfAuthenticationService', []);\nexports.module.service('gmfAuthenticationService', exports);\n\nexports.module.value('gmfUser', {\n  'functionalities': null,\n  'is_password_changed': null,\n  'role_id': null,\n  'role_name': null,\n  'username': null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.Time\n */\n/**\n * ngeo - Time service\n * @constructor\n * @struct\n * @ngInject\n * @ngdoc service\n * @ngname ngeoTime\n */\nconst exports = function() {};\n\n/**\n * @param {number|string|null} value The value\n * @param {Date} defaultValue The default value\n * @return {Date} the date\n */\nexports.prototype.createDate = function(value, defaultValue = null) {\n  return value !== null ? new Date(value) : defaultValue;\n};\n\n/**\n * @param {Date} date The date\n * @param {number|null=} defaultValue The default value\n * @return {number|null} the time\n */\nexports.prototype.getTime = function(date, defaultValue = null) {\n  return date ? date.getTime() : defaultValue;\n};\n\n/**\n * Get options regarding the time property of a node;\n *\n * @param {ngeox.TimeProperty} time the time property of a node\n * @return {{\n *  minDate : number,\n *  maxDate : number,\n *  values : (Array<number>|number)\n * }} - Configuration for the UI components\n * @export\n */\nexports.prototype.getOptions = function(time) {\n\n  const minDate = this.createDate(time.minValue);\n  const maxDate = this.createDate(time.maxValue);\n\n  const minDefaultDate = this.createDate(time.minDefValue, minDate);\n  const maxDefaultDate = this.createDate(time.maxDefValue, maxDate);\n\n  const defaultValues = (time.mode === 'range') ?\n    [this.getTime(minDefaultDate), this.getTime(maxDefaultDate)] :\n    this.getTime(minDefaultDate);\n\n  return {\n    minDate: this.getTime(minDate),\n    maxDate: this.getTime(maxDate),\n    values: defaultValues\n  };\n};\n\n\n/**\n * Time.prototype.getUTCDate - Get UTC date from a local date object\n *\n * @param  {Object} localDate loacl date object in\n * @return {Object} UTC date\n * @export\n */\nexports.prototype.getUTCDate = function(localDate) {\n  return new Date(\n    localDate.getUTCFullYear(),\n    localDate.getUTCMonth(),\n    localDate.getUTCDate());\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoTime', []);\nexports.module.service('ngeoTime', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popupComponent\n */\n\nimport 'angular-sanitize';\n\n\nconst exports = angular.module('ngeoPopup', [\n  'ngSanitize',\n]);\n\n\nexports.value('ngeoPopupTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoPopupTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/popupcomponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/popupcomponent', require('./popupcomponent.html'));\n});\n\n\n/**\n * Provides a directive used to show a popup over the page with\n * a title and content.\n *\n *\n * Things to know about this directive:\n *\n * - This directive is intended to be used along with the popup service.\n *\n * - By default the directive uses \"popup.html\" as its templateUrl. This can be\n *   changed by redefining the \"ngeoPopupTemplateUrl\" value.\n *\n * - The directive doesn't create any scope but relies on its parent scope.\n *   Properties like 'content', 'title' or 'open' come from the parent scope.\n *\n * @private\n * @param {string} ngeoPopupTemplateUrl URL to popup template.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoPopup\n */\nexports.directive_ = function(ngeoPopupTemplateUrl) {\n  return {\n    restrict: 'A',\n    templateUrl: ngeoPopupTemplateUrl,\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      element.addClass('popover');\n\n      /**\n       * @param {jQuery.Event} evt Event.\n       */\n      scope.close = function(evt) {\n        if (evt) {\n          evt.stopPropagation();\n          evt.preventDefault();\n        }\n        element.addClass('hidden');\n      };\n\n      // Watch the open property\n      scope.$watch('open', (newVal, oldVal) => {\n        element.css('display', newVal ? 'block' : 'none');\n      });\n    }\n  };\n};\n\nexports.directive('ngeoPopup', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Popup\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * This goog.require is needed because of 'ngeo-popup' used in\n * the template.\n * @suppress {extraRequire}\n */\nimport ngeoMessagePopupComponent from 'ngeo/message/popupComponent.js';\n\n/**\n * Provides a factory to create a popup in the page.\n * The factory returns a ngeo.message.Popup object.\n *\n * Example:\n *\n *     let popup = ngeoCreatePopup();\n *     popup.setTitle(\"A title\");\n *     popup.setContent(\"Some content\");\n *     popup.setOpen(true);\n *\n * @constructor\n * @struct\n * @param {angular.$compile} $compile The compile provider.\n * @param {angular.Scope} $rootScope The rootScope provider.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoCreatePopup\n */\nconst exports = function($compile, $rootScope, $sce, $timeout) {\n\n  /**\n   * The scope the compiled element is link to.\n   * @type {angular.Scope}\n   * @export\n   */\n  this.scope = $rootScope.$new(true);\n\n  // manage the auto destruction of the popup\n  this.scope.$watch(\n    () => this.scope['open'],\n    (open) => {\n      if (!open && this.autoDestroy_) {\n        this.timeout_(() => {\n          this.destroy();\n        });\n      }\n    }\n  );\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * The element.\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = angular.element('<div ngeo-popup></div>');\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoDestroy_ = false;\n\n\n  // Compile the element, link it to the scope and add it to the document.\n  $compile(this.element_)(this.scope);\n  angular.element(document.body).append(this.element_);\n};\n\n\n/**\n * Get the current popup state.\n * @return {boolean} `true` if the popup is currently, otherwise `false`.\n * @export\n */\nexports.prototype.getOpen = function() {\n  return this.scope['open'];\n};\n\n\n/**\n * Show/hide the popup.\n * @param {boolean} open `true` to show the popup, `false` to hide it.\n * @export\n */\nexports.prototype.setOpen = function(open) {\n  this.scope['open'] = open;\n};\n\n\n/**\n * Destroy the popup.\n * @export\n */\nexports.prototype.destroy = function() {\n  this.scope.$destroy();\n  this.element_.remove();\n};\n\n\n/**\n * Set the popup's title.\n * @param {string} title The title.\n * @export\n */\nexports.prototype.setTitle = function(title) {\n  const trustedTitle = this.sce_.trustAsHtml(title);\n  this.scope['title'] = trustedTitle;\n};\n\n\n/**\n * Set the popup's content.\n * Note: the type of the `content` param is `*` instead of `string`, this\n * is because the content may be trusted using `$sce.trustAsHtml`.\n * @param {*} content The content.\n * @param {boolean=} opt_trusted Whether the content can be trusted.\n *     Default is false.\n * @export\n */\nexports.prototype.setContent = function(content, opt_trusted) {\n  this.scope['content'] = opt_trusted ? this.sce_.trustAsHtml(/** @type {string} */ (content)) : content;\n};\n\n\n/**\n * Set the popup's content with an iframe using the given url.\n * @param {string} url The url of the page.\n * @export\n */\nexports.prototype.setUrl = function(url) {\n  const content = this.sce_.trustAsHtml(\n    `<iframe src=\"${url}\" width=\"100%\" height=\"100%\"></iframe>`\n  );\n  this.setContent(content);\n};\n\n\n/**\n * Set the popup's width.\n * @param {string} width Width the popup should have.\n * @export\n */\nexports.prototype.setWidth = function(width) {\n  this.element_.width(width);\n};\n\n\n/**\n * Set the popup's height.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setHeight = function(height) {\n  this.element_.height(height);\n};\n\n\n/**\n * Set the popup's width and height.\n * @param {string} width Width the popup should have.\n * @param {string} height Height the popup should have.\n * @export\n */\nexports.prototype.setSize = function(width, height) {\n  this.setWidth(width);\n  this.setHeight(height);\n};\n\n\n/**\n * Set the popup's autoDestroy property.\n * @param {boolean} autoDestroy Whether to automatically destroy the popup when\n *     being closed or not.\n * @export\n */\nexports.prototype.setAutoDestroy = function(autoDestroy) {\n  this.autoDestroy_ = autoDestroy;\n};\n\n\n/**\n * Add an extra CSS class name to the popup.\n * @param {string} cls Class name to add to the popup element.\n * @export\n */\nexports.prototype.addClass = function(cls) {\n  this.element_.addClass(cls);\n};\n\n\n/**\n * Open a popup with the given properties.\n * @param {ngeox.PopupOptions} options Options.\n * @export\n */\nexports.prototype.open = function(options) {\n\n  if (options.url) {\n    this.setUrl(options.url);\n  } else if (options.content) {\n    this.setContent(options.content);\n  } else {\n    googAsserts.fail('ngeo.message.Popup options requirest \"url\" or \"content\".');\n  }\n\n  if (options.autoDestroy !== undefined) {\n    this.setAutoDestroy(options.autoDestroy);\n  }\n\n  if (options.cls !== undefined) {\n    this.addClass(options.cls);\n  }\n\n  if (options.height !== undefined) {\n    this.setHeight(options.height);\n  }\n\n  if (options.title !== undefined) {\n    this.setTitle(options.title);\n  }\n\n  if (options.width !== undefined) {\n    this.setWidth(options.width);\n  }\n\n  this.setOpen(true);\n};\n\n\n/**\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.Scope} $rootScope Angular rootScope service.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {ngeox.PopupFactory} The function to create a popup.\n * @ngInject\n */\nexports.Factory = function($compile, $rootScope, $sce, $timeout) {\n  return (\n    /**\n     * @return {!ngeo.message.Popup} The popup instance.\n     */\n    function() {\n      return new exports($compile, $rootScope, $sce, $timeout);\n    }\n  );\n};\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoCreatePopup', [\n  ngeoMessagePopupComponent.name,\n]);\nexports.module.factory('ngeoCreatePopup', exports.Factory);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.DrawAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure azimut.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.PointerOptions} options Options.\n */\nconst exports = function(options) {\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleEvent: exports.handleEvent_,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * Target source for drawn features.\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.source_ = options.source !== undefined ? options.source : null;\n\n  /**\n   * Tglls whether the drawing has started or not.\n   * @type {boolean}\n   * @private\n   */\n  this.started_ = false;\n\n  /**\n   * Sketch feature.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = 4;\n\n\n  /**\n   * Vector layer where our sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.sketchLayer_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: false\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultDrawStyleFunction()\n  });\n\n  olEvents.listen(this, 'change:active', this.updateState_, this);\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleDownEvent_ = function(event) {\n  this.downPx_ = event.pixel;\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleUpEvent_ = function(event) {\n  const downPx = this.downPx_;\n  const clickPx = event.pixel;\n  const dx = downPx[0] - clickPx[0];\n  const dy = downPx[1] - clickPx[1];\n  const squaredDistance = dx * dx + dy * dy;\n  let pass = true;\n  if (squaredDistance <= this.squaredClickTolerance_) {\n    this.handlePointerMove_(event);\n    if (!this.started_) {\n      this.startDrawing_(event);\n    } else {\n      this.finishDrawing_();\n    }\n    pass = false;\n  }\n  return pass;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.DrawAzimut}\n * @private\n */\nexports.handleEvent_ = function(mapBrowserEvent) {\n  let pass = true;\n  if (mapBrowserEvent.type === 'pointermove') {\n    pass = this.handlePointerMove_(mapBrowserEvent);\n  } else if (mapBrowserEvent.type === 'dblclick') {\n    pass = false;\n  }\n  return pointerHandleEvent.call(this, mapBrowserEvent) && pass;\n};\n\n\n/**\n * Handle move events.\n * @param {ol.MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(event) {\n  if (this.started_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (this.sketchPoint_ === null) {\n    this.sketchPoint_ = new olFeature(new olGeomPoint(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = this.sketchPoint_.getGeometry();\n    googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Redraw the skecth features.\n * @private\n */\nexports.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_ !== null) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchPoint_ !== null) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const source = this.sketchLayer_.getSource();\n  source.clear(true);\n  source.addFeatures(sketchFeatures);\n};\n\n\n/**\n * Start the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.started_ = true;\n  const line = new olGeomLineString([start.slice(), start.slice()]);\n  const circle = new olGeomCircle(start, 0);\n  const geometry = new olGeomGeometryCollection([line, circle]);\n  googAsserts.assert(geometry !== undefined);\n  this.sketchFeature_ = new olFeature();\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  /** @type {ngeox.DrawEvent} */\n  const evt = new ngeoCustomEvent('drawstart', {feature: this.sketchFeature_});\n  this.dispatchEvent(evt);\n};\n\n\n/**\n * Modify the drawing.\n * @param {ol.MapBrowserEvent} event Event.\n * @private\n */\nexports.prototype.modifyDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = googAsserts.assertInstanceof(\n    this.sketchFeature_.getGeometry(), olGeomGeometryCollection);\n  const geometries = geometry.getGeometriesArray();\n  const line = geometries[0];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  const coordinates = line.getCoordinates();\n  const sketchPointGeom = this.sketchPoint_.getGeometry();\n  googAsserts.assertInstanceof(sketchPointGeom, olGeomPoint);\n  sketchPointGeom.setCoordinates(coordinate);\n  const last = coordinates[coordinates.length - 1];\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  googAsserts.assertInstanceof(line, olGeomLineString);\n  line.setCoordinates(coordinates);\n  const circle = googAsserts.assertInstanceof(geometries[1], olGeomCircle);\n  circle.setRadius(line.getLength());\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {ol.Feature} The sketch feature (or null if none).\n * @private\n */\nexports.prototype.abortDrawing_ = function() {\n  this.started_ = false;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature !== null) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLayer_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.shouldStopEvent = olFunctions.FALSE;\n\n\n/**\n * @private\n */\nexports.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (map === null || !active) {\n    this.abortDrawing_();\n  }\n  this.sketchLayer_.setMap(active ? map : null);\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * @private\n */\nexports.prototype.finishDrawing_ = function() {\n  const sketchFeature = this.abortDrawing_();\n  googAsserts.assert(sketchFeature !== null);\n\n  if (this.source_ !== null) {\n    this.source_.addFeature(sketchFeature);\n  }\n\n  /** @type {ngeox.DrawEvent} */\n  const event = new ngeoCustomEvent('drawend', {feature: this.sketchFeature_});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  olInteractionPointer.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureAzimut\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionDrawAzimut from 'ngeo/interaction/DrawAzimut.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomGeometryCollection from 'ol/geom/GeometryCollection.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olProjProjection from 'ol/proj/Projection.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @fires ngeox.MeasureEvent\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} unitPrefixFormat The format function\n * @param {!ngeox.number} numberFormat The format function\n * @param {!ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(unitPrefixFormat, numberFormat, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = 'Click to finish.';\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.number}\n   */\n  this.numberFormat = googAsserts.assert(numberFormat);\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.unitPrefixFormat = googAsserts.assert(unitPrefixFormat);\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style,\n  source) {\n\n  return new ngeoInteractionDrawAzimut({\n    source,\n    style\n  });\n\n\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomGeometryCollection);\n  const line = googAsserts.assertInstanceof(geom.getGeometries()[0], olGeomLineString);\n  const output = exports.getFormattedAzimutRadius(\n    line, googAsserts.assertInstanceof(this.getMap().getView().getProjection(), olProjProjection),\n    this.decimals, this.precision, this.unitPrefixFormat, this.numberFormat);\n  callback(output, line.getLastCoordinate());\n};\n\n\n/**\n * Format measure output of azimut and radius.\n * @param {!ol.geom.LineString} line LineString.\n * @param {!ol.proj.Projection} projection Projection of the polygon coords.\n * @param {number|undefined} decimals Decimals.\n * @param {number|undefined} precision Precision.\n * @param {!ngeox.unitPrefix} formatLength The format function.\n * @param {!ngeox.number} formatAzimut The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimutRadius = function(\n  line, projection, decimals, precision, formatLength, formatAzimut) {\n\n  let output = exports.getFormattedAzimut(line, decimals, formatAzimut);\n\n  output += `, ${ngeoInteractionMeasure.getFormattedLength(\n    line, projection, precision, formatLength)}`;\n\n  return output;\n};\n\n\n/**\n * Format measure output of azimut.\n * @param {!ol.geom.LineString} line LineString.\n * @param {number|undefined} decimals Decimals.\n * @param {!ngeox.number} format The format function.\n * @return {string} Formatted measure.\n */\nexports.getFormattedAzimut = function(line, decimals, format) {\n  const azimut = exports.getAzimut(line);\n  return `${format(azimut, decimals)}°`;\n};\n\n\n/**\n * Compute azimut from a 2 points line.\n * @param {ol.geom.LineString} line LineString.\n * @return {number} Azimut value.\n */\nexports.getAzimut = function(line) {\n  const coords = line.getCoordinates();\n  const dx = coords[1][0] - coords[0][0];\n  const dy = coords[1][1] - coords[0][1];\n  const rad = Math.acos(dy / Math.sqrt(dx * dx + dy * dy));\n  const factor = dx > 0 ? 1 : -1;\n  return (factor * rad * 180 / Math.PI) % 360;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.map.FeatureOverlay\n */\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @constructor\n * @param {ngeo.map.FeatureOverlayMgr} manager The feature overlay manager.\n * @param {number} index This feature overlay's index.\n */\nconst exports = function(manager, index) {\n\n  /**\n   * @type {ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.manager_ = manager;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = index;\n};\n\n\n/**\n * Add a feature to the feature overlay.\n * @param {ol.Feature} feature The feature to add.\n * @export\n */\nexports.prototype.addFeature = function(feature) {\n  this.manager_.addFeature(feature, this.index_);\n};\n\n\n/**\n * Remove a feature from the feature overlay.\n * @param {ol.Feature} feature The feature to remove.\n * @export\n */\nexports.prototype.removeFeature = function(feature) {\n  this.manager_.removeFeature(feature, this.index_);\n};\n\n\n/**\n * Remove all the features from the feature overlay.\n * @export\n */\nexports.prototype.clear = function() {\n  this.manager_.clear(this.index_);\n};\n\n\n/**\n * Configure this feature overlay with a feature collection. Features added\n * to the collection are also added to the overlay. Same for removal. If you\n * configure the feature overlay with a feature collection you will use the\n * collection to add and remove features instead of using the overlay's\n * `addFeature`, `removeFeature` and `clear` functions.\n * @param {ol.Collection.<ol.Feature>} features Feature collection.\n * @export\n */\nexports.prototype.setFeatures = function(features) {\n  if (this.features_ !== null) {\n    this.features_.clear();\n    olEvents.unlisten(this.features_, 'add', this.handleFeatureAdd_, this);\n    olEvents.unlisten(this.features_, 'remove', this.handleFeatureRemove_, this);\n  }\n  if (features !== null) {\n    features.forEach((feature) => {\n      this.addFeature(feature);\n    });\n    olEvents.listen(features, 'add', this.handleFeatureAdd_, this);\n    olEvents.listen(features, 'remove', this.handleFeatureRemove_, this);\n  }\n  this.features_ = features;\n};\n\n\n/**\n * Set a style for the feature overlay.\n * @param {ol.style.Style|Array.<ol.style.Style>|ol.StyleFunction} style\n * Style.\n * @export\n */\nexports.prototype.setStyle = function(style) {\n  this.manager_.setStyle(style, this.index_);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Feature collection event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature(feature);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoFeatureOverlay', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.XSDAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\n\n/**\n * @classdesc\n * Reads attributes that are defined in XSD format and return them as a list.\n *\n * @constructor\n * @struct\n * @extends {ol.format.XML}\n */\nconst exports = function() {\n  olFormatXML.call(this);\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Array.<ngeox.Attribute>} The parsed result.\n * @override\n */\nexports.prototype.read = function(source) {\n  return (\n    /** @type {Array.<ngeox.Attribute>} */ olFormatXML.prototype.read.call(this, source)\n  );\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromDocument = function(doc) {\n  googAsserts.assert(doc.nodeType == Node.DOCUMENT_NODE,\n    'doc.nodeType should be DOCUMENT');\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @override\n */\nexports.prototype.readFromNode = function(node) {\n  googAsserts.assert(node.nodeType == Node.ELEMENT_NODE,\n    'node.nodeType should be ELEMENT');\n  googAsserts.assert(node.localName == 'schema',\n    'localName should be schema');\n\n  let elements = node.getElementsByTagName('element');\n  if (!elements.length) {\n    elements = node.getElementsByTagName('xsd:element');\n  }\n  const attributes = [];\n\n  let attribute;\n  for (let i = 0, ii = elements.length; i < ii; i++) {\n    attribute = this.readFromElementNode_(elements[i]);\n    if (attribute) {\n      attributes.push(attribute);\n    }\n  }\n\n  return attributes;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {?ngeox.Attribute} An attribute object.\n * @private\n */\nexports.prototype.readFromElementNode_ = function(node) {\n\n  const name = node.getAttribute('name');\n  googAsserts.assertString(name, 'name should be defined in element node.');\n\n  const alias = node.getAttribute('alias');\n  const nillable = node.getAttribute('nillable');\n  const required = !(nillable === true || nillable === 'true');\n\n  const attribute = {\n    name,\n    alias,\n    required\n  };\n\n  const type = node.getAttribute('type');\n  if (type) {\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      this.setAttributeByXsdType_(attribute, type);\n    }\n  } else {\n\n    // Attribute has no type defined on 'element' node.  Try:\n\n    // (1) Enumerations\n    let enumerations = node.getElementsByTagName('enumeration');\n    if (!enumerations.length) {\n      enumerations = node.getElementsByTagName('xsd:enumeration');\n    }\n    if (enumerations.length) {\n      attribute.type = ngeoFormatAttributeType.SELECT;\n      const choices = [];\n      for (let i = 0, ii = enumerations.length; i < ii; i++) {\n        choices.push(enumerations[i].getAttribute('value'));\n      }\n      attribute.choices = choices;\n    } else {\n      // (2) Other types with restrictions\n      let restrictions = node.getElementsByTagName('restriction');\n      if (!restrictions.length) {\n        restrictions = node.getElementsByTagName('xsd:restriction');\n      }\n      if (restrictions.length && restrictions[0]) {\n        const restrictionNode = restrictions[0];\n        this.setAttributeByXsdType_(\n          attribute,\n          restrictionNode.getAttribute('base')\n        );\n        // MaxLength\n        let maxLengths = node.getElementsByTagName('maxLength');\n        if (!maxLengths.length) {\n          maxLengths = node.getElementsByTagName('xsd:maxLength');\n        }\n        if (maxLengths.length && maxLengths[0]) {\n          attribute.maxLength = Number(maxLengths[0].getAttribute('value'));\n        }\n      }\n    }\n  }\n\n  if (!attribute.type) {\n    return null;\n  }\n\n  googAsserts.assert(attribute.type);\n\n  return attribute;\n};\n\n\n/**\n * Set the `type` and `numType` properties of an attribute depending on the\n * given xsdType.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type The xsd type.\n * @private\n */\nexports.prototype.setAttributeByXsdType_ = function(\n  attribute, type\n) {\n  if (type === 'xsd:boolean') {\n    attribute.type = ngeoFormatAttributeType.BOOLEAN;\n  } else if (type === 'xsd:date') {\n    attribute.type = ngeoFormatAttributeType.DATE;\n  } else if (type === 'xsd:dateTime') {\n    attribute.type = ngeoFormatAttributeType.DATETIME;\n  } else if (type === 'xsd:time') {\n    attribute.type = ngeoFormatAttributeType.TIME;\n  } else if (type === 'xsd:decimal' || type === 'xsd:double') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.FLOAT;\n  } else if (type === 'xsd:integer') {\n    attribute.type = ngeoFormatAttributeType.NUMBER;\n    attribute.numType = exports.NumberType.INTEGER;\n  } else if (type === 'xsd:string') {\n    attribute.type = ngeoFormatAttributeType.TEXT;\n  }\n};\n\n\n/**\n * Returns the first geometry attribute among a given list of attributes.\n * @param {Array.<ngeox.Attribute>} attributes The list of attributes.\n * @return {?ngeox.Attribute} A geometry attribute object.\n */\nexports.getGeometryAttribute = function(attributes) {\n  let geomAttribute = null;\n  for (let i = 0, ii = attributes.length; i < ii; i++) {\n    if (attributes[i].type === ngeoFormatAttributeType.GEOMETRY) {\n      geomAttribute = attributes[i];\n      break;\n    }\n  }\n  return geomAttribute;\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.NumberType = {\n  /**\n   * @type {string}\n   * @export\n   */\n  FLOAT: 'float',\n  /**\n   * @type {string}\n   * @export\n   */\n  INTEGER: 'integer'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Group\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\n\nconst exports = class {\n\n  /**\n   * A Group data source combines multiple `ngeo.datasource.DataSource` objects.\n   * Its main purpose is to provide a calculated `visibilityState` property\n   * that can be used to determine if all its data source are all visible, all\n   * hidden or some are hidden and other visible.\n   *\n   * @struct\n   * @param {ngeox.datasource.GroupOptions} options Options.\n   */\n  constructor(options) {\n\n    // === DYNAMIC properties (i.e. that can change / be watched ===\n\n    /**\n     * @type {!ol.Collection.<!ngeo.datasource.DataSource>}\n     * @protected\n     */\n    this.dataSourcesCollection_ = new olCollection(options.dataSources);\n\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.title_ = options.title;\n  }\n\n  /**\n   * @export\n   */\n  destroy() {\n    this.dataSourcesCollection_.clear();\n  }\n\n  // ========================================\n  // === Dynamic property getters/setters ===\n  // ========================================\n\n  /**\n   * @return {!Array.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSources() {\n    return this.dataSourcesCollection_.getArray();\n  }\n\n\n  /**\n   * @return {!ol.Collection.<!ngeo.datasource.DataSource>} Data sources\n   * @export\n   */\n  get dataSourcesCollection() {\n    return this.dataSourcesCollection_;\n  }\n\n\n  // =======================================\n  // === Static property getters/setters ===\n  // =======================================\n\n  /**\n   * @return {string} Title\n   * @export\n   */\n  get title() {\n    return this.title_;\n  }\n\n\n  // ===================================\n  // === Calculated property getters ===\n  // ===================================\n\n  /**\n   * @return {string} Visibility state\n   * @export\n   */\n  get visibilityState() {\n    let state;\n\n    for (const dataSource of this.dataSources) {\n      if (state === undefined) {\n        state = this.getDataSourceState(dataSource);\n      } else {\n        const otherState = this.getDataSourceState(dataSource);\n        if (otherState !== state) {\n          state = exports.VisibilityState.INDETERMINATE;\n        }\n      }\n      if (state === exports.VisibilityState.INDETERMINATE) {\n        break;\n      }\n    }\n\n    googAsserts.assertString(state);\n\n    return state;\n  }\n\n\n  // =======================\n  // === Utility Methods ===\n  // =======================\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source.\n   * @return {string} Visible state of a data source\n   * @export\n   */\n  getDataSourceState(dataSource) {\n    return dataSource.visible ?\n      exports.VisibilityState.ON :\n      exports.VisibilityState.OFF;\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to add.\n   * @export\n   */\n  addDataSource(dataSource) {\n    this.dataSourcesCollection_.push(dataSource);\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSourcesCollection_.remove(dataSource);\n  }\n\n  /**\n   * Update visible property of all data sources depending on the current\n   * visibility state:\n   *\n   * - state ON --> visible false\n   * - state OFF --> visible true\n   * - state IND. --> visible true\n   *\n   * @export\n   */\n  toggleVisibilityState() {\n    const visibleToSet =\n        this.visibilityState !== exports.VisibilityState.ON;\n    for (const dataSource of this.dataSources) {\n      if (dataSource.visible !== visibleToSet) {\n        dataSource.visible = visibleToSet;\n      }\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.VisibilityState = {\n  INDETERMINATE: 'indeterminate',\n  OFF: 'off',\n  ON: 'on'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.WFSDescribeFeatureType\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatXML from 'ol/format/XML.js';\nimport * as olXml from 'ol/xml.js';\n\n/**\n * @classdesc\n * Format for reading WFS DescribeFeatureType data.\n *\n * @constructor\n * @extends {ol.format.XML}\n * @api\n */\nconst exports = function() {\n\n  olFormatXML.call(this);\n\n};\n\nolBase.inherits(exports, olFormatXML);\n\n\n/**\n * Read a WFS DescribeFeatureType document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WFS DescribeFeatureType.\n * @api\n */\nexports.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFromNode = function(node) {\n  let result = {};\n  result = olXml.pushParseAndPop(\n    result,\n    exports.PARSERS_,\n    node,\n    []\n  );\n  return result;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Attributes.\n */\nexports.readElement_ = function(node, objectStack) {\n  const attributes = {};\n  for (let i = 0, len = node.attributes.length; i < len; i++) {\n    const attribute = node.attributes.item(i);\n    attributes[attribute.name] = attribute.value;\n  }\n  if (objectStack.length === 1) {\n    // remove namespace from type\n    attributes['type'] = attributes['type'].split(':').pop();\n  }\n  return attributes;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexType_ = function(node, objectStack) {\n  const name = node.getAttribute('name');\n  const object = olXml.pushParseAndPop(\n    {'name': name},\n    exports.COMPLEX_TYPE_PARSERS_,\n    node, objectStack\n  );\n  // flatten\n  object['complexContent'] =\n    object['complexContent']['extension']['sequence']['element'];\n  return object;\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readComplexContent_ = function(\n  node, objectStack\n) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.COMPLEX_CONTENT_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readExtension_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.EXTENSION_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @private\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {!Object.<string, string>} Object.\n */\nexports.readSequence_ = function(node, objectStack) {\n  return olXml.pushParseAndPop(\n    {},\n    exports.SEQUENCE_PARSERS_,\n    node,\n    objectStack\n  );\n};\n\n\n/**\n * @const\n * @private\n * @type {Array.<string>}\n */\nexports.NAMESPACE_URIS_ = [\n  null,\n  'http://www.w3.org/2001/XMLSchema'\n];\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    ),\n    'complexType': olXml.makeObjectPropertyPusher(\n      exports.readComplexType_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_TYPE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'complexContent': olXml.makeObjectPropertySetter(\n      exports.readComplexContent_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.COMPLEX_CONTENT_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'extension': olXml.makeObjectPropertySetter(\n      exports.readExtension_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.EXTENSION_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'sequence': olXml.makeObjectPropertySetter(\n      exports.readSequence_\n    )\n  }));\n\n\n/**\n * @const\n * @type {!Object.<string, !Object.<string, !ol.XmlParser>>}\n * @private\n */\nexports.SEQUENCE_PARSERS_ = googAsserts.assert(olXml.makeStructureNS(\n  exports.NAMESPACE_URIS_, {\n    'element': olXml.makeObjectPropertyPusher(\n      exports.readElement_\n    )\n  }));\n\n\nexport default exports;\n","/**\n * @module ngeo.query.Querent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport ngeoWFSDescribeFeatureType from 'ngeo/WFSDescribeFeatureType.js';\nimport olFormatWMSCapabilities from 'ol/format/WMSCapabilities.js';\nimport olFormatWMTSCapabilities from 'ol/format/WMTSCapabilities.js';\nimport * as olObj from 'ol/obj.js';\nimport * as olUri from 'ol/uri.js';\nimport * as olExtent from 'ol/extent.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\n\nconst exports = class {\n\n  /**\n   * The ngeo Querent is a service that issues all sorts of queries using\n   * ngeo data sources. It does not store the result. Instead, it returns it\n   * using promises. Any component that inject this service can use it to\n   * make it issue its own queries and do whatever it wants with the result.\n   *\n   * It supports sending OGC requests and parse the response, such as:\n   * - WFS DescribeFeatureType\n   * - WFS GetFeature\n   * - WMS GetCapabilites\n   * - WMS GetFeatureInfo\n   * - WMTS GetCapabilities\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @ngdoc service\n   * @ngname ngeoQuerent\n   * @ngInject\n   */\n  constructor($http, $q, ngeoRuleHelper, ngeoWMSTime) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n\n    // === Other properties ===\n\n    /**\n     * Promises that can be resolved to cancel started requests.\n     * @type {!Array.<angular.$q.Deferred>}\n     * @private\n     */\n    this.requestCancelers_ = [];\n\n    /**\n     * Cache of promises for WMS GetCapabilities requests. They key is the\n     * online resource base url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmsGetCapabilitiesPromises_ = {};\n\n    /**\n     * Cache of promises for WMST GetCapabilities requests. They key is the\n     * url that is used to do the query.\n     * @type {!Object.<!angular.$q.Promise>}\n     * @private\n     */\n    this.wmtsGetCapabilitiesPromises_ = {};\n  }\n\n\n  // === PUBLIC methods ===\n\n  /**\n   * Issue WMS GetFeatureInfo and/or WFS GetFeature requests using the given\n   * data sources, map and optional filters.\n   *\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  issue(options) {\n\n    const promises = [];\n    const map = options.map;\n\n    // (1) Cancel requests that are still running\n    this.cancelStillRunningRequests_();\n\n    // (2) Get queryable data sources\n    let queryableDataSources;\n    if (options.queryableDataSources) {\n      queryableDataSources = options.queryableDataSources;\n    } else {\n      const dataSources = options.dataSources;\n      googAsserts.assert(dataSources, 'DataSources should be set');\n      queryableDataSources = this.getQueryableDataSources(dataSources, map);\n    }\n\n    // (3) Combine data sources that support WFS and issue WFS queries.\n    //     The 'bbox' ('extent' option) is not required for WFS requests to\n    //     be issued.\n    const combinedWFSDataSources = this.getCombinableWFSDataSources_(\n      queryableDataSources.wfs);\n    promises.push(this.issueCombinedWFS_(combinedWFSDataSources, options));\n\n    // (4) Combine data sources that support WMS and issue WMS queries.\n    //     Only occurs if the `coordinate` option is set, because it's required\n    //     by WMS GetFeatureInfo requests.\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const combinedWMSDataSources = this.getCombinableWMSDataSources_(\n        queryableDataSources.wms);\n      promises.push(this.issueCombinedWMS_(combinedWMSDataSources, options));\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Browse a given list of data sources. Return 2 lists of data sources that\n   * are queryable, the first one being those that support WFS and the other\n   * WMS only. This means that WFS is always favored first, then WMS.\n   *\n   * The map view resolution determines if the inner ogc layers are in range.\n   *\n   * @param {!Array.<!ngeo.datasource.DataSource>} dataSources Data sources\n   * @param {ol.Map} map Map.\n   * @return {!ngeox.QueryableDataSources} Queryable data sources.\n   * @export\n   */\n  getQueryableDataSources(dataSources, map) {\n\n    const queryableDataSources = {\n      wfs: [],\n      wms: []\n    };\n    const resolution = googAsserts.assertNumber(map.getView().getResolution());\n\n    for (const dataSource of dataSources) {\n\n      // (1) Skip data source that can't be queried\n      if (!this.isDataSourceQueryable_(dataSource, resolution)) {\n        continue;\n      }\n\n      if (dataSource instanceof ngeoDatasourceOGC) {\n        // (2) Split data sources\n        if (dataSource.supportsWFS) {\n          queryableDataSources.wfs.push(dataSource);\n        } else {\n          queryableDataSources.wms.push(dataSource);\n        }\n      }\n    }\n\n    return queryableDataSources;\n  }\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  wfsDescribeFeatureType(dataSource) {\n\n    googAsserts.assert(\n      dataSource.supportsAttributes,\n      `The data source must support WFS, have a single OGCLayer that\n      is queryable in order to issue WFS DescribeFeatureType requests`\n    );\n\n    const ogcLayerNames = dataSource.getOGCLayerNames();\n\n    const url = olUri.appendParams(\n      googAsserts.assertString(dataSource.wfsUrl),\n      {\n        'REQUEST': 'DescribeFeatureType',\n        'SERVICE': 'WFS',\n        'VERSION': '2.0.0',\n        'TYPENAME': ogcLayerNames\n      }\n    );\n\n    return this.http_.get(url).then((response) => {\n      const format = new ngeoWFSDescribeFeatureType();\n      return format.read(response.data);\n    });\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMS layer capabilities\n   * @param {string} layerName Name of the WMS layer\n   * @return {?Object} Found WMS layer capability\n   * @export\n   */\n  wmsFindLayerCapability(layerCapabilities, layerName) {\n\n    let found = null;\n\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Name'] === layerName) {\n        found = layerCapability;\n        break;\n      } else if (layerCapability['Layer']) {\n        found = this.wmsFindLayerCapability(\n          layerCapability['Layer'], layerName);\n        if (found) {\n          break;\n        }\n      }\n    }\n\n    return found;\n  }\n\n  /**\n   * @param {string} baseUrl Base url of the WMS server.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmsGetCapabilities(baseUrl, opt_cache) {\n\n    const cache = opt_cache !== false;\n\n    const params = {\n      'REQUEST': 'GetCapabilities',\n      'SERVICE': 'WMS',\n      'VERSION': '1.3.0'\n    };\n\n    const url = olUri.appendParams(baseUrl, params);\n    let promise;\n\n    if (!cache || !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      promise = this.wmsGetCapabilitiesPromises_[baseUrl];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmsGetCapabilitiesPromises_[baseUrl]) {\n      this.wmsGetCapabilitiesPromises_[baseUrl] = promise;\n    }\n\n    return promise;\n  }\n\n  /**\n   * @param {!Array.<!Object>} layerCapabilities List of WMTS layer capabilities\n   * @param {string} layerName Name of the WMTS layer, a.k.a. the identifier.\n   * @return {?Object} Found WTMS layer capability\n   * @export\n   */\n  wmtsFindLayerCapability(layerCapabilities, layerName) {\n    let found = null;\n    for (const layerCapability of layerCapabilities) {\n      if (layerCapability['Identifier'] === layerName) {\n        found = layerCapability;\n        break;\n      }\n    }\n    return found;\n  }\n\n  /**\n   * @param {string} url Url of the WMTS server. Note that it must contain\n   *     all required arguments.\n   * @param {boolean=} opt_cache Whether to use the cached capability, if\n   *     available. Enabling this will also store the capability when required\n   *     for the first time. Defaults to: `true`.\n   * @return {!angular.$q.Promise} Promise.\n   * @export\n   */\n  wmtsGetCapabilities(url, opt_cache) {\n\n    const cache = opt_cache !== false;\n    let promise;\n\n    if (!cache || !this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.http_.get(url).then((response) => {\n        const format = new olFormatWMTSCapabilities();\n        return format.read(response.data);\n      });\n    } else if (cache && this.wmtsGetCapabilitiesPromises_[url]) {\n      promise = this.wmtsGetCapabilitiesPromises_[url];\n    }\n\n    googAsserts.assert(promise);\n\n    if (cache && !this.wmtsGetCapabilitiesPromises_[url]) {\n      this.wmtsGetCapabilitiesPromises_[url] = promise;\n    }\n\n    return promise;\n  }\n\n\n  // === PRIVATE methods ===\n\n  /**\n   * Handles the response of multiple promises that did either\n   * WMS GetFeatureInfo or WFS GetFeature requests, in which the result is\n   * a hash with key being the data source id and value the array of features.\n   *\n   * The response object itself is an array, one item being one result per\n   * promise. The idea is to return a single hash by combining the result\n   * objects.\n   *\n   * The keys are always unique, i.e. there can be multiple result objects for\n   * the same data source id.\n   *\n   * @param {!Array.<ngeox.QuerentResult>} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleCombinedQueryResult_(response) {\n    const combinedHash = {};\n    for (const hash of response) {\n      for (const dataSourceIdStr in hash) {\n        const dataSourceId = Number(dataSourceIdStr);\n        combinedHash[dataSourceId] = hash[dataSourceId];\n      }\n    }\n    return combinedHash;\n  }\n\n\n  /**\n   * Handles the result of a single WMS GetFeatureInfo or WFS GetFeature\n   * request. Read features from the response and return them.\n   *\n   * @param {!Array.<!ngeo.datasource.OGC>} dataSources List of\n   *     queryable data sources that were used to do the query.\n   * @param {number} limit The maximum number of features to get with the query.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {angular.$http.Response|number} response Response.\n   * @return {ngeox.QuerentResult} Hash of features by data source ids.\n   * @private\n   */\n  handleQueryResult_(dataSources, limit, wfs, response) {\n    const hash = {};\n\n    for (const dataSource of dataSources) {\n      let features;\n      let tooManyFeatures;\n      let totalFeatureCount;\n\n      if (typeof response === 'number') {\n        features = [];\n        tooManyFeatures = true;\n        totalFeatureCount = response;\n      } else {\n        if (dataSource instanceof ngeoDatasourceOGC) {\n          features = this.readAndTypeFeatures_(dataSource, response.data, wfs);\n        } else {\n          features = [];\n        }\n      }\n      const dataSourceId = dataSource.id;\n      this.setUniqueIds_(features, dataSource.id);\n      hash[dataSourceId] = {\n        features,\n        limit,\n        tooManyFeatures,\n        totalFeatureCount\n      };\n    }\n\n    return hash;\n  }\n\n  /**\n   * Read and assign the type of the feature to each feature in the data.\n   * The type will be stocked in the properties of the features as\n   * \"ngeo_feature_type_\".\n   * @param {ngeo.datasource.OGC} dataSource used to read the features.\n   * @param {Document | Node | Object | string} data the response data.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @return {Array.<ol.Feature>} returned features with a type in each features.\n   * @private\n   */\n  readAndTypeFeatures_(dataSource, data, wfs) {\n    const features = [];\n    let readFeatures;\n    // Copy the types to be able to set it AND iterate on it.\n    const featureTypes = this.getSetOlFormatTypes_(dataSource, wfs).slice();\n    featureTypes.forEach((type) => {\n      // Assign temporarily a single feature type to read features separately.\n      this.getSetOlFormatTypes_(dataSource, wfs, [type]);\n      if (wfs) {\n        readFeatures = dataSource.wfsFormat.readFeatures(data);\n      } else {\n        readFeatures = dataSource.wmsFormat.readFeatures(data);\n      }\n      if (readFeatures.length > 0) {\n        readFeatures.forEach((feature) => {\n          feature.set('ngeo_feature_type_', type);\n          features.push(feature);\n        });\n      }\n    });\n    // Re-set the value to the datasource.xxxFormat to be able to re-use\n    // it later (in another query);\n    this.getSetOlFormatTypes_(dataSource, wfs, featureTypes);\n    return features;\n  }\n\n  /**\n   * Return the types defined in the format of the datasource. Can set the\n   * types if one is given.\n   * @param {ngeo.datasource.OGC} dataSource that contains the format object.\n   * @param {boolean} wfs Whether the query was WFS or WMS.\n   * @param {Array.<string>=} opt_types An array of type if you want to set the\n   *     type of the format object.\n   * @return {Array.<string>} The types defined in the format.\n   * @private\n   */\n  getSetOlFormatTypes_(dataSource, wfs, opt_types) {\n    let types;\n    if (wfs) {\n      if (opt_types) {\n        dataSource.wfsFormat.setFeatureType(opt_types);\n      }\n      types = dataSource.wfsFormat.getFeatureType();\n    } else {\n      if (opt_types) {\n        dataSource.wmsFormat.setLayers(opt_types);\n      }\n      types = dataSource.wmsFormat.getLayers();\n    }\n    if (!types) {\n      return [];\n    }\n    return (Array.isArray(types)) ? types : [types];\n  }\n\n  /**\n   * Issue WFS GetFeature requests using the given combined data sources, map\n   * and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWFS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const maxFeatures = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const srsName = projection.getCode();\n    const wfsCount = options.wfsCount === true;\n\n    // (1) Extent (bbox), which is optional, i.e. its value can stay undefined\n    let bbox;\n    const coordinate = options.coordinate;\n    if (coordinate) {\n      const tolerancePx = options.tolerancePx;\n      googAsserts.assert(tolerancePx);\n      const tolerance = tolerancePx * resolution;\n      bbox = olExtent.buffer(\n        olExtent.createOrUpdateFromCoordinate(coordinate),\n        tolerance\n      );\n    } else {\n      bbox = options.extent;\n    }\n\n    // (2) Launch one request per combinaison of data sources\n    const wfsFormat = new olFormatWFS();\n    const xmlSerializer = new XMLSerializer();\n    for (const dataSources of combinedDataSources) {\n\n      let getFeatureCommonOptions;\n      let featureNS;\n      let featureTypes = [];\n      let url;\n      const params = {};\n\n      if (options.bboxAsGETParam && bbox) {\n        params['bbox'] = bbox.join(',');\n      }\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!getFeatureCommonOptions) {\n          featureNS = dataSource.wfsFeatureNS;\n          const featurePrefix = dataSource.wfsFeaturePrefix;\n          const geometryName = dataSource.geometryName;\n          const outputFormat = dataSource.wfsOutputFormat;\n\n          getFeatureCommonOptions = {\n            bbox,\n            featureNS,\n            featurePrefix,\n            geometryName,\n            outputFormat,\n            srsName\n          };\n\n          url = dataSource.wfsUrl;\n\n          // All data sources combined share the same active dimensions\n          olObj.assign(params, dataSource.activeDimensions);\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        featureTypes = featureTypes.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Add filter, if any. If the case, then only one data source\n        //     is expected to be used for this request.\n        let filter;\n        if (options.filter) {\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            filter: options.filter,\n            incDimensions: true,\n            incTime: true\n          });\n        } else if ((dataSource.filterRules && dataSource.filterRules.length) ||\n            dataSource.timeRangeValue ||\n            (dataSource.dimensionsFiltersConfig && Object.keys(dataSource.dimensionsFiltersConfig).length > 0)) {\n\n          googAsserts.assert(\n            dataSources.length === 1,\n            `A data source having filterRules or timeRangeValue should issue\n            a single query, alone.`\n          );\n\n          filter = this.ngeoRuleHelper_.createFilter({\n            dataSource: dataSource,\n            incDimensions: true,\n            incTime: true,\n            srsName: srsName\n          });\n        }\n\n        if (filter) {\n          getFeatureCommonOptions['filter'] = filter;\n        }\n      }\n\n      googAsserts.assert(getFeatureCommonOptions);\n      getFeatureCommonOptions.featureTypes = featureTypes;\n      googAsserts.assert(url);\n\n      // (4) Build query then launch\n      //\n      //     If we require to do a WFS GetFeature request with\n      //     `resultType: 'hits'` first, do so. In that case, if there would\n      //     be too many features returned, no GetFeature is done thereafter\n      //     and the data sources will return empty arrays in the returned\n      //     response.\n      //\n      //     If we do not need to count features first, then proceed with\n      //     an normal WFS GetFeature request.\n      const getFeatureDefer = this.q_.defer();\n      promises.push(\n        getFeatureDefer.promise.then(\n          this.handleQueryResult_.bind(this, dataSources, maxFeatures, true)\n        )\n      );\n\n      // (4.1) Count, if required\n      let countPromise;\n      if (wfsCount) {\n        const getCountOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n          olObj.assign(\n            {\n              resultType: 'hits'\n            },\n            getFeatureCommonOptions\n          )\n        );\n        const featureCountXml = wfsFormat.writeGetFeature(getCountOptions);\n        const featureCountRequest = xmlSerializer.serializeToString(\n          featureCountXml);\n        const canceler = this.registerCanceler_();\n        countPromise = this.http_.post(\n          url,\n          featureCountRequest,\n          {\n            params: params,\n            headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n            timeout: canceler.promise\n          }\n        ).then(((response) => {\n          const meta = dataSources[0].wfsFormat.readFeatureCollectionMetadata(\n            response.data\n          );\n          return meta['numberOfFeatures'];\n        }).bind(this));\n      } else {\n        countPromise = this.q_.resolve();\n      }\n\n      // (4.2) After count, do GetFeature (if required)\n      countPromise.then((numberOfFeatures) => {\n        // `true` is returned if a count request was made AND there would\n        // be too many features.\n        if (numberOfFeatures === undefined || numberOfFeatures < maxFeatures) {\n\n          const getFeatureOptions = /** @type {olx.format.WFSWriteGetFeatureOptions} */ (\n            olObj.assign(\n              {\n                maxFeatures\n              },\n              getFeatureCommonOptions\n            )\n          );\n          const featureRequestXml = wfsFormat.writeGetFeature(\n            getFeatureOptions);\n          const featureRequest = xmlSerializer.serializeToString(\n            featureRequestXml);\n          googAsserts.assertString(url);\n          const canceler = this.registerCanceler_();\n          this.http_.post(\n            url,\n            featureRequest,\n            {\n              params: params,\n              headers: {'Content-Type': 'text/xml; charset=UTF-8'},\n              timeout: canceler.promise\n            }\n          ).then((response) => {\n            getFeatureDefer.resolve(response);\n          });\n\n        } else {\n          getFeatureDefer.resolve(numberOfFeatures);\n        }\n      });\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * Issue WMS GetFeatureInfo requests using the given combined data sources,\n   * map and optional filters.\n   *\n   * @param {!ngeo.query.Querent.CombinedDataSources} combinedDataSources Combined\n   *     data sources.\n   * @param {ngeox.IssueGetFeaturesOptions} options Options.\n   * @return {angular.$q.Promise} Promise.\n   * @private\n   */\n  issueCombinedWMS_(combinedDataSources, options) {\n\n    const promises = [];\n\n    // The 'limit' option is mandatory in the querent service\n    const FEATURE_COUNT = googAsserts.assertNumber(options.limit);\n\n    const map = options.map;\n    const view = map.getView();\n    const resolution = googAsserts.assertNumber(view.getResolution());\n    const projection = view.getProjection();\n    const projCode = projection.getCode();\n\n    // (1) Coordinate, which is required to issue WMS GetFeatureInfo requests\n    const coordinate = options.coordinate;\n    googAsserts.assert(coordinate);\n\n    // (2) Launch one request per combinaison of data sources\n    for (const dataSources of combinedDataSources) {\n\n      let url;\n      let LAYERS = [];\n      let INFO_FORMAT;\n      let activeDimensionsSet = false;\n      const params = {};\n      let filterString = null;\n      let filtrableLayerName = null;\n\n      // (3) Build query options\n      for (const dataSource of dataSources) {\n\n        // (a) Create common options, if not done yet\n        if (!INFO_FORMAT) {\n          INFO_FORMAT = dataSource.wmsInfoFormat;\n          url = dataSource.wmsUrl;\n        }\n\n        // (b) Add queryable layer names in featureTypes array\n        LAYERS = LAYERS.concat(\n          dataSource.getInRangeOGCLayerNames(resolution, true));\n\n        // (c) Manage active dimensions, which are added directly to the\n        //     query parameters. Note that this occurs only ONCE, i.e.\n        //     for the first data source, because all data sources here have\n        //     been combined together, therefore they share the same active\n        //     dimensions.\n        if (!activeDimensionsSet) {\n          olObj.assign(params, dataSource.activeDimensions);\n          activeDimensionsSet = true;\n        }\n\n        // (d) Add filter, if any. If there is a filter on the data source,\n        //     then it is expected that one request will be sent for this\n        //     data source only.\n        if (dataSource.filterRules && dataSource.filterRules.length) {\n          googAsserts.assert(dataSources.length === 1);\n          filtrableLayerName = dataSource.getFiltrableOGCLayerName();\n          filterString = this.ngeoRuleHelper_.createFilterString({\n            dataSource: dataSource,\n            srsName: projCode\n          });\n        }\n\n        // (e) Add TIME parameter if the data source has a time range value.\n        //     If that's the case, then it is expected that one request will be\n        //     sent for this data source only.\n        if (dataSource.timeRangeValue !== null && dataSource.timeProperty) {\n          googAsserts.assert(dataSources.length === 1);\n          params['TIME'] = this.ngeoWMSTime_.formatWMSTimeParam(\n            dataSource.timeProperty,\n            dataSource.timeRangeValue\n          );\n        }\n      }\n\n      params['LAYERS'] = LAYERS;\n      params['QUERY_LAYERS'] = LAYERS;\n\n      // Manage 'FILTER' parameter\n      if (filterString && filtrableLayerName) {\n        let filterParamValue = null;\n        if (LAYERS.length === 1) {\n          // When there's only one layer in the `LAYERS` parameters, then\n          // the filter string is given as-is.\n          filterParamValue = filterString;\n        } else {\n          // When there's more then one layer, then each filter must be wrapped\n          // between parenthesis and the order must also match the `LAYERS`\n          // parameter as well.\n          const filterParamValues = [];\n          for (let i = 0, ii = LAYERS.length; i < ii; i++) {\n            if (LAYERS[i] === filtrableLayerName) {\n              filterParamValues.push(`(${filterString})`);\n            } else {\n              filterParamValues.push('()');\n            }\n          }\n          filterParamValue = filterParamValues.join('');\n        }\n        params['FILTER'] = filterParamValue;\n      }\n\n      googAsserts.assert(url);\n      const wmsSource = new olSourceImageWMS({\n        params,\n        url\n      });\n\n      // (4) Build query url, then launch\n      const wmsGetFeatureInfoUrl = googAsserts.assertString(\n        wmsSource.getGetFeatureInfoUrl(\n          coordinate, resolution, projCode, {\n            // Without extern, quoting is necessary\n            'FEATURE_COUNT': FEATURE_COUNT,\n            'INFO_FORMAT': INFO_FORMAT\n          }\n        )\n      );\n\n      const canceler = this.registerCanceler_();\n      promises.push(\n        this.http_.get(\n          wmsGetFeatureInfoUrl,\n          {\n            timeout: canceler.promise\n          }\n        ).then(\n          this.handleQueryResult_.bind(this, dataSources, FEATURE_COUNT, false)\n        )\n      );\n    }\n\n    return this.q_.all(promises).then(\n      this.handleCombinedQueryResult_.bind(this)\n    );\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WFS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWFSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWFS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWFS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * @param {!Array.<ngeox.datasource.OGC>} dataSources List of\n   *     queryable data sources that supports WMS.\n   * @return {ngeo.query.Querent.CombinedDataSources} Combined lists of data sources.\n   * @private\n   */\n  getCombinableWMSDataSources_(dataSources) {\n    const combinableDataSources = [];\n    const notCombinableDataSources = [];\n\n    for (const dataSource of dataSources) {\n      if (dataSource.combinableForWMS) {\n        let combined = false;\n        for (const combinableDataSource of combinableDataSources) {\n          if (dataSource.combinableWithDataSourceForWMS(combinableDataSource[0])) {\n            combinableDataSource.push(dataSource);\n            combined = true;\n          }\n        }\n        if (!combined) {\n          combinableDataSources.push([dataSource]);\n        }\n      } else {\n        notCombinableDataSources.push([dataSource]);\n      }\n    }\n\n    return combinableDataSources.concat(notCombinableDataSources);\n  }\n\n  /**\n   * Checks if a data source can be queried, which requires it to be:\n   * - visible\n   * - in range\n   * - queryable (using the native getter)\n   * - have at least one OGC layer in range of current map view resolution.\n   *\n   * @param {ngeo.datasource.DataSource} ds Data source\n   * @param {number} res Resolution.\n   * @return {boolean} Whether the data source is queryable\n   * @private\n   */\n  isDataSourceQueryable_(ds, res) {\n    let queryable = ds.visible && ds.inRange && ds.queryable;\n    if (queryable && ds instanceof ngeoDatasourceOGC) {\n      const ogcDS = /** @type {!ngeo.datasource.OGC} */ (ds);\n      queryable = ogcDS.isAnyOGCLayerInRange(res, true);\n    }\n    return queryable;\n  }\n\n  /**\n   * Make sure that feature ids are unique, because the same features might\n   * be returned for different layers.\n   * @param {Array.<ol.Feature>} features Features\n   * @param {number} dataSourceId Data source id.\n   * @private\n   */\n  setUniqueIds_(features, dataSourceId) {\n    features.forEach((feature) => {\n      if (feature.getId() !== undefined) {\n        const id = `${dataSourceId}_${feature.getId()}`;\n        feature.setId(id);\n      }\n    });\n  }\n\n  /**\n   * @return {angular.$q.Deferred} A deferred that can be resolved to cancel a\n   *    HTTP request.\n   * @private\n   */\n  registerCanceler_() {\n    const canceler = this.q_.defer();\n    this.requestCancelers_.push(canceler);\n    return canceler;\n  }\n\n  /**\n   * @private\n   */\n  cancelStillRunningRequests_() {\n    for (const canceler of this.requestCancelers_) {\n      canceler.resolve();\n    }\n    this.requestCancelers_.length = 0;\n  }\n};\n\n\n/**\n * @typedef {!Array.<!Array.<!ngeo.datasource.OGC>>}\n */\nexports.CombinedDataSources;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoQuerent', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('ngeoQuerent', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.WFSAttribute\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatAttribute from 'ngeo/format/Attribute.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\nconst exports = class {\n\n\n  /**\n   * A format that reads the complexType from a WFS DescribeFeatureType\n   * response for a single set of attributes and return an array of\n   * `ngeox.Attribute`.\n   */\n\n\n  /**\n   * @param {Array.<Object>} complexTypeElements Complex type element\n   * @return {Array.<ngeox.Attribute>} Attributes\n   */\n  read(complexTypeElements) {\n    return complexTypeElements.map(this.readFromComplexTypeElement_);\n  }\n\n\n  /**\n   * @param {Object} object Complex type element\n   * @return {ngeox.Attribute} Attribute\n   * @private\n   */\n  readFromComplexTypeElement_(object) {\n\n    const name = googAsserts.assertString(object['name']);\n    const alias = 'alias' in object ?\n      googAsserts.assertString(object['alias']) : null;\n    const required = object['minOccurs'] != '0';\n\n    const attribute = {\n      name,\n      alias,\n      required\n    };\n\n    const type = googAsserts.assertString(object['type']);\n\n    if (!ngeoFormatAttribute.setGeometryType(attribute, type)) {\n      if (type === 'gml:TimeInstantType' || type === 'dateTime') {\n        attribute.type = ngeoFormatAttributeType.DATETIME;\n      } else if (type === 'date') {\n        attribute.type = ngeoFormatAttributeType.DATE;\n      } else if (type === 'time') {\n        attribute.type = ngeoFormatAttributeType.TIME;\n      } else if (type === 'decimal' || type === 'double') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.FLOAT;\n      } else if (type === 'integer' || type === 'long') {\n        attribute.type = ngeoFormatAttributeType.NUMBER;\n        attribute.numType = ngeoFormatXSDAttribute.NumberType.INTEGER;\n      } else if (type === 'boolean') {\n        attribute.type = ngeoFormatAttributeType.BOOLEAN;\n      } else {\n        attribute.type = ngeoFormatAttributeType.TEXT;\n      }\n    }\n\n    return attribute;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.datasource.Helper\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceDataSource from 'ngeo/datasource/DataSource.js';\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport ngeoFormatWFSAttribute from 'ngeo/format/WFSAttribute.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport * as olEvents from 'ol/events.js';\n\nconst exports = class {\n  /**\n   * A service that provides utility methods to manipulate or get data sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data source\n   *     service.\n   * @param {ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @ngdoc service\n   * @ngname ngeoDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, ngeoDataSources, ngeoQuerent) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.collection_ = ngeoDataSources.collection;\n\n    /**\n     * @type {ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {Object.<number, ngeo.datasource.DataSource>}\n     * @private\n     */\n    this.cache_ = {};\n\n    // Events\n\n    olEvents.listen(this.collection_, 'add', this.handleDataSourcesAdd_, this);\n    olEvents.listen(this.collection_, 'remove', this.handleDataSourcesRemove_, this);\n  }\n\n  /**\n   * @return {ngeox.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return this.collection_;\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?ngeo.datasource.DataSource} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return this.cache_[id] || null;\n  }\n\n  /**\n   * Get the attributes of a data source. If they are not set, they are obtained\n   * from the querent service using a WFS DescribeFeatureType request, then set\n   * in the data source.\n   *\n   * Please, note that in order to be dynamically set, the data source must\n   * only have 1 ogcLayer set and be queryable.\n   *\n   * @param {ngeo.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  getDataSourceAttributes(dataSource) {\n\n    const wfsDescribeFeatureTypeDefer = this.q_.defer();\n\n    if (dataSource.attributes) {\n      wfsDescribeFeatureTypeDefer.resolve(dataSource.attributes);\n    } else {\n      this.ngeoQuerent_.wfsDescribeFeatureType(\n        dataSource\n      ).then((featureType) => {\n        // We know, at this point, that there's only one definition that\n        // was returned.  Just to be sure, let's do a bunch of assertions.\n        const ogcLayerName = dataSource.getOGCLayerNames()[0];\n        googAsserts.assertString(ogcLayerName, 'The data source should have only one ogcLayer.');\n        for (const element of featureType.element) {\n          if (element.name === ogcLayerName) {\n            for (const type of featureType.complexType) {\n              if (type.name == element.type) {\n                const complexContent = type.complexContent;\n                const attributes = new ngeoFormatWFSAttribute().read(complexContent);\n\n                // Set the attributes in the data source\n                dataSource.setAttributes(attributes);\n\n                wfsDescribeFeatureTypeDefer.resolve(attributes);\n                break;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    return wfsDescribeFeatureTypeDefer.promise;\n  }\n\n  /**\n   * Called when a new data source is added to the ngeo collection. Add it\n   * to the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    this.cache_[dataSource.id] = dataSource;\n  }\n\n  /**\n   * Called when a data source is removed from the ngeo collection. Remove it\n   * from the cache.\n   * @param {ol.Collection.Event} evt Event\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = googAsserts.assertInstanceof(\n      evt.element, ngeoDatasourceDataSource);\n    delete this.cache_[dataSource.id];\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDataSourcesHelper', [\n  ngeoDatasourceDataSources.module.name,\n  ngeoQueryQuerent.module.name,\n]);\nexports.module.service('ngeoDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.Snapping\n */\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olFormatWFS from 'ol/format/WFS.js';\nimport olInteractionSnap from 'ol/interaction/Snap.js';\n\n/**\n * The snapping service of GMF. Responsible of collecting the treeCtrls that\n * support snapping and store them here. As soon as a treeCtrl state becomes\n * 'on', a WFS GetFeature request is issued to collect the features at the\n * map view location. A new request is sent every time the map is panned or\n * zoomed for each treeCtrl that are still 'on'.\n *\n * Features returned by these requests get bound to a `ol.interaction.Snap`,\n * which allows the snapping to occur on other places where vector\n * features are drawn or modified.\n *\n * @constructor\n * @param {angular.$http} $http Angular $http service.\n * @param {angular.$q} $q The Angular $q service.\n * @param {!angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfSnapping\n */\nconst exports = function($http, $q, $rootScope, $timeout, gmfThemes,\n  gmfTreeManager) {\n\n  // === Injected services ===\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n\n  // === Properties ===\n\n  /**\n   * A cache containing all available snappable items, in which the listening\n   * of the state of the `treeCtrl` is registered and unregistered.\n   * @type {gmf.editing.Snapping.Cache}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * Reference to the promise taking care of calling all GetFeature requests\n   * of the currently active cache items after the map view changed. Used\n   * to cancel if the map view changes often within a short period of time.\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.mapViewChangePromise_ = null;\n\n  /**\n   * A reference to the OGC servers loaded by the theme service.\n   * @type {gmfThemes.GmfOgcServers|null}\n   * @private\n   */\n  this.ogcServers_ = null;\n\n};\n\n\n/**\n * In order for a `ol.interaction.Snap` to work properly, it has to be added\n * to the map after any draw interactions or other kinds of interactions that\n * ineracts with features on the map.\n *\n * This method can be called to make sure the Snap interactions are on top.\n *\n * @export\n */\nexports.prototype.ensureSnapInteractionsOnTop = function() {\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      googAsserts.assert(item.interaction);\n      map.removeInteraction(item.interaction);\n      map.addInteraction(item.interaction);\n    }\n  }\n};\n\n\n/**\n * Bind the snapping service to a map\n * @param {?ol.Map} map Map\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  const keys = this.listenerKeys_;\n\n  if (this.map_) {\n    this.treeCtrlsUnregister_();\n    this.unregisterAllTreeCtrl_();\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n  }\n\n  this.map_ = map;\n\n  if (map) {\n    this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(() => {\n      if (this.gmfTreeManager_.rootCtrl) {\n        return this.gmfTreeManager_.rootCtrl.children;\n      }\n    }, (value) => {\n      // Timeout required, because the collection event is fired before the\n      // leaf nodes are created and they are the ones we're looking for here.\n      this.timeout_(() => {\n        if (value) {\n          this.unregisterAllTreeCtrl_();\n          this.gmfTreeManager_.rootCtrl.traverseDepthFirst(this.registerTreeCtrl_.bind(this));\n        }\n      }, 0);\n    });\n\n    keys.push(\n      olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this),\n      olEvents.listen(map, 'moveend', this.handleMapMoveEnd_, this)\n    );\n  }\n};\n\n\n/**\n * Called when the themes change. Get the OGC servers, then listen to the\n * tree manager Layertree controllers array changes.\n * @private\n */\nexports.prototype.handleThemesChange_ = function() {\n  this.ogcServers_ = null;\n  this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n    this.ogcServers_ = ogcServers;\n  });\n};\n\n\n/**\n * Registers a newly added Layertree controller 'leaf'. If it's snappable,\n * create and add a cache item with every configuration required to do the\n * snapping. It becomes active when its state is set to 'on'.\n *\n * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to register\n * @private\n */\nexports.prototype.registerTreeCtrl_ = function(treeCtrl) {\n\n  // Skip any Layertree controller that has a node that is not a leaf\n  let node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (node.children) {\n    return;\n  }\n\n  // If treeCtrl is snappable and supports WFS, listen to its state change.\n  // When it becomes visible, it's added to the list of snappable tree ctrls.\n  node = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const snappingConfig = gmfThemeThemes.getSnappingConfig(node);\n  if (snappingConfig) {\n    const wfsConfig = this.getWFSConfig_(treeCtrl);\n    if (wfsConfig) {\n      const uid = olBase.getUid(treeCtrl);\n\n      const stateWatcherUnregister = this.rootScope_.$watch(\n        () => treeCtrl.getState(),\n        this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n      );\n\n      // Todo: some of the properties here are hardcoded, but could come from\n      //       the node metadata at some point.\n      this.cache_[uid] = {\n        active: false,\n        featureNS: 'http://mapserver.gis.umn.edu/mapserver',\n        featurePrefix: 'feature',\n        features: new olCollection(),\n        geometryName: 'geom',\n        interaction: null,\n        maxFeatures: 50,\n        requestDeferred: null,\n        snappingConfig: snappingConfig,\n        treeCtrl: treeCtrl,\n        wfsConfig: wfsConfig,\n        stateWatcherUnregister: stateWatcherUnregister\n      };\n\n      // This extra call is to initialize the treeCtrl with its current state\n      this.handleTreeCtrlStateChange_(treeCtrl, treeCtrl.getState());\n    }\n  }\n};\n\n\n/**\n * Unregisters all removed layertree controllers 'leaf'. Remove the according\n * cache item and deactivate it as well. Unregister events.\n *\n * @private\n */\nexports.prototype.unregisterAllTreeCtrl_ = function() {\n  for (const uid in this.cache_) {\n    const item = this.cache_[+uid];\n    if (item) {\n      item.stateWatcherUnregister();\n      this.deactivateItem_(item);\n      delete this.cache_[+uid];\n    }\n  }\n};\n\n\n/**\n * Get the configuration required to do WFS requests (for snapping purpose)\n * from a Layertree controller that has a leaf node.\n *\n * The following requirements must be met in order for a treeCtrl to be\n * considered supporting WFS:\n *\n * 1) ogcServers objects are loaded\n * 2) its node `type` property is equal to `WMS`\n * 3) in its node `childLayers` property, the `queryable` property is set\n *    to `true`\n * 4) if its node `mixed` property is:\n *   a) true: then the node must have an `ogcServer` property set\n *   b) false: then the first parent node must have an `ogcServer` property set\n * 5) the ogcServer defined in 3) has the `wfsSupport` property set to `true`.\n *\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @return {?gmf.editing.Snapping.WFSConfig} The configuration object.\n * @private\n */\nexports.prototype.getWFSConfig_ = function(treeCtrl) {\n\n  // (1)\n  if (this.ogcServers_ === null) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n\n  // (2)\n  if (gmfLayer.type !== gmfThemeThemes.NodeType.WMS) {\n    return null;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  // (3)\n  const featureTypes = [];\n  for (let i = 0, ii = gmfLayerWMS.childLayers.length; i < ii; i++) {\n    if (gmfLayerWMS.childLayers[i].queryable) {\n      featureTypes.push(gmfLayerWMS.childLayers[i].name);\n    }\n  }\n  if (!featureTypes.length) {\n    return null;\n  }\n\n  // (4)\n  let ogcServerName;\n  const gmfGroup = /** @type {gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  if (gmfGroup.mixed) {\n    ogcServerName = gmfLayerWMS.ogcServer;\n  } else {\n    const firstTreeCtrl = ngeoLayertreeController.getFirstParentTree(treeCtrl);\n    const firstNode = /** @type {gmfThemes.GmfGroup} */ (firstTreeCtrl.node);\n    ogcServerName = firstNode.ogcServer;\n  }\n  if (!ogcServerName) {\n    return null;\n  }\n\n  // (5)\n  const ogcServer = this.ogcServers_[ogcServerName];\n  if (!ogcServer.wfsSupport) {\n    return null;\n  }\n\n  // At this point, every requirements have been met.\n  // Create and return the configuration.\n  const urlWfs = ogcServer.urlWfs;\n  googAsserts.assert(urlWfs, 'urlWfs should be defined.');\n\n  return {\n    featureTypes: featureTypes.join(','),\n    url: urlWfs\n  };\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n * @param {string|undefined} newVal New state value\n * @private\n */\nexports.prototype.handleTreeCtrlStateChange_ = function(treeCtrl, newVal) {\n\n  const uid = olBase.getUid(treeCtrl);\n  const item = this.cache_[uid];\n\n  // Note: a snappable treeCtrl can only be a leaf, therefore the only possible\n  //       states are: 'on' and 'off'.\n  if (newVal === 'on') {\n    this.activateItem_(item);\n  } else {\n    this.deactivateItem_(item);\n  }\n};\n\n\n/**\n * Activate a cache item by adding a Snap interaction to the map and launch\n * the initial request to get the features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.activateItem_ = function(item) {\n\n  // No need to do anything if item is already active\n  if (item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = new olInteractionSnap({\n    edge: item.snappingConfig.edge,\n    features: item.features,\n    pixelTolerance: item.snappingConfig.tolerance,\n    vertex: item.snappingConfig.vertex\n  });\n\n  map.addInteraction(interaction);\n\n  item.interaction = interaction;\n  item.active = true;\n\n  // Init features\n  this.loadItemFeatures_(item);\n};\n\n\n/**\n * Deactivate a cache item by removing the snap interaction and clearing any\n * existing features.\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.deactivateItem_ = function(item) {\n\n  // No need to do anything if item is already inactive\n  if (!item.active) {\n    return;\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const interaction = item.interaction;\n  map.removeInteraction(interaction);\n\n  item.interaction = null;\n  item.features.clear();\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n    item.requestDeferred = null;\n  }\n\n  item.active = false;\n};\n\n\n/**\n * @private\n */\nexports.prototype.loadAllItems_ = function() {\n  this.mapViewChangePromise_ = null;\n  let item;\n  for (const uid in this.cache_) {\n    item = this.cache_[+uid];\n    if (item.active) {\n      this.loadItemFeatures_(item);\n    }\n  }\n};\n\n\n/**\n * Manually refresh all features\n */\nexports.prototype.refresh = function() {\n  this.loadAllItems_();\n};\n\n\n/**\n * For a specific cache item, issue a new WFS GetFeatures request. The returned\n * features set in the item collection of features (they replace any existing\n * ones first).\n *\n * @param {gmf.editing.Snapping.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.loadItemFeatures_ = function(item) {\n\n  // If a previous request is still running, cancel it.\n  if (item.requestDeferred) {\n    item.requestDeferred.resolve();\n  }\n\n  const map = this.map_;\n  googAsserts.assert(map);\n\n  const view = map.getView();\n  const size = map.getSize();\n  googAsserts.assert(size);\n\n  const extent = view.calculateExtent(size);\n  const projCode = view.getProjection().getCode();\n  const featureTypes = item.wfsConfig.featureTypes.split(',');\n\n  const getFeatureOptions = {\n    srsName: projCode,\n    featureNS: item.featureNS,\n    featurePrefix: item.featurePrefix,\n    featureTypes: featureTypes,\n    outputFormat: 'GML3',\n    bbox: extent,\n    geometryName: item.geometryName,\n    maxFeatures: item.maxFeatures\n  };\n\n  const wfsFormat = new olFormatWFS();\n  const xmlSerializer = new XMLSerializer();\n  const featureRequestXml = wfsFormat.writeGetFeature(getFeatureOptions);\n  const featureRequest = xmlSerializer.serializeToString(featureRequestXml);\n  const url = item.wfsConfig.url;\n\n  item.requestDeferred = this.q_.defer();\n\n  this.http_.post(url, featureRequest, {timeout: item.requestDeferred.promise})\n    .then((response) => {\n      // (1) Unset requestDeferred\n      item.requestDeferred = null;\n\n      // (2) Clear any previous features in the item\n      item.features.clear();\n\n      // (3) Read features from request response and add them to the item\n      const readFeatures = new olFormatWFS().readFeatures(response.data);\n      if (readFeatures) {\n        item.features.extend(readFeatures);\n      }\n    });\n\n};\n\n\n/**\n * Called when the map view changes. Load all active cache items after a small\n * delay. Cancel any currently delayed call, if required.\n * @private\n */\nexports.prototype.handleMapMoveEnd_ = function() {\n  if (this.mapViewChangePromise_) {\n    this.timeout_.cancel(this.mapViewChangePromise_);\n  }\n  this.mapViewChangePromise_ = this.timeout_(\n    this.loadAllItems_.bind(this),\n    400\n  );\n};\n\n\n/**\n * @typedef {Object<number, gmf.editing.Snapping.CacheItem>}\n */\nexports.Cache;\n\n\n/**\n * @typedef {{\n *     active: (boolean),\n *     featureNS: (string),\n *     featurePrefix: (string),\n *     features: (ol.Collection.<ol.Feature>),\n *     geometryName: (string),\n *     interaction: (?ol.interaction.Snap),\n *     maxFeatures: (number),\n *     requestDeferred: (?angular.$q.Deferred),\n *     snappingConfig: (gmfThemes.GmfSnappingConfig),\n *     stateWatcherUnregister: (Function),\n *     treeCtrl: (ngeo.layertree.Controller),\n *     wfsConfig: (gmf.editing.Snapping.WFSConfig)\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     featureTypes: (string),\n *     url: (string)\n * }}\n */\nexports.WFSConfig;\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSnapping', [\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeController.module.name,\n]);\nexports.module.service('gmfSnapping', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Translate\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionTranslate from 'ol/interaction/Translate.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * An extension of the OpenLayers Translate interaction that adds the following\n * features to it:\n *\n * - show a small arrow icon in the middle of the features allowing a visual\n *   aspect that tells the user \"this feature can be moved\"\n * - pressing the ESC key automatically deactivate the interaction.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Translate}\n * @param {ngeox.interaction.TranslateOptions} options Options.\n */\nconst exports = function(options) {\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {!Object.<number, ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = {};\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.myFeatures_ = options.features !== undefined ? options.features : null;\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    useSpatialIndex: false\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: options.style,\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionTranslate.call(\n    this, /** @type {olx.interaction.TranslateOptions} */ (options));\n};\n\nolBase.inherits(exports, olInteractionTranslate);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionTranslate.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.vectorLayer_.setMap(null);\n  }\n\n  olInteractionTranslate.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.vectorLayer_.setMap(map);\n  }\n\n  this.setState_();\n};\n\n\n/**\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const features = this.myFeatures_;\n  const keys = this.listenerKeys_;\n\n  if (map && active && features) {\n    features.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(features, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n\n    if (map) {\n      const elem = map.getTargetElement();\n      elem.style.cursor = 'default';\n    }\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    features.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  this.featureListenerKeys_[uid] = olEvents.listen(\n    geometry,\n    'change',\n    this.handleGeometryChange_.bind(this, feature),\n    this\n  );\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.vectorSource_.addFeature(centerFeature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  if (this.featureListenerKeys_[uid]) {\n    olEvents.unlistenByKey(this.featureListenerKeys_[uid]);\n    delete this.featureListenerKeys_[uid];\n\n    this.vectorSource_.removeFeature(this.centerFeatures_[uid]);\n    delete this.centerFeatures_[uid];\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature being moved.\n * @param {ol.events.Event} evt Event.\n * @private\n */\nexports.prototype.handleGeometryChange_ = function(feature,\n  evt) {\n  const geometry = evt.target;\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  const point = this.getGeometryCenterPoint_(geometry);\n  const uid = olBase.getUid(feature);\n  this.centerFeatures_[uid].setGeometry(point);\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.geom.Point} The center point of the geometry.\n * @private\n */\nexports.prototype.getGeometryCenterPoint_ = function(\n  geometry) {\n\n  let center;\n  let point;\n\n  if (geometry instanceof olGeomPolygon) {\n    point = geometry.getInteriorPoint();\n  } else if (geometry instanceof olGeomLineString) {\n    center = geometry.getCoordinateAt(0.5);\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  if (!point && center) {\n    point = new olGeomPoint(center);\n  }\n\n  googAsserts.assert(point, 'Point should be thruthy');\n\n  return point;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Rotate\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olExtent from 'ol/extent.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction to rotate features.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.keyPressListenerKey_ = null;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.coordinate_ = null;\n\n  /**\n   * @type {ol.Coordinate}\n   * @private\n   */\n  this.centerCoordinate_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!Object.<number, ol.Feature>}\n   * @private\n   */\n  this.centerFeatures_ = {};\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n\n  if (this.keyPressListenerKey_) {\n    olEvents.unlistenByKey(this.keyPressListenerKey_);\n    this.keyPressListenerKey_ = null;\n  }\n\n  olInteractionPointer.prototype.setActive.call(this, active);\n\n  if (active) {\n    this.keyPressListenerKey_ = olEvents.listen(\n      document,\n      'keyup',\n      this.handleKeyUp_,\n      this\n    );\n    this.features_.forEach(feature => this.addFeature_(feature));\n    this.listenerKeys_.push(\n      olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this)\n    );\n\n  } else {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  googAsserts.assertInstanceof(geometry, olGeomGeometry);\n\n  feature.set('angle', 0);\n\n  // Add the center icon to the overlay\n  const uid = olBase.getUid(feature);\n  const point = new olGeomPoint(this.getCenterCoordinate_(geometry));\n  const centerFeature = new olFeature(point);\n  this.centerFeatures_[uid] = centerFeature;\n  this.overlay_.getSource().addFeature(centerFeature);\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.feature_ = null;\n  //this.overlay_.getSource().removeFeature(feature);\n\n  if (feature) {\n    const uid = olBase.getUid(feature);\n\n    if (this.centerFeatures_[uid]) {\n      this.overlay_.getSource().removeFeature(this.centerFeatures_[uid]);\n      delete this.centerFeatures_[uid];\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  let feature = map.forEachFeatureAtPixel(evt.pixel,\n    (feature, layer) => feature, undefined);\n\n  if (feature) {\n    let found = false;\n    this.features_.forEach((f) => {\n      if (olBase.getUid(f) == olBase.getUid(feature)) {\n        found = true;\n      }\n    });\n    if (!found) {\n      feature = null;\n    }\n  }\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n    const geometry = (this.feature_.getGeometry());\n    if (geometry !== undefined) {\n      this.centerCoordinate_ = this.getCenterCoordinate_(geometry);\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {ol.Coordinate} The center coordinate of the geometry.\n * @private\n */\nexports.prototype.getCenterCoordinate_ = function(\n  geometry) {\n\n  let center;\n\n  if (geometry instanceof olGeomLineString) {\n    center = geometry.getFlatMidpoint();\n  } else if (geometry instanceof olGeomPolygon) {\n    center = geometry.getFlatInteriorPoint();\n  } else {\n    const extent = geometry.getExtent();\n    center = olExtent.getCenter(extent);\n  }\n\n  return center;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (this.feature_.getGeometry());\n\n  const oldX = this.coordinate_[0];\n  const oldY = this.coordinate_[1];\n\n  const centerX = this.centerCoordinate_[0];\n  const centerY = this.centerCoordinate_[1];\n\n  const dx1 = oldX - centerX;\n  const dy1 = oldY - centerY;\n  const dx0 = evt.coordinate[0] - centerX;\n  const dy0 = evt.coordinate[1] - centerY;\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n\n  const a0 = Math.atan2(dy0, dx0);\n  const a1 = Math.atan2(dy1, dx1);\n  const angle = a1 - a0;\n\n  geometry.rotate(-angle, [centerX, centerY]);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.RotateEvent} */\n    const event = new ngeoCustomEvent('rotateend', {feature: this.feature_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n    this.setActive(false);\n  }\n  return false;\n};\n\n\n/**\n * Deactivate this interaction if the ESC key is pressed.\n * @param {KeyboardEvent} evt Event.\n * @private\n */\nexports.prototype.handleKeyUp_ = function(evt) {\n  // 27 == ESC key\n  if (evt.keyCode === 27) {\n    this.setActive(false);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.features\n */\nimport olCollection from 'ol/Collection.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFeatures', []);\n\nexports.value('ngeoFeatures', new olCollection());\n\n\nexport default exports;\n","/**\n * @module ngeo.Menu\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olOverlayPositioning from 'ol/OverlayPositioning.js';\n\n/**\n * @classdesc\n * An OpenLayers overlay that shows a contextual menu with configurable actions\n * anchored from its top left to a specific location. An event is fired when\n * any of the action is clicked.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {ngeox.MenuOptions=} menuOptions Menu options.\n * @param {olx.OverlayOptions=} opt_overlayOptions Overlay options.\n */\nconst exports = function(menuOptions, opt_overlayOptions) {\n\n  const options = opt_overlayOptions !== undefined ? opt_overlayOptions : {};\n\n  options.positioning = olOverlayPositioning.TOP_LEFT;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.clickOutListenerKey_ = null;\n\n  const contentEl = $('<div/>', {\n    'class': 'panel panel-default'\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoClose_ = menuOptions.autoClose !== undefined ?\n    menuOptions.autoClose : true;\n\n  // titleEl\n  if (menuOptions.title) {\n    const headerEl = $('<div>', {\n      'class': 'panel-heading'\n    }).appendTo(contentEl);\n\n    $('<span>', {\n      text: menuOptions.title\n    }).appendTo(headerEl);\n  }\n\n  // actionsEl\n  const actionsEl = $('<div>', {\n    'class': 'list-group'\n  }).appendTo(contentEl);\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.actions_ = [];\n\n  menuOptions.actions.forEach((action) => {\n    this.actions_.push(\n      $('<button>', {\n        'class': 'list-group-item',\n        'data-name': action.name,\n        'text': [\n          ' ',\n          (action.label) !== undefined ? action.label : action.name\n        ].join('')\n      })\n        .appendTo(actionsEl)\n        .prepend($('<span>', {\n          'class': action.cls !== undefined ? action.cls : ''\n        }))\n    );\n  });\n\n  options.element = contentEl[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @param {ol.PluggableMap|undefined} map Map.\n * @export\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.actions_.forEach((action) => {\n      const data = action.data();\n      this.listenerKeys_.push(\n        olEvents.listen(\n          action[0],\n          'click',\n          this.handleActionClick_.bind(this, data.name)\n        )\n      );\n    });\n\n    // Autoclose the menu when clicking anywhere else than the menu\n    this.listenerKeys_.push(\n      olEvents.listen(\n        map,\n        'pointermove',\n        this.handleMapPointerMove_,\n        this\n      )\n    );\n  }\n\n};\n\n\n/**\n * Opens the menu at the desited coordinate. Also starts listening for the\n * clickout if autoClose is enabled.\n * @param {ol.Coordinate} coordinate Where to open the menu.\n * @export\n */\nexports.prototype.open = function(coordinate) {\n  this.setPosition(coordinate);\n  if (this.autoClose_) {\n    this.clickOutListenerKey_ = olEvents.listen(\n      document.documentElement,\n      'mousedown',\n      this.handleClickOut_,\n      this\n    );\n  }\n\n};\n\n\n/**\n * @export\n */\nexports.prototype.close = function() {\n  this.setPosition(undefined);\n\n  if (this.clickOutListenerKey_ !== null) {\n    olEvents.unlistenByKey(this.clickOutListenerKey_);\n  }\n};\n\n\n/**\n * @param {string} action The action name that was clicked.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleActionClick_ = function(action, evt) {\n\n  this.dispatchEvent(new ngeoCustomEvent('actionclick', {\n    action: action\n  }));\n\n  if (this.autoClose_) {\n    this.close();\n  }\n\n  evt.stopPropagation();\n};\n\n\n/**\n * Handles clicks out of the menu. If the menu is visible, close it.\n * @param {Event} evt Event.\n * @private\n */\nexports.prototype.handleClickOut_ = function(evt) {\n  const element = this.getElement();\n  if (element && $(evt.target).closest(element).length === 0) {\n    this.close();\n  }\n};\n\n\n/**\n * When the mouse is hovering the menu, set the event coordinate and pixel\n * values to Infinity to do as if the mouse had been move out of range of the\n * map. This prevents behaviours such as vertex still appearing while mouse\n * hovering edges of features bound to an active modify control while the\n * cursor is on top of the menu.\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handleMapPointerMove_ = function(evt) {\n  const target = evt.originalEvent.target;\n  googAsserts.assertInstanceof(target, Element);\n\n  const element = this.getElement();\n  googAsserts.assertInstanceof(element, Element);\n\n  if (element.contains(target)) {\n    evt.coordinate = [Infinity, Infinity];\n    evt.pixel = [Infinity, Infinity];\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.Location\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides a service for interacting with the URL in the\n * browser address bar.\n *\n * WARNING: because of a bug in Angular this service is not compatible with\n * the $location service. This further means that service is not compatible\n * with the $anchorScroll and $route services, and with the ng-include and\n * ng-view directives (which are based on the $anchorScroll and $route\n * services). See <https://github.com/angular/angular.js/issues/1417>.\n *\n * This file also provides an ngeo.statemanager.Location.MockProvider function that you can\n * use to mock Angular's $location provider and make it possible to use both\n * ngeoLocation and ng-include.\n *\n *     app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * The ngeo Location type.\n *\n * See our live example: [../examples/permalink.html](../examples/permalink.html)\n *\n * @param {Location} location Location.\n * @param {History} history History.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoLocation\n */\nconst exports = function(location, history) {\n  /**\n   * @type {History}\n   * @private\n   */\n  this.history_ = history;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.schema_ = location.protocol.substring(0, location.protocol.length - 1);\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.domain_ = location.hostname;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.port_ = location.port ? parseInt(location.port, 10) : undefined;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.path_ = location.pathname;\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.queryData_ = ngeoUtils.decodeQueryString(location.search);\n\n  /**\n   * @type {!Object.<string, string>}\n   * @private\n   */\n  this.fragment_ = ngeoUtils.decodeQueryString(location.hash);\n};\n\n\n/**\n * @param {History} history History.\n * @param {string} state State.\n */\nexports.replaceState = function(history, state) {\n  try {\n    history.replaceState(null, '', state);\n  } catch (error) {\n    // replaceState fails on some browser if the domain in the state\n    // is not the same as location.origin\n  }\n};\n\n\n/**\n * Get the location's current path.\n * @return {string|undefined} The path.\n * @export\n */\nexports.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Get the location's URI as a string\n * @return {string} The URI.\n * @export\n */\nexports.prototype.getUriString = function() {\n  const out = [];\n\n  if (this.schema_) {\n    out.push(this.schema_, ':');\n  }\n\n  if (this.domain_ || this.schema_ === 'file') {\n    out.push('//');\n\n    out.push(this.domain_);\n\n    if (this.port_ !== undefined) {\n      out.push(':', String(this.port_));\n    }\n  }\n\n  if (this.path_) {\n    if (this.domain_ && this.path_.charAt(0) !== '/') {\n      out.push('/');\n    }\n    out.push(this.path_);\n  }\n\n  const encodedQueryData = ngeoUtils.encodeQueryString(this.queryData_);\n  if (encodedQueryData.length > 0) {\n    out.push('?', encodedQueryData);\n  }\n\n  const encodedFragment = ngeoUtils.encodeQueryString(this.fragment_);\n  if (encodedFragment.length > 0) {\n    out.push('#', encodedFragment);\n  }\n  return out.join('');\n};\n\n\n/**\n * Check if a param exists in the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasParam = function(key) {\n  return key in this.queryData_;\n};\n\n\n/**\n * Check if a param exists in the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {boolean} True if the param exists.\n * @export\n */\nexports.prototype.hasFragmentParam = function(key) {\n  return key in this.fragment_;\n};\n\n\n/**\n * Get a param in the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getParam = function(key) {\n  return this.queryData_[key];\n};\n\n\n/**\n * Get a param from the fragment of the location's URI.\n * @param {string} key Param key.\n * @return {string|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParam = function(key) {\n  return this.fragment_[key];\n};\n\n\n/**\n * Get a param in the location's URI as integer. If the entry does not exist,\n * or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsInt = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get a param in the location's URI as a floating point number.\n * If the entry does not exist, or if the value can not be parsed,\n * `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getParamAsFloat = function(key) {\n  const value = this.getParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsFloat = parseFloat(value);\n  return isNaN(valueAsFloat) ? undefined : valueAsFloat;\n};\n\n\n/**\n * Get a param from the fragment of the location's URI as integer. If the entry\n * does not exist, or if the value can not be parsed as integer, `undefined` is returned.\n * @param {string} key Param key.\n * @return {number|undefined} Param value.\n * @export\n */\nexports.prototype.getFragmentParamAsInt = function(key) {\n  const value = this.getFragmentParam(key);\n  if (value === undefined) {\n    return undefined;\n  }\n  googAsserts.assertString(value);\n  const valueAsInt = parseInt(value, 10);\n  return (isNaN(valueAsInt)) ? undefined : valueAsInt;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeys = function() {\n  const keys = [];\n  for (const key in this.queryData_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeys = function() {\n  const keys = [];\n  for (const key in this.fragment_) {\n    keys.push(key);\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys in the location's URI that start\n * with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.queryData_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Get an array with all existing param's keys from the fragment of the location's URI\n * that start with the given prefix.\n * @param {string} prefix Key prefix.\n * @return {Array.<string>} Param keys.\n * @export\n */\nexports.prototype.getFragmentParamKeysWithPrefix = function(prefix) {\n  const keys = [];\n  for (const key in this.fragment_) {\n    if (key.indexOf(prefix) == 0) {\n      keys.push(key);\n    }\n  }\n  return keys;\n};\n\n\n/**\n * Set or create a param in the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateParams = function(params) {\n  for (const key in params) {\n    this.queryData_[key] = params[key];\n  }\n};\n\n\n/**\n * Set or create a param in the fragment of the location's URI.\n * @param {!Object.<string, string>} params Parameters.\n * @export\n */\nexports.prototype.updateFragmentParams = function(params) {\n  for (const key in params) {\n    this.fragment_[key] = params[key];\n  }\n};\n\n\n/**\n * Delete a param in the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteParam = function(key) {\n  delete this.queryData_[key];\n};\n\n\n/**\n * Delete a param int the fragment of the location's URI.\n * @param {string} key Param key.\n * @export\n */\nexports.prototype.deleteFragmentParam = function(key) {\n  delete this.fragment_[key];\n};\n\n\n/**\n * Refresh the the location's URI.\n * @export\n */\nexports.prototype.refresh = function() {\n  exports.replaceState(this.history_, this.getUriString());\n};\n\n\n/**\n * Set a new path for this location.\n * @param {string} path Path.\n * @export\n */\nexports.prototype.setPath = function(path) {\n  this.path_ = path;\n};\n\n\n/**\n * The factory creating the ngeo Location service.\n *\n * @param {angular.Scope} $rootScope The root scope.\n * @param {angular.$window} $window Angular window service.\n * @return {ngeo.statemanager.Location} The ngeo location service.\n * @ngInject\n */\nexports.LocationFactory = function($rootScope, $window) {\n  const history = $window.history;\n  const service = new exports($window.location, $window.history);\n\n  let lastUri = service.getUriString();\n  $rootScope.$watch(() => {\n    const newUri = service.getUriString();\n    if (lastUri !== newUri) {\n      $rootScope.$evalAsync(() => {\n        lastUri = newUri;\n        if (history !== undefined && history.replaceState !== undefined) {\n          exports.replaceState(history, newUri);\n        }\n        $rootScope.$broadcast('ngeoLocationChange');\n      });\n    }\n  });\n\n  return service;\n};\n\n/**\n * A function that changes Angular's $location provider to avoid problem\n * when both ngeoLocation and $location are used in an application. This\n * is how you can use that function in an application:\n *\n * app.module.config(ngeo.statemanager.Location.MockProvider);\n *\n * @param {angular.$locationProvider} $locationProvider Angular location\n *     provider.\n * @ngInject\n */\nexports.MockProvider = function($locationProvider) {\n  /**\n   * @return {angular.$location} Mock object for Angular location service.\n   */\n  $locationProvider['$get'] = function() {\n    const locationMock = /** @type {angular.$location} */ ({\n      /**\n       * @return {string} Absolute URL.\n       */\n      absUrl() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Hash.\n       */\n      hash(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {string} Host.\n       */\n      host() {\n        return '';\n      },\n      /**\n       * @param {string=} opt_path Path.\n       * @return {string} Path.\n       */\n      path(opt_path) {\n        return opt_path !== undefined ? this : '';\n      },\n      /**\n       * @return {number} Port.\n       */\n      port() {\n        return 0;\n      },\n      /**\n       * @return {string} Protocol.\n       */\n      protocol() {\n        return '';\n      },\n      replace() {\n      },\n      /**\n       * @param {string=} opt_search Search.\n       * @param {Object=} opt_paramValue Parameters.\n       * @return {Object} Search.\n       */\n      search(opt_search, opt_paramValue) {\n        return opt_search !== undefined ? this : {};\n      },\n      /**\n       * @param {string=} opt_url URL.\n       * @return {string} URL.\n       */\n      url(opt_url) {\n        return '';\n      }\n    });\n    return locationMock;\n  };\n};\n\n\n/**\n * @type {!angular.Module}\n * FIXME add utils dependencies.\n * FIXME What about Mockup provider ?\n */\nexports.module = angular.module('ngeoLocation', []);\nexports.module.factory('ngeoLocation', exports.LocationFactory);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.service\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\nimport {saveAs} from 'file-saver';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDownload', []);\n\n/**\n * A service to start a download for a file.\n *\n * @return {ngeox.Download} The download function.\n * @ngdoc service\n * @ngname ngeoDownload\n */\nexports.factory_ = function() {\n  /**\n   * @param {string} content The file content.\n   * @param {string} fileName The file name.\n   * @param {string=} opt_fileType The file type. If not given,\n   *    `text/plain;charset=utf-8` is used.\n   */\n  function download(content, fileName, opt_fileType) {\n    // Safari does not properly work with FileSaver. Using the the type 'text/plain'\n    // makes it a least possible to show the file content so that users can\n    // do a manual download with \"Save as\".\n    // See also: https://github.com/eligrey/FileSaver.js/issues/12\n    /** @type {string} */\n    const fileType = opt_fileType !== undefined && !ngeoUtils.isSafari() ?\n      opt_fileType : 'text/plain;charset=utf-8';\n\n    const blob = new Blob([content], {type: fileType});\n    saveAs(blob, fileName);\n  }\n\n  return download;\n};\n\nexports.factory('ngeoDownload', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.DataSourceBeingFiltered\n */\nconst exports = {};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourceBeingFiltered', []);\n// type gmfx.datasource.DataSourceBeingFiltered\nexports.module.value('gmfDataSourceBeingFiltered', {\n  dataSource: null\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.message.modalComponent\n */\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'bootstrap/js/modal.js';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoModal', []);\n\n/**\n * Provides the \"ngeoModal\" component.\n *\n * This component shows a Bootstrap modal when the `ngModel` expression\n * evaluates to `true`, and it hides it when the `ngModel` expression\n * evaluates to `false`.\n *\n * The components also changes the `ngModel` value when the user manually\n * closes the modal.\n *\n * This component is based on Bootstrap's `modal` classes and associated\n * jQuery plugin.\n *\n *     <ngeo-modal ng-model=\"modalShown\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *         <h4 class=\"modal-title\">The Title</h4>\n *       </div>\n *       <div class=\"modal-body\">Some content</div>\n *     </ngeo-modal>\n *\n * Note: for z-indexing purpose, the modal DOM element is automatically moved\n * to document body element.\n *\n * See our live example: [../examples/modal.html](../examples/modal.html)\n *\n * @htmlAttribute {boolean} ngeo-modal-resizable Whether the modal can be\n *     resized or not. Defaults to `false`.\n * @htmlAttribute {boolean} ngeo-modal-closable Whether the modal can be\n *     closed by clicking outside it or by hiting the `escape` keyboard key. Defaults to `true`.\n * @ngdoc component\n * @ngname ngeoModal\n * @type {!angular.Component}\n */\nexports.component_ = {\n  template: `<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n      <div class=\"modal-content\">\n        <ng-transclude></ng-transclude>\n      </div>\n    </div>\n  </div>`,\n  require: {\n    'ngModel': 'ngModel'\n  },\n  transclude: true,\n  controller: 'ngeoModalController',\n  bindings: {\n    'resizable': '<ngeoModalResizable',\n    'closable': '<ngeoModalClosable'\n  }\n};\n\nexports.component('ngeoModal', exports.component_);\n\nexports.Controller_ = class {\n  /**\n   * @ngInject\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!jQuery} $element Element.\n   */\n  constructor($scope, $element) {\n    /**\n     * @private\n     * @type {!jQuery}\n     */\n    this.$element_ = $element;\n\n    /**\n     * @private\n     * @type {!angular.Scope}\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @private\n     * @type {jQuery}\n     */\n    this.modal_;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.closable;\n\n    /**\n     * @export\n     * @type {boolean}\n     */\n    this.resizable;\n\n    /**\n     * @export\n     * @type {angular.NgModelController|null}\n     */\n    this.ngModel;\n  }\n\n  $onInit() {\n    this.closable = this.closable !== false;\n\n    this.modal_ = this.$element_.children();\n\n    if (!this.closable) {\n      this.modal_.attr('data-keyboard', false);\n      this.modal_.attr('data-backdrop', 'static');\n    }\n\n    this.resizable = !!this.resizable;\n\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable();\n    if (this.resizable) {\n      dialog.resizable();\n    }\n\n    this.ngModel.$render = () => {\n      this.modal_.modal(this.ngModel.$viewValue ? 'show' : 'hide');\n    };\n\n    this.modal_.on('shown.bs.modal hidden.bs.modal', (e) => {\n      const type = e.type;\n      googAsserts.assert(type == 'shown' || type == 'hidden');\n      this.ngModel.$setViewValue(type == 'shown');\n    });\n  }\n\n  $onDestroy() {\n    // Force close the modal.\n    this.modal_.modal('hide');\n    this.modal_.modal('removeBackdrop');\n    // Destroy the children's plugins.\n    const dialog = this.modal_.find('.modal-dialog');\n    dialog.draggable('destroy');\n    if (this.resizable) {\n      dialog.resizable('destroy');\n    }\n  }\n};\n\nexports.controller('ngeoModalController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Notification\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * Provides methods to display any sort of messages, notifications, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @ngdoc service\n * @ngname ngeoNotification\n * @abstract\n * @ngInject\n */\nconst exports = function($timeout) {\n\n  ngeoMessageMessage.call(this);\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  const container = angular.element('<div class=\"ngeo-notification\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * @type {Object.<number, ngeo.message.Notification.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Default delay (in milliseconds) a message should be displayed.\n * @type {number}\n * @private\n */\nexports.DEFAULT_DELAY_ = 7000;\n\n\n// MAIN API METHODS\n\n\n/**\n * Display the given message string or object or list of message strings or\n * objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.notify = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Clears all messages that are currently being shown.\n * @export\n */\nexports.prototype.clear = function() {\n  for (const uid in this.cache_) {\n    this.clearMessageByCacheItem_(this.cache_[parseInt(uid, 10)]);\n  }\n};\n\n\n/**\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  const classNames = ['alert', 'fade'];\n  switch (type) {\n    case ngeoMessageMessage.Type.ERROR:\n      classNames.push('alert-danger');\n      break;\n    case ngeoMessageMessage.Type.INFORMATION:\n      classNames.push('alert-info');\n      break;\n    case ngeoMessageMessage.Type.SUCCESS:\n      classNames.push('alert-success');\n      break;\n    case ngeoMessageMessage.Type.WARNING:\n      classNames.push('alert-warning');\n      break;\n    default:\n      break;\n  }\n\n  const el = angular.element(`<div class=\"${classNames.join(' ')}\"></div>`);\n  let container;\n\n  if (message.target) {\n    container = angular.element(message.target);\n  } else {\n    container = this.container_;\n  }\n\n  container.append(el);\n  el.html(message.msg).addClass('in');\n\n  const delay = message.delay !== undefined ? message.delay :\n    exports.DEFAULT_DELAY_;\n\n  const item = /** @type {ngeo.message.Notification.CacheItem} */ ({\n    el\n  });\n\n  // Keep a reference to the promise, in case we want to manually cancel it\n  // before the delay\n  const uid = olBase.getUid(el);\n  item.promise = this.timeout_(() => {\n    el.alert('close');\n    delete this.cache_[uid];\n  }, delay);\n\n  this.cache_[uid] = item;\n};\n\n\n/**\n * Clear a message using its cache item.\n * @param {ngeo.message.Notification.CacheItem} item Cache item.\n * @private\n */\nexports.prototype.clearMessageByCacheItem_ = function(item) {\n  const el = item.el;\n  const promise = item.promise;\n  const uid = olBase.getUid(el);\n\n  // Close the message\n  el.alert('close');\n\n  // Cancel timeout in case we want to stop before delay. If called by the\n  // timeout itself, then this has no consequence.\n  this.timeout_.cancel(promise);\n\n  // Delete the cache item\n  delete this.cache_[uid];\n};\n\n\n/**\n * @typedef {{\n *     el: angular.JQLite,\n *     promise: angular.$q.Promise\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoNotification', [\n]);\n\nexports.module.service('ngeoNotification', exports);\n\n\nexport default exports;\n","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2016\n * @version 1.3.4\n *\n * Date formatter utility library that allows formatting date/time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\n\n/* eslint-disable */\nconst DAY = 1000 * 60 * 60 * 24;\nconst HOUR = 3600;\n\nconst _compare = function(str1, str2) {\n  return typeof (str1) === 'string' && typeof (str2) === 'string' && str1.toLowerCase() === str2.toLowerCase();\n};\nconst _lpad = function(value, length, char) {\n  const chr = char || '0';\n  const val = value.toString();\n  return val.length < length ? _lpad(chr + val, length) : val;\n};\nconst _extend = function(out) {\n  let i, obj;\n  out = out || {};\n  for (i = 1; i < arguments.length; i++) {\n    obj = arguments[i];\n    if (!obj) {\n      continue;\n    }\n    for (const key in obj) {\n      if (obj.hasOwnProperty(key)) {\n        if (typeof obj[key] === 'object') {\n          _extend(out[key], obj[key]);\n        } else {\n          out[key] = obj[key];\n        }\n      }\n    }\n  }\n  return out;\n};\nconst _indexOf = function(val, arr) {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].toLowerCase() === val.toLowerCase()) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst defaultSettings = {\n  dateSettings: {\n    days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n    daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n    months: [\n      'January', 'February', 'March', 'April', 'May', 'June', 'July',\n      'August', 'September', 'October', 'November', 'December'\n    ],\n    monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n    meridiem: ['AM', 'PM'],\n    ordinal: function(number) {\n      const n = number % 10, suffixes = {1: 'st', 2: 'nd', 3: 'rd'};\n      return Math.floor(number % 100 / 10) === 1 || !suffixes[n] ? 'th' : suffixes[n];\n    }\n  },\n  separators: /[ \\-+\\/\\.T:@]/g,\n  validParts: /[dDjlNSwzWFmMntLoYyaABgGhHisueTIOPZcrU]/g,\n  intParts: /[djwNzmnyYhHgGis]/g,\n  tzParts: /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g,\n  tzClip: /[^-+\\dA-Z]/g\n};\n\nconst DateFormatter = function(options) {\n  const self = this;\n  const config = _extend(defaultSettings, options);\n  self.dateSettings = config.dateSettings;\n  self.separators = config.separators;\n  self.validParts = config.validParts;\n  self.intParts = config.intParts;\n  self.tzParts = config.tzParts;\n  self.tzClip = config.tzClip;\n};\n\nDateFormatter.prototype = {\n  constructor: DateFormatter,\n  getMonth: function(val) {\n    const self = this;\n    let i;\n    i = _indexOf(val, self.dateSettings.monthsShort) + 1;\n    if (i === 0) {\n      i = _indexOf(val, self.dateSettings.months) + 1;\n    }\n    return i;\n  },\n  parseDate: function(vDate, vFormat) {\n    const self = this, out = {date: null, year: null, month: null, day: null, hour: 0, min: 0, sec: 0}, vSettings = self.dateSettings;\n    let i, vDateFlag = false, vTimeFlag = false, vDatePart, iDatePart,\n        vMonth, vMeriIndex, vMeriOffset, len, mer;\n    if (!vDate) {\n      return null;\n    }\n    if (vDate instanceof Date) {\n      return vDate;\n    }\n    if (vFormat === 'U') {\n      i = parseInt(vDate);\n      return i ? new Date(i * 1000) : vDate;\n    }\n    switch (typeof vDate) {\n      case 'number':\n        return new Date(vDate);\n      case 'string':\n        break;\n      default:\n        return null;\n    }\n    const vFormatParts = vFormat.match(self.validParts);\n    if (!vFormatParts || vFormatParts.length === 0) {\n      throw new Error('Invalid date format definition.');\n    }\n    const vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n    for (i = 0; i < vDateParts.length; i++) {\n      vDatePart = vDateParts[i];\n      iDatePart = parseInt(vDatePart);\n      switch (vFormatParts[i]) {\n        case 'y':\n        case 'Y':\n          if (iDatePart) {\n            len = vDatePart.length;\n            out.year = len === 2 ? parseInt((iDatePart < 70 ? '20' : '19') + vDatePart) : iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'm':\n        case 'n':\n        case 'M':\n        case 'F':\n          if (isNaN(iDatePart)) {\n            vMonth = self.getMonth(vDatePart);\n            if (vMonth > 0) {\n              out.month = vMonth;\n            } else {\n              return null;\n            }\n          } else {\n            if (iDatePart >= 1 && iDatePart <= 12) {\n              out.month = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vDateFlag = true;\n          break;\n        case 'd':\n        case 'j':\n          if (iDatePart >= 1 && iDatePart <= 31) {\n            out.day = iDatePart;\n          } else {\n            return null;\n          }\n          vDateFlag = true;\n          break;\n        case 'g':\n        case 'h':\n          vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n          mer = vDateParts[vMeriIndex];\n          if (vMeriIndex > -1) {\n            vMeriOffset = _compare(mer, vSettings.meridiem[0]) ? 0 :\n              (_compare(mer, vSettings.meridiem[1]) ? 12 : -1);\n            if (iDatePart >= 1 && iDatePart <= 12 && vMeriOffset > -1) {\n              out.hour = iDatePart + vMeriOffset - 1;\n            } else if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            }\n          } else {\n            if (iDatePart >= 0 && iDatePart <= 23) {\n              out.hour = iDatePart;\n            } else {\n              return null;\n            }\n          }\n          vTimeFlag = true;\n          break;\n        case 'G':\n        case 'H':\n          if (iDatePart >= 0 && iDatePart <= 23) {\n            out.hour = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 'i':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.min = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n        case 's':\n          if (iDatePart >= 0 && iDatePart <= 59) {\n            out.sec = iDatePart;\n          } else {\n            return null;\n          }\n          vTimeFlag = true;\n          break;\n      }\n    }\n    if (vDateFlag === true && out.year && out.month && out.day) {\n      out.date = new Date(out.year, out.month - 1, out.day, out.hour, out.min, out.sec, 0);\n    } else {\n      if (vTimeFlag !== true) {\n        return null;\n      }\n      out.date = new Date(0, 0, 0, out.hour, out.min, out.sec, 0);\n    }\n    return out.date;\n  },\n  guessDate: function(vDateStr, vFormat) {\n    if (typeof vDateStr !== 'string') {\n      return vDateStr;\n    }\n    const self = this, vParts = vDateStr.replace(self.separators, '\\0').split('\\0'), vPattern = /^[djmn]/g, vFormatParts = vFormat.match(self.validParts), vDate = new Date(), vDigit = 0;\n    let len, i, n, iPart, iSec, vYear;\n\n    if (!vPattern.test(vFormatParts[0])) {\n      return vDateStr;\n    }\n\n    for (i = 0; i < vParts.length; i++) {\n      let vDigit = 2;\n      iPart = vParts[i];\n      iSec = parseInt(iPart.substr(0, 2));\n      if (isNaN(iSec)) {\n        return null;\n      }\n      switch (i) {\n        case 0:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setMonth(iSec - 1);\n          } else {\n            vDate.setDate(iSec);\n          }\n          break;\n        case 1:\n          if (vFormatParts[0] === 'm' || vFormatParts[0] === 'n') {\n            vDate.setDate(iSec);\n          } else {\n            vDate.setMonth(iSec - 1);\n          }\n          break;\n        case 2:\n          vYear = vDate.getFullYear();\n          len = iPart.length;\n          vDigit = len < 4 ? len : 4;\n          vYear = parseInt(len < 4 ? vYear.toString().substr(0, 4 - len) + iPart : iPart.substr(0, 4));\n          if (!vYear) {\n            return null;\n          }\n          vDate.setFullYear(vYear);\n          break;\n        case 3:\n          vDate.setHours(iSec);\n          break;\n        case 4:\n          vDate.setMinutes(iSec);\n          break;\n        case 5:\n          vDate.setSeconds(iSec);\n          break;\n      }\n      n = iPart.substr(vDigit);\n      if (n.length > 0) {\n        vParts.splice(i + 1, 0, n);\n      }\n    }\n    return vDate;\n  },\n  parseFormat: function(vChar, vDate) {\n    let fmt;\n    const self = this, vSettings = self.dateSettings, backslash = /\\\\?(.?)/gi, doFormat = function(t, s) {\n      return fmt[t] ? fmt[t]() : s;\n    };\n    fmt = {\n      /////////\n      // DAY //\n      /////////\n      /**\n       * Day of month with leading 0: `01..31`\n       * @return {string}\n       */\n      d: function() {\n        return _lpad(fmt.j(), 2);\n      },\n      /**\n       * Shorthand day name: `Mon...Sun`\n       * @return {string}\n       */\n      D: function() {\n        return vSettings.daysShort[fmt.w()];\n      },\n      /**\n       * Day of month: `1..31`\n       * @return {number}\n       */\n      j: function() {\n        return vDate.getDate();\n      },\n      /**\n       * Full day name: `Monday...Sunday`\n       * @return {number}\n       */\n      l: function() {\n        return vSettings.days[fmt.w()];\n      },\n      /**\n       * ISO-8601 day of week: `1[Mon]..7[Sun]`\n       * @return {number}\n       */\n      N: function() {\n        return fmt.w() || 7;\n      },\n      /**\n       * Day of week: `0[Sun]..6[Sat]`\n       * @return {number}\n       */\n      w: function() {\n        return vDate.getDay();\n      },\n      /**\n       * Day of year: `0..365`\n       * @return {number}\n       */\n      z: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j()), b = new Date(fmt.Y(), 0, 1);\n        return Math.round((a - b) / DAY);\n      },\n\n      //////////\n      // WEEK //\n      //////////\n      /**\n       * ISO-8601 week number\n       * @return {number}\n       */\n      W: function() {\n        const a = new Date(fmt.Y(), fmt.n() - 1, fmt.j() - fmt.N() + 3), b = new Date(a.getFullYear(), 0, 4);\n        return _lpad(1 + Math.round((a - b) / DAY / 7), 2);\n      },\n\n      ///////////\n      // MONTH //\n      ///////////\n      /**\n       * Full month name: `January...December`\n       * @return {string}\n       */\n      F: function() {\n        return vSettings.months[vDate.getMonth()];\n      },\n      /**\n       * Month w/leading 0: `01..12`\n       * @return {string}\n       */\n      m: function() {\n        return _lpad(fmt.n(), 2);\n      },\n      /**\n       * Shorthand month name; `Jan...Dec`\n       * @return {string}\n       */\n      M: function() {\n        return vSettings.monthsShort[vDate.getMonth()];\n      },\n      /**\n       * Month: `1...12`\n       * @return {number}\n       */\n      n: function() {\n        return vDate.getMonth() + 1;\n      },\n      /**\n       * Days in month: `28...31`\n       * @return {number}\n       */\n      t: function() {\n        return (new Date(fmt.Y(), fmt.n(), 0)).getDate();\n      },\n\n      //////////\n      // YEAR //\n      //////////\n      /**\n       * Is leap year? `0 or 1`\n       * @return {number}\n       */\n      L: function() {\n        const Y = fmt.Y();\n        return (Y % 4 === 0 && Y % 100 !== 0 || Y % 400 === 0) ? 1 : 0;\n      },\n      /**\n       * ISO-8601 year\n       * @return {number}\n       */\n      o: function() {\n        const n = fmt.n(), W = fmt.W(), Y = fmt.Y();\n        return Y + (n === 12 && W < 9 ? 1 : n === 1 && W > 9 ? -1 : 0);\n      },\n      /**\n       * Full year: `e.g. 1980...2010`\n       * @return {number}\n       */\n      Y: function() {\n        return vDate.getFullYear();\n      },\n      /**\n       * Last two digits of year: `00...99`\n       * @return {string}\n       */\n      y: function() {\n        return fmt.Y().toString().slice(-2);\n      },\n\n      //////////\n      // TIME //\n      //////////\n      /**\n       * Meridian lower: `am or pm`\n       * @return {string}\n       */\n      a: function() {\n        return fmt.A().toLowerCase();\n      },\n      /**\n       * Meridian upper: `AM or PM`\n       * @return {string}\n       */\n      A: function() {\n        const n = fmt.G() < 12 ? 0 : 1;\n        return vSettings.meridiem[n];\n      },\n      /**\n       * Swatch Internet time: `000..999`\n       * @return {string}\n       */\n      B: function() {\n        const H = vDate.getUTCHours() * HOUR, i = vDate.getUTCMinutes() * 60, s = vDate.getUTCSeconds();\n        return _lpad(Math.floor((H + i + s + HOUR) / 86.4) % 1000, 3);\n      },\n      /**\n       * 12-Hours: `1..12`\n       * @return {number}\n       */\n      g: function() {\n        return fmt.G() % 12 || 12;\n      },\n      /**\n       * 24-Hours: `0..23`\n       * @return {number}\n       */\n      G: function() {\n        return vDate.getHours();\n      },\n      /**\n       * 12-Hours with leading 0: `01..12`\n       * @return {string}\n       */\n      h: function() {\n        return _lpad(fmt.g(), 2);\n      },\n      /**\n       * 24-Hours w/leading 0: `00..23`\n       * @return {string}\n       */\n      H: function() {\n        return _lpad(fmt.G(), 2);\n      },\n      /**\n       * Minutes w/leading 0: `00..59`\n       * @return {string}\n       */\n      i: function() {\n        return _lpad(vDate.getMinutes(), 2);\n      },\n      /**\n       * Seconds w/leading 0: `00..59`\n       * @return {string}\n       */\n      s: function() {\n        return _lpad(vDate.getSeconds(), 2);\n      },\n      /**\n       * Microseconds: `000000-999000`\n       * @return {string}\n       */\n      u: function() {\n        return _lpad(vDate.getMilliseconds() * 1000, 6);\n      },\n\n      //////////////\n      // TIMEZONE //\n      //////////////\n      /**\n       * Timezone identifier: `e.g. Atlantic/Azores, ...`\n       * @return {string}\n       */\n      e: function() {\n        const str = /\\((.*)\\)/.exec(String(vDate))[1];\n        return str || 'Coordinated Universal Time';\n      },\n      /**\n       * DST observed? `0 or 1`\n       * @return {number}\n       */\n      I: function() {\n        const a = new Date(fmt.Y(), 0), c = Date.UTC(fmt.Y(), 0),\n            b = new Date(fmt.Y(), 6), d = Date.UTC(fmt.Y(), 6);\n        return ((a - c) !== (b - d)) ? 1 : 0;\n      },\n      /**\n       * Difference to GMT in hour format: `e.g. +0200`\n       * @return {string}\n       */\n      O: function() {\n        const tzo = vDate.getTimezoneOffset(), a = Math.abs(tzo);\n        return (tzo > 0 ? '-' : '+') + _lpad(Math.floor(a / 60) * 100 + a % 60, 4);\n      },\n      /**\n       * Difference to GMT with colon: `e.g. +02:00`\n       * @return {string}\n       */\n      P: function() {\n        const O = fmt.O();\n        return (`${O.substr(0, 3)}:${O.substr(3, 2)}`);\n      },\n      /**\n       * Timezone abbreviation: `e.g. EST, MDT, ...`\n       * @return {string}\n       */\n      T: function() {\n        const str = (String(vDate).match(self.tzParts) || ['']).pop().replace(self.tzClip, '');\n        return str || 'UTC';\n      },\n      /**\n       * Timezone offset in seconds: `-43200...50400`\n       * @return {number}\n       */\n      Z: function() {\n        return -vDate.getTimezoneOffset() * 60;\n      },\n\n      ////////////////////\n      // FULL DATE TIME //\n      ////////////////////\n      /**\n       * ISO-8601 date\n       * @return {string}\n       */\n      c: function() {\n        return 'Y-m-d\\\\TH:i:sP'.replace(backslash, doFormat);\n      },\n      /**\n       * RFC 2822 date\n       * @return {string}\n       */\n      r: function() {\n        return 'D, d M Y H:i:s O'.replace(backslash, doFormat);\n      },\n      /**\n       * Seconds since UNIX epoch\n       * @return {number}\n       */\n      U: function() {\n        return vDate.getTime() / 1000 || 0;\n      }\n    };\n    return doFormat(vChar, vChar);\n  },\n  formatDate: function(vDate, vFormat) {\n    const self = this;\n    let i, n, len, str, vChar, vDateStr = '';\n    const BACKSLASH = '\\\\';\n    if (typeof vDate === 'string') {\n      vDate = self.parseDate(vDate, vFormat);\n      if (!vDate) {\n        return null;\n      }\n    }\n    if (vDate instanceof Date) {\n      len = vFormat.length;\n      for (i = 0; i < len; i++) {\n        vChar = vFormat.charAt(i);\n        if (vChar === 'S' || vChar === BACKSLASH) {\n          continue;\n        }\n        if (i > 0 && vFormat.charAt(i - 1) === BACKSLASH) {\n          vDateStr += vChar;\n          continue;\n        }\n        str = self.parseFormat(vChar, vDate);\n        if (i !== (len - 1) && self.intParts.test(vChar) && vFormat.charAt(i + 1) === 'S') {\n          n = parseInt(str) || 0;\n          str += self.dateSettings.ordinal(n);\n        }\n        vDateStr += str;\n      }\n      return vDateStr;\n    }\n    return '';\n  }\n};\n/* eslint-enable */\n\nexport default DateFormatter;\n","/**\n * @module gmf.permalink.ShareService\n */\n/**\n * Service to handle the sharing of the permalink.\n * @param {angular.$http} $http Angular http service.\n * @param  {string} gmfShortenerCreateUrl URL for the shortener API\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfShareService\n */\nconst exports = function($http, gmfShortenerCreateUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfShortenerCreateUrl_ = gmfShortenerCreateUrl;\n\n};\n\n\n/**\n * Get a short URL of the permalink by calling the url shortener service.\n * - If no shortener API url have been specified, it returns the permalink itself.\n * @param  {string} url the permalink\n * @return {gmfx.ShortenerAPIResponse|angular.$http.HttpPromise} an object containing the permalink not shortened or\n * the promise attached to the shortener API request\n */\nexports.prototype.getShortUrl = function(url) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url\n  });\n\n  if (!this.gmfShortenerCreateUrl_) {\n    return {\n      data: {\n        short_url: url\n      },\n      status: 200\n    };\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * Send the short permalink to the email provided\n * - If email is provided, the short permalink will be sent to this email\n * @param  {string} shortUrl the short permalink to send\n * @param  {string} email the email to which the short url must be send\n * @param  {string=} opt_message message for the email\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n */\nexports.prototype.sendShortUrl = function(shortUrl, email, opt_message) {\n  const params = /** @type {gmfx.ShortenerAPIRequestParams} */ ({\n    url: shortUrl,\n    email: email\n  });\n\n  if (opt_message) {\n    params['message'] = opt_message;\n  }\n\n  return this.postShortUrl_(params);\n};\n\n\n/**\n * @param  {gmfx.ShortenerAPIRequestParams} params parameters for the request\n * @return {angular.$http.HttpPromise} the promise attached to the shortener API request\n * @private\n */\nexports.prototype.postShortUrl_ = function(params) {\n  // Override default behavior of $http.post method (sending data in json format)\n  return this.$http_.post(this.gmfShortenerCreateUrl_, $.param(params), {\n    headers: {'Content-Type': 'application/x-www-form-urlencoded'}\n  });\n};\n\n\n/**\n * Max length defined for the complete url.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_MAX_LEN = 2083;\n\n/**\n * Max length defined for the url parth section.\n * Check IE limits, see {@link http://support.microsoft.com/kb/208427}\n * @constant\n * @type {number}\n */\nexports.URL_PATH_MAX_LEN = 2048;\n\nexports.module = angular.module('gmfShareService', []);\n\nexports.module.service('gmfShareService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Utils\n */\nimport * as olHas from 'ol/has.js';\nimport * as olMath from 'ol/math.js';\n\n/**\n * Provides a service with print utility functions.\n *\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoPrintUtils\n */\nconst exports = function() {\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfHorizontalDistance_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.extentHalfVerticalDistance_;\n\n};\n\n\n/**\n * @const\n * @private\n */\nexports.INCHES_PER_METER_ = 39.37;\n\n\n/**\n * @const\n * @private\n */\nexports.DOTS_PER_INCH_ = 72;\n\n\n/**\n * Return a function to use as map postcompose listener for drawing a print\n * mask on the map.\n * @param {function():ol.Size} getSize User-defined function returning the\n *     size in dots of the map to print.\n * @param {function(olx.FrameState):number} getScale User-defined function\n *     returning the scale of the map to print.\n * @param {function():number=} opt_rotation User defined function returning the\n *     inclination of the canvas in degree (-180 to 180).\n * returning the scale of the map to print.\n * @return {function(ol.render.Event)} Function to use as a map postcompose\n * listener.\n * @export\n */\nexports.prototype.createPrintMaskPostcompose = function(getSize, getScale, opt_rotation) {\n  const self = this;\n\n  return (\n  /**\n        * @param {ol.render.Event} evt Postcompose event.\n        */\n    function(evt) {\n      const context = evt.context;\n      const frameState = evt.frameState;\n\n      const resolution = frameState.viewState.resolution;\n\n      const viewportWidth = frameState.size[0] * frameState.pixelRatio;\n      const viewportHeight = frameState.size[1] * frameState.pixelRatio;\n\n      const center = [viewportWidth / 2, viewportHeight / 2];\n\n      const size = getSize();\n      const height = size[1] * olHas.DEVICE_PIXEL_RATIO;\n      const width = size[0] * olHas.DEVICE_PIXEL_RATIO;\n      const scale = getScale(frameState);\n\n      const ppi = exports.DOTS_PER_INCH_;\n      const ipm = exports.INCHES_PER_METER_;\n\n      const extentHalfWidth =\n           (((width / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfHorizontalDistance_ =\n           (((size[0] / ppi) / ipm) * scale) / 2;\n\n      const extentHalfHeight =\n           (((height / ppi) / ipm) * scale / resolution) / 2;\n      self.extentHalfVerticalDistance_ =\n           (((size[1] / ppi) / ipm) * scale) / 2;\n\n      // Draw a mask on the whole map.\n      context.beginPath();\n      context.moveTo(0, 0);\n      context.lineTo(viewportWidth, 0);\n      context.lineTo(viewportWidth, viewportHeight);\n      context.lineTo(0, viewportHeight);\n      context.lineTo(0, 0);\n      context.closePath();\n\n      // Draw the print zone\n      if (!opt_rotation) {\n        self.drawPrintZone_(context, center, extentHalfWidth,\n          extentHalfHeight);\n      } else {\n        const rotation = olMath.toRadians(opt_rotation());\n        self.drawPrintZoneWithRotation_(context, center, extentHalfWidth,\n          extentHalfHeight, rotation);\n      }\n\n      // Fill the mask\n      context.fillStyle = 'rgba(0, 5, 25, 0.5)';\n      context.fill();\n    }\n  );\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @private\n */\nexports.prototype.drawPrintZone_ = function(context, center,\n  extentHalfWidth, extentHalfHeight) {\n  const minx = center[0] - extentHalfWidth;\n  const miny = center[1] - extentHalfHeight;\n  const maxx = center[0] + extentHalfWidth;\n  const maxy = center[1] + extentHalfHeight;\n\n  context.moveTo(minx, miny);\n  context.lineTo(minx, maxy);\n  context.lineTo(maxx, maxy);\n  context.lineTo(maxx, miny);\n  context.lineTo(minx, miny);\n  context.closePath();\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context of the Postcompose event.\n * @param {Array.<number>} center Center of the viewport (x; y).\n * @param {number} extentHalfWidth Extent half width.\n * @param {number} extentHalfHeight Extent half height.\n * @param {number} rotation Rotation value in radians.\n * @private\n */\nexports.prototype.drawPrintZoneWithRotation_ = function(context, center,\n  extentHalfWidth, extentHalfHeight, rotation) {\n  // diagonal = distance p1 to center.\n  const diagonal = Math.sqrt(Math.pow(extentHalfWidth, 2) +\n      Math.pow(extentHalfHeight, 2));\n  // gamma = angle between horizontal and diagonal (with rotation).\n  const gamma = Math.atan(extentHalfHeight / extentHalfWidth) - rotation;\n  // omega = angle between diagonal and vertical (with rotation).\n  const omega = Math.atan(extentHalfWidth / extentHalfHeight) - rotation;\n  // Calculation of each corner.\n  const x1 = center[0] - Math.cos(gamma) * diagonal;\n  const y1 = center[1] + Math.sin(gamma) * diagonal;\n  const x2 = center[0] + Math.sin(omega) * diagonal;\n  const y2 = center[1] + Math.cos(omega) * diagonal;\n  const x3 = center[0] + Math.cos(gamma) * diagonal;\n  const y3 = center[1] - Math.sin(gamma) * diagonal;\n  const x4 = center[0] - Math.sin(omega) * diagonal;\n  const y4 = center[1] - Math.cos(omega) * diagonal;\n\n  context.moveTo(x1, y1);\n  context.lineTo(x2, y2);\n  context.lineTo(x3, y3);\n  context.lineTo(x4, y4);\n  context.lineTo(x1, y1);\n  context.closePath();\n};\n\n\n/**\n * Get the optimal print scale for a map, the map being defined by its\n * size (in pixels) and resolution (in map units per pixel).\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {number} mapResolution Resolution of the map on the screen.\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {Array.<number>} printMapScales Supported map scales on the paper.\n * The scales are provided as scale denominators, sorted in ascending order.\n * E.g. `[500, 1000, 2000, 4000]`.\n * @return {number} The best scale. `-1` is returned if there is no optimal\n * scale, that is the optimal scale is lower than or equal to the first value\n * in `printMapScales`.\n * @export\n */\nexports.prototype.getOptimalScale = function(\n  mapSize, mapResolution, printMapSize, printMapScales) {\n\n  const mapWidth = mapSize[0] * mapResolution;\n  const mapHeight = mapSize[1] * mapResolution;\n\n  const scaleWidth = mapWidth * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[0];\n  const scaleHeight = mapHeight * exports.INCHES_PER_METER_ *\n      exports.DOTS_PER_INCH_ / printMapSize[1];\n\n  const scale = Math.min(scaleWidth, scaleHeight);\n\n  let optimal = -1;\n  for (let i = 0, ii = printMapScales.length; i < ii; ++i) {\n    if (scale > printMapScales[i]) {\n      optimal = printMapScales[i];\n    }\n  }\n\n  return optimal;\n};\n\n\n/**\n * Get the optimal map resolution for a print scale and a map size.\n * @param {ol.Size} mapSize Size of the map on the screen (px).\n * @param {ol.Size} printMapSize Size of the map on the paper (dots).\n * @param {number} printMapScale Map scale on the paper.\n * @return {number} The optimal map resolution.\n * @export\n */\nexports.prototype.getOptimalResolution = function(\n  mapSize, printMapSize, printMapScale) {\n\n  const dotsPerMeter =\n      exports.DOTS_PER_INCH_ * exports.INCHES_PER_METER_;\n\n  const resolutionX = (printMapSize[0] * printMapScale) /\n      (dotsPerMeter * mapSize[0]);\n  const resolutionY = (printMapSize[1] * printMapScale) /\n      (dotsPerMeter * mapSize[1]);\n\n  const optimalResolution = Math.max(resolutionX, resolutionY);\n\n  return optimalResolution;\n};\n\n\n/**\n * Get the coordinates of the bottom left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the bottom left corner.\n */\nexports.prototype.getBottomLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the bottom right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.ç\n * @return {ol.Coordinate} The coordinates of the bottom right corner.\n */\nexports.prototype.getBottomRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] - this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up left corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up left corner.\n */\nexports.prototype.getUpLeftCorner = function(mapCenter) {\n  return [mapCenter[0] - this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n\n/**\n * Get the coordinates of the up right corner of the printed map.\n * @param {ol.Coordinate} mapCenter Center of the map to print.\n * @return {ol.Coordinate} The coordinates of the up right corner.\n */\nexports.prototype.getUpRightCorner = function(mapCenter) {\n  return [mapCenter[0] + this.extentHalfHorizontalDistance_,\n    mapCenter[1] + this.extentHalfVerticalDistance_];\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrintUtils', []);\nexports.module.service('ngeoPrintUtils', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureLength\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = /** @type {ngeox.interaction.MeasureOptions} */({})) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the line.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click last point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomLineString);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedLength(geom, proj, this.precision, this.format);\n  const coord = geom.getLastCoordinate();\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.MeasureArea\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionMeasure from 'ngeo/interaction/Measure.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @classdesc\n * Interaction dedicated to measure length.\n *\n * See our live example: [../examples/measure.html](../examples/measure.html)\n *\n * @constructor\n * @struct\n * @extends {ngeo.interaction.Measure}\n * @param {!ngeox.unitPrefix} format The format function\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeox.interaction.MeasureOptions=} options Options\n */\nconst exports = function(format, gettextCatalog, options = {}) {\n\n  ngeoInteractionMeasure.call(this, /** @type {ngeo.interaction.MeasureBaseOptions} */ (options));\n\n\n  /**\n   * Message to show after the first point is clicked.\n   * @type {Element}\n   */\n  this.continueMsg;\n  if (options.continueMsg !== undefined) {\n    this.continueMsg = options.continueMsg;\n  } else {\n    this.continueMsg = document.createElement('span');\n    this.continueMsg.textContent = gettextCatalog.getString('Click to continue drawing the polygon.');\n    const br = document.createElement('br');\n    br.textContent = gettextCatalog.getString('Double-click or click starting point to finish.');\n    this.continueMsg.appendChild(br);\n  }\n\n  /**\n   * The format function\n   * @type {ngeox.unitPrefix}\n   */\n  this.format = format;\n\n};\n\nolBase.inherits(exports, ngeoInteractionMeasure);\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.createDrawInteraction = function(style, source) {\n  return new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('Polygon'),\n    source: source,\n    style: style\n  });\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.handleMeasure = function(callback) {\n  const geom = googAsserts.assertInstanceof(this.sketchFeature.getGeometry(), olGeomPolygon);\n  const proj = this.getMap().getView().getProjection();\n  googAsserts.assert(proj);\n  const output = ngeoInteractionMeasure.getFormattedArea(geom, proj, this.precision, this.format);\n  const verticesCount = geom.getCoordinates()[0].length;\n  let coord = null;\n  if (verticesCount > 3) {\n    coord = geom.getInteriorPoint().getCoordinates();\n  }\n  callback(output, coord);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.component\n */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfAuthentication', [\n  gmfAuthenticationService.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfAuthenticationTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfAuthenticationTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/authentication';\n};\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/authentication', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfAuthenticationTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfAuthenticationTemplateUrl($element, $attrs, gmfAuthenticationTemplateUrl) {\n  return gmfAuthenticationTemplateUrl($element, $attrs);\n}\n\n\n/**\n * An \"authentication\" component for a GeoMapFish application. With the\n * use of the \"authentication\" service, it features a complete interface\n * for the user to be able to login, logout, change or reset his or her\n * password.  The `gmfUser` angular value is also used to keep track of\n * the user information. When empty, that means that the user isn't connected\n * yet.\n *\n * While not logged in, the \"login\" form is shown, which allows the user to\n * either log in or ask for a password reset.\n *\n * Once logged in, the \"logout\" form is shown, which allows the user to either\n * log out or change his or her password.\n *\n * Example:\n *\n *      <gmf-authentication\n *        gmf-authentication-info-message=\"mainCtrl.loginInfoMessage\"\n *        gmf-authentication-allow-password-change=\"::true\">\n *      </gmf-authentication>\n *\n * @htmlAttribute {boolean} gmf-authentication-allow-password-reset Whether to\n *     show the password forgotten link. Default to true.\n * @htmlAttribute {boolean|function} gmf-authentication-allow-password-change Whether to\n *     show the change password button. Default to true. You can also specify a gmfx.PasswordValidator Object\n *     to add constraint on user's new password.\n * @htmlAttribute {gmfx.PasswordValidator} gmf-authentication-password-validator A gmfx.PasswordValidator\n *     Object to add constraint on user's new password. The gmf-authentication-allow-password-change. To use\n *     it you must also allow the user to change its password.\n * @htmlAttribute {boolean} gmf-authentication-force-password-change Force the\n *     user to change its password. Default to false. If you set it to true, you\n *     should also allow the user to change its password. Don't add this option alone, use\n *     it in a dedicated authentication component, in a ngeo-modal, directly in\n *     your index.html (see example 2.)\n * @htmlAttribute {string} gmf-authentication-info-message Message to show above the authentication form.\n *\n * Example 2:\n *\n *     <ngeo-modal\n *         ngeo-modal-closable=\"false\"\n *         ng-model=\"mainCtrl.userMustChangeItsPassword\">\n *       <div class=\"modal-header\">\n *         <h4 class=\"modal-title\">\n *           {{'You must change your password' | translate}}\n *         </h4>\n *       </div>\n *       <div class=\"modal-body\">\n *         <gmf-authentication\n *           gmf-authentication-force-password-change=\"::true\">\n *         </gmf-authentication>\n *       </div>\n *     </ngeo-modal>\n *\n * @ngdoc component\n * @ngname gmfAuthentication\n */\nexports.component_ = {\n  bindings: {\n    'allowPasswordReset': '<?gmfAuthenticationAllowPasswordReset',\n    'allowPasswordChange': '<?gmfAuthenticationAllowPasswordChange',\n    'passwordValidator': '<?gmfAuthenticationPasswordValidator',\n    'forcePasswordChange': '<?gmfAuthenticationForcePasswordChange',\n    'infoMessage': '=?gmfAuthenticationInfoMessage'\n  },\n  controller: 'GmfAuthenticationController',\n  templateUrl: gmfAuthenticationTemplateUrl\n};\n\nexports.value('gmfAuthenticationTemplateUrl',\n  exports.gmfAuthenticationTemplateUrl_);\n\nexports.component('gmfAuthentication', exports.component_);\n\n\n/**\n * @private\n */\nexports.AuthenticationController_ = class {\n  /**\n   * @private\n   * @param {!angular.JQLite} $element Element.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmf.authentication.Service} gmfAuthenticationService GMF Authentication service\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfAuthenticationController\n   */\n  constructor($element, gettextCatalog, gmfAuthenticationService, gmfUser, ngeoNotification) {\n\n    /**\n     * @type {!angular.JQLite}\n     * @private\n     */\n    this.$element_ = $element;\n\n    /**\n     * @type {gmfx.User}\n     * @export\n     */\n    this.gmfUser = gmfUser;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog = gettextCatalog;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.notification_ = ngeoNotification;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordReset;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.allowPasswordChange;\n\n    /**\n     * @type {gmfx.PasswordValidator?}\n     * @export\n     */\n    this.passwordValidator = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.forcePasswordChange;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.infoMessage = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.changingPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.userMustChangeItsPassword = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resetPasswordModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.error = false;\n\n    // LOGIN form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.loginVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.pwdVal = '';\n\n    // CHANGE PASSWORD form values\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.oldPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdVal = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * Initialise the controller.\n   */\n  $onInit() {\n    this.allowPasswordReset = this.allowPasswordReset !== false;\n    this.allowPasswordChange = this.allowPasswordChange !== false;\n    this.forcePasswordChange = this.forcePasswordChange === true;\n    if (this.forcePasswordChange) {\n      this.changingPassword = true;\n    }\n    this.userMustChangeItsPassword = (this.gmfUser.is_password_changed === false && this.forcePasswordChange);\n  }\n\n\n  // METHODS THAT CALL THE AUTHENTICATION SERVICE METHODS\n\n  /**\n   * Calls the authentication service changePassword method.\n   * @export\n   */\n  changePassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const oldPwd = this.oldPwdVal;\n    const newPwd = this.newPwdVal;\n    const confPwd = this.newPwdConfVal;\n\n    const errors = [];\n    // Validation - Passwords are required.\n    if (oldPwd === '') {\n      errors.push(gettextCatalog.getString('The old password is required.'));\n    }\n    if (newPwd === '') {\n      errors.push(gettextCatalog.getString('The new password is required.'));\n    }\n    if (confPwd === '') {\n      errors.push(gettextCatalog.getString('The password confirmation is required.'));\n    }\n\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      // Default validation - Passwords must be new and must also match.\n      if (oldPwd === newPwd) {\n        errors.push(gettextCatalog.getString('The old and new passwords are the same.'));\n      }\n      if (newPwd !== confPwd) {\n        errors.push(gettextCatalog.getString('The passwords don\\'t match.'));\n      }\n      // Custom validation - If a passwordValidator is set, use it to validate the new password.\n      if (this.passwordValidator) {\n        if (!this.passwordValidator.isPasswordValid(oldPwd)) {\n          errors.push(gettextCatalog.getString(this.passwordValidator.notValidMessage));\n        }\n      }\n\n      if (errors.length) {\n        this.setError_(errors);\n      } else {\n        // Send request with current credentials, which may fail if the old password given is incorrect.\n        this.gmfAuthenticationService_.changePassword(oldPwd, newPwd, confPwd)\n          .then(() => {\n            this.changePasswordReset();\n            this.setError_(\n              [gettextCatalog.getString('Your password has successfully been changed.')],\n              ngeoMessageMessage.Type.INFORMATION\n            );\n          })\n          .catch((err) => {\n            this.setError_(gettextCatalog.getString('Incorrect old password.'));\n          });\n      }\n    }\n  }\n\n  /**\n   * Calls the authentication service login method.\n   * @export\n   */\n  login() {\n    const gettextCatalog = this.gettextCatalog;\n\n    const errors = [];\n    if (this.loginVal === '') {\n      errors.push(gettextCatalog.getString('The username is required.'));\n    }\n    if (this.pwdVal === '') {\n      errors.push(gettextCatalog.getString('The password is required.'));\n    }\n    if (errors.length) {\n      this.setError_(errors);\n    } else {\n      const error = gettextCatalog.getString('Incorrect credentials or disabled account.');\n      this.gmfAuthenticationService_.login(this.loginVal, this.pwdVal).then(\n        this.resetError_.bind(this),\n        this.setError_.bind(this, error));\n    }\n  }\n\n  /**\n   * Calls the authentication service logout method.\n   * @export\n   */\n  logout() {\n    const gettextCatalog = this.gettextCatalog;\n    const error = gettextCatalog.getString('Could not log out.');\n    this.gmfAuthenticationService_.logout().then(\n      this.resetError_.bind(this),\n      this.setError_.bind(this, error));\n  }\n\n  /**\n   * Calls the authentication service resetPassword method.\n   * @export\n   */\n  resetPassword() {\n    const gettextCatalog = this.gettextCatalog;\n\n    if (!this.loginVal) {\n      this.setError_(gettextCatalog.getString('Please, input a login...'));\n      return;\n    }\n\n    const error = gettextCatalog.getString('An error occurred while resetting the password.');\n\n    /**\n     * @param {gmfx.AuthenticationDefaultResponse} respData Response.\n     */\n    const resetPasswordSuccessFn = function(respData) {\n      this.resetPasswordModalShown = true;\n      this.resetError_();\n    }.bind(this);\n\n    this.gmfAuthenticationService_.resetPassword(this.loginVal).then(\n      resetPasswordSuccessFn,\n      this.setError_.bind(this, error)\n    );\n  }\n\n\n  // OTHER METHODS\n\n  /**\n   * Reset the changePassword values and error.\n   * @export\n   */\n  changePasswordReset() {\n    this.resetError_();\n    this.changingPassword = false;\n    this.oldPwdVal = '';\n    this.newPwdVal = '';\n    this.newPwdConfVal = '';\n  }\n\n  /**\n   * @param {string|Array.<string>} errors Errors.\n   * @param {ngeoMessageMessage.Type} [messageType] Type.\n   * @private\n   */\n  setError_(errors, messageType) {\n    if (messageType == undefined) {\n      messageType = ngeoMessageMessage.Type.ERROR;\n    }\n    if (this.error) {\n      this.resetError_();\n    }\n\n    this.error = true;\n\n    const container = this.$element_.find('.gmf-authentication-error');\n\n    if (!Array.isArray(errors)) {\n      errors = [errors];\n    }\n\n    errors.forEach(function(error) {\n      this.notification_.notify({\n        msg: error,\n        target: container,\n        type: messageType\n      });\n    }, this);\n  }\n\n  /**\n   * @private\n   */\n  resetError_() {\n    this.notification_.clear();\n    this.error = false;\n  }\n};\n\nexports.controller('GmfAuthenticationController',\n  exports.AuthenticationController_);\n\n\nexport default exports;\n","/**\n * @module gmf.authentication.module\n */\nimport gmfAuthenticationComponent from 'gmf/authentication/component.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfAuthenticationModule', [\n  gmfAuthenticationComponent.name,\n  gmfAuthenticationService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.BackgroundLayerMgr\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olObservable from 'ol/Observable.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport ngeoLayerHelper from 'ngeo/map/LayerHelper.js';\n\n/**\n * Provides a service for setting/unsetting background layers\n * in maps.\n *\n * The notion of background/base layers doesn't exist in OpenLayers. This\n * service adds that notion.\n *\n * Setting a background layer to map is done with the `set` function:\n *\n *     ngeoBackgroundLayerMgr.set(map, layer);\n *\n * To unset the background layer pass `null` as the `layer` argument:\n *\n *     ngeoBackgroundLayerMgr.set(map, null);\n *\n * The `get` function returns the current background layer of the map passed\n * as an argument. `null` is returned if the map doesn't have a background\n * layer.\n *\n * The background layer is always added at index 0 in the map's layers\n * collection. When a background layer is set it is inserted (at index 0)\n * if the map does not already have a background layer, otherwise the\n * new background layer replaces the previous one at index 0.\n *\n * Users can subscribe to a 'change' event to get notified when the background\n * layer changes:\n *\n *     ngeoBackgroundLayerMgr.on('change', function(e) {\n *       // do something with the layer\n *       let layer = ngeoBackgroundLayerMgr.get();\n *       // know which layer was used before\n *       let previous = e.previous\n *     });\n *\n * See our live examples:\n * [../examples/backgroundlayer.html](../examples/backgroundlayer.html)\n * [../examples/backgroundlayerdropdown.html](../examples/backgroundlayerdropdown.html)\n *\n * @extends {ol.Observable}\n * @constructor\n * @struct\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Themes service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoBackgroundLayerMgr\n */\nconst exports = function(ngeoLayerHelper) {\n\n  olObservable.call(this);\n\n  /**\n   * Object used to track if maps have background layers.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.mapUids_ = {};\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n};\n\nolBase.inherits(exports, olObservable);\n\n\n/**\n * Return the current background layer of a given map. `null` is returned if\n * the map does not have a background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The background layer.\n * @export\n */\nexports.prototype.get = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(0) : null;\n};\n\n\n/**\n * Set the background layer of a map. If `layer` is `null` the background layer\n * is removed.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The new background layer.\n * @return {ol.layer.Base} The previous background layer.\n * @export\n */\nexports.prototype.set = function(map, layer) {\n  const ZIndex = -200;\n  const mapUid = olBase.getUid(map).toString();\n  const previous = this.get(map);\n  if (layer !== null) {\n    layer.setZIndex(ZIndex);\n    this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n  }\n\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n\n  if (previous !== null) {\n    googAsserts.assert(mapUid in this.mapUids_);\n    if (layer !== null) {\n      bgGroup.getLayers().setAt(0, layer);\n    } else {\n      bgGroup.getLayers().removeAt(0);\n      delete this.mapUids_[mapUid];\n    }\n  } else if (layer !== null) {\n    bgGroup.getLayers().insertAt(0, layer);\n    this.mapUids_[mapUid] = true;\n  }\n  /** @type {ngeox.BackgroundEvent} */\n  const event = new ngeoCustomEvent('change', {\n    current: layer,\n    previous: previous\n  });\n  this.dispatchEvent(event);\n\n  return previous;\n};\n\n/**\n * Return the current background layer overlay of a given map, used by the opacity slider.\n * `null` is returned if the map does not have an opacity background layer.\n * @param {ol.Map} map Map.\n * @return {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.getOpacityBgLayer = function(map) {\n  const mapUid = olBase.getUid(map).toString();\n  return mapUid in this.mapUids_ ? this.ngeoLayerHelper_.getGroupFromMap(map,\n    exports.BACKGROUNDLAYERGROUP_NAME).getLayers().item(1) : null;\n};\n\n/**\n * Set an background layer overlay, used by the opacity slider.\n * @param {ol.Map} map The map.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.prototype.setOpacityBgLayer = function(map, layer) {\n  const bgGroup = this.ngeoLayerHelper_.getGroupFromMap(map, exports.BACKGROUNDLAYERGROUP_NAME);\n  const previous = bgGroup.getLayers().remove(this.getOpacityBgLayer(map));\n  const ZIndex = -100;\n  layer.setOpacity(previous ? previous.getOpacity() : 0);\n  layer.setVisible(previous ? previous.getVisible() : true);\n  layer.setZIndex(ZIndex);\n  this.ngeoLayerHelper_.setZIndexToFirstLevelChildren(layer, ZIndex);\n\n  const index = bgGroup.getLayers().getArray().indexOf(layer);\n  if (index === -1) {\n    bgGroup.getLayers().push(layer);\n  }\n};\n\n/**\n * @param {ol.Map} map The map.\n * @param {Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.updateDimensions = function(map, dimensions) {\n  const baseBgLayer = this.get(map);\n  if (baseBgLayer) {\n    let layers = [baseBgLayer];\n    if (baseBgLayer instanceof olLayerGroup) {\n      // Handle the first level of layers of the base background layer.\n      layers = baseBgLayer.getLayers().getArray();\n    }\n\n    layers.forEach((layer) => {\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      if (layer) {\n        let hasUpdates = false;\n        const updatedDimensions = {};\n        for (const key in layer.get('dimensions')) {\n          const value = dimensions[key];\n          if (value !== undefined) {\n            updatedDimensions[key] = value;\n            hasUpdates = true;\n          }\n        }\n        if (hasUpdates) {\n          const source = layer.getSource();\n          if (source instanceof olSourceWMTS) {\n            source.updateDimensions(updatedDimensions);\n            source.refresh();\n          } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n            source.updateParams(updatedDimensions);\n            source.refresh();\n          }\n        }\n      }\n    });\n  }\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoBackgroundLayerMgr', [\n  ngeoLayerHelper.module.name\n]);\nexports.module.service('ngeoBackgroundLayerMgr', exports);\n\n/**\n * @const\n */\nexports.BACKGROUNDLAYERGROUP_NAME = 'background';\n\n\nexport default exports;\n","/**\n * @module gmf.backgroundlayerselector.component\n */\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport * as olEvents from 'ol/events.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfBackgroundlayerselector', [\n  gmfThemeThemes.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n]);\n\n\nexports.value('gmfBackgroundlayerselectorTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfBackgroundlayerselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/backgroundlayerselector';\n  }\n);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/backgroundlayerselector', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfBackgroundlayerselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfBackgroundlayerselectorTemplateUrl($element, $attrs, gmfBackgroundlayerselectorTemplateUrl) {\n  return gmfBackgroundlayerselectorTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a \"background layer selector\" component.\n *\n * Example:\n *\n *      <gmf-backgroundlayerselector\n *        gmf-backgroundlayerselector-map=\"::ctrl.map\"\n *        gmf-backgroundlayer-opacity-options=\"::ctrl.bgOpacityOptions\"\n *        gmf-backgroundlayerselector-select=\"onBackgroundSelected()\">\n *      </gmf-backgroundlayerselector>\n *\n * Used UI metadata:\n *\n *  * thumbnail: The URL used for the icon.\n *\n * @htmlAttribute {ol.Map=} gmf-backgroundlayerselector-map The map.\n * @htmlAttribute {string} gmf-backgroundlayer-opacity-options The opacity slider options.\n * @htmlAttribute {Function} gmf-backgroundlayerselector-select Function called\n *     when a layer was selected by the user.\n *\n * @ngdoc component\n * @ngname gmfBackgroundlayerselector\n */\nexports.component_ = {\n  controller: 'GmfBackgroundlayerselectorController as ctrl',\n  bindings: {\n    'map': '=gmfBackgroundlayerselectorMap',\n    'opacityOptions': '=gmfBackgroundlayerOpacityOptions',\n    'select': '&?gmfBackgroundlayerselectorSelect'\n  },\n  templateUrl: gmfBackgroundlayerselectorTemplateUrl\n};\n\n\nexports.component('gmfBackgroundlayerselector',\n  exports.component_);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer manager.\n * @param {!gmf.theme.Themes} gmfThemes Themes service.\n * @ngInject\n * @ngdoc controller\n * @ngname GmfBackgroundlayerselectorController\n */\nexports.Controller_ = function($scope, ngeoBackgroundLayerMgr, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.opacityOptions;\n\n  /**\n   * Function called when a layer was selected by the user.\n   * @type {?Function}\n   * @export\n   */\n  this.select;\n\n  /**\n   * @type {?ol.layer.Base}\n   * @export\n   */\n  this.bgLayer;\n\n  /**\n   * @type {?Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.bgLayers;\n\n  /**\n   * @type {ol.layer.Base}\n   * @export\n   */\n  this.opacityLayer;\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(gmfThemes, 'change', this.handleThemesChange_, this));\n\n  /**\n   * @type {!ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n  this.listenerKeys_.push(olEvents.listen(this.backgroundLayerMgr_, 'change',\n    /**\n     * @param {!ngeox.BackgroundEvent} event Event.\n     */\n    (event) => {\n      this.bgLayer = event.detail.current;\n    }));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.handleThemesChange_();\n};\n\n\n/**\n * Called when the themes changes. Set (or reset) the backround layers.\n * @private\n */\nexports.Controller_.prototype.handleThemesChange_ = function() {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    this.bgLayers = layers;\n\n    if (this.opacityOptions !== undefined) {\n      const opacityLayer = layers.find(layer => layer.get('label') === this.opacityOptions);\n      if (opacityLayer !== undefined) {\n        this.setOpacityBgLayer(opacityLayer);\n        this.opacityLayer = opacityLayer;\n\n        // Reorder for the UI the bgArray copy with the opacity layer at the end\n        this.bgLayers = this.bgLayers.slice();\n        const indexOpa = this.bgLayers.findIndex(layer => layer === this.opacityLayer);\n        this.bgLayers.splice(indexOpa, 1);\n        this.bgLayers.push(opacityLayer);\n      }\n    }\n  });\n};\n\n/**\n * Getter/setter for background layer overlay, used by opacity slider.\n * @param {?number} val The opacity.\n * @returns {number} The background layer opacity.\n * @export\n */\nexports.Controller_.prototype.getSetBgLayerOpacity = function(val) {\n  if (val !== undefined) {\n    this.opacityLayer.setOpacity(val);\n  }\n  return this.opacityLayer.getOpacity();\n};\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @param {boolean=} opt_silent Do not notify listeners.\n * @export\n */\nexports.Controller_.prototype.setLayer = function(layer, opt_silent) {\n  this.bgLayer = layer;\n  this.backgroundLayerMgr_.set(this.map, layer);\n  if (!opt_silent && this.select) {\n    this.select();\n  }\n};\n\n/**\n * Set a background layer overlay, used by the opacity slider.\n * @param {ol.layer.Base} layer The opacity background layer.\n * @export\n */\nexports.Controller_.prototype.setOpacityBgLayer = function(layer) {\n  this.backgroundLayerMgr_.setOpacityBgLayer(this.map, layer);\n};\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('GmfBackgroundlayerselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Helper\n */\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * A service that provides utility methods to manipulate or get GMF data\n   * sources.\n   *\n   * @struct\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {gmf.editing.EnumerateAttribute} gmfEnumerateAttribute The Gmf enumerate\n   *     attribute service.\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfDataSourcesHelper\n   * @ngInject\n   */\n  constructor($q, gmfEnumerateAttribute, ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {gmf.editing.EnumerateAttribute}\n     * @private\n     */\n    this.gmfEnumerateAttribute_ = gmfEnumerateAttribute;\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n\n\n    // === Other properties ===\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @protected\n     */\n    this.collection_;\n\n    /**\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @protected\n     */\n    this.cache_;\n  }\n\n  /**\n   * @return {gmfx.datasource.DataSources} Data sources collection.\n   * @export\n   */\n  get collection() {\n    return /** @type {gmfx.datasource.DataSources} */ (\n      this.ngeoDataSourcesHelper_.collection\n    );\n  }\n\n  /**\n   * Return a data source using its id.\n   * @param {number} id Data source id.\n   * @return {?gmf.datasource.OGC} Data source.\n   * @export\n   */\n  getDataSource(id) {\n    return /** @type {?gmf.datasource.OGC} */ (\n      this.ngeoDataSourcesHelper_.getDataSource(id)\n    );\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Filtrable data source.\n   * @return {angular.$q.Promise} Promise.\n   * @export\n   */\n  prepareFiltrableDataSource(dataSource) {\n\n    const prepareFiltrableDataSourceDefer = this.q_.defer();\n\n    // (1) Get the attributes. The first time, they will be asynchronously\n    //     obtained using a WFS DescribeFeatureType request.\n    this.ngeoDataSourcesHelper_.getDataSourceAttributes(\n      dataSource\n    ).then((attributes) => {\n      // (2) The attribute names that are in the `enumeratedAttributes`\n      //     metadata are the ones that need to have their values fetched.\n      //     Do that once then set the type to SELECT and the choices.\n      const meta = dataSource.gmfLayer.metadata || {};\n      const enumAttributes = meta.enumeratedAttributes;\n      if (enumAttributes && enumAttributes.length) {\n        const promises = [];\n        for (const attribute of attributes) {\n          if (olArray.includes(enumAttributes, attribute.name) &&\n             attribute.type !== ngeoFormatAttributeType.SELECT &&\n             (!attribute.choices || !attribute.choices.length)) {\n            promises.push(\n              this.gmfEnumerateAttribute_.getAttributeValues(\n                dataSource, attribute.name\n              ).then((values) => {\n                const choices = values.map(choice => choice.value);\n                attribute.type = ngeoFormatAttributeType.SELECT;\n                attribute.choices = choices;\n              })\n            );\n          }\n        }\n        return this.q_.all(promises).then(\n          prepareFiltrableDataSourceDefer.resolve(dataSource)\n        );\n      } else {\n        prepareFiltrableDataSourceDefer.resolve(dataSource);\n      }\n    });\n\n    return prepareFiltrableDataSourceDefer.promise;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesHelper', [\n  ngeoDatasourceHelper.module.name,\n  gmfEditingEnumerateAttribute.module.name,\n]);\nexports.module.service('gmfDataSourcesHelper', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.OGC\n */\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = class extends ngeoDatasourceOGC {\n\n  /**\n   * A `gmf.datasource.OGC` extends a `ngeo.datasource.OGC` and\n   * adds some properties that are proper to GMF only.\n   *\n   * @struct\n   * @param {gmfx.datasource.OGCOptions} options Options.\n   */\n  constructor(options) {\n\n    super(options);\n\n    // === STATIC properties (i.e. that never change) ===\n\n    /**\n     * @type {gmfThemes.GmfLayer}\n     * @private\n     */\n    this.gmfLayer_ = options.gmfLayer;\n\n  }\n\n  // === Static property getters/setters ===\n\n  /**\n   * @return {gmfThemes.GmfLayer} GMF layer\n   * @export\n   */\n  get gmfLayer() {\n    return this.gmfLayer_;\n  }\n\n};\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.WFSAliases\n */\nimport ngeoDatasourceHelper from 'ngeo/datasource/Helper.js';\n\nconst exports = class {\n\n  /**\n   * Service that provides methods to get additional information and actions\n   * when performing WFS requests.\n   *\n   * @struct\n   * @param {ngeo.datasource.Helper} ngeoDataSourcesHelper Ngeo data\n   *     source helper service.\n   * @ngdoc service\n   * @ngname gmfWFSAliases\n   * @ngInject\n   */\n  constructor(ngeoDataSourcesHelper) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {ngeo.datasource.Helper}\n     * @private\n     */\n    this.ngeoDataSourcesHelper_ = ngeoDataSourcesHelper;\n  }\n\n\n  /**\n   * @param {ngeo.datasource.OGC} dataSource Data source.\n   * @export\n   */\n  describe(dataSource) {\n    // Only QGIS Server supports WFS aliases\n    if (dataSource.ogcServerType === 'qgisserver' &&\n      dataSource.wfsUrl_ &&\n      dataSource.getOGCLayerNames().length == 1 &&\n      !dataSource.attributes) {\n      // Trigger an additional WFS DescribeFeatureType request to get\n      // datasource attributes, including aliases.\n      this.ngeoDataSourcesHelper_.getDataSourceAttributes(dataSource);\n    }\n  }\n};\n\n\nexports.module = angular.module('gmfDatasourceWFSAliases', [\n  ngeoDatasourceHelper.module.name,\n]);\nexports.module.service('gmfWFSAliases', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.Manager\n */\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\n\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish DataSources Manager is responsible of listenening to the\n   * c2cgeoportal's themes to create instances of `ngeo.datasource.DataSource`\n   * objects with the layer definitions found and push them in the\n   * `ngeox.datasource.DataSources` collection. The Manager must be initialized\n   * with the app's map using the setDatasourcseMap() method.\n   *\n   * When changing theme, these data sources are cleared then re-created.\n   *\n   * @struct\n   * @param {angular.$q} $q Angular q service\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n   * @param {!ngeo.map.BackgroundLayerMgr} ngeoBackgroundLayerMgr Background layer\n   *     manager.\n   * @param {ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources service.\n   *     data sources service.\n   * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n   * @param {!gmf.datasource.WFSAliases} gmfWFSAliases Gmf WFS aliases service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfDataSourcesManager\n   */\n  constructor($q, $rootScope, $timeout, gmfThemes, gmfTreeManager,\n    ngeoBackgroundLayerMgr, ngeoDataSources, ngeoLayerHelper, ngeoRuleHelper,\n    ngeoWMSTime, gmfWFSAliases\n  ) {\n\n    // === Injected properties ===\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.q_ = $q;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {!ngeo.map.BackgroundLayerMgr}\n     * @private\n     */\n    this.ngeoBackgroundLayerMgr_ = ngeoBackgroundLayerMgr;\n\n    /**\n     * @type {ngeo.datasource.DataSources}\n     * @private\n     */\n    this.ngeoDataSources_ = ngeoDataSources;\n\n    /**\n     * The collection of DataSources from ngeo, which gets updated by this\n     * service. When the theme changes, first we remove all data sources, then\n     * the 'active' data source are added here.\n     * @type {ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n\n    /**\n     * @type {!ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.WMSTime}\n     * @private\n     */\n    this.ngeoWMSTime_ = ngeoWMSTime;\n\n    /**\n     * @type {!gmf.datasource.WFSAliases}\n     * @private\n     */\n    this.gmfWFSAliases_ = gmfWFSAliases;\n\n\n    // === Inner properties ===\n\n    /**\n     * While loading a new theme, this is where all of the created data sources\n     * are put using the id as key for easier find in the future.\n     * @type {Object.<number, gmf.datasource.OGC>}\n     * @private\n     */\n    this.dataSourcesCache_ = {};\n\n    /**\n     * A reference to the dimensions object.\n     * @type {ngeox.Dimensions|undefined}\n     * @private\n     */\n    this.dimensions_;\n\n    /**\n     * The function to call to unregister the `watch` event on the dimensions\n     * object properties.\n     * @type {?Function}\n     * @private\n     */\n    this.dimensionsWatcherUnregister = null;\n\n    /**\n     * The cache of layertree leaf controller, i.e. those that are added to\n     * the tree manager. When treeCtrl is added in this cache, it's given\n     * a reference to its according data source.\n     * @type {gmfx.datasource.ManagerTreeCtrlCache}\n     * @private\n     */\n    this.treeCtrlCache_ = {};\n\n    /**\n     * The function to call to unregister the `watchCollection` event on\n     * the root layer tree controller children.\n     * @type {?Function}\n     * @private\n     */\n    this.treeCtrlsUnregister_ = null;\n\n    // === Events ===\n\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleNgeoBackgroundLayerChange_,\n      this\n    );\n    olEvents.listen(this.gmfThemes_, 'change', this.handleThemesChange_, this);\n  }\n\n\n  /**\n   * Set the map to use with your datasources.\n   * @param {!ol.Map} map The map to use.\n   * @export\n   */\n  setDatasourceMap(map) {\n    this.ngeoDataSources_.map = map;\n  }\n\n  /**\n   * @param {!ngeox.Dimensions} dimensions A reference to the dimensions\n   *     object to keep a reference of in this service.\n   */\n  setDimensions(dimensions) {\n    if (this.dimensionsWatcherUnregister) {\n      this.dimensionsWatcherUnregister();\n    }\n\n    this.dimensions_ = dimensions;\n\n    this.dimensionsWatcherUnregister = this.rootScope_.$watch(\n      () => this.dimensions_,\n      this.handleDimensionsChange_.bind(this),\n      true\n    );\n    this.handleDimensionsChange_();\n  }\n\n  /**\n   * Called when the dimensions change. Update all affected layer's filters.\n   * @private\n   */\n  handleDimensionsChange_() {\n\n    // Create a layer list to update each one only once\n    const layers = [];\n    const layerIds = [];\n\n    const dataSources = this.dataSources_.getArray();\n    for (const dataSource of dataSources) {\n      if (dataSource.dimensionsFiltersConfig) {\n        for (const key in dataSource.dimensionsFiltersConfig) {\n          if (dataSource.dimensionsFiltersConfig[key].value === null) {\n            const layer = this.getDataSourceLayer_(dataSource);\n            if (layer == undefined) {\n              return;\n            }\n            const id = olBase.getUid(layer);\n            if (layerIds.indexOf(id) == -1) {\n              layers.push(layer);\n              layerIds.push(id);\n            }\n          }\n        }\n      }\n    }\n\n    layers.forEach(this.updateLayerFilter_.bind(this));\n  }\n\n  /**\n   * Called when the themes change. Remove any existing data sources first,\n   * then create and add data sources from the loaded themes.\n   * @private\n   */\n  handleThemesChange_() {\n    // (1) Clear\n    this.clearDataSources_();\n    if (this.treeCtrlsUnregister_) {\n      this.treeCtrlsUnregister_();\n    }\n    this.clearTreeCtrlCache_();\n\n    // (2) Re-create data sources and event listeners\n    this.gmfThemes_.getOgcServersObject().then((ogcServers) => {\n      const promiseThemes = this.gmfThemes_.getThemesObject().then((themes) => {\n        // Create a DataSources for each theme\n        for (const theme of themes) {\n          for (const child of theme.children) {\n            googAsserts.assert(child);\n            this.createDataSource_(child, child, ogcServers);\n          }\n        }\n      });\n\n      const promiseBgLayers = this.gmfThemes_.getBackgroundLayersObject().then(\n        (backgroundLayers) => {\n          // Create a DataSource for each background layer\n          for (const backgroundLayer of backgroundLayers) {\n            this.createDataSource_(null, backgroundLayer, ogcServers);\n          }\n        }\n      );\n\n      // Then add the data sources that are active in the ngeo collection\n      this.q_.all([promiseThemes, promiseBgLayers]).then(() => {\n        this.treeCtrlsUnregister_ = this.rootScope_.$watchCollection(\n          () => {\n            if (this.gmfTreeManager_.rootCtrl) {\n              return this.gmfTreeManager_.rootCtrl.children;\n            }\n          },\n          this.handleTreeManagerRootChildrenChange_.bind(this)\n        );\n      });\n    });\n  }\n\n  /**\n   * Called when the list of tree controllers within the tree manager\n   * root controller changes. In other words, this method is called\n   * after nodes are being added added or removed from the tree,\n   * i.e. from the child nodes collection.\n   *\n   * A timeout is required  because the collection event is fired before\n   * the leaf nodes are created and they are the ones we're looking for here.\n   *\n   * This method handles the registration/unregistration of tree nodes that\n   * are added or removed, pushing it to the cache or removing it from the\n   * cache.\n   *\n   * @param {Array.<ngeo.layertree.Controller>|undefined} value List of tree\n   *     controllers.\n   * @private\n   */\n  handleTreeManagerRootChildrenChange_(value) {\n\n    this.timeout_(() => {\n\n      // (1) No need to do anything if the value is not set\n      if (!value) {\n        return;\n      }\n\n      // (2) Collect 'leaf' treeCtrls\n      const newTreeCtrls = [];\n      const visitor = (treeCtrls, treeCtrl) => {\n        const node = /** @type {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} */ (\n          treeCtrl.node);\n        const children = node.children;\n        if (!children) {\n          treeCtrls.push(treeCtrl);\n        }\n      };\n      for (let i = 0, ii = value.length; i < ii; i++) {\n        value[i].traverseDepthFirst(visitor.bind(this, newTreeCtrls));\n      }\n\n      // (3) Add new 'treeCtrls'\n      for (let i = 0, ii = newTreeCtrls.length; i < ii; i++) {\n        const newTreeCtrl = newTreeCtrls[i];\n        const cacheItem = this.getTreeCtrlCacheItem_(newTreeCtrl);\n        if (!cacheItem) {\n          this.addTreeCtrlToCache_(newTreeCtrl);\n        }\n      }\n\n      // (4) Remove treeCtrls that are no longer in the newTreeCtrl\n      const cache = this.treeCtrlCache_;\n      for (const id in this.treeCtrlCache_) {\n        const item = cache[id];\n        if (!newTreeCtrls.includes(item.treeCtrl)) {\n          this.removeTreeCtrlCacheItem_(item);\n        }\n      }\n    });\n  }\n\n  /**\n   * Remove the data sources from the ngeo collection that are in the cache,\n   * i.e. those created by this service, then clear the cache.\n   * @private\n   */\n  clearDataSources_() {\n\n    // (1) Remove data sources from ngeo collection\n    const dataSources = this.dataSources_.getArray();\n    for (let i = dataSources.length - 1, ii = 0; i >= ii; i--) {\n      if (this.dataSourcesCache_[dataSources[i].id]) {\n        // Use the `remove` method of the `ol.Collection` object for it\n        // to update its length accordingly and trigger the REMOVE event as\n        // well.\n        this.dataSources_.remove(dataSources[i]);\n      }\n    }\n\n    // (2) Clear the cache\n    olObj.clear(this.dataSourcesCache_);\n  }\n\n  /**\n   * Create a data source using the information on the node, group node\n   * and OGC servers. If the node has children, then we loop in those to get\n   * leaf nodes. Only leaf nodes end up creating a data source. If a data\n   * source with the same id already exists, then the node is skipped.\n   *\n   * Once a data source is created, it is added to the data sources cache.\n   *\n   * @param {gmfThemes.GmfGroup} firstLevelGroup The first level group node.\n   * @param {!gmfThemes.GmfGroup|!gmfThemes.GmfLayer} node The node, which\n   *     may have children or not.\n   * @param {!gmfThemes.GmfOgcServers} ogcServers OGC servers.\n   * @private\n   */\n  createDataSource_(firstLevelGroup, node, ogcServers) {\n\n    const children = node.children;\n\n    // (1) Group node (node that has children). Loop in the children\n    //     individually and create a data source for each one of them. The\n    //     group node itself is **skipped**.\n    if (children) {\n      for (const child of children) {\n        googAsserts.assert(child);\n        this.createDataSource_(firstLevelGroup, child, ogcServers);\n      }\n      return;\n    }\n\n    // From there on, the node is a layer node.\n    const gmfLayer = /** @type gmfThemes.GmfLayer */ (node);\n\n    // (2) Skip layer node if a data source with the same id exists\n    const id = olBase.getUid(gmfLayer);\n    if (this.dataSourcesCache_[id]) {\n      return;\n    }\n\n    // From there on, a data source will be created\n    const meta = gmfLayer.metadata;\n    const ogcType = gmfLayer.type;\n    let maxResolution;\n    let minResolution;\n    let ogcLayers;\n    let ogcServer;\n    let wmtsLayer;\n    let wmtsUrl;\n    let ogcImageType;\n    let timeProperty;\n\n    if (ogcType === gmfThemeThemes.NodeType.WMTS) {\n      // (3) Manage WMTS\n      const gmfLayerWMTS = /** @type {gmfThemes.GmfLayerWMTS} */ (gmfLayer);\n\n      // Common options for WMTS\n      wmtsLayer = gmfLayerWMTS.layer;\n      wmtsUrl = gmfLayerWMTS.url;\n      maxResolution = meta.maxResolution;\n      minResolution = meta.minResolution;\n\n      // OGC Layers\n      const layers = meta.queryLayers || meta.wmsLayers;\n      if (layers) {\n        ogcLayers = layers.split(',').map((layer) => {\n          return {\n            maxResolution: maxResolution,\n            minResolution: minResolution,\n            name: layer,\n            queryable: true\n          };\n        });\n      }\n\n      // OGC Server\n      if (meta.ogcServer && ogcServers[meta.ogcServer]) {\n        ogcServer = ogcServers[meta.ogcServer];\n      }\n      ogcImageType = gmfLayerWMTS.imageType;\n    } else if (ogcType === gmfThemeThemes.NodeType.WMS) {\n      // (4) Manage WMS\n      const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n      // Common options for WMS\n      maxResolution = gmfLayerWMS.maxResolutionHint;\n      minResolution = gmfLayerWMS.minResolutionHint;\n\n      // OGC Layers\n      ogcLayers = gmfLayerWMS.childLayers.map((childLayer) => {\n        return {\n          maxResolution: childLayer.maxResolutionHint,\n          minResolution: childLayer.minResolutionHint,\n          name: childLayer.name,\n          queryable: childLayer.queryable\n        };\n      });\n\n      // OGC Server\n      const ogcServerName = (!firstLevelGroup || firstLevelGroup.mixed) ?\n        gmfLayerWMS.ogcServer : firstLevelGroup.ogcServer;\n      googAsserts.assert(ogcServerName);\n      ogcServer = ogcServers[ogcServerName];\n      ogcImageType = ogcServer.imageType;\n\n      // Time property\n      if (gmfLayerWMS.time) {\n        timeProperty = gmfLayerWMS.time;\n      } else if (firstLevelGroup && firstLevelGroup.time) {\n        timeProperty = firstLevelGroup.time;\n      }\n    }\n\n    // (5) ogcServer\n    const ogcServerType = ogcServer ? ogcServer.type : undefined;\n    const wmsIsSingleTile = ogcServer ? ogcServer.isSingleTile : undefined;\n    const wfsUrl = ogcServer && ogcServer.wfsSupport ?\n      ogcServer.urlWfs : undefined;\n    const wmsUrl = ogcServer ? ogcServer.url : undefined;\n\n    let wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML3;\n    // qgis server only supports GML2 output\n    if (ogcServerType === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      wfsOutputFormat = ngeoDatasourceOGC.WFSOutputFormat.GML2;\n    }\n\n    // (6) Snapping\n    const snappable = !!meta.snappingConfig;\n    const snappingTolerance = meta.snappingConfig ?\n      meta.snappingConfig.tolerance : undefined;\n    const snappingToEdges = meta.snappingConfig ?\n      meta.snappingConfig.edge : undefined;\n    const snappingToVertice = meta.snappingConfig ?\n      meta.snappingConfig.vertex : undefined;\n\n    // (7) Dimensions\n    const dimensions = this.dimensions_;\n    const dimensionsConfig = node.dimensions || firstLevelGroup.dimensions;\n    const dimensionsFiltersConfig = node.dimensionsFilters;\n\n    // (8) Time values (lower or lower/upper)\n    let timeLowerValue;\n    let timeUpperValue;\n    if (timeProperty) {\n      const timeValues = this.ngeoWMSTime_.getOptions(timeProperty)['values'];\n      if (Array.isArray(timeValues)) {\n        timeLowerValue = timeValues[0];\n        timeUpperValue = timeValues[1];\n      } else {\n        timeLowerValue = timeValues;\n      }\n    }\n\n    // (9) Common options\n    const copyable = meta.copyable;\n    const identifierAttribute = meta.identifierAttributeField;\n    const name = gmfLayer.name;\n    const timeAttributeName = meta.timeAttribute;\n    const visible = meta.isChecked === true;\n\n    // Create the data source and add it to the cache\n    this.dataSourcesCache_[id] = new gmfDatasourceOGC({\n      copyable,\n      dimensions,\n      dimensionsConfig,\n      dimensionsFiltersConfig,\n      gmfLayer,\n      id,\n      identifierAttribute,\n      maxResolution,\n      minResolution,\n      name,\n      ogcImageType,\n      ogcLayers,\n      ogcServerType,\n      ogcType,\n      snappable,\n      snappingTolerance,\n      snappingToEdges,\n      snappingToVertice,\n      timeAttributeName,\n      timeLowerValue,\n      timeProperty,\n      timeUpperValue,\n      visible,\n      wfsOutputFormat,\n      wfsUrl,\n      wmsIsSingleTile,\n      wmsUrl,\n      wmtsLayer,\n      wmtsUrl\n    });\n  }\n\n  /**\n   * If the given Layertree controller is a 'leaf', add it to the cache.\n   * Also, set its according data source. Finally, add the data source to\n   * the ngeo collection.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl Layertree controller to add\n   * @private\n   */\n  addTreeCtrlToCache_(treeCtrl) {\n\n    const id = olBase.getUid(treeCtrl.node);\n    const dataSource = this.dataSourcesCache_[id];\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    treeCtrl.setDataSource(dataSource);\n\n    const stateWatcherUnregister = this.rootScope_.$watch(\n      () => treeCtrl.getState(),\n      this.handleTreeCtrlStateChange_.bind(this, treeCtrl)\n    );\n\n    const filterRulesWatcherUnregister = this.rootScope_.$watch(\n      () => {\n        const hasFilters = dataSource.filterRules !== null;\n        const isVisible = dataSource.visible;\n        return hasFilters && isVisible;\n      },\n      this.handleDataSourceFilterRulesChange_.bind(this, dataSource)\n    );\n\n    // Watch for time values change to update the WMS layer\n    let timeLowerValueWatcherUnregister;\n    let timeUpperValueWatcherUnregister;\n    let wmsLayer;\n    if (dataSource.timeProperty &&\n        dataSource.ogcType === ngeoDatasourceOGC.Type.WMS\n    ) {\n      timeLowerValueWatcherUnregister = this.rootScope_.$watch(\n        () => dataSource.timeLowerValue,\n        this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n      );\n\n      if (dataSource.timeProperty.mode === 'range') {\n        timeUpperValueWatcherUnregister = this.rootScope_.$watch(\n          () => dataSource.timeUpperValue,\n          this.handleDataSourceTimeValueChange_.bind(this, dataSource)\n        );\n      }\n\n      wmsLayer = googAsserts.assertInstanceof(\n        gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl),\n        olLayerImage\n      );\n    }\n\n    this.treeCtrlCache_[id] = {\n      filterRulesWatcherUnregister,\n      stateWatcherUnregister,\n      timeLowerValueWatcherUnregister,\n      timeUpperValueWatcherUnregister,\n      treeCtrl,\n      wmsLayer\n    };\n\n    this.dataSources_.push(dataSource);\n\n    this.gmfWFSAliases_.describe(dataSource);\n  }\n\n  /**\n   * Remove a treeCtrl cache item. Unregister event listeners and remove the\n   * data source from the ngeo collection.\n   *\n   * @param {gmfx.datasource.ManagerTreeCtrlCacheItem} item Layertree\n   *     controller cache item\n   * @private\n   */\n  removeTreeCtrlCacheItem_(item) {\n\n    // (1) Remove data source\n    const dataSource = item.treeCtrl.getDataSource();\n    googAsserts.assert(dataSource, 'DataSource should be set');\n    this.dataSources_.remove(dataSource);\n\n    // (2) Remove item and clear event listeners\n    item.treeCtrl.setDataSource(null);\n    item.filterRulesWatcherUnregister();\n    item.stateWatcherUnregister();\n    if (item.timeLowerValueWatcherUnregister) {\n      item.timeLowerValueWatcherUnregister();\n    }\n    if (item.timeUpperValueWatcherUnregister) {\n      item.timeUpperValueWatcherUnregister();\n    }\n    delete this.treeCtrlCache_[olBase.getUid(item.treeCtrl.node)];\n  }\n\n  /**\n   * Clears the layer tree controller cache. At the same time, each item gets\n   * its data source reference unset and state watcher unregistered.\n   *\n   * The data source gets also removed from the ngeo data sources collection.\n   * @private\n   */\n  clearTreeCtrlCache_() {\n    for (const id in this.treeCtrlCache_) {\n      this.removeTreeCtrlCacheItem_(this.treeCtrlCache_[id]);\n    }\n  }\n\n  /**\n   * Called when the state of a 'leaf' layertree controller changes.\n   * Update the `visible` property of the data source according to the\n   * state of the layertree controller.\n   *\n   * Note: The possible states can only be 'on' or 'off', because the\n   * layertree controller being a 'leaf'.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @param {string|undefined} newVal New state value\n   * @private\n   */\n  handleTreeCtrlStateChange_(treeCtrl, newVal) {\n    const treeDataSource = treeCtrl.getDataSource();\n    googAsserts.assert(treeDataSource, 'DataSource should be set');\n    const visible = newVal === 'on';\n    treeDataSource.visible = visible;\n\n    // In GMF, multiple data sources can be combined into one ol.layer.Layer\n    // object. When changing the state of a data source, we need to make\n    // sure that the FILTER param match order of the current LAYERS param.\n    const layer = this.getDataSourceLayer_(treeDataSource);\n    if (layer == undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Returns a layertree controller cache item, if it exists.\n   *\n   * @param {ngeo.layertree.Controller} treeCtrl The layer tree controller\n   * @return {gmfx.datasource.ManagerTreeCtrlCacheItem} Cache item\n   * @private\n   */\n  getTreeCtrlCacheItem_(treeCtrl) {\n    return this.treeCtrlCache_[olBase.getUid(treeCtrl.node)] || null;\n  }\n\n  /**\n   * Return the layer corresponding to the data source.\n   * @param {!ngeo.DataSource} dataSource The data source.\n   * @return {ol.layer.Base|undefined} The layer.\n   * @private\n   */\n  getDataSourceLayer_(dataSource) {\n    dataSource = /** @type {!gmf.DataSource} */ (dataSource);\n    if (dataSource.gmfLayer == undefined) {\n      return;\n    }\n    const id = olBase.getUid(dataSource.gmfLayer);\n    if (id == undefined) {\n      return;\n    }\n    const item = this.treeCtrlCache_[id];\n    if (item == undefined) {\n      return;\n    }\n    const treeCtrl = item.treeCtrl;\n    return gmfLayertreeSyncLayertreeMap.getLayer(treeCtrl);\n  }\n\n  /**\n   * Update layer filter parameter according to data sources filter rules\n   * and dimensions filters.\n   * @param {ol.layer.Base} layer The layer to update.\n   * @private\n   */\n  updateLayerFilter_(layer) {\n    googAsserts.assert(\n      layer instanceof olLayerImage ||\n      layer instanceof olLayerTile\n    );\n\n    const source = layer.getSource();\n    if (!(source instanceof olSourceImageWMS ||\n          source instanceof olSourceTileWMS)) {\n      return;\n    }\n\n    const params = source.getParams();\n    const layersParam = params['LAYERS'];\n    const layersList = layersParam.split(',');\n    googAsserts.assert(layersList.length >= 1);\n\n    const filterParam = 'FILTER';\n    const filterParamValues = [];\n    let hasFilter = false;\n    for (const wmsLayerName of layersList) {\n      let filterParamValue = '()';\n\n      const dataSources = this.dataSources_.getArray();\n      for (const dataSource of dataSources) {\n        const dsLayer = this.getDataSourceLayer_(dataSource);\n        if (dsLayer == undefined) {\n          continue;\n        }\n        if (olBase.getUid(dsLayer) == olBase.getUid(layer) &&\n            layer.get('querySourceIds').indexOf(dataSource.id) >= 0 &&\n            dataSource.gmfLayer.layers.split(',').indexOf(wmsLayerName) >= 0)  {\n\n          const id = olBase.getUid(dataSource.gmfLayer);\n          const item = this.treeCtrlCache_[id];\n          googAsserts.assert(item);\n          const treeCtrl = item.treeCtrl;\n          const projCode = treeCtrl.map.getView().getProjection().getCode();\n\n          const filterString = dataSource.visible ?\n            this.ngeoRuleHelper_.createFilterString({\n              dataSource: dataSource,\n              projCode: projCode,\n              incDimensions: true\n            }) :\n            null;\n          if (filterString) {\n            filterParamValue = `(${filterString})`;\n            hasFilter = true;\n          }\n        }\n      }\n\n      filterParamValues.push(filterParamValue);\n    }\n\n    source.updateParams({\n      [filterParam]: hasFilter ? filterParamValues.join('') : null\n    });\n  }\n\n  /**\n   * Called when both the 'visible' and 'filterRules' properties of a data\n   * source change.\n   *\n   * If the data source is filtrable, then make sure that when it gets rules\n   * set to apply them as OGC filters to the OpenLayers layer, more precisely\n   * as a `FILTER` parameter in the layer's source parameters.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceFilterRulesChange_(dataSource) {\n\n    // Skip data sources that are not filtrables OR those that do not have\n    // the WMS ogcType, i.e. those that do not have an OpenLayers layer\n    // to update\n    if (dataSource.filtrable !== true ||\n        dataSource.ogcType !== ngeoDatasourceOGC.Type.WMS\n    ) {\n      return;\n    }\n\n    const layer = this.getDataSourceLayer_(dataSource);\n    if (layer === undefined) {\n      return;\n    }\n    this.updateLayerFilter_(layer);\n  }\n\n  /**\n   * Called when either the `timeLowerValue` or `timeUpperValue` property of a\n   * data source changes.\n   *\n   * Get the range value from the data source, then update the WMS layer\n   * thereafter.\n   *\n   * @param {!gmf.datasource.OGC} dataSource Data source.\n   * @private\n   */\n  handleDataSourceTimeValueChange_(dataSource) {\n\n    const id = olBase.getUid(dataSource.gmfLayer);\n    const item = this.treeCtrlCache_[id];\n    googAsserts.assert(item);\n    const wmsLayer = googAsserts.assert(item.wmsLayer);\n    const wmsSource = googAsserts.assertInstanceof(\n      wmsLayer.getSource(),\n      olSourceImageWMS\n    );\n\n    const timeProperty = googAsserts.assert(dataSource.timeProperty);\n    let timeParam;\n    const range = dataSource.timeRangeValue;\n    if (range) {\n      timeParam = this.ngeoWMSTime_.formatWMSTimeParam(timeProperty, range);\n    }\n\n    // No need to update the TIME param if already the same value;\n    const params = wmsSource.getParams();\n    const currentTimeParam = params['TIME'];\n    if (currentTimeParam === timeParam) {\n      return;\n    }\n\n    // The `timeParam` can be undefined, which means that the TIME property\n    // gets reset.\n    this.ngeoLayerHelper_.updateWMSLayerState(\n      wmsLayer,\n      wmsSource.getParams()['LAYERS'],\n      timeParam\n    );\n  }\n\n  /**\n   * Called when the background layer changes. Add/Remove the according data\n   * sources to/from the ngeo data sources collection. Update the data source\n   * `visible` property as well.\n   *\n   * The `querySourceIds` property in the layer is used to determine the\n   * data sources that are bound to the layer.\n   *\n   * @param {!ngeox.BackgroundEvent} evt Event.\n   * @private\n   */\n  handleNgeoBackgroundLayerChange_(evt) {\n\n    const previousBackgroundLayer = evt.detail.previous;\n    const currentBackgroundLayer = evt.detail.current;\n    const cache = this.dataSourcesCache_;\n\n    // Remove data sources linked to previous background layer\n    if (previousBackgroundLayer) {\n      const ids = previousBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = false;\n            this.dataSources_.remove(dataSource);\n          }\n        }\n      }\n    }\n\n    // Add data sources linked to current background layer\n    if (currentBackgroundLayer) {\n      const ids = currentBackgroundLayer.get('querySourceIds');\n      if (Array.isArray(ids)) {\n        for (const id of ids) {\n          const dataSource = cache[id];\n          if (dataSource) {\n            dataSource.visible = true;\n            this.dataSources_.push(dataSource);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfDataSourcesManager', [\n  gmfDatasourceWFSAliases.module.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoDatasourceDataSources.module.name,\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\nexports.module.service('gmfDataSourcesManager', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.datasource.module\n */\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\nimport gmfDatasourceManager from 'gmf/datasource/Manager.js';\nimport gmfDatasourceWFSAliases from 'gmf/datasource/WFSAliases.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDatasourceModule', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfDatasourceHelper.module.name,\n  gmfDatasourceManager.module.name,\n  gmfDatasourceWFSAliases.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.Disclaimer\n */\nimport 'bootstrap/js/alert.js';\nimport googAsserts from 'goog/asserts.js';\n\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport * as olBase from 'ol/index.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * Provides methods to display any sort of messages, disclaimers, errors,\n * etc. Requires Bootstrap library (both CSS and JS) to display the alerts\n * properly.\n *\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @constructor\n * @struct\n * @extends {ngeo.message.Message}\n * @ngdoc service\n * @ngname ngeoDisclaimer\n * @ngInject\n */\nconst exports = function($sce, gettextCatalog, ngeoCreatePopup) {\n\n  /**\n   * @private\n   * @type {angular.$sce}\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @private\n   * @type {ngeox.PopupFactory}\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  ngeoMessageMessage.call(this);\n\n  const container = angular.element('<div class=\"ngeo-disclaimer\"></div>');\n  angular.element(document.body).append(container);\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.container_ = container;\n\n  /**\n   * Cache of messages.\n   * @type {Object.<string, angular.JQLite|ngeo.message.Popup>}\n   * @private\n   */\n  this.messages_ = {};\n\n};\n\nolBase.inherits(exports, ngeoMessageMessage);\n\n\n/**\n * Show disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.alert = function(object) {\n  this.show(object);\n};\n\n\n/**\n * Close disclaimer message string or object or list of disclamer message\n * strings or objects.\n * @param {string|Array.<string>|ngeox.Message|Array.<ngeox.Message>}\n *     object A message or list of messages as text or configuration objects.\n * @export\n */\nexports.prototype.close = function(object) {\n  const msgObjects = this.getMessageObjects(object);\n  msgObjects.forEach(this.closeMessage_, this);\n};\n\n\n/**\n * Show the message.\n * @param {ngeox.Message} message Message.\n * @protected\n * @override\n */\nexports.prototype.showMessage = function(message) {\n  const gettextCatalog = this.gettextCatalog_;\n  const type = message.type;\n  googAsserts.assertString(type, 'Type should be set.');\n\n  // No need to do anything if message already exist.\n  const uid = this.getMessageUid_(message);\n  if (this.messages_[uid] !== undefined) {\n    return;\n  }\n\n  const showInPopup = message.popup === true;\n\n  if (showInPopup) {\n    // display the message in a popup, i.e. using the ngeo create popup\n    const popup = this.createPopup_();\n    const content = this.sce_.trustAsHtml(message.msg);\n    popup.open({\n      autoDestroy: true,\n      content: content,\n      title: '&nbsp;'\n    });\n\n    // Watch the open property\n    popup.scope.$watch('open', (newVal, oldVal) => {\n      if (!newVal) {\n        this.closeMessage_(message);\n      }\n    });\n\n    this.messages_[uid] =  popup;\n\n  } else {\n    // display the message using a boostrap dismissible alert\n    const classNames = ['alert', 'fade', 'alert-dismissible'];\n    switch (type) {\n      case ngeoMessageMessage.Type.ERROR:\n        classNames.push('alert-danger');\n        break;\n      case ngeoMessageMessage.Type.INFORMATION:\n        classNames.push('alert-info');\n        break;\n      case ngeoMessageMessage.Type.SUCCESS:\n        classNames.push('alert-success');\n        break;\n      case ngeoMessageMessage.Type.WARNING:\n        classNames.push('alert-warning');\n        break;\n      default:\n        break;\n    }\n\n    const el = angular.element(\n      `<div role=\"alert\" class=\"${classNames.join(' ')}\"></div>`);\n    const button = angular.element(\n      `<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"${\n        gettextCatalog.getString('Close')\n      }\"><span aria-hidden=\"true\" class=\"fa fa-times\"></span></button>`);\n    const msg = angular.element('<span />').html(message.msg);\n    el.append(button).append(msg);\n\n    let container;\n\n    if (message.target) {\n      container = angular.element(message.target);\n    } else {\n      container = this.container_;\n    }\n\n    container.append(el);\n    el.addClass('in');\n\n    // Listen when the message gets closed to cleanup the cache of messages\n    el.on('closed.bs.alert', () => {\n      this.closeMessage_(message);\n    });\n\n    this.messages_[uid] =  el;\n  }\n};\n\n\n/**\n * @param {ngeox.Message} message Message.\n * @return {string} The uid.\n * @private\n */\nexports.prototype.getMessageUid_ = function(message) {\n  return `${message.msg}-${message.type}`;\n};\n\n\n/**\n * Close the message.\n * @param {ngeox.Message} message Message.\n * @protected\n */\nexports.prototype.closeMessage_ = function(message) {\n  const uid = this.getMessageUid_(message);\n  const obj = this.messages_[uid];\n\n  // (1) No need to do anything if message doesn't exist\n  if (obj === undefined) {\n    return;\n  }\n\n  // (2) Close message (popup or alert)\n  if (obj instanceof ngeoMessagePopup) {\n    // (2.1) Close popup, if not already closed\n    if (obj.getOpen()) {\n      obj.setOpen(false);\n    }\n  } else {\n    // (2.2) Check if the message hasn't been closed using the UI, i.e. by\n    //       clicking the close button. If not, then close it.\n    if (obj.hasClass('in')) {\n      obj.alert('close');\n    }\n  }\n\n  // (3) Remove message from cache since it's closed now.\n  delete this.messages_[uid];\n};\n\n\n/**\n * @type {angular.Module}\n */\nexports.module = angular.module('ngeoDisclaimer', [\n  ngeoMessagePopup.module.name,\n]);\n\nexports.module.service('ngeoDisclaimer', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.disclaimer.component\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerBase from 'ol/layer/Base.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport gmfBase from 'gmf/index.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\nimport ngeoMessageDisclaimer from 'ngeo/message/Disclaimer.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\n\nimport 'angular-sanitize';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfDisclaimer', [\n  'ngSanitize',\n  ngeoMapLayerHelper.module.name,\n  ngeoMessageDisclaimer.module.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\n/**\n * @constructor\n * @private\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$sce} $sce Angular sce service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeox.PopupFactory} ngeoCreatePopup Popup service.\n * @param {!ngeo.message.Disclaimer} ngeoDisclaimer Ngeo Disclaimer service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo Event Helper.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisclaimerController\n */\nexports.Controller_ = function($element, $scope, $sce, $timeout,\n  gettextCatalog, ngeoCreatePopup, ngeoDisclaimer, ngeoEventHelper, ngeoLayerHelper) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.external;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.popup;\n\n  /**\n   * Visibility that is set to true when a new msg is there.\n   * @type {boolean}\n   * @export\n   */\n  this.visibility = false;\n\n  /**\n   * Trusted html messages that can be displayed as html.\n   * @type {string|undefined}\n   * @export\n   */\n  this.msg;\n\n  /**\n   * @type {!Array<string>}\n   * @export\n   */\n  this.msgs_ = [];\n\n  /**\n   * @type {!angular.$sce}\n   * @private\n   */\n  this.sce_ = $sce;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {!ngeox.PopupFactory}\n   * @private\n   */\n  this.createPopup_ = ngeoCreatePopup;\n\n  /**\n   * @type {!ngeo.message.Disclaimer}\n   * @private\n   */\n  this.disclaimer_ = ngeoDisclaimer;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.eventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.dataLayerGroup_ = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n  this.registerLayer_(this.dataLayerGroup_);\n};\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersAdd_ = function(evt) {\n  this.timeout_(() => {\n    const layer = evt.element;\n    googAsserts.assertInstanceof(layer, olLayerBase);\n    this.registerLayer_(layer);\n  });\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleLayersRemove_ = function(evt) {\n  const layer = evt.element;\n  googAsserts.assertInstanceof(layer, olLayerBase);\n  this.unregisterLayer_(layer);\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.registerLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Listen to added/removed layers to this group\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'add',\n        this.handleLayersAdd_,\n        this\n      )\n    );\n    this.eventHelper_.addListenerKey(\n      layerUid,\n      olEvents.listen(\n        layer.getLayers(),\n        'remove',\n        this.handleLayersRemove_,\n        this\n      )\n    );\n\n    // (2) Register existing layers in the group\n    layer.getLayers().forEach((layer) => {\n      this.registerLayer_(layer);\n    });\n\n  } else {\n\n    // Show disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.showDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n};\n\n\n/**\n * @param {ol.layer.Base} layer Layer.\n * @private\n */\nexports.Controller_.prototype.unregisterLayer_ = function(layer) {\n\n  const layerUid = olBase.getUid(layer);\n\n  if (layer instanceof olLayerGroup) {\n\n    // (1) Clear event listeners\n    this.eventHelper_.clearListenerKey(layerUid);\n\n    // (2) Unregister existing layers in the group\n    layer.getLayers().forEach(layer => this.unregisterLayer_(layer));\n\n  } else {\n\n    // Close disclaimer messages for this layer\n    const disclaimers = layer.get('disclaimers');\n    if (disclaimers && Array.isArray(disclaimers)) {\n      disclaimers.forEach((disclaimer) => {\n        this.closeDisclaimerMessage_(disclaimer);\n      });\n    }\n  }\n\n};\n\n\nexports.Controller_.prototype.$onDestroy = function() {\n  this.unregisterLayer_(this.dataLayerGroup_);\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.showDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    if (this.msgs_.indexOf(msg) < 0) {\n      this.msgs_.push(msg);\n    }\n    this.msg = `${this.sce_.trustAsHtml(this.msgs_.join('<br />'))}`;\n    this.visibility = true;\n  } else {\n    this.disclaimer_.alert({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * @param {string} msg Disclaimer message.\n * @private\n */\nexports.Controller_.prototype.closeDisclaimerMessage_ = function(msg) {\n  msg = this.gettextCatalog_.getString(msg);\n  if (this.external) {\n    this.visibility = false;\n    this.msgs_.length = 0;\n    this.msg = '';\n  } else {\n    this.disclaimer_.close({\n      popup: this.popup,\n      msg: msg,\n      target: this.element_,\n      type: ngeoMessageMessage.Type.WARNING\n    });\n  }\n};\n\n\n/**\n * Provide a \"disclaimer\" component for GeoMapFish that is bound to the\n * layers added and removed from a map.\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\">\n *      </gmf-disclaimer>\n *\n * You can also display the disclaimer messages in popups or use them in another\n * context. The example below show you how to display the disclaimer messages\n * in a ngeo-modal window (external case).\n *\n * Example:\n *\n *      <gmf-disclaimer\n *        gmf-disclaimer-map=\"::ctrl.map\"\n *        gmf-disclaimer-external=\"::true\"\n *        gmf-disclaimer-external-msg=\"disclaimerMsg\"\n *        gmf-disclaimer-external-visibility=\"disclaimerVisibility\">\n *      </gmf-disclaimer>\n *      <ngeo-modal ng-model=\"disclaimerVisibility\">\n *       <div class=\"modal-header\">\n *         <button type=\"button\" class=\"close\" data-dismiss=\"modal\"\n *                 aria-hidden=\"true\">&times;</button>\n *       </div>\n *       <div class=\"modal-body\">\n *         <div ng-bind-html=\"disclaimerMsg\"></div>\n *       </div>\n *     </ngeo-modal>\n *\n * @htmlAttribute {boolean} gmf-disclaimer-popup Whether to show the disclaimer\n *     messages in popups or not. Defaults to `false`.\n * @htmlAttribute {boolean?} gmf-disclaimer-external Whether to use disclaimer\n *     messages elsewhere or not. Default to `false`. If true, you should use\n *     the gmf-disclaimer-external-msg and the\n *     gmf-disclaimer-external-visibility too.\n * @htmlAttribute {boolean?} gmf-disclaimer-external-visibility variable that\n *     will be set to true if the disclaimers contain a new message. To uses it,\n *     you must set the gmf-disclaimer-external to true.\n * @htmlAttribute {string?} gmf-disclaimer-external-msg variable that will\n *     contains the disclaimer messages. To uses it, you must set the\n *     gmf-disclaimer-external to true.\n * @htmlAttribute {ol.Map=} gmf-disclaimer-map The map.\n *\n * @ngdoc component\n * @ngname gmfDisclaimer\n */\nexports.component_ = {\n  controller: exports.Controller_,\n  bindings: {\n    'popup': '<?gmfDisclaimerPopup',\n    'map': '=gmfDisclaimerMap',\n    'external': '<?gmfDisclaimerExternal',\n    'visibility': '=?gmfDisclaimerExternalVisibility',\n    'msg': '=?gmfDisclaimerExternalMsg'\n  }\n};\n\n\nexports.component('gmfDisclaimer', exports.component_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.SavedFilters\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\n\nconst exports = class {\n\n  /**\n   * The GeoMapFish service responsible of storing filters that can be applied\n   * to data sources. A filter consists of:\n   *\n   * - a condition\n   * - a list of directed rules\n   * - a list of custom rules\n   * - a data source\n   * - a name\n   *\n   * The filters are saved in the browser local storage, if available.\n   * Otherwise, they are kept in this service for the duration of the visit.\n   *\n   * @param {!angular.Scope} $rootScope Angular rootScope.\n   * @struct\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfSavedFilters\n   */\n  constructor($rootScope) {\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.rootScope_ = $rootScope;\n\n    /**\n     * This service can have a data source id bound to it, which automatically\n     * populates an array of items that are only bound to this data source.\n     * @type {?number}\n     * @private\n     */\n    this.currentDataSourceId_ = null;\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.currentDataSourceItems_ = [];\n\n    /**\n     * The used by this service to save in the local storage.\n     * @type {string}\n     * @private\n     */\n    this.localStorageKey_ = 'gmf_savedfilters';\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.useLocalStorage_ = true;\n\n    try {\n      if ('localStorage' in window) {\n        window.localStorage['test'] = '';\n        delete window.localStorage['test'];\n      } else {\n        this.useLocalStorage_ = false;\n      }\n    } catch (err) {\n      console.error(err);\n      this.useLocalStorage_ = false;\n    }\n\n    /**\n     * @type {!Array.<!gmf.filters.SavedFilters.Item>}\n     * @private\n     */\n    this.items_ = [];\n\n    this.rootScope_.$watchCollection(\n      () => this.items,\n      () => {\n        this.rePopulateCurrentDataSourceItems_();\n      }\n    );\n\n    if (this.useLocalStorage_) {\n      this.loadItemsFromLocalStorage_();\n    }\n\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get currentDataSourceItems() {\n    return this.currentDataSourceItems_;\n  }\n\n  /**\n   * @param {?number} id Current data source id.\n   * @export\n   */\n  set currentDataSourceId(id) {\n    this.currentDataSourceId_ = id;\n    this.rePopulateCurrentDataSourceItems_();\n  }\n\n  /**\n   * @return {!Array.<!gmf.filters.SavedFilters.Item>} Items\n   * @export\n   */\n  get items() {\n    return this.items_;\n  }\n\n  /**\n   * Read the filter items that are saved in the local storage and set them\n   * as this service's items.\n   * @private\n   */\n  loadItemsFromLocalStorage_() {\n    if (window.localStorage[this.localStorageKey_]) {\n      const items = JSON.parse(window.localStorage[this.localStorageKey_]);\n      googAsserts.assertArray(items);\n      this.items_ = items;\n    }\n  }\n\n  /**\n   * Search for an item using a given name and data source id. Returns the\n   * index if it exists, otherwise -1 is returned.\n   * @param {string} name Name.\n   * @param {number} id Data source id.\n   * @return {number} The index of the item, if it exists.\n   * @export\n   */\n  indexOfItem(name, id) {\n\n    let item;\n    let idx = -1;\n    for (let i = 0, ii = this.items_.length; i < ii; i++) {\n      item = this.items[i];\n      if (item.dataSourceId === id && item.name === name) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  save(item) {\n\n    // (1) Add or replace item\n    const idx = this.indexOfItem(item.name, item.dataSourceId);\n    if (idx !== -1) {\n      this.items[idx] = item;\n    } else {\n      this.items.push(item);\n    }\n\n    // (2) Update local storage\n    if (this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * @param {!gmf.filters.SavedFilters.Item} item Item.\n   * @export\n   */\n  remove(item) {\n\n    // (1) Remove the item\n    const found = olArray.remove(this.items, item);\n\n    // (2) Update local storage\n    if (found && this.useLocalStorage_) {\n      this.saveItemsInLocalStorage_();\n    }\n  }\n\n  /**\n   * Save all items in the local storage.\n   * @private\n   */\n  saveItemsInLocalStorage_() {\n    window.localStorage[this.localStorageKey_] = JSON.stringify(this.items);\n  }\n\n  /**\n   * @private\n   */\n  rePopulateCurrentDataSourceItems_() {\n    // (1) Clear existing items\n    this.currentDataSourceItems_.length = 0;\n\n    // (2) Populate\n    if (this.currentDataSourceId_ !== null) {\n      for (const item of this.items) {\n        if (item.dataSourceId === this.currentDataSourceId_) {\n          this.currentDataSourceItems_.push(item);\n        }\n      }\n    }\n  }\n\n};\n\n\nexports.module = angular.module('gmfSavedFilters', []);\n\nexports.module.service('gmfSavedFilters', exports);\n\n\n/**\n * The definition of a saved filter item.\n * @constructor\n * @struct\n * @export\n */\nexports.Item = function() {};\n\n\n/**\n * The condition of the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.condition;\n\n\n/**\n * The list of custom rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.customRules;\n\n\n/**\n * The data source id related to the filter.\n * @type {number}\n * @export\n */\nexports.Item.prototype.dataSourceId;\n\n\n/**\n * The list of directed rules of the saved filter item.\n * @type {!Array.<!ngeox.rule.AnyOptions>}\n * @export\n */\nexports.Item.prototype.directedRules;\n\n\n/**\n * A human-readable name given to the saved filter item.\n * @type {string}\n * @export\n */\nexports.Item.prototype.name;\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.ruleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMenu from 'ngeo/Menu.js';\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\n\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoRuleRule from 'ngeo/rule/Rule.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoRuleSelect from 'ngeo/rule/Select.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olGeomGeometry from 'ol/geom/Geometry.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRule', [\n  ngeoDrawComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter/rulecomponent', require('./rulecomponent.html'));\n});\n\n\nexports.value('ngeoRuleTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRuleTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter/rulecomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRuleTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRuleTemplateUrl($attrs, ngeoRuleTemplateUrl) {\n  return ngeoRuleTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.RuleController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate\n   *     manager service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoRuleController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoFeatureHelper,\n    ngeoRuleHelper, ngeoToolActivateMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * The original rule.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.rule;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.misc.FeatureHelper}\n     * @private\n     */\n    this.ngeoFeatureHelper_ = ngeoFeatureHelper;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n    /**\n     * @type {!ngeo.misc.ToolActivateMgr}\n     * @private\n     */\n    this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n\n    // Inner properties\n\n    /**\n     * The cloned rule. Changes in the UI are applied to the clone 'on-the-fly'.\n     * Changes in the clone are applied back in the original rule when the\n     * apply button is clicked.\n     * @type {!ngeo.rule.Rule}\n     * @export\n     */\n    this.clone;\n\n    const operatorType = ngeoRuleRule.OperatorType;\n    const spatialOperatorType = ngeoRuleRule.SpatialOperatorType;\n    const temporalOperatorType = ngeoRuleRule.TemporalOperatorType;\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operators = {\n      [operatorType.EQUAL_TO]: gettextCatalog.getString('Is equal to'),\n      [operatorType.GREATER_THAN]: gettextCatalog.getString('Is greater than'),\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is greater than or equal to'),\n      [operatorType.LESSER_THAN]: gettextCatalog.getString('Is lesser than'),\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: gettextCatalog.getString(\n        'Is lesser than or equal to'),\n      [operatorType.NOT_EQUAL_TO]: gettextCatalog.getString('Is not equal to'),\n      [operatorType.LIKE]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.CONTAINS]: gettextCatalog.getString('Contains'),\n      [spatialOperatorType.INTERSECTS]: gettextCatalog.getString('Intersects'),\n      [spatialOperatorType.WITHIN]: gettextCatalog.getString('Is inside of'),\n      [temporalOperatorType.BEGINS]: gettextCatalog.getString('Begins at'),\n      [temporalOperatorType.DURING]: gettextCatalog.getString('During'),\n      [temporalOperatorType.ENDS]: gettextCatalog.getString('Ends at'),\n      [temporalOperatorType.EQUALS]: gettextCatalog.getString('Is equal to')\n    };\n\n    /**\n     * @type {Object.<string, string>}\n     * @export\n     */\n    this.operatorsShortFormat = {\n      [operatorType.EQUAL_TO]: '=',\n      [operatorType.GREATER_THAN]: '>',\n      [operatorType.GREATER_THAN_OR_EQUAL_TO]: '>=',\n      [operatorType.LESSER_THAN]: '<',\n      [operatorType.LESSER_THAN_OR_EQUAL_TO]: '<=',\n      [operatorType.NOT_EQUAL_TO]: '!=',\n      [operatorType.LIKE]: '~',\n      [temporalOperatorType.BEGINS]: '>=',\n      [temporalOperatorType.ENDS]: '<=',\n      [temporalOperatorType.EQUALS]: '='\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a range of date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeRangeMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createWeekAgoDate_(),\n      mode: 'range',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * Time property used when the rule is of type 'date|datetime' and uses\n     * a single date.\n     * @type {!ngeox.TimeProperty}\n     * @export\n     */\n    this.timeValueMode = {\n      widget: 'datepicker',\n      maxValue: null,\n      minValue: null,\n      maxDefValue: this.createDate_(),\n      minDefValue: this.createDate_(),\n      mode: 'value',\n      interval: [0, 1, 0, 0]\n    };\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @private\n     */\n    this.toolActivate_;// = new ngeo.misc.ToolActivate(this.rule, 'active');\n\n    /**\n     * @type {!Array.<Function>}\n     * @private\n     */\n    this.unlisteners_ = [];\n\n\n    // Inner properties when dealing with a `ngeo.rule.Geometry`\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.drawActive = false;\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.drawnFeatures = new olCollection();\n\n    /**\n     * @type {?ngeo.Menu}\n     * @private\n     */\n    this.menu_ = null;\n\n    /**\n     * @type {!ol.Collection.<!ol.Feature>}\n     * @export\n     */\n    this.selectedFeatures = new olCollection();\n\n    /**\n     * @type {!ol.Collection.<!ol.interaction.Interaction>}\n     * @private\n     */\n    this.interactions_ = new olCollection();\n\n    /**\n     * @type {!ngeo.interaction.Modify}\n     * @private\n     */\n    this.modify_ = new ngeoInteractionModify({\n      features: this.selectedFeatures,\n      style: ngeoFeatureHelper.getVertexStyle(false)\n    });\n    this.interactions_.push(this.modify_);\n\n    /**\n     * @type {ngeo.interaction.Rotate}\n     * @private\n     */\n    this.rotate_ = new ngeoInteractionRotate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf01e',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.rotate_);\n\n    /**\n     * @type {ngeo.interaction.Translate}\n     * @private\n     */\n    this.translate_ = new ngeoInteractionTranslate({\n      features: this.selectedFeatures,\n      style: new olStyleStyle({\n        text: new olStyleText({\n          text: '\\uf047',\n          font: 'normal 18px FontAwesome',\n          fill: new olStyleFill({\n            color: '#7a7a7a'\n          })\n        })\n      })\n    });\n    this.interactions_.push(this.translate_);\n\n    /**\n     * @type {!Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    this.initializeInteractions_();\n\n    /**\n     * @type {!ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.modifyToolActivate = new ngeoMiscToolActivate(\n      this.modify_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.rotateToolActivate = new ngeoMiscToolActivate(\n      this.rotate_,\n      'active'\n    );\n\n    /**\n     * @type {ngeo.misc.ToolActivate}\n     * @export\n     */\n    this.translateToolActivate = new ngeoMiscToolActivate(\n      this.translate_,\n      'active'\n    );\n\n    /**\n     * The geometry type used by the clone feature.\n     * @type {?string}\n     * @export\n     */\n    this.geomType = null;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Clone the rule to be able to work with the clone directly.\n   */\n  $onInit() {\n    this.clone = this.ngeoRuleHelper_.cloneRule(this.rule);\n\n    this.toolActivate_ = new ngeoMiscToolActivate(this.rule, 'active');\n\n    this.ngeoToolActivateMgr_.registerTool(\n      this.toolGroup, this.toolActivate_);\n\n    this.scope_.$watch(\n      () => this.rule.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    // If the rule is a DATE or DATETIME, then a datepicker directive is used.\n    // It is not possible to set the current values to the datepicker, but you\n    // can set the initial values. This is why it is created when the rule\n    // becomes active (see the partials/rule.html).\n    //\n    // This chunk of code ensures that the rule properties are synchronized\n    // with the TimeProperty objects required to build the datepickers.\n    if (this.clone.type === ngeoFormatAttributeType.DATE ||\n        this.clone.type === ngeoFormatAttributeType.DATETIME\n    ) {\n      // Watch 'expression'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.getExpression(),\n        (newVal) => {\n          this.timeValueMode.minDefValue = newVal || this.createDate_();\n        }\n      ));\n      // Watch 'lowerBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.lowerBoundary,\n        (newVal) => {\n          this.timeRangeMode.minDefValue = newVal || this.createWeekAgoDate_();\n        }\n      ));\n      // Watch 'upperBoundary'\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.upperBoundary,\n        (newVal) => {\n          this.timeRangeMode.maxDefValue = newVal || this.createDate_();\n        }\n      ));\n    } else if (this.clone.type === ngeoFormatAttributeType.GEOMETRY) {\n\n      // Watch 'operator' of clone. Make sure any existing geometry is\n      // supported by the newly selected operator. If it doesn't, reset\n      // the expression, i.e. geometry.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.operator,\n        (newVal) => {\n          if (newVal &&\n              newVal === ngeoRuleRule.SpatialOperatorType.CONTAINS\n          ) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            const geometry = clone.feature.getGeometry();\n            if (geometry) {\n              const geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n              const supportedTypes = [\n                ngeoGeometryType.CIRCLE,\n                ngeoGeometryType.POLYGON,\n                ngeoGeometryType.RECTANGLE\n              ];\n              if (!olArray.includes(supportedTypes, geomType)) {\n                this.clone.setExpression(null);\n              }\n            }\n          }\n        }\n      ));\n\n      // Watch 'expression' of clone. Set 'geomType' property accordingly.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => this.clone.expression,\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.geomType = this.ngeoFeatureHelper_.getType(clone.feature);\n          } else {\n            this.geomType = null;\n          }\n        }\n      ));\n\n      // Watch both 'expression', 'active' and the modify control to be all\n      // thruthy. When that's the case, the clone feature is added to the\n      // selection collection.\n      this.unlisteners_.push(this.scope_.$watch(\n        () => {\n          const hasExpression = this.clone.getExpression() !== null;\n          const isActive = this.rule.active === true;\n          const editToolIsActive = this.modify_.getActive() ||\n                this.rotate_.getActive() ||\n                this.translate_.getActive();\n          return hasExpression && isActive && editToolIsActive;\n        },\n        (newVal) => {\n          if (newVal) {\n            const clone = googAsserts.assertInstanceof(\n              this.clone, ngeoRuleGeometry);\n            this.selectedFeatures.push(clone.feature);\n          } else {\n            this.selectedFeatures.clear();\n          }\n        }\n      ));\n    }\n  }\n\n  /**\n   * Called on destruction of the controller.\n   */\n  $onDestroy() {\n    if (this.rule.active) {\n      this.rule.active = false;\n      // in $onDestroy, setting active to false will not call the handler. Call\n      // it manually to let it do its magic\n      this.handleActiveChange_(false, true);\n    }\n    this.ngeoToolActivateMgr_.unregisterTool(\n      this.toolGroup, this.toolActivate_);\n    for (let i = 0, ii = this.unlisteners_.length; i < ii; i++) {\n      this.unlisteners_[i]();\n    }\n    this.unlisteners_.length = 0;\n    this.clone.destroy();\n  }\n\n  /**\n   * @export\n   */\n  toggle() {\n    if (this.rule.active) {\n      this.cancel();\n    } else {\n      this.rule.active = true;\n    }\n  }\n\n  /**\n   * Apply the changes that were made in the original rule.\n   * @export\n   */\n  apply() {\n    this.ngeoRuleHelper_.extendRule(this.clone, this.rule);\n    this.rule.active = false;\n  }\n\n  /**\n   * Revert the changes that were made in the clone rule.\n   * @export\n   */\n  cancel() {\n    this.ngeoRuleHelper_.extendRule(this.rule, this.clone);\n    this.rule.active = false;\n  }\n\n  /**\n   * Reset both original and clone rules.\n   * @export\n   */\n  reset() {\n    this.clone.reset();\n    this.rule.reset();\n  }\n\n  /**\n   * Called when a choice is clicked, when using a `ngeo.rule.Select` rule type.\n   * Add/remove the choice to/from the `expression` of the rule.\n   * @param {string|number} choice Choice that has been clicked.\n   * @export\n   */\n  toggleChoiceSelection(choice) {\n    const rule = googAsserts.assertInstanceof(this.clone, ngeoRuleSelect);\n    const choices = rule.getExpression() ? rule.getExpression().split(',') : [];\n    const idx = choices.indexOf(choice);\n    if (idx > -1) {\n      choices.splice(idx, 1);\n    } else {\n      choices.push(choice);\n    }\n    rule.setExpression(choices.length ? choices.join(',') : null);\n  }\n\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateSelected(date) {\n    this.clone.setExpression(date['start']);\n  }\n\n  /**\n   * @param {Object} date Date\n   * @export\n   */\n  onDateRangeSelected(date) {\n    this.clone.lowerBoundary = date['start'];\n    this.clone.upperBoundary = date['end'];\n  }\n\n  /**\n   * @param {number=} opt_timeDelta Time delta to go back in the past.\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createDate_(opt_timeDelta) {\n\n    const date = new Date();\n\n    if (opt_timeDelta !== undefined) {\n      const time = date.getTime() - opt_timeDelta;\n      date.setTime(time);\n    }\n\n    return date.toISOString();\n  }\n\n  /**\n   * @return {string} ISO string of the date\n   * @private\n   */\n  createWeekAgoDate_() {\n    return this.createDate_(1000 * 60 * 60 * 24 * 7); // A week ago date\n  }\n\n  /**\n   * @param {number} time Time.\n   * @return {string} Date\n   * @export\n   */\n  timeToDate(time) {\n    const date = new Date(time);\n    return date.toLocaleDateString();\n  }\n\n\n  // === Methods used when bound to a `ngeo.rule.Geometry`\n\n\n  /**\n   * Called when the active property of a rule changes. Only used when this\n   * component is bound to a geometry rule.\n   *\n   * Manage the activation/deactivation of the interactions.\n   *\n   * @param {boolean} active Whether the rule is active or not.\n   * @param {boolean} oldActive Whether the rule was active or not.\n   * @private\n   */\n  handleActiveChange_(active, oldActive) {\n\n    if (!(this.rule instanceof ngeoRuleGeometry) ||\n        !(this.clone instanceof ngeoRuleGeometry) ||\n        active === oldActive\n    ) {\n      return;\n    }\n\n    const keys = this.listenerKeys_;\n    const uid = ['ngeo-rule-', olBase.getUid(this)].join('-');\n    const toolMgr = this.ngeoToolActivateMgr_;\n\n    const ruleFeature = this.rule.feature;\n    const cloneFeature = this.clone.feature;\n\n    const mapDiv = this.map.getViewport();\n    googAsserts.assertElement(mapDiv);\n\n    if (active) {\n      keys.push(\n        olEvents.listen(\n          this.drawnFeatures,\n          'add',\n          this.handleFeaturesAdd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          mapDiv,\n          'contextmenu',\n          this.handleMapContextMenu_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.translate_,\n          'translateend',\n          this.handleTranslateEnd_,\n          this\n        )\n      );\n\n      keys.push(\n        olEvents.listen(\n          this.rotate_,\n          'rotateend',\n          this.handleRotateEnd_,\n          this\n        )\n      );\n\n      this.featureOverlay.removeFeature(ruleFeature);\n      this.featureOverlay.addFeature(cloneFeature);\n\n      this.registerInteractions_();\n\n      toolMgr.registerTool(uid, this.drawToolActivate, false);\n      toolMgr.registerTool(uid, this.modifyToolActivate, true);\n      toolMgr.registerTool(uid, this.rotateToolActivate, false);\n      toolMgr.registerTool(uid, this.translateToolActivate, false);\n\n      this.modify_.setActive(true);\n\n      if (cloneFeature.getGeometry()) {\n        this.ngeoFeatureHelper_.setStyle(cloneFeature, true);\n      }\n\n    } else {\n      cloneFeature.setStyle(null);\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      this.drawActive = false;\n\n      toolMgr.unregisterTool(uid, this.drawToolActivate);\n      toolMgr.unregisterTool(uid, this.modifyToolActivate);\n      toolMgr.unregisterTool(uid, this.rotateToolActivate);\n      toolMgr.unregisterTool(uid, this.translateToolActivate);\n\n      this.modify_.setActive(false);\n\n      this.unregisterInteractions_();\n\n      if (this.selectedFeatures.getLength()) {\n        this.featureOverlay.removeFeature(cloneFeature);\n      }\n      this.featureOverlay.addFeature(ruleFeature);\n\n      this.selectedFeatures.clear();\n    }\n  }\n\n  /**\n   * Initialize interactions by setting them inactive and decorating them\n   * @private\n   */\n  initializeInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      interaction.setActive(false);\n      ngeoMiscDecorate.interaction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by adding them to the map\n   * @private\n   */\n  registerInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.addInteraction(interaction);\n    });\n  }\n\n  /**\n   * Register interactions by removing them to the map\n   * @private\n   */\n  unregisterInteractions_() {\n    this.interactions_.forEach((interaction) => {\n      this.map.removeInteraction(interaction);\n    });\n  }\n\n  /**\n   * @param {ol.Collection.Event} evt Event.\n   * @private\n   */\n  handleFeaturesAdd_(evt) {\n    // timeout to prevent double-click to zoom the map\n    this.timeout_(() => {\n\n      const clone = googAsserts.assertInstanceof(\n        this.clone, ngeoRuleGeometry);\n      const feature = clone.feature;\n\n      // (1) Apply geometry\n      const drawnFeature = googAsserts.assertInstanceof(\n        evt.element,\n        olFeature\n      );\n      const geometry = googAsserts.assertInstanceof(\n        drawnFeature.getGeometry(),\n        olGeomGeometry\n      );\n      clone.geometry = geometry;\n\n      // (2) Deactivate draw tools\n      this.drawActive = false;\n\n      // (3) Set properties, then style\n      const properties = this.ngeoFeatureHelper_.getNonSpatialProperties(\n        drawnFeature);\n      this.ngeoFeatureHelper_.clearNonSpatialProperties(feature);\n      feature.setProperties(properties);\n      this.ngeoFeatureHelper_.setStyle(feature, true);\n\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Return the type of geometry used by the rule feature. Used in the template.\n   * @return {string} Geometry type.\n   * @export\n   */\n  getRuleGeometryType() {\n    const rule = googAsserts.assertInstanceof(this.rule, ngeoRuleGeometry);\n    return this.ngeoFeatureHelper_.getType(rule.feature);\n  }\n\n  /**\n   * @param {Event} evt Event.\n   * @private\n   */\n  handleMapContextMenu_(evt) {\n\n    // (1) Remove previous menu, if any\n    this.removeMenu_();\n\n    // (2) Get feature at pixel\n    const pixel = this.map.getEventPixel(evt);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n    let feature = this.map.forEachFeatureAtPixel(\n      pixel,\n      (feature) => {\n        let ret = false;\n        if (olArray.includes(this.selectedFeatures.getArray(), feature)) {\n          ret = feature;\n        }\n        return ret;\n      }\n    );\n\n    feature = feature ? feature : null;\n\n    // (3) If the clicked feature is the selected one, plus if it has a certain\n    //     type of geometry, then show the menu\n    const actions = [];\n    if (feature) {\n\n      const type = this.ngeoFeatureHelper_.getType(feature);\n      const  gettextCatalog = this.gettextCatalog_;\n\n      if (type == ngeoGeometryType.CIRCLE ||\n          type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-arrows',\n          label: gettextCatalog.getString('Move'),\n          name: 'move'\n        });\n      }\n      if (type == ngeoGeometryType.LINE_STRING ||\n          type == ngeoGeometryType.POLYGON ||\n          type == ngeoGeometryType.RECTANGLE) {\n        actions.push({\n          cls: 'fa fa-rotate-right',\n          label: gettextCatalog.getString('Rotate'),\n          name: 'rotate'\n        });\n      }\n    }\n\n    if (actions.length) {\n      // (4) Create and show menu\n      this.menu_ = new ngeoMenu({\n        actions\n      });\n\n      olEvents.listen(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.addOverlay(this.menu_);\n\n      this.menu_.open(coordinate);\n\n      evt.preventDefault();\n      evt.stopPropagation();\n\n      this.scope_.$apply();\n    }\n  }\n\n  /**\n   * Remove contextual menu, if any.\n   * @private\n   */\n  removeMenu_() {\n    if (this.menu_) {\n      olEvents.unlisten(\n        this.menu_,\n        'actionclick',\n        this.handleMenuActionClick_,\n        this\n      );\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n  /**\n   * @param {ngeox.MenuEvent} evt Event.\n   * @private\n   */\n  handleMenuActionClick_(evt) {\n    const action = evt.detail.action;\n\n    switch (action) {\n      case 'move':\n        this.translate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      case 'rotate':\n        this.rotate_.setActive(true);\n        this.scope_.$apply();\n        break;\n      default:\n        console.log(`FIXME - support: ${action}`);\n        break;\n    }\n  }\n\n  /**\n   * @param {ngeox.RotateEvent} evt Event.\n   * @private\n   */\n  handleRotateEnd_(evt) {\n    this.rotate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n  /**\n   * @param {ol.interaction.Translate.Event} evt Event.\n   * @private\n   */\n  handleTranslateEnd_(evt) {\n    this.translate_.setActive(false);\n    this.scope_.$apply();\n  }\n\n};\n\n\n/**\n * The rule component is bound to a `ngeo.rule.Rule` object and shows UI\n * components to be able to edit its properties, such as: operator, expression,\n * etc. The actual properties depend on the type of rule.\n *\n * Also, changes are not made on-the-fly. A button must be clicked for the\n * changes to be applied to the rule.\n */\nexports.component('ngeoRule', {\n  bindings: {\n    'featureOverlay': '<',\n    'map': '<',\n    'rule': '<',\n    'toolGroup': '<'\n  },\n  controller: exports.RuleController_,\n  templateUrl: ngeoRuleTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.filter.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoFilterCondition from 'ngeo/filter/Condition.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleComponent from 'ngeo/filter/ruleComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\nimport ngeoRuleGeometry from 'ngeo/rule/Geometry.js';\nimport ngeoMapFeatureOverlay from 'ngeo/map/FeatureOverlay.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport 'font-awesome/css/font-awesome.css';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilter', [\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterRuleComponent.name,\n  ngeoMapFeatureOverlay.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/filter', require('./component.html'));\n});\n\n\nexports.value('ngeoFilterTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoFilterTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/filter';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoFilterTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoFilterTemplateUrl($attrs, ngeoFilterTemplateUrl) {\n  return ngeoFilterTemplateUrl($attrs);\n}\n\n\nexports.component('ngeoFilter', {\n  bindings: {\n    'aRuleIsActive': '=',\n    'customRules': '<',\n    // It's 'datasource' instead of 'dataSource', because that would require\n    // the attribute to be 'data-source', and Angular strips the 'data-'.\n    'datasource': '<',\n    'directedRules': '<',\n    'featureOverlay': '<',\n    'map': '<',\n    'toolGroup': '<'\n  },\n  controller: 'ngeoFilterController',\n  templateUrl: ngeoFilterTemplateUrl\n});\n\n/**\n * @private\n */\nexports.FilterController_ = class {\n\n  /**\n   * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoFilterController\n   */\n  constructor(gettextCatalog, $scope, $timeout, ngeoMapQuerent,\n    ngeoRuleHelper) {\n\n    // === Binding properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules;\n\n    /**\n     * @type {!ngeo.datasource.OGC}\n     * @export\n     */\n    this.datasource;\n\n    /**\n     * @type {Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // === Injected properties ===\n\n    /**\n     * @type {!angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!ngeo.query.MapQuerent}\n     * @private\n     */\n    this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // === Inner properties ===\n\n    /**\n     * @type {Array.<!ngeox.FilterCondition>}\n     * @export\n     */\n    this.conditions = [\n      {\n        text: gettextCatalog.getString('All'),\n        value: ngeoFilterCondition.AND\n      },\n      {\n        text: gettextCatalog.getString('At least one'),\n        value: ngeoFilterCondition.OR\n      },\n      {\n        text: gettextCatalog.getString('None'),\n        value: ngeoFilterCondition.NOT\n      }\n    ];\n\n    /**\n     * List of geometry attributes.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.geometryAttributes = [];\n\n    /**\n     * List of other attribute names.\n     * @type {Array.<!ngeox.Attribute>}\n     * @export\n     */\n    this.otherAttributes = [];\n\n    /**\n     * @type {!Object.<number, Function>}\n     * @private\n     */\n    this.ruleUnlisteners_ = {};\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   *\n   * Loop through the attributes of the data source and separated them in 2\n   * lists: geometry and the others. Then, apply the filters to the data source.\n   */\n  $onInit() {\n\n    this.scope_.$watch(\n      () => this.aRuleIsActive,\n      this.handleARuleIsActiveChange_.bind(this)\n    );\n\n    // (1) Separate the attributes in 2: geometry and the others.\n    const attributes = googAsserts.assert(this.datasource.attributes);\n    for (const attribute of attributes) {\n      if (attribute.type === ngeoFormatAttributeType.GEOMETRY) {\n        this.geometryAttributes.push(attribute);\n      } else {\n        this.otherAttributes.push(attribute);\n      }\n    }\n\n    // (2) All rules that have geometry are added in the featureOverlay\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      this.registerRule_(rule);\n    }\n\n    // (3) Apply the filters\n    this.apply();\n  }\n\n\n  /**\n   * Called on destruction of the controller.\n   *\n   * Reset the `filterRules` of the data source back to `null`.\n   * Clear the feature overlay.\n   */\n  $onDestroy() {\n    if (this.datasource.filterRules !== null) {\n      this.datasource.filterRules = null;\n    }\n    this.featureOverlay.clear();\n  }\n\n\n  /**\n   * @return {boolean} True if at least one rule is currently defined.\n   * @export\n   */\n  hasARule() {\n    return [].concat(this.customRules, this.directedRules).length > 0;\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Apply the rules that have a proper\n   * value inside the data source, in the `filterRules` property.\n   * @export\n   */\n  apply() {\n    // (1) Reset\n    this.datasource.filterRules = null;\n\n    // (2) Then set if there are filter rules with value.\n    this.timeout_(() => {\n      const filterRules = this.getRulesWithValue_();\n      if (filterRules.length) {\n        this.datasource.filterRules = filterRules;\n        // The current query results are cleared when we apply a filter.\n        this.ngeoMapQuerent_.clear();\n      }\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules. Issue a request to obtain the data\n   * and show the result.\n   * @export\n   */\n  getData() {\n    const filterRules = this.getRulesWithValue_();\n\n    // No need to do anything if there's no rules.\n    if (!filterRules.length) {\n      return;\n    }\n\n    const dataSource = this.datasource;\n    const limit = 1000;\n    const map = this.map;\n    const projCode = map.getView().getProjection().getCode();\n    const filter = this.ngeoRuleHelper_.createFilter({\n      dataSource: dataSource,\n      filterRules: filterRules,\n      srsName: projCode\n    });\n    googAsserts.assert(filter);\n\n    this.ngeoMapQuerent_.issue({\n      dataSources: [dataSource],\n      filter: filter,\n      limit: limit,\n      map: map\n    });\n  }\n\n\n  /**\n   * Loop in all directed and custom rules and collect those with a value.\n   * @return {Array.<!ngeo.rule.Rule>} Rules with value.\n   * @private\n   */\n  getRulesWithValue_() {\n    const filterRules = [];\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.value) {\n        filterRules.push(rule);\n      }\n    }\n    return filterRules;\n  }\n\n\n  /**\n   * Create and add a new custom rule using an attribute. The rule is activated\n   * after being created.\n   * @param {!ngeox.Attribute} attribute Attribute to use to create the custom\n   * rule.\n   * @export\n   */\n  createAndAddCustomRule(attribute) {\n    const rule = this.ngeoRuleHelper_.createRuleFromAttribute(attribute, true);\n    this.registerRule_(rule);\n    this.customRules.push(rule);\n\n    // Activate asynchronously allows the toolActivate manager to do its magic,\n    this.timeout_(() => {\n      rule.active = true;\n    }, 1);\n  }\n\n\n  /**\n   * @param {!ngeox.FilterCondition} condition Condition to set.\n   * @export\n   */\n  setCondition(condition) {\n    if (this.datasource.filterCondition !== condition.value) {\n      this.datasource.filterCondition = condition.value;\n    }\n  }\n\n  /**\n   * Remove a custom rule. Deactivate it first, then give time to the\n   * `ngeo-rule` directive to manage the deactivation of the rule.\n   * @param {!ngeo.rule.Rule} rule Custom rule to remove.\n   * @export\n   */\n  removeCustomRule(rule) {\n    rule.active = false;\n    this.timeout_(() => {\n      olArray.remove(this.customRules, rule);\n      this.unregisterRule_(rule);\n      rule.destroy();\n    });\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  registerRule_(rule) {\n    const uid = olBase.getUid(rule);\n    this.ruleUnlisteners_[uid] = this.scope_.$watch(\n      () => rule.active,\n      this.handleRuleActiveChange_.bind(this)\n    );\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.addFeature(rule.feature);\n    }\n  }\n\n  /**\n   * @param {!ngeo.rule.Rule} rule Rule.\n   * @export\n   */\n  unregisterRule_(rule) {\n    const uid = olBase.getUid(rule);\n    const unlistener = this.ruleUnlisteners_[uid];\n    googAsserts.assert(unlistener);\n    unlistener();\n    delete this.ruleUnlisteners_[uid];\n\n    if (rule instanceof ngeoRuleGeometry) {\n      this.featureOverlay.removeFeature(rule.feature);\n    }\n  }\n\n  /**\n   * Called when the active property of a rule changes. Set the `aRuleIsActive`\n   * property accordingly.\n   * @private\n   */\n  handleRuleActiveChange_() {\n    let aRuleIsActive = false;\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        aRuleIsActive = true;\n        break;\n      }\n    }\n    this.aRuleIsActive = aRuleIsActive;\n  }\n\n  /**\n   * Called when the `aRuleIsActive` property changes. Make sure that\n   * no rule is still active if the property is `false`.\n   * @private\n   */\n  handleARuleIsActiveChange_() {\n    if (this.aRuleIsActive) {\n      return;\n    }\n    const rules = [].concat(this.customRules, this.directedRules);\n    for (const rule of rules) {\n      if (rule.active) {\n        rule.active = false;\n        break;\n      }\n    }\n  }\n\n};\n\nexports.controller('ngeoFilterController', exports.FilterController_);\n\n\nexport default exports;\n","/**\n * @module gmf.filters.filterselectorComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceHelper from 'gmf/datasource/Helper.js';\n\nimport gmfDatasourceOGC from 'gmf/datasource/OGC.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessageModalComponent from 'ngeo/message/modalComponent.js';\n\nimport ngeoMessageNotification from 'ngeo/message/Notification.js';\nimport ngeoMessageMessage from 'ngeo/message/Message.js';\n\n/** @suppress {extraRequire} */\nimport ngeoFilterRuleHelper from 'ngeo/filter/RuleHelper.js';\n\nimport ngeoFilterComponent from 'ngeo/filter/component.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olArray from 'ol/array.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\nconst exports = angular.module('gmfFilterselector', [\n  gmfAuthenticationService.module.name,\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessageNotification.module.name,\n  ngeoMessageModalComponent.name,\n  ngeoFilterRuleHelper.module.name,\n  ngeoFilterComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/filters/filterselectorcomponent', require('./filterselectorcomponent.html'));\n});\n\nexports.value('gmfFilterselectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfFilterselectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/filters/filterselectorcomponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfFilterselectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfFilterselectorTemplateUrl($attrs, gmfFilterselectorTemplateUrl) {\n  return gmfFilterselectorTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n   *     The Gmf value service that determines the data source currently being\n   *     filtered.\n   * @param {gmf.datasource.Helper} gmfDataSourcesHelper Gmf data\n   *     sources helper service.\n   * @param {gmf.filters.SavedFilters} gmfSavedFilters Gmf saved filters service.\n   * @param {gmfx.User} gmfUser User.\n   * @param {ngeo.message.Notification} ngeoNotification Ngeo notification service.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager\n   * @param {!ngeo.filter.RuleHelper} ngeoRuleHelper Ngeo rule helper service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfFilterselectorController\n   */\n  constructor($scope, $timeout, gettextCatalog, gmfDataSourceBeingFiltered,\n    gmfDataSourcesHelper, gmfSavedFilters, gmfUser, ngeoNotification,\n    ngeoFeatureOverlayMgr, ngeoRuleHelper\n  ) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.toolGroup;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * The data source that can either be selected from the list or have\n     * its value set from an external source (for example: the layertree)\n     * and that requires to be ready before it can be filtered.\n     * @type {gmfx.datasource.DataSourceBeingFiltered}\n     * @export\n     */\n    this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n    $scope.$watch(\n      () => this.gmfDataSourceBeingFiltered.dataSource,\n      this.handleSelectedDataSourceChange_.bind(this)\n    );\n\n    /**\n     * @type {gmf.datasource.Helper}\n     * @private\n     */\n    this.gmfDataSourcesHelper_ = gmfDataSourcesHelper;\n\n    /**\n     * @type {gmf.filters.SavedFilters}\n     * @export\n     */\n    this.gmfSavedFilters = gmfSavedFilters;\n\n    // Close manage modal if the last item is removed.\n    $scope.$watchCollection(\n      () => this.gmfSavedFilters.currentDataSourceItems,\n      () => {\n        if (this.gmfSavedFilters.currentDataSourceItems.length === 0 &&\n           this.saveFilterManageModalShown) {\n          this.saveFilterManageModalShown = false;\n        }\n      }\n    );\n\n    /**\n     * @type {gmfx.User}\n     * @private\n     */\n    this.gmfUser_ = gmfUser;\n\n    $scope.$watch(\n      () => this.gmfUser_.functionalities,\n      this.handleGmfUserFunctionalitiesChange_.bind(this)\n    );\n\n    /**\n     * @type {ngeo.message.Notification}\n     * @private\n     */\n    this.ngeoNotification_ = ngeoNotification;\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @export\n     */\n    this.featureOverlay = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {!ngeo.filter.RuleHelper}\n     * @private\n     */\n    this.ngeoRuleHelper_ = ngeoRuleHelper;\n\n\n    // Inner properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.aRuleIsActive = false;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.customRules = null;\n\n    /**\n     * @type {?Array.<!ngeo.rule.Rule>}\n     * @export\n     */\n    this.directedRules = null;\n\n    /**\n     * @type {Array.<gmf.datasource.OGC>}\n     * @export\n     */\n    this.filtrableDataSources = [];\n\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n    this.filtrableLayerNodeNames_ = null;\n\n    /**\n     * @type {gmfx.datasource.DataSources}\n     * @private\n     */\n    this.gmfDataSources_ = gmfDataSourcesHelper.collection;\n\n    /**\n     * @type {Array.<ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The data source ready to be filtered, after it has been selected and\n     * prepared.\n     * @type {?gmf.datasource.OGC}\n     * @export\n     */\n    this.readyDataSource = null;\n\n    /**\n     * @type {!gmf.filters.filterselectorComponent.Controller_.RuleCache}\n     * @private\n     */\n    this.ruleCache_ = {};\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterSaveModalShown = false;\n\n    // When the modal closes, reset name\n    $scope.$watch(\n      () => this.saveFilterSaveModalShown,\n      () => {\n        this.saveFilterName = '';\n      }\n    );\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.saveFilterName = '';\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.saveFilterManageModalShown = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableDataSourceRegistration_ = false;\n\n    $scope.$watch(\n      () => this.enableDataSourceRegistration_,\n      this.handleEnableDataSourceRegistrationChange_.bind(this)\n    );\n\n    /**\n     * The name of the data source that should be automatically selected\n     * by this component.\n     * @type {string|undefined}\n     * @private\n     */\n    this.defaultFiltrableDataSourceName_;\n\n    // Initialize the data sources registration\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  handleGmfUserFunctionalitiesChange_() {\n    const usrFunc = this.gmfUser_.functionalities;\n    if (usrFunc && usrFunc['filterable_layers']) {\n      this.filtrableLayerNodeNames_ = usrFunc['filterable_layers'];\n    } else {\n      this.filtrableLayerNodeNames_ = null;\n    }\n    if (usrFunc &&\n        usrFunc['preset_layer_filter'] &&\n        usrFunc['preset_layer_filter'][0]\n    ) {\n      this.defaultFiltrableDataSourceName_ = usrFunc['preset_layer_filter'][0];\n    } else {\n      this.defaultFiltrableDataSourceName_ = undefined;\n    }\n    this.toggleDataSourceRegistration_();\n  }\n\n\n  /**\n   * @private\n   */\n  toggleDataSourceRegistration_() {\n    const newDataSourceRegistration = !!this.filtrableLayerNodeNames_;\n    if (this.enableDataSourceRegistration_ !== newDataSourceRegistration) {\n      this.enableDataSourceRegistration_ = newDataSourceRegistration;\n    }\n  }\n\n\n  /**\n   * Called when the active property changes. Toggle data source registration.\n   * Also, when deactivated, deselect data source.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n    if (!active) {\n      this.aRuleIsActive = false;\n      this.timeout_(() => {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      });\n    }\n  }\n\n\n  /**\n   * @param {boolean} register Whether register the data sources or not.\n   * @private\n   */\n  handleEnableDataSourceRegistrationChange_(register) {\n    const keys = this.listenerKeys_;\n\n    if (register) {\n      // Listen to data sources being added/removed\n      keys.push(\n        olEvents.listen(this.gmfDataSources_, 'add', this.handleDataSourcesAdd_, this),\n        olEvents.listen(this.gmfDataSources_, 'remove', this.handleDataSourcesRemove_, this)\n      );\n\n      // Manage the data sources that are already in the collection\n      this.gmfDataSources_.forEach(this.registerDataSource_.bind(this));\n\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n\n      // Remove data sources that are in the collection\n      this.filtrableDataSources.length = 0;\n    }\n  }\n\n\n  /**\n   * Called when a data source is added to the collection of ngeo data sources.\n   * If the data source is 'valid', add it to the list of filtrable data\n   * sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesAdd_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.registerDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Called when a data source is removed from the collection of ngeo data\n   * sources. If the data source is 'valid', remove it from the list of\n   * filtrable data sources.\n   *\n   * @param {ol.Collection.Event} evt Collection event.\n   * @private\n   */\n  handleDataSourcesRemove_(evt) {\n    const dataSource = evt.element;\n    if (dataSource instanceof gmfDatasourceOGC) {\n      this.unregisterDataSource_(dataSource);\n    }\n  }\n\n\n  /**\n   * Register a data source if filtrable.  If it's the first time that the\n   * data source is about to be registered, then the `filtrable` property\n   * is set. Otherwise, it's used.\n   *\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  registerDataSource_(dataSource) {\n    if (dataSource.filtrable === null) {\n      dataSource.filtrable = this.isDataSourceFiltrable_(dataSource);\n    }\n\n    if (dataSource.filtrable) {\n      this.filtrableDataSources.push(dataSource);\n\n      if (this.defaultFiltrableDataSourceName_ !== undefined &&\n          dataSource.name === this.defaultFiltrableDataSourceName_\n      ) {\n        this.gmfDataSourceBeingFiltered.dataSource = dataSource;\n      }\n    }\n  }\n\n\n  /**\n   * Unregister a data source if it's filtrable. Also, if it's the one\n   * that was currently selected, deselect it.\n   * @param {gmf.datasource.OGC} dataSource Data source\n   * @private\n   */\n  unregisterDataSource_(dataSource) {\n    if (dataSource.filtrable) {\n      olArray.remove(this.filtrableDataSources, dataSource);\n\n      if (this.gmfDataSourceBeingFiltered.dataSource === dataSource) {\n        this.gmfDataSourceBeingFiltered.dataSource = null;\n      }\n    }\n  }\n\n\n  /**\n   * Determines whether the data source is valid for addition (or removal) to\n   * the list of filtrable data sources or not.\n   *\n   * To be filtrable, the data source must:\n   *\n   *  1) have its name in the list of filtrable layer node names\n   *  2) support WFS\n   *  3) have only one ogcLayers defined\n   *  4) the ogcLayer must be queryable\n   *\n   * If 1) is true but not any of the others, then the server has not been\n   * configured properly. In this case, a warning notification can be shown.\n   *\n   * @param {gmf.datasource.OGC} dataSource GMF data source object\n   * @param {boolean=} opt_notify Whether to show a warning notification or not\n   *     in case of a data source that has its name is in the list of\n   *     filtrable layer node names but it doesn't match the other requirements.\n   *     Defaults to `true.`\n   * @return {boolean} Whether the data source is valid to add to the list or\n   *     not.\n   * @private\n   */\n  isDataSourceFiltrable_(dataSource, opt_notify) {\n    let filtrable = true;\n    const gettext = this.gettextCatalog_;\n    const notify = opt_notify !== false;\n    const names = googAsserts.assert(this.filtrableLayerNodeNames_);\n    const msgs = [];\n\n    // (1) The name of the DS must be in list of filtrable layer node names\n    if (olArray.includes(names, dataSource.name)) {\n\n      // (2) The DS must support WFS\n      if (!dataSource.supportsWFS) {\n        msgs.push(gettext.getString(\n          'The data source doesn\\'t support WFS, which is required ' +\n          'to fetch the attributes to build the filter rules.'\n        ));\n      }\n\n      // (3) The DS must have only one ogcLayer\n      if (!dataSource.ogcLayers || !dataSource.ogcLayers.length) {\n        msgs.push(gettext.getString(\n          'The data source must have only 1 ogcLayer defined.'\n        ));\n      } else if (!dataSource.ogcLayers[0].queryable) {\n        // (4) The ogcLayer must be queryable\n        msgs.push(gettext.getString(\n          'The ogcLayer within the data source must be queryable.'\n        ));\n      }\n\n      filtrable = !msgs.length;\n\n      // Notify if the name is in list of filtrable layer node names but\n      // there are missing requirements.\n      if (notify && !filtrable) {\n        const p1 = gettext.getString(\n          `The following data source is marked as being filtrable,\n          but is missing some requirements: `\n        );\n        const p2 = `${dataSource.name} (${dataSource.id}).`;\n        const p3 = gettext.getString(\n          `Please, contact your administrator about this.\n          Here are the reasons: `\n        );\n        msgs.unshift(`${p1} ${p2} ${p3}`);\n        console.warn(msgs.join(' '));\n        this.ngeoNotification_.notify({\n          msg: msgs.join(' '),\n          type: ngeoMessageMessage.Type.WARNING\n        });\n      }\n    } else {\n      filtrable = false;\n    }\n\n    return filtrable;\n  }\n\n  /**\n   * @param {?gmf.datasource.OGC} dataSource Newly selected data source\n   *     object.\n   * @private\n   */\n  handleSelectedDataSourceChange_(dataSource) {\n\n    this.aRuleIsActive = false;\n    this.customRules = null;\n    this.directedRules = null;\n    this.readyDataSource = null;\n    this.gmfSavedFilters.currentDataSourceId = null;\n\n    // No need to do anything if no data source is selected\n    if (!dataSource) {\n      return;\n    }\n\n    // A data source has been selected. Make sure the component is active.\n    if (!this.active) {\n      this.active = true;\n    }\n\n    this.gmfDataSourcesHelper_.prepareFiltrableDataSource(\n      dataSource\n    ).then((dataSource) => {\n\n      // Data source is ready. Get any existing rules or create new ones from\n      // the attributes\n      let item = this.getRuleCacheItem_(dataSource);\n      if (!item) {\n        item = {\n          customRules: [],\n          directedRules: []\n        };\n        this.setRuleCacheItem_(dataSource, item);\n        if (dataSource.gmfLayer.metadata &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes &&\n            dataSource.gmfLayer.metadata.directedFilterAttributes.length\n        ) {\n          const directedAttributes =\n              dataSource.gmfLayer.metadata.directedFilterAttributes;\n          const attributes = googAsserts.assert(dataSource.attributes);\n          for (const attribute of attributes) {\n            if (olArray.includes(directedAttributes, attribute.name)) {\n              item.directedRules.push(\n                this.ngeoRuleHelper_.createRuleFromAttribute(attribute)\n              );\n            }\n          }\n        }\n      }\n\n      this.customRules = item.customRules;\n      this.directedRules = item.directedRules;\n      this.readyDataSource = dataSource;\n      this.gmfSavedFilters.currentDataSourceId = dataSource.id;\n\n    });\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @return {?gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} Rule cache item.\n   * @private\n   */\n  getRuleCacheItem_(dataSource) {\n    return this.ruleCache_[dataSource.id] || null;\n  }\n\n  /**\n   * @param {ngeo.datasource.DataSource} dataSource Data source.\n   * @param {gmf.filters.filterselectorComponent.Controller_.RuleCacheItem} item Rule cache item.\n   * @private\n   */\n  setRuleCacheItem_(dataSource, item) {\n    this.ruleCache_[dataSource.id] = item;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterShowModal() {\n    this.saveFilterSaveModalShown = true;\n  }\n\n  /**\n   * @export\n   */\n  saveFilterSave() {\n\n    const name = this.saveFilterName;\n    const dataSource = googAsserts.assert(this.readyDataSource);\n    const dataSourceId = dataSource.id;\n    const alreadyExist = (this.gmfSavedFilters.indexOfItem(\n      name, dataSourceId) !== -1);\n    const condition = dataSource.filterCondition;\n\n    const msg = this.gettextCatalog_.getString(\n      `A filter with the same name already exists.\n      Do you want to overwrite it?`\n    );\n    if (!alreadyExist || confirm(msg)) {\n      // (1) Serialize the existing custom and directed rules\n      const customRules = this.customRules ?\n        this.ngeoRuleHelper_.serializeRules(this.customRules) : [];\n      const directedRules = this.directedRules ?\n        this.ngeoRuleHelper_.serializeRules(this.directedRules) : [];\n\n      // (2) Ask the service to save it\n      const item = /** @type {!gmf.filters.SavedFilters.Item} */ ({\n        condition,\n        customRules,\n        dataSourceId,\n        directedRules,\n        name\n      });\n      this.gmfSavedFilters.save(item);\n\n      // (3) Close popup, which resets the name\n      this.saveFilterSaveModalShown = false;\n    }\n  }\n\n  /**\n   * Load a saved filter item, replacing the current rules.\n   * @param {!gmf.filters.SavedFilters.Item} filterItem Filter item.\n   * @export\n   */\n  saveFilterLoadItem(filterItem) {\n\n    const dataSource = googAsserts.assert(this.readyDataSource);\n\n    // (1) Reset current rules\n    this.customRules = null;\n    this.directedRules = null;\n\n    const customRules = this.ngeoRuleHelper_.createRules(\n      filterItem.customRules);\n    const directedRules = this.ngeoRuleHelper_.createRules(\n      filterItem.directedRules);\n\n    // Timeout, which ensures the destruction of the previous filter component\n    // and the creation of a new one\n    this.timeout_(() => {\n      // (2) Set rules\n      this.customRules = customRules;\n      this.directedRules = directedRules;\n\n      // (3) Set condition\n      dataSource.filterCondition = filterItem.condition;\n\n      // (4) Update cache item\n      const cacheItem = googAsserts.assert(this.getRuleCacheItem_(dataSource));\n      cacheItem.customRules = customRules;\n      cacheItem.directedRules = directedRules;\n    });\n  }\n\n  /**\n   * @export\n   */\n  saveFilterManage() {\n    this.saveFilterManageModalShown = true;\n  }\n\n  /**\n   * Remove a saved filter item.\n   * @param {!gmf.filters.SavedFilters.Item} item Filter item.\n   * @export\n   */\n  saveFilterRemoveItem(item) {\n    this.gmfSavedFilters.remove(item);\n  }\n\n};\n\n\n/**\n * @typedef {Object.<number, !gmf.filters.filterselectorComponent.Controller_.RuleCacheItem>}\n */\nexports.Controller_.RuleCache;\n\n\n/**\n * @typedef {{\n *     customRules: (Array.<ngeo.rule.Rule>),\n *     directedRules: (Array.<ngeo.rule.Rule>)\n * }}\n */\nexports.Controller_.RuleCacheItem;\n\n\nexports.component('gmfFilterselector', {\n  bindings: {\n    active: '=',\n    map: '<',\n    toolGroup: '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfFilterselectorTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.filters.module\n */\nimport gmfFiltersFilterselectorComponent from 'gmf/filters/filterselectorComponent.js';\nimport gmfFiltersSavedFilters from 'gmf/filters/SavedFilters.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfFiltersModule', [\n  gmfFiltersFilterselectorComponent.name,\n  gmfFiltersSavedFilters.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.timeSliderComponent\n */\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\nimport 'jquery-ui/ui/widgets/slider.js';\nimport 'angular-ui-slider';\nimport './timeslider.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeTimeSliderComponent', [\n  ngeoMiscWMSTime.module.name,\n  'ui.slider',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/timesliderComponent', require('./timesliderComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates with a slider\n * Example:\n *\n *      <gmf-time-slider\n *          gmf-time-slider-time=\"{\n *            maxValue: '2013-12-31T00:00:00Z',\n *            minValue: '2006-01-01T00:00:00Z',\n *            mode: 'range'}\"\n *          gmf-time-slider-on-date-selected=\"ctrl.onDateSelected(time)\">\n *      </gmf-time-slider>\n *\n * @htmlAttribute {ngeox.TimeProperty} gmf-time-slider-time parameter for initialization.\n * @htmlAttribute {function()} gmf-time-slider-on-date-selected Expression evaluated after\n * date(s) changed\n * @param {angular.$timeout} $timeout angular timeout service\n * @param {angular.$filter} $filter angular filter service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfTimeSlider\n */\nexports.directive_ = function($timeout, $filter) {\n  return {\n    scope: {\n      onDateSelected: '&gmfTimeSliderOnDateSelected',\n      time: '=gmfTimeSliderTime'\n    },\n    bindToController: true,\n    controller: 'gmfTimeSliderController as sliderCtrl',\n    restrict: 'AE',\n    templateUrl: 'gmf/layertree/timesliderComponent',\n    link: /** @type {!angular.LinkingFunctions} */ ({\n      pre: function preLink(scope, element, attrs, ctrl) {\n        ctrl.init();\n\n        ctrl.sliderOptions['stop'] = onSliderReleased_;\n        ctrl.sliderOptions['slide'] = computeDates_;\n\n        function onSliderReleased_(e, sliderUi) {\n          ctrl.onDateSelected({\n            time: computeDates_(e, sliderUi)\n          });\n          scope.$apply();\n        }\n\n        function computeDates_(e, sliderUi) {\n          let sDate, eDate, wmstime;\n          if (sliderUi.values) {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.values[0]));\n            eDate = new Date(ctrl.getClosestValue_(sliderUi.values[1]));\n            ctrl.dates = [sDate, eDate];\n            wmstime = {\n              start: sDate.getTime(),\n              end: eDate.getTime()\n            };\n          } else {\n            sDate = new Date(ctrl.getClosestValue_(sliderUi.value));\n            ctrl.dates = sDate;\n            wmstime = {\n              start: sDate.getTime()\n            };\n          }\n          scope.$apply();\n          return wmstime;\n        }\n      }\n    })\n  };\n};\n\n\nexports.directive('gmfTimeSlider', exports.directive_);\n\n\n/**\n * TimeSliderController - directive controller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.WMSTime} ngeoWMSTime WMSTime service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfTimeSliderController\n */\nexports.Controller_ = function($scope, ngeoWMSTime) {\n\n  /**\n   * @type {ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * Function called after date(s) changed/selected\n   * @function\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * A time object for directive initialization\n   * @type {ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n  /**\n   * Minimal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.minValue;\n\n  /**\n   * Maximal value of the slider (time in ms)\n   * @type {number}\n   * @export\n   */\n  this.maxValue;\n\n  /**\n   * Used when WMS time object has a property 'values' instead of an interval\n   * @type (?Array<number>)\n   */\n  this.timeValueList;\n\n  /**\n   * Default Slider options (used by ui-slider directive)\n   * @type {{\n   *  range : boolean,\n   *  min : number,\n   *  max : number\n   * }}\n   * @export\n   */\n  this.sliderOptions;\n\n  /**\n   * Model for the ui-slider directive (date in ms format)\n   * @type {Array.<number>|number}\n   * @export\n   */\n  this.dates;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  this.timeValueList = this.getTimeValueList_();\n\n  // Fetch the initial options for the component\n  const initialOptions_ = this.ngeoWMSTime_.getOptions(this.time);\n  this.isModeRange = this.time.mode === 'range';\n  this.minValue = initialOptions_.minDate;\n  this.maxValue = initialOptions_.maxDate;\n  this.dates = this.isModeRange ? [initialOptions_.values[0], initialOptions_.values[1]] :\n    initialOptions_.values;\n  this.sliderOptions = {\n    range: this.isModeRange,\n    min: this.minValue,\n    max: this.maxValue\n  };\n};\n\n/**\n * TimeSliderController.prototype.getTimeValueList_ - Get a list of time value instead\n * of using the wmstime interval as a list of possibles values\n * @private\n * @return {Array<number>}  - List of timestamp representing possible values\n */\nexports.Controller_.prototype.getTimeValueList_ = function() {\n  const wmsTime = this.time;\n  let timeValueList = null;\n  const minDate = new Date(this.minValue);\n  const maxDate = new Date(this.maxValue);\n\n  if (wmsTime.values) {\n    timeValueList = [];\n    wmsTime.values.forEach((date) => {\n      timeValueList.push(new Date(date).getTime());\n    });\n  } else {\n    const maxNbValues = 1024;\n    const endDate = new Date(minDate.getTime());\n    endDate.setFullYear(minDate.getFullYear() + maxNbValues * wmsTime.interval[0]);\n    endDate.setMonth(minDate.getMonth() + maxNbValues * wmsTime.interval[1],\n      minDate.getDate() + maxNbValues * wmsTime.interval[2]);\n    endDate.setSeconds(minDate.getSeconds() + maxNbValues * wmsTime.interval[3]);\n\n    if (endDate > maxDate) {\n      // Transform interval to a list of values when the number\n      // of values is below a threshold (maxNbValues)\n      timeValueList = [];\n      for (let i = 0; ; i++) {\n        const nextDate = new Date(minDate.getTime());\n        nextDate.setFullYear(minDate.getFullYear() + i * wmsTime.interval[0]);\n        nextDate.setMonth(minDate.getMonth() + i * wmsTime.interval[1],\n          minDate.getDate() + i * wmsTime.interval[2]);\n        nextDate.setSeconds(minDate.getSeconds() + i * wmsTime.interval[3]);\n        if (nextDate <= maxDate) {\n          timeValueList.push(nextDate.getTime());\n        } else {\n          break;\n        }\n      }\n    }\n  }\n  return timeValueList;\n};\n\n\n/**\n * Compute the closest available date from the given timestamp\n * @param  {number} timestamp selected datetime (in ms format)\n * @return {number} the closest available datetime (in ms format) from the timestamp\n * @private\n */\nexports.Controller_.prototype.getClosestValue_ = function(timestamp) {\n  if (timestamp <= this.minValue) {\n    return this.minValue;\n  }\n\n  if (timestamp >= this.maxValue) {\n    return this.maxValue;\n  }\n\n  if (this.timeValueList) {\n    // Time stops are defined as a list of values\n    let index;\n    let leftIndex = 0;\n    let rightIndex = this.timeValueList.length - 1;\n\n    while ((rightIndex - leftIndex) > 1) {\n      index = Math.floor((leftIndex + rightIndex) / 2);\n      if (this.timeValueList[index] >= timestamp) {\n        rightIndex = index;\n      } else {\n        leftIndex = index;\n      }\n    }\n\n    const leftDistance = Math.abs(this.timeValueList[leftIndex] - timestamp);\n    const rightDistance = Math.abs(this.timeValueList[rightIndex] - timestamp);\n\n    return this.timeValueList[leftDistance < rightDistance ? leftIndex : rightIndex];\n  } else {\n    // Time stops are defined by a start date plus an interval\n    const targetDate = new Date(timestamp);\n    const startDate = new Date(this.minValue);\n    let bestDate = new Date(this.minValue);\n    const maxDate = new Date(this.maxValue);\n    let bestDistance = Math.abs(targetDate - bestDate);\n\n    for (let i = 1; ; i++) {\n      // The start date should always be used as a reference\n      // because adding a month twice could differ from adding\n      // two months at once\n      const next = new Date(startDate.getTime());\n      next.setFullYear(startDate.getFullYear() + i * this.time.interval[0]);\n      next.setMonth(startDate.getMonth() + i *  this.time.interval[1],\n        startDate.getDate() + i * this.time.interval[2]);\n      next.setSeconds(startDate.getSeconds() + i * this.time.interval[3]);\n\n      if (next > maxDate) {\n        break;\n      }\n\n      const distance = Math.abs(targetDate - next);\n      if (distance <= bestDistance) {\n        bestDate = next;\n        bestDistance = distance;\n      } else {\n        break;\n      }\n    }\n\n    return bestDate.getTime();\n  }\n};\n\n\n/**\n * Format and localize time regarding a resolution.\n * @param {number} time (in ms format) timestamp to format and localize.\n * @return {string} Localized date string regarding the resolution.\n * @export\n */\nexports.Controller_.prototype.getLocalizedDate = function(time) {\n  return this.ngeoWMSTime_.formatTimeValue(time, this.time.resolution);\n};\n\n\nexports.controller('gmfTimeSliderController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.module\n */\nimport gmfLayertreeComponent from 'gmf/layertree/component.js';\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTimeSliderComponent from 'gmf/layertree/timeSliderComponent.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\n\nimport './common.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeModule', [\n  gmfLayertreeComponent.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTimeSliderComponent.name,\n  gmfLayertreeTreeManager.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.module\n */\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\n\nimport './share.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPermalinkModule', [\n  gmfPermalinkPermalink.module.name,\n  gmfPermalinkShareService.module.name,\n  gmfPermalinkShareComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMap', []);\n\n\n/**\n * Provides a directive used to insert a user-defined OpenLayers\n * map in the DOM. The directive does not create an isolate scope.\n *\n * Examples:\n *\n *   Simple:\n *\n *      <div ngeo-map=\"ctrl.map\"></div>\n *\n *   Manage window resizing:\n *\n *      <div\n *        ngeo-map=\"ctrl.map\"\n *        ngeo-map-manage-resize=\"ctrl.manageResize\"\n *        ngeo-map-resize-transition=\"ctrl.resizeTransition\">\n *      </div>\n *\n * See our live examples:\n * [../examples/permalink.html](../examples/permalink.html)\n * [../examples/simple.html](../examples/simple.html)\n *\n * @htmlAttribute {ol.Map} ngeo-map The map.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoMap\n * @ngInject\n */\nexports.directive_ = function($window) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      // Get the 'ol.Map' object from attributes and manage it accordingly\n      const attr = 'ngeoMap';\n      const prop = attrs[attr];\n\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      map.setTarget(element[0]);\n\n      // Get the 'window resize' attributes, which are optional. If defined,\n      // the browser window 'resize' event is listened to update the size of\n      // the map when fired. A transition option is also available to let any\n      // animation that may occur on the div of the map to smootly resize the\n      // map while in progress.\n      const manageResizeAttr = 'ngeoMapManageResize';\n      const manageResizeProp = attrs[manageResizeAttr];\n      const manageResize = scope.$eval(manageResizeProp);\n\n      if (manageResize) {\n        const resizeTransitionAttr = 'ngeoMapResizeTransition';\n        const resizeTransitionProp = attrs[resizeTransitionAttr];\n\n        const resizeTransition = /** @type {number|undefined} */ (\n          scope.$eval(resizeTransitionProp));\n\n        olEvents.listen(\n          $window,\n          'resize',\n          () => {\n            if (resizeTransition) {\n              // Resize with transition\n              const start = Date.now();\n              let loop = true;\n              const adjustSize = function() {\n                map.updateSize();\n                map.renderSync();\n                if (loop) {\n                  $window.requestAnimationFrame(adjustSize);\n                }\n                if (Date.now() - start > resizeTransition) {\n                  loop = false;\n                }\n              };\n              adjustSize();\n            } else {\n              // A single plain resize\n              map.updateSize();\n            }\n          }\n        );\n      }\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoMap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.scaleselector\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport olMap from 'ol/Map.js';\nimport * as olEvents from 'ol/events.js';\nimport 'bootstrap/js/dropdown.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoScaleselector', []);\n\n\nexports.value('ngeoScaleselectorTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoScaleselectorTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/map/scaleselector';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/map/scaleselector', require('./scaleselector.html'));\n});\n\n\n/**\n * Provides the \"ngeoScaleselector\" directive, a widget for\n * selecting map scales.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\" ngeo-scaleselector-map=\"ctrl.map\">\n *     </div>\n *\n * The expression passed to the ngeo-scaleselector attribute should return an\n * array of this form:\n *\n *    [20000, 10000, 5000, 2500]\n *\n * That directive's partial uses Bootstrap's `dropdown` and `dropdown-menu`\n * classes, and `data-toggle=\"dropdown\"`, so it is meant to be used with\n * Bootstrap's \"dropdown\" jQuery plugin.\n *\n * You can pass options to configure the behaviors of this element. Options is\n * a {@link ngeox.ScaleselectorOptions} object.\n *\n * Example:\n *\n *     <div ngeo-scaleselector=\"ctrl.scales\"\n *       ngeo-scaleselector-map=\"ctrl.map\"\n *       ngeo-scaleselector-options=\"ctrl.scaleSelectorOptions\">\n *     </div>\n *\n * By default the directive uses \"scaleselector.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoScaleselectorTemplateUrl\" value.\n *\n * The directive has its own scope, but it is not isolate scope. That scope\n * includes a reference to the directive's controller: the \"scaleselectorCtrl\"\n * scope property.\n *\n * The directive doesn't create any watcher. In particular the object including\n * the scales information is now watched.\n *\n * See our live example: [../examples/scaleselector.html](../examples/scaleselector.html)\n *\n * @htmlAttribute {!Array.<number>} ngeo-scaleselector The available scales.\n * @htmlAttribute {ol.Map} ngeo-scaleselector-map The map.\n * @htmlAttribute {ngeox.ScaleselectorOptions} ngeo-scaleselector-options\n *     Optional. The configuration options.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoScaleselectorTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoScaleselector\n */\nconst directive = function(ngeoScaleselectorTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoScaleselectorController',\n    templateUrl: ngeoScaleselectorTemplateUrl\n  };\n};\n\n\nexports.directive('ngeoScaleselector', directive);\n\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nconst ScaleselectorController = function($scope, $element, $attrs) {\n\n  const scalesExpr = $attrs['ngeoScaleselector'];\n\n  /**\n   * The zoom level/scale map object.\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scales = /** @type {!Array.<number>} */\n    ($scope.$eval(scalesExpr));\n  googAsserts.assert(this.scales !== undefined);\n\n  /**\n   * @type {Array.<number>}\n   * @export\n   */\n  this.zoomLevels;\n\n  $scope.$watch(() => Object.keys(this.scales).length, (newLength) => {\n    this.zoomLevels = Object.keys(this.scales).map(Number);\n    this.zoomLevels.sort(olArray.numberSafeCompareFunction);\n  });\n\n  const mapExpr = $attrs['ngeoScaleselectorMap'];\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n  googAsserts.assertInstanceof(this.map_, olMap);\n\n  const optionsExpr = $attrs['ngeoScaleselectorOptions'];\n  const options = $scope.$eval(optionsExpr);\n\n  /**\n   * @type {!ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.options = ScaleselectorController.getOptions_(options);\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.resolutionChangeKey_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.currentScale = undefined;\n\n  const view = this.map_.getView();\n  if (view !== null) {\n    const currentZoom = this.map_.getView().getZoom();\n    if (currentZoom !== undefined) {\n      this.currentScale = this.getScale(currentZoom);\n    }\n  }\n\n  olEvents.listen(this.map_, 'change:view', this.handleViewChange_, this);\n\n  this.registerResolutionChangeListener_();\n\n  $scope['scaleselectorCtrl'] = this;\n\n};\n\n\n/**\n * @param {?} options Options after expression evaluation.\n * @return {!ngeox.ScaleselectorOptions} Options object.\n * @private\n */\nScaleselectorController.getOptions_ = function(options) {\n  let dropup = false;\n  if (options !== undefined) {\n    dropup = options['dropup'] == true;\n  }\n  return /** @type {ngeox.ScaleselectorOptions} */ ({\n    dropup: dropup\n  });\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @return {number} Scale.\n * @export\n */\nScaleselectorController.prototype.getScale = function(zoom) {\n  return this.scales[zoom];\n};\n\n\n/**\n * @param {number} zoom Zoom level.\n * @export\n */\nScaleselectorController.prototype.changeZoom = function(zoom) {\n  this.map_.getView().setZoom(zoom);\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleResolutionChange_ = function(e) {\n  const view = this.map_.getView();\n  const currentScale = this.scales[/** @type {number} */ (view.getZoom())];\n\n  // handleResolutionChange_ is a change:resolution listener. The listener\n  // may be executed outside the Angular context, for example when the user\n  // double-clicks to zoom on the map.\n  //\n  // But it may also be executed inside the Angular context, when a function\n  // in Angular context calls setZoom or setResolution on the view, which\n  // is for example what happens when this controller's changeZoom function\n  // is called.\n  //\n  // For that reason we use $applyAsync instead of $apply here.\n\n  if (currentScale !== undefined) {\n    this.$scope_.$applyAsync(() => {\n      this.currentScale = currentScale;\n    });\n  }\n};\n\n\n/**\n * @param {ol.Object.Event} e OpenLayers object event.\n * @private\n */\nScaleselectorController.prototype.handleViewChange_ = function(e) {\n  this.registerResolutionChangeListener_();\n  this.handleResolutionChange_(null);\n};\n\n\n/**\n * @private\n */\nScaleselectorController.prototype.registerResolutionChangeListener_ = function() {\n  if (this.resolutionChangeKey_ !== null) {\n    olEvents.unlistenByKey(this.resolutionChangeKey_);\n  }\n  const view = this.map_.getView();\n  this.resolutionChangeKey_ = olEvents.listen(view,\n    'change:resolution', this.handleResolutionChange_,\n    this);\n};\n\n\nexports.controller('NgeoScaleselectorController', ScaleselectorController);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.module\n */\nimport ngeoMapBackgroundLayerMgr from 'ngeo/map/BackgroundLayerMgr.js';\nimport ngeoMapComponent from 'ngeo/map/component.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMapRecenter from 'ngeo/map/recenter.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMapScaleselector from 'ngeo/map/scaleselector.js';\n\n/**\n * Also related to the map but not included in the module:\n *  - ngeo.map.FeatureOverlay (already required by ngeo.map.FeatureOverlayMgr)\n *\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMapModule', [\n  ngeoMapBackgroundLayerMgr.module.name,\n  ngeoMapComponent.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMapRecenter.name,\n  ngeoMapResizemap.name,\n  ngeoMapScaleselector.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.map.component\n */\nimport gmfPermalinkModule from 'gmf/permalink/module.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport ngeoMapModule from 'ngeo/map/module.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapComponent', [\n  gmfPermalinkModule.name,\n  gmfEditingSnapping.module.name,\n  ngeoMapModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map', require('./component.html'));\n});\n\n\n/**\n * A \"map\" directive for a GeoMapFish application.\n *\n * Example:\n *\n *      <gmf-map gmf-map-map=\"mainCtrl.map\"></gmf-map>\n *\n * @htmlAttribute {ol.Map} gmf-map-map The map.\n * @htmlAttribute {boolean|undefined} gmf-map-manage-resize Whether to update\n *     the size of the map on browser window resize.\n * @htmlAttribute {boolean|undefined} gmf-map-resize-transition The duration\n *     (milliseconds) of the animation that may occur on the div containing\n *     the map. Used to smoothly resize the map while the animation is in\n *     progress.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfMap\n */\nexports.directive_ = function() {\n  return {\n    scope: {\n      'map': '<gmfMapMap',\n      'manageResize': '<gmfMapManageResize',\n      'resizeTransition': '<gmfMapResizeTransition'\n    },\n    controller: 'GmfMapController as ctrl',\n    bindToController: true,\n    templateUrl: 'gmf/map'\n  };\n};\n\nexports.directive('gmfMap', exports.directive_);\n\n\n/**\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.editing.Snapping} gmfSnapping The gmf snapping service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfMapController\n */\nexports.Controller_ = function(ngeoFeatureOverlayMgr, gmfPermalink, gmfSnapping) {\n\n  // Scope properties\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.manageResize;\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n\n  // Injected properties\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.editing.Snapping}\n   * @private\n   */\n  this.gmfSnapping_ = gmfSnapping;\n};\n\n\n/**\n * Called on initialization of the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.ngeoFeatureOverlayMgr_.init(this.map);\n  this.gmfPermalink_.setMap(this.map);\n  this.gmfSnapping_.setMap(this.map);\n};\n\n\nexports.controller('GmfMapController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.mousepositionComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport olControlMousePosition from 'ol/control/MousePosition.js';\nimport * as olProj from 'ol/proj.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapMouseposition', [\n  ngeoMiscFilters.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/map/mousepositionComponent', require('./mousepositionComponent.html'));\n});\n\n\nexports.value('gmfMapMousepositionTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfMapMousepositionTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/map/mousepositionComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfMapMousepositionTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfMapMousepositionTemplateUrl($attrs, gmfMapMousepositionTemplateUrl) {\n  return gmfMapMousepositionTemplateUrl($attrs);\n}\n\n/**\n * Provide a component to display the mouse position coordinates depending\n * on the chosen projection. The component also provides a projection picker\n * to choose how the coordinates are displayed.\n * service.\n *\n * Example:\n *  <gmf-mouseposition gmf-mouseposition-map=\"ctrl.map\"\n *     gmf-mouseposition-projections=\"ctrl.projections\">\n *  </gmf-mouseposition>\n *\n * @htmlAttribute {ol.Map} gmf-mouseposition-map The map.\n * @htmlAttribute {Array.<gmfx.MousePositionProjection>}\n *    gmf-mouseposition-projection The list of the projections.\n *\n * @ngdoc component\n * @ngname gmfMouseposition\n */\nexports.component_ = {\n  controller: 'gmfMousepositionController as ctrl',\n  bindings: {\n    'map': '<gmfMousepositionMap',\n    'projections': '<gmfMousepositionProjections'\n  },\n  templateUrl: gmfMapMousepositionTemplateUrl\n};\n\nexports.component('gmfMouseposition',\n  exports.component_);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfMousepositionController\n */\nexports.Controller_ = function($element, $filter, $scope, gettextCatalog) {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<!gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {!gmfx.MousePositionProjection}\n   * @export\n   */\n  this.projection;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @private\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type  {?ol.control.MousePosition}\n   * @private\n   */\n  this.control_ = null;\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.$scope_.$on('gettextLanguageChanged', () => {\n    this.initOlControl_();\n  });\n\n  // Init control once, in case of applications that never set the language.\n  this.initOlControl_();\n};\n\n\n/**\n * Init the ol.control.MousePosition\n * @private\n */\nexports.Controller_.prototype.initOlControl_ = function() {\n  if (this.control_ !== null) {\n    this.map.removeControl(this.control_);\n  }\n\n  // function that apply the filter.\n  const formatFn = function(coordinates) {\n    const filterAndArgs = this.projection.filter.split(':');\n    const filter = this.$filter_(filterAndArgs.shift());\n    googAsserts.assertFunction(filter);\n    const args = filterAndArgs;\n    args.unshift(coordinates);\n    return filter.apply(this, args);\n  };\n\n  const gettextCatalog = this.gettextCatalog_;\n  this.control_ = new olControlMousePosition({\n    className: 'gmf-mouseposition-control',\n    coordinateFormat: formatFn.bind(this),\n    target: angular.element('.gmf-mouseposition-control-target', this.$element_)[0],\n    undefinedHTML: gettextCatalog.getString('Coordinates')\n  });\n\n  this.setProjection(this.projections[0]);\n\n  this.map.addControl(this.control_);\n};\n\n\n/**\n * @param {gmfx.MousePositionProjection} projection The new projection to use.\n * @export\n */\nexports.Controller_.prototype.setProjection = function(projection) {\n  this.control_.setProjection(olProj.get(projection.code));\n  this.projection = projection;\n};\n\nexports.controller('gmfMousepositionController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.map.module\n */\nimport gmfMapComponent from 'gmf/map/component.js';\nimport gmfMapMousepositionComponent from 'gmf/map/mousepositionComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfMapModule', [\n  gmfMapComponent.name,\n  gmfMapMousepositionComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.Config\n */\nimport * as olBase from 'ol/index.js';\n\n/**\n * @param {Array.<Object>|undefined} data Entries/objects to be shown in a grid.\n * @param {Array.<ngeox.GridColumnDef>|undefined} columnDefs Column definition of a grid.\n * @constructor\n * @struct\n * @export\n */\nconst exports = function(data, columnDefs) {\n  /**\n   * @type {Array.<Object>|undefined}\n   * @export\n   */\n  this.data = data;\n\n  /**\n   * @type {Array.<ngeox.GridColumnDef>|undefined}\n   * @export\n   */\n  this.columnDefs = columnDefs;\n\n  /**\n   * @type {!Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows = {};\n};\n\n\n/**\n * Get an ID for a row.\n * @param {Object} attributes An entry/row.\n * @return {string} Unique id for this object.\n * @export\n */\nexports.getRowUid = function(attributes) {\n  return `${olBase.getUid(attributes)}`;\n};\n\n\n/**\n * Is the given row selected?\n * @param {Object} attributes An entry/row.\n * @return {boolean} True if already selected. False otherwise.\n * @export\n */\nexports.prototype.isRowSelected = function(attributes) {\n  return !!this.selectedRows[exports.getRowUid(attributes)];\n};\n\n\n/**\n * Returns the number of selected rows.\n * @return {number} Number of selected rows.\n * @export\n */\nexports.prototype.getSelectedCount = function() {\n  return Object.keys(this.selectedRows).length;\n};\n\n\n/**\n * Returns the selected rows.\n * @return {Array.<Object>} Selected rows in the current ordering.\n * @export\n */\nexports.prototype.getSelectedRows = function() {\n  return this.data.filter(row => this.isRowSelected(row));\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.selectRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  this.selectedRows[uid] = attributes;\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @public\n */\nexports.prototype.toggleRow = function(attributes) {\n  const uid = exports.getRowUid(attributes);\n  const isSelected = this.isRowSelected(attributes);\n  if (isSelected) {\n    delete this.selectedRows[uid];\n  } else {\n    this.selectedRows[uid] = attributes;\n  }\n};\n\n\n/**\n * Select all rows.\n * @export\n */\nexports.prototype.selectAll = function() {\n  this.data.forEach((attributes) => {\n    this.selectRow(attributes);\n  });\n};\n\n\n/**\n * Deselect all rows.\n * @export\n */\nexports.prototype.unselectAll = function() {\n  for (const rowId in this.selectedRows) {\n    delete this.selectedRows[rowId];\n  }\n};\n\n\n/**\n * Invert selection.\n * @export\n */\nexports.prototype.invertSelection = function() {\n  this.data.forEach((attributes) => {\n    this.toggleRow(attributes);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoGridConfig', []);\n\n\nexport default exports;\n","/**\n * @module ngeo.grid.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport * as olHas from 'ol/has.js';\n\nimport 'floatthead';\nimport 'angular-float-thead';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGrid', [\n  ngeoGridConfig.module.name,\n  ngeoMiscFilters.name,\n  'floatThead',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/grid', require('./component.html'));\n});\n\n\nexports.value('ngeoGridTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/grid';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGridTemplateUrl($attrs, ngeoGridTemplateUrl) {\n  return ngeoGridTemplateUrl($attrs);\n}\n\n\n/**\n * A grid component for displaying tabular data. The columns of the grid\n * are sortable, rows can be selected with a single click (also in combination\n * with SHIFT and CTRL/Meta).\n *\n * Example:\n *\n *     <ngeo-grid\n *       ngeo-grid-configuration=\"::ctrl.gridConfiguration\"\n *     </ngeo-grid>\n *\n * @htmlAttribute {ngeo.grid.Config} ngeo-grid-configuration The\n * configuration to use.\n *\n * @ngdoc component\n * @ngname ngeoGrid\n */\nexports.component_ = {\n  controller: 'ngeoGridController as ctrl',\n  bindings: {\n    'configuration': '=ngeoGridConfiguration'\n  },\n  templateUrl: ngeoGridTemplateUrl\n};\n\nexports.component('ngeoGrid', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoGridController\n */\nexports.Controller_ = function($scope) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.grid.Config}\n   * @export\n   */\n  this.configuration;\n\n  /**\n   * @type {Object.<string, Object>}\n   * @export\n   */\n  this.selectedRows;\n\n  /**\n   * The name of the column used to sort the grid.\n   * @type {string}\n   * @export\n   */\n  this.sortedBy;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.sortAscending = true;\n\n  /**\n   * Configuration object for float-thead.\n   * @type {Object}\n   * @export\n   */\n  this.floatTheadConfig = {\n    'scrollContainer': function($table) {\n      return $table.closest('.ngeo-grid-table-container');\n    }\n  };\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.selectedRows = this.configuration.selectedRows;\n};\n\n\n/**\n * Sort function that always puts undefined values to the bottom of the grid.\n * A new call will sort ascending. A next one will sort descending (and so\n * on).\n * @param {string} columnName The name of the column that should be used to\n *    sort the data.\n * @export\n */\nexports.Controller_.prototype.sort = function(columnName) {\n  this.sortAscending = this.sortedBy === columnName ? !this.sortAscending : true;\n  this.sortedBy = columnName;\n\n  const asc = this.sortAscending ? 1 : -1;\n  this.configuration.data.sort((attributes1, attributes2) => {\n    if (!attributes1[columnName]) {\n      return 1;\n    }\n    if (!attributes2[columnName]) {\n      return -1;\n    }\n    return attributes1[columnName] > attributes2[columnName] ? asc : -asc;\n  });\n};\n\n\n/**\n * Handler for clicks on a row.\n * @param {Object} attributes An entry/row.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.clickRow = function(attributes, event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  this.clickRow_(attributes, shiftKey, platformModifierKey);\n};\n\n\n/**\n * @param {Object} attributes An entry/row.\n * @param {boolean} shiftKey Shift pressed?\n * @param {boolean} platformModifierKey CTRL/Meta pressed?\n * @private\n */\nexports.Controller_.prototype.clickRow_ = function(\n  attributes, shiftKey, platformModifierKey) {\n\n  if (shiftKey && !platformModifierKey) {\n    this.selectRange_(attributes);\n  } else if (!shiftKey && platformModifierKey) {\n    this.configuration.toggleRow(attributes);\n  } else {\n    const isSelected = this.configuration.isRowSelected(attributes);\n    this.configuration.unselectAll();\n    if (!isSelected) {\n      this.configuration.selectRow(attributes);\n    }\n  }\n};\n\n\n/**\n * Selects all rows between the given row and the closest already selected row.\n * @param {Object} attributes An entry/row.\n * @private\n */\nexports.Controller_.prototype.selectRange_ = function(attributes) {\n  const targetUid = ngeoGridConfig.getRowUid(attributes);\n  const data = this.configuration.data;\n\n  if (this.configuration.isRowSelected(attributes)) {\n    return;\n  }\n\n  // get the position of the clicked and all already selected rows\n  /** @type {number|undefined} */\n  let posClickedRow = undefined;\n  const posSelectedRows = [];\n  for (let i = 0; i < data.length; i++) {\n    const currentRow = data[i];\n    const currentUid = ngeoGridConfig.getRowUid(currentRow);\n\n    if (targetUid === currentUid) {\n      posClickedRow = i;\n    } else if (this.configuration.isRowSelected(currentRow)) {\n      posSelectedRows.push(i);\n    }\n  }\n  googAsserts.assert(posClickedRow !== undefined);\n\n  if (posSelectedRows.length == 0) {\n    // if no other row is selected, select the clicked one and stop\n    this.configuration.selectRow(attributes);\n  }\n\n  // find the selected row which is the closest to the clicked row\n  let distance = Infinity;\n  let posClosestRow = posSelectedRows[0];\n  for (let j = 0; j < posSelectedRows.length; j++) {\n    const currentPos = posSelectedRows[j];\n    const currentDistance = Math.abs(currentPos - posClickedRow);\n    if (distance > currentDistance) {\n      distance = currentDistance;\n      posClosestRow = currentPos;\n    }\n    // note: this could be optimized because `posSelectedRows` is ordered.\n  }\n\n  // then select all rows between the clicked one and the closest\n  const rangeStart = (posClickedRow < posClosestRow) ? posClickedRow : posClosestRow;\n  const rangeEnd = (posClickedRow > posClosestRow) ? posClickedRow : posClosestRow;\n\n  for (let l = rangeStart; l <= rangeEnd; l++) {\n    this.configuration.selectRow(data[l]);\n  }\n};\n\n\n/**\n * Prevent the default browser behaviour of selecting text\n * when selecting multiple rows with SHIFT or CTRL/Meta.\n * @param {jQuery.Event} event Event.\n * @export\n */\nexports.Controller_.prototype.preventTextSelection = function(event) {\n  const shiftKey = this.isShiftKeyOnly_(event);\n  const platformModifierKey = this.isPlatformModifierKeyOnly_(event);\n\n  if (shiftKey || platformModifierKey) {\n    event.preventDefault();\n  }\n};\n\n\n/**\n * Same as `ol.events.condition.platformModifierKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @private\n */\nexports.Controller_.prototype.isPlatformModifierKeyOnly_ = function(event) {\n  return !event.altKey &&\n    (olHas.MAC ? event.metaKey : event.ctrlKey) &&\n    !event.shiftKey;\n};\n\n\n/**\n * Same as `ol.events.condition.shiftKeyOnly`.\n * @param {jQuery.Event} event Event.\n * @return {boolean} True if only the shift key is pressed.\n * @private\n */\nexports.Controller_.prototype.isShiftKeyOnly_ = function(event) {\n  return (\n    !event.altKey &&\n      !(event.metaKey || event.ctrlKey) &&\n      event.shiftKey);\n};\n\n\nexports.controller('ngeoGridController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.gridComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/** @suppress {extraRequire} */\nimport ngeoGridComponent from 'ngeo/grid/component.js';\n\nimport ngeoGridConfig from 'ngeo/grid/Config.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olExtent from 'ol/extent.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryGridComponent', [\n  ngeoDownloadCsv.module.name,\n  ngeoDownloadService.name,\n  ngeoGridComponent.name,\n  ngeoGridConfig.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfDisplayquerygridTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerygridTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/gridComponent';\n  }\n);\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/gridComponent', require('./gridComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerygridTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerygridTemplateUrl($element, $attrs, gmfDisplayquerygridTemplateUrl) {\n  return gmfDisplayquerygridTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provides a component to display results of the {@link ngeo.queryResult} in a\n * grid and shows related features on the map using\n * the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerygridTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Note: the following ng-class need to be present in the interface <body> element to display the footer\n * when the grid is active (initially there should be the code for the profile tool):\n *      <body ng-class=\"{'gmf-profile-chart-active': !!profileChartActive, 'gmf-query-grid-active': !!queryGridActive}\">\n *\n * Example:\n *\n *      <gmf-displayquerygrid\n *        gmf-displayquerygrid-map=\"ctrl.map\"\n *        gmf-displayquerygrid-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerygrid-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerygrid>\n *\n * @htmlAttribute {boolean} gmf-displayquerygrid-active The active state of the component.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} gmf-displayquerygrid-selectedfeaturestyle A style\n *     object for the currently selected features.\n * @htmlAttribute {ol.Map} gmf-displayquerygrid-map The map.\n * @htmlAttribute {boolean?} gmf-displayquerygrid-removeemptycolumns Optional. Should\n *     empty columns be hidden? Default: `false`.\n * @htmlAttribute {number?} gmf-displayquerygrid-maxrecenterzoom Optional. Maximum\n *     zoom-level to use when zooming to selected features.\n * @htmlAttribute {gmfx.GridMergeTabs?} gmf-displayquerygrid-gridmergetabs Optional.\n *     Configuration to merge grids with the same attributes into a single grid.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerygrid\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerygridController as ctrl',\n  bindings: {\n    'active': '=?gmfDisplayquerygridActive',\n    'featuresStyleFn': '&gmfDisplayquerygridFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerygridSelectedfeaturestyle',\n    'getMapFn': '&gmfDisplayquerygridMap',\n    'removeEmptyColumnsFn': '&?gmfDisplayquerygridRemoveemptycolumns',\n    'maxResultsFn': '&?gmfDisplayquerygridMaxresults',\n    'maxRecenterZoomFn': '&?gmfDisplayquerygridMaxrecenterzoom',\n    'mergeTabs': '<?gmfDisplayquerygridMergetabs'\n  },\n  templateUrl: gmfDisplayquerygridTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerygrid', exports.component_);\n\n\n/**\n * Controller for the query grid.\n *\n * @param {!angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.download.Csv} ngeoCsvDownload CSV download service.\n * @param {!angular.JQLite} $element Element.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerygridController\n */\nexports.Controller_ = function($injector, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr, $timeout, ngeoCsvDownload, $element) {\n\n  const queryOptions = /** @type {ngeox.QueryOptions} */ (\n    $injector.has('ngeoQueryOptions') ?\n      $injector.get('ngeoQueryOptions') : {});\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {!ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = ngeoQueryResult;\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {!ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.maxResults = queryOptions.limit !== undefined ? queryOptions.limit : 50;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.pending = false;\n\n  /**\n   * @type {!Object.<string, gmfx.GridSource>}\n   * @export\n   */\n  this.gridSources = {};\n\n  /**\n   * IDs of the grid sources in the order they were loaded.\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.loadedGridSources = [];\n\n  /**\n   * The id of the currently shown query source.\n   * @type {string|number|null}\n   * @export\n   */\n  this.selectedTab = null;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.removeEmptyColumns_ = false;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.maxRecenterZoom;\n\n  /**\n   * @type {!gmfx.GridMergeTabs}\n   * @export\n   */\n  this.mergeTabs = {};\n\n  /**\n   * A mapping between row uid and the corresponding feature for each\n   * source.\n   * @type {!Object.<string, Object.<string, ol.Feature>>}\n   * @private\n   */\n  this.featuresForSources_ = {};\n\n  // Styles for displayed features (features) and selected features\n  // (highlightFeatures_) (user can set both styles).\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * Filename\n   * @type {string}\n   * @private\n   */\n  this.filename_ = $injector.has('gmfCsvFilename') ?\n    $injector.get('gmfCsvFilename') : 'query-results.csv';\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  // Watch the ngeo query result service.\n  this.$scope_.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      if (newQueryResult !== oldQueryResult) {\n        this.updateData_();\n      }\n    });\n\n  /**\n   * An unregister function returned from `$scope.$watchCollection` for\n   * \"on-select\" changes (when rows are selected/unselected).\n   * @type {?function()}\n   * @private\n   */\n  this.unregisterSelectWatcher_ = null;\n};\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.removeEmptyColumns_ = this['removeEmptyColumnsFn'] ? this['removeEmptyColumnsFn']() === true : false;\n  this.maxRecenterZoom = this['maxRecenterZoomFn'] ? this['maxRecenterZoomFn']() : undefined;\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke,\n      zIndex: 10\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  const mapFn = this['getMapFn'];\n  if (mapFn) {\n    const map = mapFn();\n    googAsserts.assertInstanceof(map, olMap);\n    this.map_ = map;\n  }\n};\n\n/**\n * Returns a list of grid sources in the order they were loaded.\n * @export\n * @return {Array.<gmfx.GridSource>} Grid sources.\n */\nexports.Controller_.prototype.getGridSources = function() {\n  return this.loadedGridSources.map(sourceLabel => this.gridSources[sourceLabel]);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateData_ = function() {\n  // close if there are no results\n  if (this.ngeoQueryResult.total === 0 && !this.hasOneWithTooManyResults_()) {\n    const oldActive = this.active;\n    this.clear();\n    if (oldActive) {\n      // don't close if there are pending queries\n      this.active = this.ngeoQueryResult.pending;\n      this.pending = this.ngeoQueryResult.pending;\n    }\n    return;\n  }\n\n  this.active = true;\n  this.pending = false;\n  let sources = this.ngeoQueryResult.sources;\n  // merge sources if requested\n  if (Object.keys(this.mergeTabs).length > 0) {\n    sources = this.getMergedSources_(sources);\n  }\n\n  // create grids (only for source with features or with too many results)\n  sources.forEach((source) => {\n    if (source.tooManyResults) {\n      this.makeGrid_(null, source);\n    } else {\n      source.id = this.escapeValue(source.id);\n      const features = source.features;\n      if (features.length > 0) {\n        this.collectData_(source);\n      }\n    }\n  });\n\n  if (this.loadedGridSources.length === 0) {\n    // if no grids were created, do not show\n    this.active = false;\n    return;\n  }\n\n  // keep the first existing navigation tab open\n  if (this.selectedTab === null || !((`${this.selectedTab}`) in this.gridSources)) {\n    // selecting the tab is done in a timeout, because otherwise in rare cases\n    // `ng-class` might set the `active` class on multiple tabs.\n    this.$timeout_(() => {\n      const firstSourceId = this.loadedGridSources[0];\n      this.selectTab(this.gridSources[firstSourceId]);\n    }, 0);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean} If one of the source has too many results.\n */\nexports.Controller_.prototype.hasOneWithTooManyResults_ = function() {\n  return this.ngeoQueryResult.sources.some(source => source.tooManyResults);\n};\n\n/**\n * Returns the value with all symbols and spaces replaced by an underscore.\n * @param {string|number} value A value to escape.\n * @returns {string|number} value An escaped value.\n * @export\n */\nexports.Controller_.prototype.escapeValue = function(value) {\n  // Work-around for Number.isInteger() when not always getting a number ...\n  if (Number.isInteger(/** @type {number} */ (value))) {\n    return value;\n  } else {\n    const toEscape = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\ |]/g;\n    if (value.match(toEscape) !== null) {\n      return value.replace(toEscape, '_');\n    } else {\n      return value;\n    }\n  }\n};\n\n\n/**\n * Returns if the given grid source is selected?\n * @export\n * @param {gmfx.GridSource} gridSource Grid source.\n * @return {boolean} Is selected?\n */\nexports.Controller_.prototype.isSelected = function(gridSource) {\n  return this.selectedTab === gridSource.source.label;\n};\n\n\n/**\n * Try to merge the mergable sources.\n * @param {Array.<ngeox.QueryResultSource>} sources Sources.\n * @return {Array.<ngeox.QueryResultSource>} The merged sources.\n * @private\n */\nexports.Controller_.prototype.getMergedSources_ = function(sources) {\n  const allSources = [];\n  /** @type {Object.<string, ngeox.QueryResultSource>} */\n  const mergedSources = {};\n\n  sources.forEach((source) => {\n    // check if this source can be merged\n    const mergedSource = this.getMergedSource_(source, mergedSources);\n\n    if (mergedSource === null) {\n      // this source should not be merged, add as is\n      allSources.push(source);\n    }\n  });\n\n  for (const mergedSourceId in mergedSources) {\n    allSources.push(mergedSources[mergedSourceId]);\n  }\n\n  return allSources;\n};\n\n\n/**\n * Check if the given source should be merged. If so, an artificial source\n * that will contain the features of all mergable sources is returned. If not,\n * `null` is returned.\n * @param {ngeox.QueryResultSource} source Source.\n * @param {Object.<string, ngeox.QueryResultSource>} mergedSources Merged sources.\n * @return {?ngeox.QueryResultSource} A merged source of null if the source should\n *    not be merged.\n * @private\n */\nexports.Controller_.prototype.getMergedSource_ = function(source, mergedSources) {\n  let mergeSourceId = null;\n\n  for (const currentMergeSourceId in this.mergeTabs) {\n    const sourceLabels = this.mergeTabs[currentMergeSourceId];\n    const containsSource = sourceLabels.some(sourceLabel => sourceLabel == source.label);\n    if (containsSource) {\n      mergeSourceId = currentMergeSourceId;\n      break;\n    }\n  }\n\n  if (mergeSourceId === null) {\n    // this source should not be merged\n    return null;\n  }\n\n  /** @type {ngeox.QueryResultSource} */\n  let mergeSource;\n  if (mergeSourceId in mergedSources) {\n    mergeSource = mergedSources[mergeSourceId];\n  } else {\n    mergeSource = {\n      features: [],\n      id: mergeSourceId,\n      label: mergeSourceId,\n      limit: this.maxResults,\n      pending: false,\n      queried: true,\n      tooManyResults: false,\n      totalFeatureCount: undefined\n    };\n    mergedSources[mergeSourceId] = mergeSource;\n  }\n\n  // add features of source to merge source\n  source.features.forEach((feature) => {\n    mergeSource.features.push(feature);\n  });\n\n  // if one of the source has too many results, the resulting merged source will\n  // also be marked with `tooManyResults` and will not contain any features.\n  mergeSource.tooManyResults = mergeSource.tooManyResults || source.tooManyResults;\n  if (mergeSource.tooManyResults) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + mergeSource.features.length : mergeSource.features.length;\n    mergeSource.features = [];\n  }\n  if (source.totalFeatureCount !== undefined) {\n    mergeSource.totalFeatureCount = (mergeSource.totalFeatureCount !== undefined) ?\n      mergeSource.totalFeatureCount + source.totalFeatureCount : source.totalFeatureCount;\n  }\n\n  return mergeSource;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @param {ngeox.QueryResultSource} source Result source.\n * @private\n */\nexports.Controller_.prototype.collectData_ = function(source) {\n  const features = source.features;\n  const allProperties = [];\n  const featureGeometriesNames = [];\n  const featuresForSource = {};\n  let properties, featureGeometryName;\n  features.forEach((feature) => {\n    properties = feature.getProperties();\n    if (properties !== undefined) {\n      // Keeps distinct geometry names to remove theme later.\n      featureGeometryName = feature.getGeometryName();\n      if (featureGeometriesNames.indexOf(featureGeometryName) === -1) {\n        featureGeometriesNames.push(featureGeometryName);\n      }\n\n      allProperties.push(properties);\n      featuresForSource[ngeoGridConfig.getRowUid(properties)] = feature;\n    }\n  });\n\n  this.cleanProperties_(allProperties, featureGeometriesNames);\n  if (allProperties.length > 0) {\n    const gridCreated = this.makeGrid_(allProperties, source);\n    if (gridCreated) {\n      this.featuresForSources_[`${source.label}`] = featuresForSource;\n    }\n  }\n};\n\n\n/**\n * Remove all unwanted columns.\n * @param {Array.<Object>} allProperties A row.\n * @param {Array.<string>} featureGeometriesNames Geometry names.\n * @private\n */\nexports.Controller_.prototype.cleanProperties_ = function(\n  allProperties, featureGeometriesNames) {\n  allProperties.forEach((properties) => {\n    featureGeometriesNames.forEach((featureGeometryName) => {\n      delete properties[featureGeometryName];\n    });\n    delete properties['boundedBy'];\n    delete properties['ngeo_feature_type_'];\n  });\n\n  if (this.removeEmptyColumns_ === true) {\n    this.removeEmptyColumnsFn_(allProperties);\n  }\n};\n\n\n/**\n * Remove columns that will be completely empty between each properties.\n * @param {Array.<Object>} allProperties A row.\n * @private\n */\nexports.Controller_.prototype.removeEmptyColumnsFn_ = function(\n  allProperties) {\n  // Keep all keys that correspond to at least one value in a properties object.\n  const keysToKeep = [];\n  let i, key;\n  for (key in allProperties[0]) {\n    for (i = 0; i < allProperties.length; i++) {\n      if (allProperties[i][key] !== undefined) {\n        keysToKeep.push(key);\n        break;\n      }\n    }\n  }\n  // Get all keys that previously always refers always to an empty value.\n  let keyToRemove;\n  allProperties.forEach((properties) => {\n    keyToRemove = [];\n    for (key in properties) {\n      if (keysToKeep.indexOf(key) === -1) {\n        keyToRemove.push(key);\n      }\n    }\n    // Remove these keys.\n    keyToRemove.forEach((key) => {\n      delete properties[key];\n    });\n  });\n};\n\n\n/**\n * @param {?Array.<Object>} data Grid rows.\n * @param {ngeox.QueryResultSource} source Query source.\n * @return {boolean} Returns true if a grid was created.\n * @private\n */\nexports.Controller_.prototype.makeGrid_ = function(data, source) {\n  const sourceLabel = `${source.label}`;\n  let gridConfig = null;\n  if (data !== null) {\n    gridConfig = this.getGridConfiguration_(data);\n    if (gridConfig === null) {\n      return false;\n    }\n  }\n  if (this.loadedGridSources.indexOf(sourceLabel) == -1) {\n    this.loadedGridSources.push(sourceLabel);\n  }\n  this.gridSources[sourceLabel] = {\n    configuration: gridConfig,\n    source: source\n  };\n  return true;\n};\n\n\n/**\n * @param {Array.<!Object>} data Grid rows.\n * @return {?ngeo.grid.Config} Grid config.\n * @private\n */\nexports.Controller_.prototype.getGridConfiguration_ = function(\n  data) {\n  googAsserts.assert(data.length > 0);\n  const clone = {};\n  Object.assign(clone, data[0]);\n  delete clone.ol_uid;\n  const columns = Object.keys(clone);\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const columnDefs = [];\n  columns.forEach((column) => {\n    columnDefs.push(/** @type {ngeox.GridColumnDef} */ ({\n      name: column\n    }));\n  });\n\n  if (columnDefs.length > 0) {\n    return new ngeoGridConfig(data, columnDefs);\n  } else {\n    // no columns, do not show grid\n    return null;\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.active = false;\n  this.pending = false;\n  this.gridSources = {};\n  this.loadedGridSources = [];\n  this.selectedTab = null;\n  this.tooManyResults = false;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.ngeoMapQuerent_.clear();\n  this.featuresForSources_ = {};\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n  }\n};\n\n\n/**\n * Select the tab for the given grid source.\n * @param {gmfx.GridSource} gridSource Grid source.\n * @export\n */\nexports.Controller_.prototype.selectTab = function(gridSource) {\n  const source = gridSource.source;\n  this.selectedTab = source.label;\n\n  if (this.unregisterSelectWatcher_) {\n    this.unregisterSelectWatcher_();\n    this.unregisterSelectWatcher_ = null;\n  }\n\n  if (gridSource.configuration !== null) {\n    this.unregisterSelectWatcher_ = this.$scope_.$watchCollection(\n      () => gridSource.configuration.selectedRows,\n      (newSelected, oldSelectedRows) => {\n        if (Object.keys(newSelected) !== Object.keys(oldSelectedRows)) {\n          this.onSelectionChanged_();\n        }\n      });\n  }\n  this.updateFeatures_(gridSource);\n\n  this.reflowGrid_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.reflowGrid_ = function() {\n  // This is a \"work-around\" to make sure that the grid is rendered correctly.\n  // When a pane is activated by setting `this.selectedTab`, the class `active`\n  // is not yet set on the pane. That's why the class is set manually, and\n  // after the pane is shown (in the next digest loop), the grid table can\n  // be refreshed.\n  const id = this.escapeValue(this.selectedTab || '');\n  const activePane = this.$element_.find(`div.tab-pane#${id}`);\n  activePane.removeClass('active').addClass('active');\n  this.$timeout_(() => {\n    activePane.find('div.ngeo-grid-table-container table')['trigger']('reflow');\n  });\n};\n\n\n/**\n * Called when the row selection has changed.\n * @private\n */\nexports.Controller_.prototype.onSelectionChanged_ = function() {\n  if (this.selectedTab === null) {\n    return;\n  }\n\n  const gridSource = this.gridSources[`${this.selectedTab}`];\n  this.updateFeatures_(gridSource);\n};\n\n\n/**\n * @param {gmfx.GridSource} gridSource Grid source\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function(gridSource) {\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n\n  if (gridSource.configuration === null) {\n    return;\n  }\n\n  const sourceLabel = `${gridSource.source.label}`;\n  const featuresForSource = this.featuresForSources_[sourceLabel];\n  const selectedRows = gridSource.configuration.selectedRows;\n\n  for (const rowId in featuresForSource) {\n    const feature = featuresForSource[rowId];\n    if (rowId in selectedRows) {\n      this.highlightFeatures_.push(feature);\n    } else {\n      this.features_.push(feature);\n    }\n  }\n};\n\n\n/**\n * Get the currently shown grid source.\n * @export\n * @return {gmfx.GridSource|null} Grid source.\n */\nexports.Controller_.prototype.getActiveGridSource = function() {\n  if (this.selectedTab === null) {\n    return null;\n  } else {\n    return this.gridSources[`${this.selectedTab}`];\n  }\n};\n\n\n/**\n * Returns if a row of the currently active grid is selected?\n * @export\n * @return {boolean} Is one selected?\n */\nexports.Controller_.prototype.isOneSelected = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return false;\n  } else {\n    return source.configuration.getSelectedCount() > 0;\n  }\n};\n\n\n/**\n * Returns the number of selected rows of the currently active grid.\n * @export\n * @return {number} The number of selected rows.\n */\nexports.Controller_.prototype.getSelectedRowCount = function() {\n  const source = this.getActiveGridSource();\n  if (source === null || source.configuration === null) {\n    return 0;\n  } else {\n    return source.configuration.getSelectedCount();\n  }\n};\n\n\n/**\n * Select all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.selectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.selectAll();\n  }\n};\n\n\n/**\n * Deselect all rows of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.unselectAll = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.unselectAll();\n  }\n};\n\n\n/**\n * Invert the selection of the currently active grid.\n * @export\n */\nexports.Controller_.prototype.invertSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    source.configuration.invertSelection();\n  }\n};\n\n\n/**\n * Zoom to the selected features.\n * @export\n */\nexports.Controller_.prototype.zoomToSelection = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const extent = olExtent.createEmpty();\n    this.highlightFeatures_.forEach((feature) => {\n      olExtent.extend(extent, feature.getGeometry().getExtent());\n    });\n    const size = this.map_.getSize();\n    googAsserts.assert(size !== undefined);\n    const maxZoom = this.maxRecenterZoom;\n    this.map_.getView().fit(extent, {size, maxZoom});\n  }\n};\n\n\n/**\n * Start a CSV download for the selected features.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  const source = this.getActiveGridSource();\n  if (source !== null) {\n    const columnDefs = source.configuration.columnDefs;\n    googAsserts.assert(columnDefs !== undefined);\n    const selectedRows = source.configuration.getSelectedRows();\n\n    this.ngeoCsvDownload_.startDownload(\n      selectedRows, columnDefs, this.filename_);\n  }\n};\n\n\nexports.controller('GmfDisplayquerygridController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.swipe\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscSwipe', []);\n\n\n/**\n * ===========================================\n * NOTE: It is an inversed copy of ngSwipe.\n * Angular ngSwipe assumes that vertical\n * swipe is a scroll.\n * For more details:\n * https://docs.angularjs.org/api/ngTouch/service/$swipe\n * ===========================================\n */\n\n/**\n * @ngdoc service\n * @name $verticalSwipe\n *\n * @description\n * The `$verticalSwipe` service is a service that abstracts the messier details of hold-and-drag swipe\n * behavior, to make implementing swipe-related directives more convenient.\n *\n * Requires the {@link ngTouch `ngTouch`} module to be installed.\n *\n * `$verticalSwipe` is used by the `ngeoSwipeUp` and `ngeoSwipeDown` directives.\n *\n * # Usage\n * The `$verticalSwipe` service is an object with a single method: `bind`. `bind` takes an element\n * which is to be watched for swipes, and an object with four handler functions. See the\n * documentation for `bind` below.\n */\n\nexports.factory('$verticalSwipe', [function() {\n  // The total distance in any direction before we make the call on swipe vs. scroll.\n  const MOVE_BUFFER_RADIUS = 10;\n\n  const POINTER_EVENTS = {\n    'mouse': {\n      start: 'mousedown',\n      move: 'mousemove',\n      end: 'mouseup'\n    },\n    'touch': {\n      start: 'touchstart',\n      move: 'touchmove',\n      end: 'touchend',\n      cancel: 'touchcancel'\n    },\n    'pointer': {\n      start: 'pointerdown',\n      move: 'pointermove',\n      end: 'pointerup',\n      cancel: 'pointercancel'\n    }\n  };\n\n  function getCoordinates(event) {\n    const originalEvent = event.originalEvent || event;\n    const touches = originalEvent.touches && originalEvent.touches.length ? originalEvent.touches : [originalEvent];\n    const e = (originalEvent.changedTouches && originalEvent.changedTouches[0]) || touches[0];\n\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n\n  function getEvents(pointerTypes, eventType) {\n    const res = [];\n    angular.forEach(pointerTypes, (pointerType) => {\n      const eventName = POINTER_EVENTS[pointerType][eventType];\n      if (eventName) {\n        res.push(eventName);\n      }\n    });\n    return res.join(' ');\n  }\n\n  return {\n    /**\n     * @ngdoc method\n     * @name $verticalSwipe#bind\n     * @param {!angular.JQLite} element Element.\n     * @param {Object} eventHandlers - Event handlers object with `start`, `cancel` and `end` callbacks\n     * @param {Array<string>} pointerTypes - Types of pointer\n     *\n     * @description\n     * The main method of `$verticalSwipe`. It takes an element to be watched for swipe motions, and an\n     * object containing event handlers.\n     * The pointer types that should be used can be specified via the optional\n     * third argument, which is an array of strings `'mouse'`, `'touch'` and `'pointer'`. By default,\n     * `$verticalSwipe` will listen for `mouse`, `touch` and `pointer` events.\n     *\n     * The four events are `start`, `move`, `end`, and `cancel`. `start`, `move`, and `end`\n     * receive as a parameter a coordinates object of the form `{ x: 150, y: 310 }` and the raw\n     * `event`. `cancel` receives the raw `event` as its single parameter.\n     *\n     * `start` is called on either `mousedown`, `touchstart` or `pointerdown`. After this event, `$verticalSwipe` is\n     * watching for `touchmove`, `mousemove` or `pointermove` events. These events are ignored until the total\n     * distance moved in either dimension exceeds a small threshold.\n     *\n     * Once this threshold is exceeded, either the vertical or vertical delta is greater.\n     * - If the vertical distance is greater, this is a swipe and `move` and `end` events follow.\n     * - If the horizontal distance is greater, this is a scroll, and we let the browser take over.\n     *   A `cancel` event is sent.\n     *\n     * `move` is called on `mousemove`, `touchmove` and `pointermove` after the above logic has determined that\n     * a swipe is in progress.\n     *\n     * `end` is called when a swipe is successfully completed with a `touchend`, `mouseup` or `pointerup`.\n     *\n     * `cancel` is called either on a `touchcancel` or `pointercancel`  from the browser, or when we begin scrolling\n     * as described above.\n     *\n     */\n    bind(element, eventHandlers, pointerTypes) {\n      // Absolute total movement, used to control swipe vs. scroll.\n      let totalX, totalY;\n      // Coordinates of the start position.\n      let startCoords;\n      // Last event's position.\n      let lastPos;\n      // Whether a swipe is active.\n      let active = false;\n\n      pointerTypes = pointerTypes || ['mouse', 'touch', 'pointer'];\n      element.on(getEvents(pointerTypes, 'start'), (event) => {\n        startCoords = getCoordinates(event);\n        active = true;\n        totalX = 0;\n        totalY = 0;\n        lastPos = startCoords;\n        if (eventHandlers['start']) {\n          eventHandlers['start'](startCoords, event);\n        }\n      });\n      const events = getEvents(pointerTypes, 'cancel');\n      if (events) {\n        element.on(events, (event) => {\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n        });\n      }\n\n      element.on(getEvents(pointerTypes, 'move'), (event) => {\n        if (!active) {\n          return;\n        }\n\n        // Android will send a touchcancel if it thinks we're starting to scroll.\n        // So when the total distance (+ or - or both) exceeds 10px in either direction,\n        // we either:\n        // - On totalX > totalY, we send preventDefault() and treat this as a swipe.\n        // - On totalY > totalX, we let the browser handle it as a scroll.\n\n        if (!startCoords) {\n          return;\n        }\n        const coords = getCoordinates(event);\n\n        totalX += Math.abs(coords.x - lastPos.x);\n        totalY += Math.abs(coords.y - lastPos.y);\n\n        lastPos = coords;\n\n        if (totalX < MOVE_BUFFER_RADIUS && totalY < MOVE_BUFFER_RADIUS) {\n          return;\n        }\n\n        // One of totalX or totalY has exceeded the buffer, so decide on swipe vs. scroll.\n        if (totalX > totalY) {\n          // Allow native scrolling to take over.\n          active = false;\n          if (eventHandlers['cancel']) {\n            eventHandlers['cancel'](event);\n          }\n          return;\n        } else {\n          // Prevent the browser from scrolling.\n          event.preventDefault();\n          if (eventHandlers['move']) {\n            eventHandlers['move'](coords, event);\n          }\n        }\n      });\n\n      element.on(getEvents(pointerTypes, 'end'), (event) => {\n        if (!active) {\n          return;\n        }\n        active = false;\n        if (eventHandlers['end']) {\n          eventHandlers['end'](getCoordinates(event), event);\n        }\n      });\n    }\n  };\n}]);\n\nexports.makeSwipeDirective_ = function(directiveName, direction, eventName) {\n  exports.directive(directiveName, ['$parse', '$verticalSwipe', function($parse, $verticalSwipe) {\n    // The maximum horizontal delta for a swipe should be less than 75px.\n    const MAX_HORIZONTAL_DISTANCE = 75;\n    // Horizontal distance should not be more than a fraction of the vertical distance.\n    const MAX_HORIZONTAL_RATIO = 0.3;\n    // At least a 30px lateral motion is necessary for a swipe.\n    const MIN_VERTICAL_DISTANCE = 30;\n\n    return function(scope, element, attr) {\n      const swipeHandler = $parse(attr[directiveName]);\n\n      let startCoords, valid;\n\n      function validSwipe(coords) {\n        // Check that it's within the coordinates.\n        // Absolute vertical distance must be within tolerances.\n        // Horizontal distance, we take the current X - the starting X.\n        // This is negative for downward swipes and positive for upward swipes.\n        // After multiplying by the direction (-1 for down, +1 for up), legal swipes\n        // (ie. same direction as the directive wants) will have a positive delta and\n        // illegal ones a negative delta.\n        // Therefore this delta must be positive, and larger than the minimum.\n        if (!startCoords) {\n          return false;\n        }\n        const deltaY = (coords.y - startCoords.y) * direction;\n        const deltaX = Math.abs(coords.x - startCoords.x);\n        return valid && // Short circuit for already-invalidated swipes.\n            deltaX < MAX_HORIZONTAL_DISTANCE &&\n            deltaY > 0 &&\n            deltaY > MIN_VERTICAL_DISTANCE &&\n            deltaX / deltaY < MAX_HORIZONTAL_RATIO;\n      }\n\n      const pointerTypes = ['touch'];\n      if (!angular.isDefined(attr['ngeoSwipeDisableMouse'])) {\n        pointerTypes.push('mouse');\n      }\n      $verticalSwipe.bind(element, {\n        'start': function(coords, event) {\n          startCoords = coords;\n          valid = true;\n        },\n        'cancel': function(event) {\n          valid = false;\n        },\n        'end': function(coords, event) {\n          if (validSwipe(coords)) {\n            scope.$apply(() => {\n              element.triggerHandler(eventName);\n              swipeHandler(scope, {$event: event});\n            });\n          }\n        }\n      }, pointerTypes);\n    };\n  }]);\n};\n\n// Down is negative Y-coordinate, up is positive.\nexports.makeSwipeDirective_('ngeoSwipeDown', 1, 'swipedown');\nexports.makeSwipeDirective_('ngeoSwipeUp', -1, 'swipeup');\n\n\nexport default exports;\n","/**\n * @module gmf.query.windowComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscSwipe from 'ngeo/misc/swipe.js';\n\n/** @suppress {extraRequire} - required for `ngeoQueryResult` */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olCollection from 'ol/Collection.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'angular-animate';\nimport 'angular-touch';\nimport 'bootstrap/js/collapse.js';\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryWindowComponent', [\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscSwipe.name,\n  ngeoQueryMapQuerent.module.name,\n  'ngAnimate',\n  'ngTouch',\n]);\n\n\nexports.config(['$animateProvider',\n  /**\n   * For performance reason, only perform animation on elements that have the\n   * `gmf-animatable` css class.\n   * @param {angular.$animateProvider} $animateProvider animate provider.\n   */\n  function($animateProvider) {\n    $animateProvider.classNameFilter(/gmf-animatable/);\n  }\n]);\n\n\nexports.value('gmfDisplayquerywindowTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfDisplayquerywindowTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/query/windowComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/query/windowComponent', require('./windowComponent.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfDisplayquerywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfDisplayquerywindowTemplateUrl($element, $attrs, gmfDisplayquerywindowTemplateUrl) {\n  return gmfDisplayquerywindowTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component to display results of the {@link ngeo.queryResult}\n * and shows related features on the map using the {@link ngeo.map.FeatureOverlayMgr}.\n *\n * You can override the default component's template by setting the\n * value `gmfDisplayquerywindowTemplateUrl`.\n *\n * Features displayed on the map use a default style but you can override these\n * styles by passing ol.style.Style objects as attributes of this component.\n *\n * Example:\n *\n *      <gmf-displayquerywindow\n *        gmf-displayquerywindow-featuresstyle=\"ctrl.styleForAllFeatures\"\n *        gmf-displayquerywindow-selectedfeaturestyle=\"ctrl.styleForTheCurrentFeature\">\n *      </gmf-displayquerywindow>\n *\n * @htmlAttribute {ol.style.Style} gmf-displayquerywindow-featuresstyle A style\n *     object for all features from the result of the query.\n * @htmlAttribute {ol.style.Style} selectedfeaturestyle A style\n *     object for the current displayed feature.\n * @htmlAttribute {boolean=} defaultcollapsed If the query result window is\n *     collapsed.\n * @htmlAttribute {boolean} desktop If the component is used in the desktop\n *     application.\n * @htmlAttribute {boolean} showunqueriedlayers If also layers, that have not\n *     been queried for the last query, should be shown in the filter.\n *\n * @ngdoc component\n * @ngname gmfDisplayquerywindow\n */\nexports.component_ = {\n  controller: 'GmfDisplayquerywindowController as ctrl',\n  bindings: {\n    'draggableContainment': '<?gmfDisplayquerywindowDraggableContainment',\n    'featuresStyleFn': '&gmfDisplayquerywindowFeaturesstyle',\n    'selectedFeatureStyleFn': '&gmfDisplayquerywindowSelectedfeaturestyle',\n    'defaultCollapsedFn': '&?gmfDisplayquerywindowDefaultcollapsed',\n    'desktop': '=gmfDisplayquerywindowDesktop',\n    'showUnqueriedLayers': '=gmfDisplayquerywindowShowunqueriedlayers'\n  },\n  templateUrl: gmfDisplayquerywindowTemplateUrl\n};\n\n\nexports.component('gmfDisplayquerywindow', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeox.QueryResult} ngeoQueryResult ngeo query result.\n * @param {!ngeo.query.MapQuerent} ngeoMapQuerent ngeo map querent service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n *     overlay manager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDisplayquerywindowController\n */\nexports.Controller_ = function($element, $scope, ngeoQueryResult, ngeoMapQuerent,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {Element|string}\n   * @export\n   */\n  this.draggableContainment;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.desktop = false;\n\n  /**\n   * Is the window currently collapsed?\n   * When used for Desktop, it is shown non-collapsed.\n   * @type {boolean}\n   * @export\n   */\n  this.collapsed = !this.desktop;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.showUnqueriedLayers_ = false;\n\n  /**\n   * Object that is used to filter the source list in the template.\n   * @type {Object}\n   * @export\n   */\n  this.sourcesFilter = {'queried': true};\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @export\n   */\n  this.ngeoQueryResult = {\n    sources: [],\n    total: 0,\n    pending: false\n  };\n\n  /**\n   * @type {!ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = ngeoMapQuerent;\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.selectedSource = null;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  /**\n   * @type {!ngeo.map.FeatureOverlayMgr}\n   * @private\n   */\n  this.ngeoFeatureOverlayMgr_ = ngeoFeatureOverlayMgr;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.highlightFeatures_ = new olCollection();\n\n  /**\n   * @type {?ngeox.QueryResultSource}\n   * @export\n   */\n  this.source = null;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature = null;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.currentResult = -1;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isNext = true;\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.animate = 0;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.open = false;\n\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  $scope.$watchCollection(\n    () => ngeoQueryResult,\n    (newQueryResult, oldQueryResult) => {\n      this.updateQueryResult_(newQueryResult);\n      if (newQueryResult.total > 0) {\n        this.show();\n      } else if (oldQueryResult !== newQueryResult) {\n        this.close();\n      }\n    });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.draggableContainment = this.draggableContainment || 'document';\n  this.desktop = this.desktop;\n  this.collapsed = this['defaultCollapsedFn'] ?\n    this['defaultCollapsedFn']() === true : !this.desktop;\n\n  this.showUnqueriedLayers_ = this['showUnqueriedLayers'] ?\n    this['showUnqueriedLayers'] === true : false;\n\n  this.sourcesFilter = this.showUnqueriedLayers_ ? {} : {'queried': true};\n\n  const featuresOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  featuresOverlay.setFeatures(this.features_);\n  const featuresStyle = this['featuresStyleFn']();\n  if (featuresStyle !== undefined) {\n    googAsserts.assertInstanceof(featuresStyle, olStyleStyle);\n    featuresOverlay.setStyle(featuresStyle);\n  }\n\n  const highlightFeaturesOverlay = this.ngeoFeatureOverlayMgr_.getFeatureOverlay();\n  highlightFeaturesOverlay.setFeatures(this.highlightFeatures_);\n  let highlightFeatureStyle = this['selectedFeatureStyleFn']();\n  if (highlightFeatureStyle !== undefined) {\n    googAsserts.assertInstanceof(highlightFeatureStyle, olStyleStyle);\n  } else {\n    const fill = new olStyleFill({color: [255, 0, 0, 0.6]});\n    const stroke = new olStyleStroke({color: [255, 0, 0, 1], width: 2});\n    highlightFeatureStyle = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n  }\n  highlightFeaturesOverlay.setStyle(highlightFeatureStyle);\n\n  if (this.desktop) {\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').draggable({\n      'cancel': 'input,textarea,button,select,option,tr',\n      'containment': this.draggableContainment\n    });\n    this.element_.find('.gmf-displayquerywindow .windowcontainer').resizable({\n      'minHeight': 240,\n      'minWidth': 240\n    });\n  }\n};\n\n\n/**\n * Remove current displayed results then get new results from the\n * ngeoQueryResult service. Display all results on the map and display,\n * highlight the first feature.\n * @export\n */\nexports.Controller_.prototype.show = function() {\n  this.clear();\n  this.updateFeatures_();\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateFeatures_ = function() {\n  this.setCurrentResult_(0, false);\n  if (this.source !== null) {\n    this.collectFeatures_();\n    this.highlightCurrentFeature_();\n    this.open = true;\n  }\n};\n\n/**\n * Select a source and a feature depending of the given position.\n * @param {number} position The index of the feature. If the position is bigger\n * than the length of the first source, get it in the next source. Etc.\n * @param {boolean} setHighlight True to set the highlight automatically.\n * @return {boolean} True if result has changed. False else.\n * @private\n */\nexports.Controller_.prototype.setCurrentResult_ = function(\n  position, setHighlight) {\n  let hasChanged = false;\n  if (position !== this.currentResult) {\n    let i, source, features;\n    const lastFeature = this.feature;\n    const sources = this.ngeoQueryResult.sources;\n    this.currentResult = position;\n    for (i = 0; i < sources.length; i++) {\n      source = sources[i];\n      if (this.selectedSource !== null && this.selectedSource !== source) {\n        // when filtering on a source, only consider features of the selected source\n        continue;\n      }\n      features = source.features;\n      if (position >= features.length) {\n        position -= features.length;\n      } else {\n        this.source = source;\n        this.feature = source.features[position];\n        hasChanged = true;\n        break;\n      }\n    }\n    if (setHighlight) {\n      this.highlightCurrentFeature_(lastFeature);\n    }\n  }\n  return hasChanged;\n};\n\n\n/**\n * Select the logical previous source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.previous = function() {\n  let position = this.currentResult - 1;\n  if (position < 0) {\n    position = this.getResultLength() - 1;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(false);\n  }\n};\n\n\n/**\n * Select the logical next source and feature then highlight this feature on\n * the map.\n * @export\n */\nexports.Controller_.prototype.next = function() {\n  let position = this.currentResult + 1;\n  const positionMax = this.getResultLength() - 1;\n  if (position > positionMax) {\n    position = 0;\n  }\n  const hasChanged = this.setCurrentResult_(position, true);\n  if (hasChanged) {\n    this.animate_(true);\n  }\n};\n\n\n/**\n * Remove features without properties from the query result.\n * @param {ngeox.QueryResult} queryResult ngeo query result.\n * @private\n */\nexports.Controller_.prototype.updateQueryResult_ = function(queryResult) {\n  this.ngeoQueryResult.total = 0;\n  this.ngeoQueryResult.sources.length = 0;\n  for (let i = 0; i < queryResult.sources.length; i++) {\n    const source = queryResult.sources[i];\n    source.features = source.features.filter((feature) => {\n      googAsserts.assert(feature);\n      return !olObj.isEmpty(ngeoMiscFeatureHelper.getFilteredFeatureValues(feature));\n    });\n    this.ngeoQueryResult.sources.push(source);\n    this.ngeoQueryResult.total += source.features.length;\n  }\n};\n\n/**\n * Get the total count of features in the result of the query. If a source\n * has been select, only the number of features of that source are returned.\n * @return {number} Total number of features.\n * @export\n */\nexports.Controller_.prototype.getResultLength = function() {\n  if (this.selectedSource === null) {\n    return this.ngeoQueryResult.total;\n  } else {\n    return this.selectedSource.features.length;\n  }\n};\n\n\n/**\n * @return {boolean} If the first result is active.\n * @export\n */\nexports.Controller_.prototype.isFirst = function() {\n  return this.currentResult == 0;\n};\n\n\n/**\n * @return {boolean} If the last result is active.\n * @export\n */\nexports.Controller_.prototype.isLast = function() {\n  return this.currentResult == this.getResultLength() - 1;\n};\n\n\n/**\n * Delete the unwanted ol3 properties from the current feature then return the\n * properties.\n * @return {Object?} Filtered properties of the current feature or null.\n * @export\n */\nexports.Controller_.prototype.getFeatureValues = function() {\n  if (!this.feature) {\n    return null;\n  }\n  return ngeoMiscFeatureHelper.getFilteredFeatureValues(this.feature);\n};\n\n\n/**\n * Special function that's used to set the \"animation\" value after to set the\n * \"isNext\" value. The aim is to wait on Angular to add a class (corresponding\n * to \"isNext\") on the DOM before to set the \"animation\" value and do the\n * animation.\n * @param {boolean} isNext used to indicate if the user wants to see the next\n * or the previous result.\n * @private\n */\nexports.Controller_.prototype.animate_ = function(isNext) {\n  this.isNext = isNext;\n  this.animate++;\n};\n\n\n/**\n * Collect all features in the queryResult object.\n * @private\n */\nexports.Controller_.prototype.collectFeatures_ = function() {\n  const sources = this.ngeoQueryResult.sources;\n  this.features_.clear();\n  for (let i = 0; i < sources.length; i++) {\n    const source = sources[i];\n    if (this.selectedSource !== null && this.selectedSource !== source) {\n      // when filtering on a source, only add features of the selected source\n      continue;\n    }\n    const features = source.features;\n    for (let ii = 0; ii < features.length; ii++) {\n      this.features_.push(features[ii]);\n    }\n  }\n};\n\n\n/**\n * Highlight the current displayed feature.\n * @param {ol.Feature=} opt_lastFeature last highlighted feature. Require if\n * it exists because it must be added to the 'non-selected' features collection.\n * @private\n */\nexports.Controller_.prototype.highlightCurrentFeature_ =\nfunction(opt_lastFeature) {\n  this.highlightFeatures_.clear();\n  this.features_.remove(this.feature);\n  this.highlightFeatures_.push(this.feature);\n  if (opt_lastFeature !== undefined) {\n    this.features_.push(opt_lastFeature);\n  }\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.close = function() {\n  this.open = false;\n  this.clear();\n  this.ngeoMapQuerent_.clear();\n};\n\n\n/**\n * Remove the current selected feature and source and remove all features\n * from the map.\n * @export\n */\nexports.Controller_.prototype.clear = function() {\n  this.feature = null;\n  this.source = null;\n  this.currentResult = -1;\n  this.features_.clear();\n  this.highlightFeatures_.clear();\n  this.selectedSource = null;\n};\n\n\n/**\n * @param {ngeox.QueryResultSource} source The source to select.\n * @export\n */\nexports.Controller_.prototype.setSelectedSource = function(source) {\n  if (source !== null && source.features.length <= 0) {\n    // sources with no results can not be selected\n    return;\n  }\n  this.clear();\n  this.selectedSource = source;\n  this.updateFeatures_();\n};\n\n\nexports.controller('GmfDisplayquerywindowController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.query.extraModule\n */\nimport gmfQueryGridComponent from 'gmf/query/gridComponent.js';\nimport gmfQueryWindowComponent from 'gmf/query/windowComponent.js';\n\nimport './grid.less';\nimport './window.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfQueryExtraModule', [\n  gmfQueryGridComponent.name,\n  gmfQueryWindowComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.search.module\n */\nimport gmfSearchComponent from 'gmf/search/component.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\n\nimport './search.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearchModule', [\n  gmfSearchComponent.name,\n  gmfSearchFulltextSearch.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.selectorComponent\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeSelectorComponent', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/theme/selectorComponent', require('./selectorComponent.html'));\n});\n\n\nexports.value('gmfThemeSelectorTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfThemeSelectorTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/theme/selectorComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfThemeSelectorTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfThemeSelectorTemplateUrl($attrs, gmfThemeSelectorTemplateUrl) {\n  return gmfThemeSelectorTemplateUrl($attrs);\n}\n\n\n/**\n * Note that this component works with the {@link gmf.layertree.TreeManager}.\n * Setting the theme will update the \"tree\" object of\n * this {@link gmf.layertree.TreeManager}.\n *\n * Example:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span ng-if=\"mainCtrl.gmfThemeManager.modeFlush\">\n *            <span translate>Theme:</span>\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.getThemeName()\" translate>Loading...</b>\n *            <b ng-if=\"mainCtrl.gmfThemeManager.getThemeName()\">{{mainCtrl.gmfThemeManager.getThemeName()|translate}}</b>\n *          </span>\n *          <span ng-if=\"!mainCtrl.gmfThemeManager.modeFlush\">\n *            <b ng-if=\"!mainCtrl.gmfThemeManager.themeName\" translate>Themes</b>\n *          </span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *\n * The theme selector can operate in a 'flush' (as above) or 'add' mode. For more information\n * about these modes, refer to the documentation of {@link gmf.layertree.TreeManager}.\n *\n * Example in 'add' mode:\n *\n *      <a href class=\"btn btn-default btn-block btn-primary\" data-toggle=\"dropdown\">\n *          <span class=\"fa fa-grid\"></span>\n *          <span translate>Themes</span>\n *          <span class=\"caret\"></span>\n *      </a>\n *      <gmf-themeselector\n *         id=\"themes\"\n *         data-header-title=\"Themes\"\n *         gmf-themeselector-filter=\"::mainCtrl.filter\">\n *      </gmf-themeselector>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('gmfTreeManagerModeFlush', false);\n *        })();\n *      </script>\n *\n * @htmlAttribute {Function} gmf-themeselector-filter The themes filter.\n *\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'filter': '<gmfThemeselectorFilter'\n  },\n  controller: 'gmfThemeselectorController',\n  templateUrl: gmfThemeSelectorTemplateUrl\n};\n\nexports.component('gmfThemeselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {gmf.theme.Manager} gmfThemeManager Tree manager service.\n * @param {gmf.theme.Themes} gmfThemes Themes service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfThemeselectorController\n */\nexports.Controller_ = function($scope, gmfThemeManager, gmfThemes) {\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = gmfThemeManager;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.themes;\n\n  /**\n   * @type {Function|undefined}\n   * @export\n   */\n  this.filter;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  this.listenerKeys_.push(olEvents.listen(this.gmfThemes_, 'change', this.setThemes_, this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n/**\n * Store the loaded themes locally applying a filter (if any), then set the\n * current theme.\n * @private\n */\nexports.Controller_.prototype.setThemes_ = function() {\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    // Keep only the themes dedicated to the theme switcher\n    this.themes = this.filter ? themes.filter(this.filter) : themes;\n  });\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @param {boolean=} opt_silent if true it will be no user message if\n *     the theme should be added but it's already added.\n * @export\n */\nexports.Controller_.prototype.setTheme = function(theme, opt_silent) {\n  if (theme) {\n    this.gmfThemeManager.addTheme(theme, opt_silent);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.listenerKeys_.forEach(olEvents.unlistenByKey);\n  this.listenerKeys_.length = 0;\n};\n\n\nexports.controller('gmfThemeselectorController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.theme.module\n */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\nimport gmfThemeSelectorComponent from 'gmf/theme/selectorComponent.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfThemeModule', [\n  gmfThemeSelectorComponent.name,\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.displaywindowComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\nimport 'font-awesome/css/font-awesome.css';\nimport 'jquery-ui/ui/widgets/resizable.js';\nimport 'jquery-ui/ui/widgets/draggable.js';\nimport 'angular-sanitize';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMessageDisplaywindowComponent', [\n  'ngSanitize',\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/message/displaywindowComponent', require('./displaywindowComponent.html'));\n});\n\n\nexports.value('ngeoMessageDisplaywindowTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoMessageDisplaywindowTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/message/displaywindowComponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoMessageDisplaywindowTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoMessageDisplaywindowTemplateUrl($attrs, ngeoMessageDisplaywindowTemplateUrl) {\n  return ngeoMessageDisplaywindowTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$sce} $sce Angular sce service.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!angular.$compile} $compile The compile provider.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname ngeoDisplaywindowComponentController\n   */\n  constructor($element, $sce, $scope, $compile) {\n\n    // === Binding Properties ===\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.clearOnClose;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.content = null;\n\n    /**\n     * @type {?string}\n     */\n    this.contentTemplate = null;\n\n    /**\n     * @type {?angular.Scope}\n     */\n    this.contentScope = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.draggable;\n\n    /**\n     * @type {Element|string}\n     * @export\n     */\n    this.draggableContainment;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.desktop;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.height = null;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.open;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.resizable;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.title = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.url = null;\n\n    /**\n     * @type {?string}\n     * @export\n     */\n    this.width = null;\n\n\n    // === Injected Properties ===\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.$sce}\n     * @private\n     */\n    this.sce_ = $sce;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n\n    // Initialize binding properties\n    this.clearOnClose = this.clearOnClose !== false;\n    this.content = this.content || null;\n    this.contentTemplate = this.contentTemplate || null;\n    this.contentScope = this.contentScope || null;\n    this.desktop = this.desktop !== false;\n    this.draggableContainment = this.draggableContainment || 'document';\n    this.open = this.open === true;\n    this.height = this.height || '240px';\n    this.width = this.width || '240px';\n\n    this.draggable = this.draggable !== undefined ?\n      this.draggable : this.desktop;\n    this.resizable = this.resizable !== undefined ?\n      this.resizable : this.desktop;\n\n    // Draggable\n    if (this.draggable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').draggable({\n        'containment': this.draggableContainment,\n        'handle': 'div.header'\n      });\n    }\n\n    // Resizable\n    if (this.resizable) {\n      this.element_.find('.ngeo-displaywindow .windowcontainer').resizable({\n        'minHeight': 240,\n        'minWidth': 240\n      });\n    }\n\n    if (this.contentTemplate) {\n      this.updateContentTemplate_();\n    }\n\n    this.scope_.$watch(\n      () => this.contentTemplate,\n      () => this.updateContentTemplate_()\n    );\n  }\n\n  /**\n   *  @private\n   */\n  updateContentTemplate_() {\n    const scope = googAsserts.assert(this.contentScope || this.scope_);\n    const compiled = this.compile_(this.contentTemplate)(scope);\n    const displayWindow = this.element_.find('.ngeo-displaywindow .windowcontainer .animation-container .content-template-container');\n    displayWindow.empty();\n    displayWindow.append(/** @type {?} */ (compiled));\n  }\n\n  /**\n   * @export\n   */\n  close() {\n    this.open = false;\n    if (this.clearOnClose) {\n      this.clear_();\n    }\n  }\n\n  /**\n   * @return {!Object.<string, string>} CSS style when using width/height\n   * @export\n   */\n  get style() {\n    return {\n      'height': this.height,\n      'width': this.width\n    };\n  }\n\n  /**\n   * @return {string|undefined} Trusted url.\n   * @export\n   */\n  get urlTrusted() {\n    if (this.url) {\n      return /** @type {string} */ (this.sce_.trustAsResourceUrl(this.url));\n    }\n  }\n\n  /**\n   * @export\n   */\n  clear_() {\n    this.content = null;\n    this.title = null;\n    this.url = null;\n  }\n};\n\n\n/**\n * The `ngeo-displaywindow` component is an alternative to the `ngeo.message.Popup`.\n * What they have in common:\n *\n * - support title\n * - support url to be shown in an iframe\n * - support plain HTML content\n * - support sizing, i.e. height and width.\n * - support being opened/closed\n *\n * The differences with the `ngeo.message.Popup` are:\n *\n * - it supports being dragged\n * - it supports being resized\n * - support angularjs template content\n *\n * Example:\n *      <ngeo-displaywindow\n *        class=\"window1\"\n *        url=\"::ctrl.window1Content\"\n *        desktop=\"::false\"\n *        open=\"::true\"\n *        title=\"'Window 1 - The simplest window (close kills it)'\">\n *      </ngeo-displaywindow>\n *\n * @htmlAttribute {boolean=} ngeo-displaywindow-clear-on-close Whether to clear the content on close or not.\n * @htmlAttribute {string=} ngeo-displaywindow-content The html content. If not provided, you must provide\n *     an url.\n * @htmlAttribute {string=} ngeo-displaywindow-content-template AngularJS template. It gets compiled during runtime\n * with the supplied scope (ngeo-displaywindow-content-scope).\n * @htmlAttribute {angular.Scope=} ngeo-displaywindow-content-scope Scope used for ngeo-displaywindow-content-template.\n * @htmlAttribute {boolean=} ngeo-displaywindow-desktop If true, the window is draggable and resizable. If\n *     not set, you must set manually both parameter.\n * @htmlAttribute {boolean=} ngeo-displaywindow-draggable Whether the window is draggable or not.\n * @htmlAttribute {string=} ngeo-displaywindow-draggable-containment The zone (CSS selector) where the window\n *     is authorized to be dragged.\n * @htmlAttribute {string=} ngeo-displaywindow-height The default height of the window.\n * @htmlAttribute {boolean=} ngeo-displaywindow-open Whether the window is open or not.\n * @htmlAttribute {string=} ngeo-displaywindow-title The html title of the window.\n * @htmlAttribute {string=} ngeo-displaywindow-url The URL to open in an iframe, in the window. The content\n *     attribute must not be provided.\n * @htmlAttribute {string=} ngeo-displaywindow-width The default width of the window.\n * @ngdoc component\n * @ngname ngeoDisplaywindow\n */\nexports.component('ngeoDisplaywindow', {\n  bindings: {\n    'clearOnClose': '<?',\n    'content': '=?',\n    'contentTemplate': '=?',\n    'contentScope': '<?',\n    'desktop': '<?',\n    'draggable': '<?',\n    'draggableContainment': '<?',\n    'height': '=?',\n    'open': '=?',\n    'resizable': '<?',\n    'title': '=?',\n    'url': '=?',\n    'width': '=?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoMessageDisplaywindowTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.controlComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\nimport olControlControl from 'ol/control/Control.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoControl', []);\n\n\n/**\n * Provides a directive that can be used to add a control to the map\n * using a DOM element.\n *\n * Example:\n *\n *     <div ngeo-control=\"ctrl.control\" ngeo-control-map=\"ctrl.map\"></div>\n *\n * The expression passed to \"ngeo-control\" should evaluate to a control\n * instance, and the expression passed to \"ngeo-control-map\" should\n * evaluate to a map instance.\n *\n * See our live example: [../examples/control.html](../examples/control.html)\n *\n * @htmlAttribute {ol.Map} ngeo-control-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoControl\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const control = /** @type {ol.control.Control} */\n              (scope.$eval(attrs['ngeoControl']));\n      googAsserts.assertInstanceof(control, olControlControl);\n\n      const map = /** @type {ol.Map} */\n              (scope.$eval(attrs['ngeoControlMap']));\n      googAsserts.assertInstanceof(map, olMap);\n\n      control.setTarget(element[0]);\n      map.addControl(control);\n    }\n  };\n};\n\n\nexports.directive('ngeoControl', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.filereaderComponent\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoFilereader', []);\n\n/**\n * This directive is to used on an input file element. When a file is selected\n * the directive uses the browser `FileReader` API to read the file. The file\n * content is provided to the directive user through the assignable expression.\n * Only works for text files (`readAsText` used for reading the file). And does\n * not work in Internet Explorer 9.\n *\n * Example:\n *\n *      <input type=\"file\" ngeo-filereader=\"ctrl.fileContent\"\n *        ngeo-filereader-supported=\"ctrl.supported\"/>\n *\n * See our live example: [../examples/importfeatures.html](../examples/importfeatures.html)\n *\n * @htmlAttribute {string} ngeo-filereader The content of the file read.\n * @htmlAttribute {boolean=} ngeo-filereader-supported Whether the FileReader API is supported.\n * @param {angular.$window} $window The Angular $window service.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoFilereader\n */\nexports.component_ = function($window) {\n  return {\n    restrict: 'A',\n    scope: {\n      'fileContent': '=ngeoFilereader',\n      'supported': '=?ngeoFilereaderSupported'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const supported = 'FileReader' in $window;\n      scope['supported'] = supported;\n      if (!supported) {\n        return;\n      }\n      element.on('change', (changeEvent) => {\n        /** @type {!FileReader} */\n        const fileReader = new $window.FileReader();\n        fileReader.onload = (\n          /**\n                 * @param {!ProgressEvent} evt Event.\n                 */\n          function(evt) {\n            scope.$apply(() => {\n              scope['fileContent'] = evt.target.result;\n            });\n          });\n        fileReader.readAsText(changeEvent.target.files[0]);\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoFilereader',\n  exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.getBrowserLanguage\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGetBrowserLanguage', []);\n\n\n/**\n * Provides a function that returns the most appropriate 2-letter\n * language code depending on the list of available languages and the browser\n * languages settings.\n *\n * @param {angular.$window} $window Angular $window service.\n * @return {ngeox.miscGetBrowserLanguage} The \"GetBrowserLanguage\" function.\n *\n * @ngdoc service\n * @ngname ngeoGetBrowserLanguage\n * @ngInject\n */\nexports.factory_ = function($window) {\n  return (\n    /**\n     * @param {Array.<string>} availableLanguages Available languages.\n     * @return {string} The \"best\" language code.\n     */\n    function(availableLanguages) {\n      const nav = $window.navigator;\n      let browserLanguages = nav.languages || nav.language ||\n            nav.browserLanguage || nav.systemLanguage || nav.userLanguage;\n      if (!Array.isArray(browserLanguages)) {\n        browserLanguages = [browserLanguages];\n      }\n      browserLanguages = browserLanguages.map(item => item.substring(0, 2));\n      // remove duplicated language codes\n      browserLanguages = browserLanguages.filter((item, index, arr) => arr.indexOf(item) == index);\n      const supportedLanguages = browserLanguages.filter(item => availableLanguages.indexOf(item) != -1);\n      return supportedLanguages[0];\n    });\n};\n\nexports.factory('ngeoGetBrowserLanguage', exports.factory_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.extraModule\n */\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscControlComponent from 'ngeo/misc/controlComponent.js';\nimport ngeoMiscDatepickerComponent from 'ngeo/misc/datepickerComponent.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscFile from 'ngeo/misc/File.js';\nimport ngeoMiscFilereaderComponent from 'ngeo/misc/filereaderComponent.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoMiscGetBrowserLanguage from 'ngeo/misc/getBrowserLanguage.js';\nimport ngeoMiscSortableComponent from 'ngeo/misc/sortableComponent.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMiscExtraModule', [\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscControlComponent.name,\n  ngeoMiscDatepickerComponent.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscFile.module.name,\n  ngeoMiscFilereaderComponent.name,\n  ngeoMiscFilters.name,\n  ngeoMiscGetBrowserLanguage.name,\n  ngeoMiscSortableComponent.name,\n  ngeoMiscTime.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.mapQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport * as olEvents from 'ol/events.js';\n\nconst exports = angular.module('ngeoMapQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"map query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, clicks made on the map are listened by the directive\n * and a request gets issued to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-map-query=\"\"\n *        ngeo-map-query-map=\"::ctrl.map\"\n *        ngeo-map-query-active=\"ctrl.queryActive\"\n *        ngeo-map-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See our live example: [../examples/mapquery.html](../examples/mapquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @param {angular.$injector} $injector Main injector.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoMapQuery\n */\nexports.directive_ = function(ngeoMapQuerent, $injector) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      const map = scope.$eval(attrs['ngeoMapQueryMap']);\n      let clickEventKey_ = null;\n      let pointerMoveEventKey_ = null;\n\n      /**\n       * Called when the map is clicked while this controller is active. Issue\n       * a request to the query service using the coordinate that was clicked.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handleMapClick_ = function(evt) {\n        const coordinate = evt.coordinate;\n        ngeoMapQuerent.issue({\n          coordinate,\n          map\n        });\n      };\n\n      /**\n       * Called when the pointer is moved while this controller is active.\n       * Change the mouse pointer when hovering a non-transparent pixel on the\n       * map.\n       * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n       */\n      const handlePointerMove_ = function(evt) {\n        if (!evt.dragging) {\n          const pixel = map.getEventPixel(evt.originalEvent);\n          const queryable = function(layer) {\n            const visible = layer.get('visible');\n            const sourceids = layer.get('querySourceIds');\n            return visible && !!sourceids;\n          };\n          const hit = map.forEachLayerAtPixel(pixel, () => true, undefined, queryable);\n          map.getTargetElement().style.cursor = hit ? 'pointer' : '';\n        }\n      };\n\n      /**\n       * Listen to the map events.\n       */\n      const activate_ = function() {\n        clickEventKey_ = olEvents.listen(map, 'singleclick', handleMapClick_);\n        const queryOptions = /** @type {ngeox.QueryOptions} */ (\n          $injector.has('ngeoQueryOptions') ? $injector.get('ngeoQueryOptions') : {}\n        );\n        if (queryOptions.cursorHover) {\n          pointerMoveEventKey_ = olEvents.listen(map, 'pointermove', handlePointerMove_);\n        }\n      };\n\n      /**\n       * Unlisten the map events.\n       */\n      const deactivate_ = function() {\n        if (clickEventKey_ !== null) {\n          olEvents.unlistenByKey(clickEventKey_);\n          clickEventKey_ = null;\n        }\n        if (pointerMoveEventKey_ !== null) {\n          olEvents.unlistenByKey(pointerMoveEventKey_);\n          pointerMoveEventKey_ = null;\n        }\n        if (scope.$eval(attrs['ngeoMapQueryAutoclear']) !== false) {\n          ngeoMapQuerent.clear();\n        }\n      };\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoMapQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            activate_();\n          } else {\n            deactivate_();\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoMapQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractAppController\n */\nimport 'jquery';\nimport 'angular';\nimport 'angular-gettext';\nimport 'angular-dynamic-locale';\nimport gmfAuthenticationModule from 'gmf/authentication/module.js';\n\nimport gmfBackgroundlayerselectorComponent from 'gmf/backgroundlayerselector/component.js';\nimport gmfDatasourceModule from 'gmf/datasource/module.js';\nimport gmfDisclaimerComponent from 'gmf/disclaimer/component.js';\nimport gmfFiltersModule from 'gmf/filters/module.js';\nimport gmfLayertreeModule from 'gmf/layertree/module.js';\nimport gmfMapModule from 'gmf/map/module.js';\nimport gmfQueryExtraModule from 'gmf/query/extraModule.js';\nimport gmfSearchModule from 'gmf/search/module.js';\nimport gmfThemeModule from 'gmf/theme/module.js';\nimport ngeoMessageDisplaywindowComponent from 'ngeo/message/displaywindowComponent.js';\nimport ngeoMiscExtraModule from 'ngeo/misc/extraModule.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport ngeoQueryMapQueryComponent from 'ngeo/query/mapQueryComponent.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olMap from 'ol/Map.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\n/**\n * Application abstract controller.\n *\n * This file includes `goog.require` for base components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  /**\n   * Location service\n   * @type {ngeo.statemanager.Location}\n   */\n  this.ngeoLocation = $injector.get('ngeoLocation');\n  if (this.ngeoLocation.hasParam('debug')) {\n    // make the injector globally available\n    window.injector = $injector;\n  }\n\n  googAsserts.assertInstanceof(this.map, olMap);\n\n  /**\n   * Ngeo FeatureHelper service\n   * @type {ngeo.misc.FeatureHelper}\n   */\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n  ngeoFeatureHelper.setProjection(googAsserts.assert(this.map.getView().getProjection()));\n\n  /**\n   * @type {gmf.theme.Manager}\n   * @export\n   */\n  this.gmfThemeManager = $injector.get('gmfThemeManager');\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.get('gmfTreeManager');\n\n  /**\n   * Themes service\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.get('gmfThemes');\n\n  /**\n   * Permalink service\n   * @type {gmf.permalink.Permalink}\n   * @private\n   */\n  this.permalink_ = $injector.get('gmfPermalink');\n\n  /**\n   * Authentication service\n   * @type {gmf.authentication.Service}\n   */\n  const gmfAuthentication = $injector.get('gmfAuthenticationService');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.hasEditableLayers = false;\n\n  /**\n   * @private\n   */\n  this.updateHasEditableLayers_ = function() {\n    this.gmfThemes_.hasEditableLayers().then((hasEditableLayers) => {\n      this.hasEditableLayers = hasEditableLayers;\n    });\n  };\n\n  /**\n   * Url to redirect to after login success.\n   * @type {?string}\n   */\n  this.loginRedirectUrl = null;\n\n  /**\n   * Information message for the login form.\n   * @type {?string}\n   */\n  this.loginInfoMessage = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.userMustChangeItsPassword = false;\n\n  $scope.$on('authenticationrequired', (event, args) => {\n    /** @type {angularGettext.Catalog} */\n    const gettextCatalog = $injector.get('gettextCatalog');\n    this.loginInfoMessage = gettextCatalog.getString(\n      'Some layers in this link are not accessible to unauthenticated users. ' +\n      'Please log in to see whole data.');\n    this.loginRedirectUrl = args.url;\n    this.loginActive = true;\n\n    const unbind = $scope.$watch(() => this.loginActive, () => {\n      if (!this.loginActive) {\n        this.loginInfoMessage = null;\n        this.loginRedirectUrl = null;\n        unbind();\n      }\n    });\n  });\n\n  /**\n   * @param {gmfx.AuthenticationEvent} evt Event.\n   */\n  const userChange = (evt) => {\n    if (this.loginRedirectUrl) {\n      window.location = this.loginRedirectUrl;\n      return;\n    }\n    const user = evt.detail.user;\n    const roleId = (user.username !== null) ? user.role_id : undefined;\n\n    const functionalities = this.gmfUser.functionalities;\n\n    // Enable filter tool in toolbar\n    if (functionalities &&\n        'filterable_layers' in functionalities &&\n        functionalities['filterable_layers'].length > 0) {\n      this.filterSelectorEnabled = true;\n    }\n\n    // Open filter panel if 'open_panel' is set in functionalities and\n    // has 'layer_filter' as first value\n    this.gmfThemes_.getThemesObject().then((themes) => {\n      if (functionalities &&\n          functionalities.open_panel &&\n          functionalities.open_panel[0] === 'layer_filter') {\n        this.filterSelectorActive = true;\n      }\n    });\n\n    // Reload theme when login status changes.\n    const previousThemeName = this.gmfThemeManager.getThemeName();\n    this.gmfThemeManager.setThemeName('', true);\n\n    // Reload themes and background layer when login status changes.\n    this.gmfThemes_.loadThemes(roleId);\n\n    if (evt.type !== 'ready') {\n      const themeName = this.permalink_.defaultThemeNameFromFunctionalities();\n      this.gmfThemeManager.updateCurrentTheme(themeName, previousThemeName);\n    }\n    this.setDefaultBackground_(null);\n    this.updateHasEditableLayers_();\n  };\n\n  olEvents.listen(gmfAuthentication, 'ready', userChange);\n  olEvents.listen(gmfAuthentication, 'login', userChange);\n  olEvents.listen(gmfAuthentication, 'logout', userChange);\n\n  /**\n   * @type {Array.<gmfx.SearchComponentDatasource>}\n   * @export\n   */\n  this.searchDatasources = [{\n    labelKey: 'label',\n    groupValues: /** @type {Array.<string>} **/ ($injector.get('gmfSearchGroups')),\n    groupActions: /** @type {Array.<string>} **/ ($injector.get('gmfSearchActions')),\n    projection: `EPSG:${config.srid || 21781}`,\n    url: /** @type {string} **/ ($injector.get('fulltextsearchUrl'))\n  }];\n\n  /**\n   * @type {!Object.<string, string>}\n   * @export\n   */\n  this.dimensions = {};\n\n  // watch any change on dimensions object to refresh the url\n  this.permalink_.setDimensions(this.dimensions);\n\n  // Injecting the gmfDataSourcesManager service creates the data sources\n  const gmfDataSourcesManager = $injector.get('gmfDataSourcesManager');\n  // Init the datasources with our map.\n  gmfDataSourcesManager.setDatasourceMap(this.map);\n  // Give the dimensions to the gmfDataSourcesManager\n  gmfDataSourcesManager.setDimensions(this.dimensions);\n\n  if ($injector.has('gmfDefaultDimensions')) {\n    // Set defaults\n    const defaultDimensions = $injector.get('gmfDefaultDimensions');\n    for (const dim in defaultDimensions) {\n      if (this.dimensions[dim] === undefined) {\n        this.dimensions[dim] = defaultDimensions[dim];\n      }\n    }\n  }\n\n  /**\n   * @type {ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.backgroundLayerMgr_ = $injector.get('ngeoBackgroundLayerMgr');\n\n  // watch any change on dimensions object to refresh the background layer\n  $scope.$watchCollection(() => this.dimensions, () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  this.backgroundLayerMgr_.on('change', () => {\n    this.backgroundLayerMgr_.updateDimensions(this.map, this.dimensions);\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.leftNavVisible = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.rightNavVisible = false;\n\n  const queryFill = new olStyleFill({color: [255, 170, 0, 0.6]});\n  const queryStroke = new olStyleStroke({color: [255, 170, 0, 1], width: 2});\n\n  /**\n   * FeatureStyle used by the gmf.query.windowComponent\n   * @type {ol.style.Style}\n   * @export\n   */\n  this.queryFeatureStyle = new olStyleStyle({\n    fill: queryFill,\n    image: new olStyleCircle({\n      fill: queryFill,\n      radius: 5,\n      stroke: queryStroke\n    }),\n    stroke: queryStroke\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorEnabled = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.filterSelectorActive = false;\n\n  /**\n   * The active state of the ngeo query directive.\n   * @type {boolean}\n   * @export\n   */\n  this.queryActive = true;\n\n  /**\n   * Set the clearing of the ngeoQuery after the deactivation of the query\n   * @type {boolean}\n   * @export\n   */\n  this.queryAutoClear = true;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printPanelActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.printActive = false;\n\n  /**\n   * @type {ngeo.query.MapQuerent}\n   * @private\n   */\n  this.ngeoMapQuerent_ = $injector.get('ngeoMapQuerent');\n\n  // Don't deactivate ngeoQuery on print activation\n  $scope.$watch(() => this.printPanelActive, (newVal) => {\n    // Clear queries if another panel is open but not if user go back to the\n    // map form the print.\n    if (!newVal && !this.queryActive) {\n      this.ngeoMapQuerent_.clear();\n    }\n    this.queryAutoClear = !newVal;\n    this.printActive = newVal;\n  });\n\n  /**\n   * The active state of the directive responsible of point measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measurePointActive = false;\n\n  /**\n   * The active state of the directive responsible of length measurements.\n   * @type {boolean}\n   * @export\n   */\n  this.measureLengthActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawProfilePanelActive = false;\n\n  /**\n   * @type {gmfx.User}\n   * @export\n   */\n  this.gmfUser = $injector.get('gmfUser');\n  $scope.$watch(\n    () => this.gmfUser.is_password_changed,\n    (value) => {\n      this.userMustChangeItsPassword = value === false;\n    }\n  );\n\n  /**\n   * @type {ngeox.miscGetBrowserLanguage}\n   */\n  this.getBrowserLanguage = $injector.get('ngeoGetBrowserLanguage');\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   */\n  this.stateManager = $injector.get('ngeoStateManager');\n\n  /**\n   * @type {tmhDynamicLocale}\n   */\n  this.tmhDynamicLocale = $injector.get('tmhDynamicLocale');\n\n  /**\n   * @type {angular.Scope}\n   */\n  this.$scope = $scope;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.lang;\n\n  /**\n   * Default language\n   * @type {string}\n   */\n  this.defaultLang = $injector.get('defaultLang');\n\n  /**\n   * Languages URL\n   * @type {!Object.<string, string>}\n   */\n  this.langUrls = $injector.get('langUrls');\n\n  /**\n   * The gettext catalog\n   * @type {angularGettext.Catalog}\n   */\n  this.gettextCatalog = $injector.get('gettextCatalog');\n\n  this.initLanguage();\n\n  const mapTools = 'mapTools';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.mapToolsGroup = mapTools;\n\n  /**\n   * The ngeo feature overlay manager service\n   * @type {ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.get('ngeoFeatureOverlayMgr');\n  ngeoFeatureOverlayMgr.init(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const queryToolActivate = new ngeoMiscToolActivate(this, 'queryActive');\n  ngeoToolActivateMgr.registerTool(mapTools, queryToolActivate, true);\n\n  const measurePointActivate = new ngeoMiscToolActivate(this, 'measurePointActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measurePointActivate, false);\n\n  const measureLengthActivate = new ngeoMiscToolActivate(this, 'measureLengthActive');\n  ngeoToolActivateMgr.registerTool(mapTools, measureLengthActivate, false);\n\n  const drawFeatureActivate = new ngeoMiscToolActivate(this, 'drawFeatureActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawFeatureActivate, false);\n\n  const drawProfilePanelActivate = new ngeoMiscToolActivate(this, 'drawProfilePanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, drawProfilePanelActivate, false);\n\n  const printPanelActivate = new ngeoMiscToolActivate(this, 'printPanelActive');\n  ngeoToolActivateMgr.registerTool(mapTools, printPanelActivate, false);\n\n  $scope.$root.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n    this.gmfThemes_.getThemeObject(name).then((theme) => {\n      this.setDefaultBackground_(theme);\n    });\n  });\n\n  /**\n   * @param {boolean} skipPermalink If True, don't use permalink\n   * background layer.\n   * @private\n   */\n  this.updateCurrentBackgroundLayer_ = function(skipPermalink) {\n    this.gmfThemes_.getBgLayers().then((layers) => {\n      let background;\n      if (!skipPermalink) {\n        // get the background from the permalink\n        background = this.permalink_.getBackgroundLayer(layers);\n      }\n      if (!background) {\n        // get the background from the user settings\n        const functionalities = this.gmfUser.functionalities;\n        if (functionalities) {\n          const defaultBasemapArray = functionalities.default_basemap;\n          if (defaultBasemapArray.length > 0) {\n            const defaultBasemapLabel = defaultBasemapArray[0];\n            background = olArray.find(layers, layer => layer.get('label') === defaultBasemapLabel);\n          }\n        }\n      }\n      if (!background && layers[1]) {\n        // fallback to the layers list, use the second one because the first\n        // is the blank layer\n        background = layers[1];\n      }\n\n      if (background) {\n        this.backgroundLayerMgr_.set(this.map, background);\n      }\n    });\n  }.bind(this);\n\n  this.updateCurrentBackgroundLayer_(false);\n\n  // Static \"not used\" functions should be in the window because otherwise\n  // closure remove them. \"export\" tag doesn't work on static function below,\n  // we \"export\" them as externs in the gmfx options file.\n  const gmfx = window.gmfx || {};\n  /**\n   * @export\n   */\n  window.gmfx = gmfx;\n\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width.\n   * @param {number=} opt_height CSS height.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openIframePopup = (\n    url, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowUrl = url;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * Static function to create a popup with html content.\n   * @param {string} content (text or html).\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  gmfx.openTextPopup = (\n    content, title, opt_width, opt_height, opt_apply\n  ) => {\n    this.displaywindowContent = content;\n    gmfx.openPopup_(title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   */\n  gmfx.openPopup_ = (title, opt_width, opt_height, opt_apply) => {\n\n    this.displaywindowTitle = title;\n    this.displaywindowOpen = true;\n\n    if (opt_width) {\n      this.displaywindowWidth = `${opt_width}px`;\n    }\n    if (opt_height) {\n      this.displaywindowHeight = `${opt_height}px`;\n    }\n    if (opt_apply !== false) {\n      this.$scope.$apply();\n    }\n  };\n\n  /**\n   * Whether to update the size of the map on browser window resize.\n   * @type {boolean}\n   * @export\n   */\n  this.manageResize = false;\n\n  /**\n   * The duration (milliseconds) of the animation that may occur on the div\n   * containing the map. Used to smoothly resize the map while the animation\n   * is in progress.\n   * @type {number|undefined}\n   * @export\n   */\n  this.resizeTransition;\n\n  const cgxp = window.cgxp || {};\n  /**\n   * @export\n   */\n  window.cgxp = cgxp;\n  /**\n   * @export\n   */\n  cgxp.tools = window.cgxp.tools || {};\n  /**\n   * Static function to create a popup with an iframe.\n   * @param {string} url an url.\n   * @param {string} title (text).\n   * @param {number=} opt_width CSS width in pixel.\n   * @param {number=} opt_height CSS height in pixel.\n   * @param {boolean=} opt_apply If true, trigger the Angular digest loop. Default to true.\n   * @export\n   */\n  cgxp.tools.openInfoWindow = function(url, title, opt_width, opt_height, opt_apply) {\n    gmfx.openIframePopup(url, title, opt_width, opt_height, opt_apply);\n  };\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowContent = null;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.displaywindowDraggableContainment = '.gmf-map';\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowHeight = '50vh';\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.displaywindowOpen = false;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowTitle = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowUrl = null;\n\n  /**\n   * @type {?string}\n   * @export\n   */\n  this.displaywindowWidth = '50vw';\n};\n\n\n/**\n * @param {Array.<ol.layer.Base>} layers Layers list.\n * @param {Array.<string>} labels default_basemap list.\n * @return {ol.layer.Base} layer or null\n */\nexports.getLayerByLabels = function(layers, labels) {\n  if (labels && labels.length > 0) {\n    return olArray.find(layers, layer => layer.get('label') === labels[0]);\n  }\n  return null;\n};\n\n\n/**\n * @param {string} lang Language code.\n * @export\n */\nexports.prototype.switchLanguage = function(lang) {\n  googAsserts.assert(lang in this.langUrls);\n  this.gettextCatalog.setCurrentLanguage(lang);\n  this.gettextCatalog.loadRemote(this.langUrls[lang]);\n  this.tmhDynamicLocale.set(lang);\n  this.lang = lang;\n};\n\n\n/**\n */\nexports.prototype.initLanguage = function() {\n  this.$scope.$watch(() => this.lang, (newValue) => {\n    this.stateManager.updateState({\n      'lang': newValue\n    });\n  });\n\n  const browserLanguage = /** @type {string|undefined} */\n      (this.getBrowserLanguage(Object.keys(this.langUrls)));\n  const urlLanguage = /** @type {string|undefined} */\n      (this.stateManager.getInitialValue('lang'));\n\n  if (urlLanguage !== undefined && urlLanguage in this.langUrls) {\n    this.switchLanguage(urlLanguage);\n    return;\n  } else if (browserLanguage !== undefined && browserLanguage in this.langUrls) {\n    this.switchLanguage(browserLanguage);\n    return;\n  } else {\n    // if there is no information about language preference,\n    // fallback to default language\n\n    this.switchLanguage(this.defaultLang);\n    return;\n  }\n};\n\n\n/**\n * @param {gmfThemes.GmfTheme} theme Theme.\n * @private\n */\nexports.prototype.setDefaultBackground_ = function(theme) {\n  this.gmfThemes_.getBgLayers().then((layers) => {\n    let layer;\n\n    // get the background from the permalink\n    layer = this.permalink_.getBackgroundLayer(layers);\n\n    if (!layer && this.gmfUser.functionalities) {\n      // get the background from the user settings\n      layer = exports.getLayerByLabels(layers, this.gmfUser.functionalities.default_basemap);\n    }\n\n    if (!layer && theme) {\n      // get the background from the theme\n      layer = exports.getLayerByLabels(layers, theme.functionalities.default_basemap);\n    }\n\n    if (!layer) {\n      // fallback to the layers list, use the second one because the first is the blank layer.\n      layer = layers[layers.length > 1 ? 1 : 0];\n    }\n\n    googAsserts.assert(layer);\n    this.backgroundLayerMgr_.set(this.map, layer);\n  });\n};\n\n\n/**\n * @protected\n * @return {Element} Span element with font-awesome inside of it\n */\nexports.prototype.getLocationIcon = function() {\n  const arrow = document.createElement('span');\n  arrow.className = 'fa fa-location-arrow';\n  arrow.style.transform = 'rotate(-0.82rad)';\n  const arrowWrapper = document.createElement('span');\n  arrowWrapper.appendChild(arrow);\n  return arrowWrapper;\n};\n\n\nexports.module = angular.module('GmfAbstractAppControllerModule', [\n  'gettext',\n  'tmh.dynamicLocale',\n  gmfAuthenticationModule.name,\n  gmfBackgroundlayerselectorComponent.name,\n  gmfDatasourceModule.name,\n  gmfDisclaimerComponent.name,\n  gmfFiltersModule.name,\n  gmfLayertreeModule.name,\n  gmfMapModule.name,\n  gmfQueryExtraModule.name,\n  gmfSearchModule.name,\n  gmfThemeModule.name,\n  ngeoMessageDisplaywindowComponent.name,\n  ngeoMiscExtraModule.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoQueryMapQuerent.module.name,\n  ngeoQueryMapQueryComponent.name,\n  ngeoStatemanagerModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\n\nexports.module.controller('AbstractController', exports);\n\n\nexports.module.value('ngeoExportFeatureFormats', [\n  ngeoMiscFeatureHelper.FormatType.KML,\n  ngeoMiscFeatureHelper.FormatType.GPX\n]);\n\nexports.module.config(['tmhDynamicLocaleProvider', 'angularLocaleScript',\n  /**\n   * @param {tmhDynamicLocaleProvider} tmhDynamicLocaleProvider angular-dynamic-locale provider.\n   * @param {string} angularLocaleScript the script.\n   */\n  function(tmhDynamicLocaleProvider, angularLocaleScript) {\n    // configure the script URL\n    tmhDynamicLocaleProvider.localeLocationPattern(angularLocaleScript);\n  }\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyCircle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport olMapBrowserPointerEvent from 'ol/MapBrowserPointerEvent.js';\nimport * as olCoordinate from 'ol/coordinate.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olExtent from 'ol/extent.js';\nimport olGeomCircle from 'ol/geom/Circle.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olInteractionPointer, {handleEvent as pointerHandleEvent} from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStructsRBush from 'ol/structs/RBush.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: exports.handleDownEvent_,\n    handleDragEvent: exports.handleDragEvent_,\n    handleEvent: exports.handleEvent,\n    handleUpEvent: exports.handleUpEvent_\n  });\n\n  /**\n   * Editing vertex.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * @type {ol.Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {ol.structs.RBush.<ol.ModifySegmentDataType>}\n   * @private\n   */\n  this.rBush_ = new olStructsRBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = null;\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.overlay_ = new olLayerVector({\n    source: new olSourceVector({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  this.features_.forEach(feature => this.addFeature_(feature));\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  if (feature.getGeometry().getType() === 'Polygon' &&\n      !!feature.get(ngeoFormatFeatureProperties.IS_CIRCLE)) {\n    const geometry = /** @type {ol.geom.Polygon}*/ (feature.getGeometry());\n    this.writeCircleGeometry_(feature, geometry);\n\n    const map = this.getMap();\n    if (map) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<ol.ModifySegmentDataType>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n       * @param {ol.ModifySegmentDataType} node RTree node.\n       */\n    (node) => {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature\n * @param {ol.geom.Polygon} geometry Geometry.\n * @private\n */\nexports.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  let coordinates, i, ii, j, jj, segment, segmentData;\n  for (j = 0, jj = rings.length; j < jj; ++j) {\n    coordinates = rings[j];\n    for (i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      segment = coordinates.slice(i, i + 2);\n      segmentData = /** @type {ol.ModifySegmentDataType} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(olExtent.boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {ol.Coordinate} coordinates Coordinates.\n * @return {ol.Feature} Vertex feature.\n * @private\n */\nexports.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new olFeature(new olGeomPoint(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {ol.ModifySegmentDataType} a The first segment data.\n * @param {ol.ModifySegmentDataType} b The second segment data.\n * @return {number} The difference in indexes.\n * @private\n */\nexports.compareIndexes_ = function(a, b) {\n  return a.index - b.index;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDownEvent_ = function(evt) {\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  this.dragSegments_ = [];\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const geometry = /** @type {ol.geom.Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = olExtent.boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(exports.compareIndexes_);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = olBase.getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += `-${depth.join('-')}`; // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (olCoordinate.equals(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (olCoordinate.equals(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      }\n    }\n  }\n  return !!this.vertexFeature_;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleDragEvent_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const vertex = evt.coordinate;\n  const geometry = /** @type {ol.geom.Polygon}*/ (this.dragSegments_[0][0].geometry);\n  const center = olExtent.getCenter(geometry.getExtent());\n\n  const line = new olGeomLineString([center, vertex]);\n\n\n  /**\n   * @type {ol.geom.Circle}\n   */\n  const circle = new olGeomCircle(center, line.getLength());\n  const coordinates = fromCircle(circle, 64).getCoordinates();\n  this.setGeometryCoordinates_(geometry, coordinates);\n\n\n  const azimut = ngeoInteractionMeasureAzimut.getAzimut(line);\n  this.features_.getArray()[0].set(ngeoFormatFeatureProperties.AZIMUT, azimut);\n\n  this.createOrUpdateVertexFeature_(vertex);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyCircle}\n * @private\n */\nexports.handleUpEvent_ = function(evt) {\n  this.rBush_.clear();\n  this.writeCircleGeometry_(this.dragSegments_[0][0].feature,\n    this.dragSegments_[0][0].geometry);\n\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * Handles the {@link ol.MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {ol.MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {ngeo.interaction.ModifyCircle}\n * @api\n */\nexports.handleEvent = function(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof olMapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == 'pointermove' && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n\n  return pointerHandleEvent.call(this, mapBrowserEvent) &&\n      !handled;\n};\n\n\n/**\n * @param {ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {ol.Pixel} pixel Pixel\n * @param {ol.PluggableMap} map Map.\n * @private\n */\nexports.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return olCoordinate.squaredDistanceToSegment(pixelCoordinate, a.segment) -\n        olCoordinate.squaredDistanceToSegment(pixelCoordinate, b.segment);\n  };\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = olExtent.boundingExtent([lowerLeft, upperRight]);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = (olCoordinate.closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    if (Math.sqrt(olCoordinate.squaredDistance(pixel, vertexPixel)) <=\n        this.pixelTolerance_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = olCoordinate.squaredDistance(vertexPixel, pixel1);\n      const squaredDist2 = olCoordinate.squaredDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n        this.createOrUpdateVertexFeature_(vertex);\n        const vertexSegments = {};\n        vertexSegments[olBase.getUid(closestSegment)] = true;\n        let segment;\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          segment = nodes[i].segment;\n          if ((olCoordinate.equals(closestSegment[0], segment[0]) &&\n              olCoordinate.equals(closestSegment[1], segment[1]) ||\n              (olCoordinate.equals(closestSegment[0], segment[1]) &&\n              olCoordinate.equals(closestSegment[1], segment[0])))) {\n            vertexSegments[olBase.getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n        return;\n      }\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * @param {ol.geom.SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nexports.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.ModifyRectangle\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoInteractionCommon from 'ngeo/interaction/common.js';\nimport ngeoCustomEvent from 'ngeo/CustomEvent.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olEvents from 'ol/events.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olInteractionPointer from 'ol/interaction/Pointer.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Pointer}\n * @param {olx.interaction.ModifyOptions} options Options.\n * @fires ngeo.interaction.ModifyCircleEvent\n * @api\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  olInteractionPointer.call(this, {\n    handleDownEvent: this.handleDown_,\n    handleDragEvent: this.handleDrag_,\n    handleUpEvent: this.handleUp_\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorPoints_ = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: !!options.wrapX\n    }),\n    visible: this.getActive(),\n    style: options.style || ngeoInteractionCommon.getDefaultModifyStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * The feature currently modified.\n   * @type {ol.Feature}\n   * @private\n   */\n  this.feature_ = null;\n\n  /**\n   * @type {Object.<number, ngeo.interaction.ModifyRectangle.CacheItem>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {?ngeo.interaction.ModifyRectangle.ModifyParams}\n   * @private\n   */\n  this.params_ = null;\n\n  olEvents.listen(this.features_, 'add', this.handleFeatureAdd_, this);\n  olEvents.listen(this.features_, 'remove', this.handleFeatureRemove_, this);\n\n  this.features_.forEach((feature) => {\n    this.addFeature_(feature);\n  });\n\n};\n\nolBase.inherits(exports, olInteractionPointer);\n\n\n/**\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionPointer.prototype.setActive.call(this, active);\n  if (this.vectorPoints_) {\n    this.vectorPoints_.setVisible(active);\n  }\n};\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const featureGeom = feature.getGeometry();\n  if (featureGeom instanceof olGeomPolygon) {\n\n    // If the feature's corners are already set, no need to set them again\n    const uid = olBase.getUid(feature);\n    let item = this.cache_[uid];\n    if (item) {\n      return;\n    }\n\n    const pointSource = this.vectorPoints_.getSource();\n\n    // from each corners, create a point feature and add it to the point layer.\n    // each point is then associated with 2 siblings in order to update the\n    // siblings geometry at the same time when a point gets dragged around.\n    // mark each one as 'corner'\n    const corners = featureGeom.getCoordinates()[0];\n    while (corners.length > 4) {\n      if (corners[0][0] < corners[1][0] && corners[0][1] <= corners[1][1]) {\n        corners.pop();\n      } else {\n        corners.shift();\n      }\n    }\n    const pointFeatures = [];\n    let cornerPoint;\n    let cornerFeature;\n    corners.forEach((corner) => {\n      cornerPoint = new olGeomPoint(corner);\n      cornerFeature = new olFeature({\n        'corner': true,\n        'geometry': cornerPoint,\n        'siblingX': null,\n        'siblingY': null,\n        'boxFeature': feature\n      });\n\n      pointFeatures.push(cornerFeature);\n    }, this);\n    item = /** @type {ngeo.interaction.ModifyRectangle.CacheItem} */ ({\n      corners: pointFeatures\n    });\n    this.cache_[uid] = item;\n\n    let previousFeature;\n    let nextFeature;\n    pointFeatures.forEach((cornerFeature, index) => {\n      previousFeature = pointFeatures[index - 1];\n      if (!previousFeature) {\n        previousFeature = pointFeatures[pointFeatures.length - 1];\n      }\n\n      nextFeature = pointFeatures[index + 1];\n      if (!nextFeature) {\n        nextFeature = pointFeatures[0];\n      }\n\n      if (index % 2 === 0) {\n        cornerFeature.set('siblingX', nextFeature);\n        cornerFeature.set('siblingY', previousFeature);\n      } else {\n        cornerFeature.set('siblingX', previousFeature);\n        cornerFeature.set('siblingY', nextFeature);\n      }\n\n    }, this);\n    pointSource.addFeatures(pointFeatures);\n  }\n\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nexports.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifystart', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = this.initializeParams_();\n  }\n};\n\n\n/**\n * @return {ngeo.interaction.ModifyRectangle.ModifyParams} The initialised params\n * @private\n */\nexports.prototype.initializeParams_ = function() {\n  const feature = this.feature_;\n\n  // 1. Find the origin (opposite) point for the modify operation\n  // siblingY relative to the origin is siblingX relative to the opposite\n  const siblingY = feature.get('siblingX');\n  googAsserts.assertInstanceof(siblingY, olFeature);\n\n  const origin = siblingY.get('siblingY');\n  googAsserts.assertInstanceof(origin, olFeature);\n  const originPoint = origin.getGeometry();\n  googAsserts.assertInstanceof(originPoint, olGeomPoint);\n  const originCoordinate = originPoint.getCoordinates();\n  const originPixel = this.getMap().getPixelFromCoordinate(originCoordinate);\n\n  // 2. Find the origin's X sibling and the normal vector from the origin to it\n  const siblingX = origin.get('siblingX');\n  googAsserts.assertInstanceof(siblingX, olFeature);\n  const siblingXPoint = siblingX.getGeometry();\n  googAsserts.assertInstanceof(siblingXPoint, olGeomPoint);\n  const siblingXCoordinate = siblingXPoint.getCoordinates();\n  const siblingXPixel = this.getMap().getPixelFromCoordinate(siblingXCoordinate);\n  let vectorX = [\n    siblingXPixel[0] - originPixel[0],\n    siblingXPixel[1] - originPixel[1]\n  ];\n  const vectorXMagnitude = Math.sqrt(vectorX[0] * vectorX[0] + vectorX[1] * vectorX[1]);\n  vectorX[0] /= vectorXMagnitude;\n  vectorX[1] /= vectorXMagnitude;\n\n  // 3. Find the origin's Y sibling and the normal vector from the origin to it\n  const siblingYPoint = siblingY.getGeometry();\n  googAsserts.assertInstanceof(siblingYPoint, olGeomPoint);\n  const siblingYCoordinate = siblingYPoint.getCoordinates();\n  const siblingYPixel = this.getMap().getPixelFromCoordinate(siblingYCoordinate);\n  let vectorY = [\n    siblingYPixel[0] - originPixel[0],\n    siblingYPixel[1] - originPixel[1]\n  ];\n  const vectorYMagnitude = Math.sqrt(vectorY[0] * vectorY[0] + vectorY[1] * vectorY[1]);\n  vectorY[0] /= vectorYMagnitude;\n  vectorY[1] /= vectorYMagnitude;\n\n  // 4. Validate the vectors.\n  if (isNaN(vectorX[0]) && isNaN(vectorY[0])) {\n    // Both vector are invalid. Rotation information has already been lost\n    vectorX = [0, 1];\n    vectorY = [1, 0];\n  } else if (isNaN(vectorX[0])) {\n    vectorX = [vectorY[1], -vectorY[0]];\n  } else if (isNaN(vectorY[0])) {\n    vectorY = [vectorX[1], -vectorX[0]];\n  }\n\n  return {\n    originCoordinate,\n    originPixel,\n    siblingXPoint,\n    siblingYPoint,\n    vectorX,\n    vectorY\n  };\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  const item = this.cache_[uid];\n  const corners = item.corners;\n  for (let i = 0; i < corners.length; i++) {\n    this.vectorPoints_.getSource().removeFeature(corners[i]);\n  }\n  this.feature_ = null;\n  corners.length = 0;\n  delete this.cache_[uid];\n};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.setMap = function(map) {\n  this.vectorPoints_.setMap(map);\n  olInteractionPointer.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDown_ = function(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, feature =>\n    (feature.get('siblingX') && feature.get('siblingY') ? feature : undefined)\n  );\n\n  if (feature) {\n    this.feature_ = feature;\n\n    return true;\n  }\n\n  return false;\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleDrag_ = function(evt) {\n  this.willModifyFeatures_(evt);\n  const feature = this.feature_;\n\n  const geometry = /** @type {ol.geom.SimpleGeometry} */\n      (feature.getGeometry());\n\n  if (geometry instanceof olGeomPoint) {\n    geometry.setCoordinates(evt.coordinate);\n\n    const destinationPixel = evt.pixel;\n\n    const originPixel = this.params_.originPixel;\n    const siblingXPoint = this.params_.siblingXPoint;\n    const siblingYPoint = this.params_.siblingYPoint;\n    const vectorX = this.params_.vectorX;\n    const vectorY = this.params_.vectorY;\n    const originCoordinate = this.params_.originCoordinate;\n\n    // Calculate new positions of siblings\n    const b2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorX);\n    const b2Coordinate = this.getMap().getCoordinateFromPixel(b2Pixel);\n    siblingXPoint.setCoordinates(b2Coordinate);\n\n    const c2Pixel = this.calculateNewPixel_(\n      originPixel, destinationPixel, vectorY);\n    const c2Coordinate = this.getMap().getCoordinateFromPixel(c2Pixel);\n    siblingYPoint.setCoordinates(c2Coordinate);\n\n\n    // Resize the box\n    const boxFeature = feature.get('boxFeature');\n    const geom = boxFeature.getGeometry();\n    googAsserts.assertInstanceof(geom, olGeomPolygon);\n    geom.setCoordinates([[evt.coordinate, b2Coordinate, originCoordinate, c2Coordinate, evt.coordinate]]);\n  }\n};\n\n\n/**\n * Calculate the new position of a point as projected on a vector from origin to\n * destination.\n * @param {ol.Pixel} origin Pixel of origin (opposite of the drag handle)\n * @param {ol.Pixel} destination Pixel of destination (the handle we dragged)\n * @param {ol.Pixel} vector The normalized vector to the point\n * @return {ol.Pixel} The new pixel of the point\n * @private\n */\nexports.prototype.calculateNewPixel_ = function(\n  origin, destination, vector) {\n\n  const aVector = [destination[0] - origin[0], destination[1] - origin[1]];\n\n  const abScalarProduct = aVector[0] * vector[0] + aVector[1] * vector[1];\n\n  const deltaVector = [\n    (vector[0] * abScalarProduct),\n    (vector[1] * abScalarProduct)\n  ];\n\n  return [deltaVector[0] + origin[0], deltaVector[1] + origin[1]];\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {ngeo.interaction.ModifyRectangle}\n * @private\n */\nexports.prototype.handleUp_ = function(evt) {\n  if (this.modified_) {\n    /** @type {ngeox.ModifyEvent} */\n    const event = new ngeoCustomEvent('modifyend', {features: this.features_});\n    this.dispatchEvent(event);\n    this.params_ = null;\n    this.modified_ = false;\n  }\n  return false;\n};\n\n\n/**\n * @typedef {{\n *     corners: Array.<ol.Feature>\n * }}\n */\nexports.CacheItem;\n\n\n/**\n * @typedef {{\n *     originCoordinate: ol.Coordinate,\n *     originPixel: ol.Pixel,\n *     siblingXPoint: ol.geom.Point,\n *     siblingYPoint: ol.geom.Point,\n *     vectorX: Array.<number>,\n *     vectorY: Array.<number>\n * }}\n */\nexports.ModifyParams;\n\n\nexport default exports;\n","/**\n * @module ngeo.interaction.Modify\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModifyCircle from 'ngeo/interaction/ModifyCircle.js';\nimport ngeoInteractionModifyRectangle from 'ngeo/interaction/ModifyRectangle.js';\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olFunctions from 'ol/functions.js';\nimport olInteractionInteraction from 'ol/interaction/Interaction.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * This interaction combines multiple kind of feature modification interactions\n * in order to be able to modify vector features depending on their geometry\n * type. The different kind of interactions supported are:\n *\n * - `ol.interaction.Modify`\n * - `ngeo.interaction.ModifyCircle`\n * - `ngeo.interaction.ModifyRectangle`\n *\n * This interaction receives a collection of features. Its job is to listen\n * to added/removed features to and from it and add them in the proper\n * collection that is uniquely used for each inner interaction. Those inner\n * interactions follow the `active` property of this interaction, i.e. when\n * this interaction is activated, so do the inner interactions. Since they will\n * never share the same feature, they don't collide with one an other.\n *\n * @constructor\n * @struct\n * @extends {ol.interaction.Interaction}\n * @param {olx.interaction.ModifyOptions} options Options.\n */\nconst exports = function(options) {\n\n  googAsserts.assert(options.features);\n\n  /**\n   * @type {!ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features_ = options.features;\n\n  /**\n   * @type {!Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.otherFeatures_ = new olCollection();\n\n  this.interactions_.push(new olInteractionModify({\n    deleteCondition: ngeoUtils.deleteCondition,\n    features: this.otherFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.circleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyCircle({\n    features: this.circleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.rectangleFeatures_ = new olCollection();\n\n  this.interactions_.push(new ngeoInteractionModifyRectangle({\n    features: this.rectangleFeatures_,\n    pixelTolerance: options.pixelTolerance,\n    style: options.style,\n    wrapX: options.wrapX\n  }));\n\n\n  olInteractionInteraction.call(this, {\n    handleEvent: olFunctions.TRUE\n  });\n\n};\n\nolBase.inherits(exports, olInteractionInteraction);\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @override\n */\nexports.prototype.setActive = function(active) {\n  olInteractionInteraction.prototype.setActive.call(this, active);\n  this.setState_();\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {ol.PluggableMap} map Map.\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const interactions = this.interactions_;\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    interactions.forEach((interaction) => {\n      currentMap.removeInteraction(interaction);\n    });\n  }\n\n  olInteractionInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    interactions.forEach((interaction) => {\n      map.addInteraction(interaction);\n    });\n  }\n\n  this.setState_();\n};\n\n\n/**\n * Toggle interactions.\n * @private\n */\nexports.prototype.setState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  const interactions = this.interactions_;\n  const keys = this.listenerKeys_;\n\n  interactions.forEach((interaction) => {\n    interaction.setActive(active && !!map);\n  });\n\n  if (active && map) {\n    this.features_.forEach(feature => this.addFeature_(feature));\n    keys.push(\n      olEvents.listen(this.features_, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features_, 'remove', this.handleFeaturesRemove_, this)\n    );\n  } else {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.features_.forEach(feature => this.removeFeature_(feature));\n  }\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesAdd_ = function(evt) {\n  const feature = evt.element;\n  googAsserts.assertInstanceof(feature, olFeature,\n    'feature should be an ol.Feature');\n  this.addFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} evt Event.\n * @private\n */\nexports.prototype.handleFeaturesRemove_ = function(evt) {\n  const feature = /** @type {ol.Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.push(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeFeature_ = function(feature) {\n  const collection = this.getFeatureCollection_(feature);\n  collection.remove(feature);\n};\n\n\n/**\n * @param {ol.Feature} feature Feature.\n * @return {ol.Collection.<ol.Feature>} Collection of features for this feature.\n * @private\n */\nexports.prototype.getFeatureCollection_ = function(feature) {\n  let features;\n  const isCircle = feature.get(ngeoFormatFeatureProperties.IS_CIRCLE);\n  const isRectangle = feature.get(ngeoFormatFeatureProperties.IS_RECTANGLE);\n  if (isCircle === true || isCircle === 'true') {\n    features = this.circleFeatures_;\n  } else if (isRectangle === true || isRectangle === 'true') {\n    features = this.rectangleFeatures_;\n  } else {\n    features = this.otherFeatures_;\n  }\n  return features;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nimport 'bootstrap/js/collapse.js';\n\n\nconst exports = angular.module('gmfWmscapabilitylayertreenode', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/wmsCapabilityLayertreeComponent', require('./wmsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmscapabilitylayertreenodeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmscapabilitylayertreenodeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/wmsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmscapabilitylayertreenodeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmscapabilitylayertreenodeTemplateUrl($attrs, gmfWmscapabilitylayertreenodeTemplateUrl) {\n  return gmfWmscapabilitylayertreenodeTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmscapabilitylayertreenodeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * WMS Capability Layer object.\n     * @type {!Object}\n     * @export\n     */\n    this.layer;\n\n    /**\n     * The original server url that was used to build the WMS GetCapabilities\n     * request.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromWMSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmscapabilitylayertreenode', {\n  bindings: {\n    'capabilities': '<',\n    'layer': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmscapabilitylayertreenodeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.wmtsCapabilityLayertreeComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopup from 'ngeo/message/Popup.js';\n\nimport * as olBase from 'ol/index.js';\n\nconst exports = angular.module('gmfWmtscapabilitylayertree', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  ngeoMessagePopup.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/import/wmtsCapabilityLayertreeComponent', require('./wmtsCapabilityLayertreeComponent.html'));\n});\n\n\nexports.value('gmfWmtscapabilitylayertreTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfWmtscapabilitylayertreTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/import/wmtsCapabilityLayertreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfWmtscapabilitylayertreTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfWmtscapabilitylayertreTemplateUrl($attrs, gmfWmtscapabilitylayertreTemplateUrl) {\n  return gmfWmtscapabilitylayertreTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfWmtscapabilitylayertreeController\n   */\n  constructor(gmfExternalDataSourcesManager) {\n\n    // Binding properties\n\n    /**\n     * WMS Capabilities definition\n     * @type {!Object}\n     * @export\n     */\n    this.capabilities;\n\n    /**\n     * List of WMTS Capability Layer objects.\n     * @type {!Array.<!Object>}\n     * @export\n     */\n    this.layers;\n\n    /**\n     * The original WMTS GetCapabilities url that was used to fetch the\n     * capability layers.\n     * @type {string}\n     * @export\n     */\n    this.url;\n\n\n    // Injected properties\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @export\n   */\n  createAndAddDataSource(layer) {\n    const manager = this.gmfExternalDataSourcesManager_;\n    manager.createAndAddDataSourceFromWMTSCapability(\n      layer,\n      this.capabilities,\n      this.url\n    );\n  }\n\n  /**\n   * @param {!Object} layer WMTS Capability Layer object\n   * @return {number} Unique id for the Capability Layer.\n   * @export\n   */\n  getUid(layer) {\n    return olBase.getUid(layer);\n  }\n};\n\n\nexports.component('gmfWmtscapabilitylayertree', {\n  bindings: {\n    'capabilities': '<',\n    'layers': '<',\n    'url': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfWmtscapabilitylayertreTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.importdatasourceComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\n\n/** @suppress {extraRequire} */\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoQueryQuerent from 'ngeo/query/Querent.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\nconst exports = angular.module('gmfImportdatasource', [\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n  ngeoQueryQuerent.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/import/importdatasourceComponent', require('./importdatasourceComponent.html'));\n});\n\n\nexports.value('gmfImportdatasourceTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfImportdatasourceTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/import/importdatasourceComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfImportdatasourceTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfImportdatasourceTemplateUrl($attrs, gmfImportdatasourceTemplateUrl) {\n  return gmfImportdatasourceTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!jQuery} $element Element.\n   * @param {!angular.$filter} $filter Angular filter.\n   * @param {!angular.$injector} $injector Main injector.\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!angular.$timeout} $timeout Angular timeout service.\n   * @param {!gmf.datasource.ExternalDataSourcesManager}\n   *     gmfExternalDataSourcesManager GMF service responsible of managing\n   *     external data sources.\n   * @param {!ngeo.query.Querent} ngeoQuerent Ngeo querent service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfImportdatasourceController\n   */\n  constructor($element, $filter, $injector, $scope, $timeout,\n    gmfExternalDataSourcesManager, ngeoQuerent) {\n\n    // Binding properties\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n\n    // Injected properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {!gmf.datasource.ExternalDataSourcesManager}\n     * @private\n     */\n    this.gmfExternalDataSourcesManager_ = gmfExternalDataSourcesManager;\n\n    /**\n     * @type {!ngeo.query.Querent}\n     * @private\n     */\n    this.ngeoQuerent_ = ngeoQuerent;\n\n\n    // Model properties\n\n    /**\n     * @type {File|undefined}\n     * @export\n     */\n    this.file;\n\n    /**\n     * @type {string|undefined}\n     * @export\n     */\n    this.url;\n\n\n    // Inner properties\n\n    /**\n     * @type {!jQuery}\n     * @private\n     */\n    this.fileInput_ = $element.find('input[type=file]');\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.hasError = false;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.hasErrorPromise_ = null;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.mode = exports.Controller_.Mode.ONLINE;\n\n    /**\n     * @type {!Array.<string>}\n     * @export\n     */\n    this.modes = [\n      exports.Controller_.Mode.LOCAL,\n      exports.Controller_.Mode.ONLINE\n    ];\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.pending = false;\n\n    /**\n     * @type {!ngeox.unitPrefix}\n     * @private\n     */\n    this.unitPrefixFormat_ = /** @type {ngeox.unitPrefix} */ (\n      $filter('ngeoUnitPrefix'));\n\n    /**\n     * Current WMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmsCapabilities = null;\n\n    /**\n     * Current WTMS Capabilities that were connected.\n     * @type {?Object}\n     * @export\n     */\n    this.wmtsCapabilities = null;\n\n    /**\n     * @type {Bloodhound|undefined}\n     * @private\n     */\n    this.serversEngine_;\n\n    const servers = $injector.has('gmfExternalOGCServers') ?\n      /** @type {Array.<!gmfx.ExternalOGCServer>|undefined} */ (\n        $injector.get('gmfExternalOGCServers')\n      ) : undefined;\n\n    if (servers) {\n      const serverUrls = servers.map(server => server['url']);\n      this.serversEngine_ = new Bloodhound({\n        /**\n         * Allows search queries to match from string from anywhere within\n         * the url, and not only from the beginning of the string (which is\n         * the default, non-configurable behaviour of bloodhound).\n         *\n         * Borrowed from:\n         * https://stackoverflow.com/questions/22059933/twitter-typeahead-js-how-to-return-all-matched-elements-within-a-string\n         *\n         * @param {BloodhoundDatum} datum Datum.\n         * @return {Array.<string>} List of datum tokenizers.\n         */\n        datumTokenizer: (datum) => {\n          googAsserts.assertString(datum);\n          const originalDatumTokenizers = Bloodhound.tokenizers.whitespace(\n            datum);\n          googAsserts.assert(originalDatumTokenizers);\n          const datumTokenizers = [];\n          for (const originalDatumTokenizer of originalDatumTokenizers) {\n            let i = 0;\n            while ((i + 1) < originalDatumTokenizer.length) {\n              datumTokenizers.push(\n                originalDatumTokenizer.substr(\n                  i,\n                  originalDatumTokenizer.length\n                )\n              );\n              i++;\n            }\n          }\n          return datumTokenizers;\n        },\n        queryTokenizer: Bloodhound.tokenizers.whitespace,\n        identify: false,\n        local: serverUrls\n      });\n    }\n\n    // Register input[type=file] onchange event, use HTML5 File api\n    this.fileInput_.on('change', () => {\n      this.file = this.fileInput_[0].files && this.fileInput_[0].files[0] ?\n        this.fileInput_[0].files[0] : undefined;\n      this.scope_.$apply();\n    });\n  }\n\n  /**\n   * Called on initialization of the component.\n   */\n  $onInit() {\n    this.gmfExternalDataSourcesManager_.map = this.map;\n\n\n    if (this.serversEngine_) {\n      // Timeout to let Angular render the placeholder of the input properly,\n      // otherwise typeahead would copy the string with {{}} in it...\n      this.timeout_(() => {\n        googAsserts.assert(this.serversEngine_);\n        const $urlInput = this.element_.find('input[name=url]');\n        const $connectBtn = this.element_.find('button.gmf-importdatasource-connect-btn');\n        $urlInput.typeahead({\n          hint: true,\n          highlight: true,\n          minLength: 1\n        }, {\n          name: 'url',\n          source: this.serversEngine_.ttAdapter()\n        }).bind('typeahead:select', (ev, suggestion) => {\n          this.timeout_(() => {\n            this.url = suggestion;\n            this.scope_.$apply();\n            $connectBtn.focus();\n          });\n        });\n      });\n    }\n  }\n\n  /**\n   * Triggers a 'click' on the \"Browse\" button.\n   * @export\n   */\n  browse() {\n    this.hasError = false;\n    this.element_.find('input[type=file][name=file]').click();\n  }\n\n  /**\n   * Connect to given online resource URL.\n   * @export\n   */\n  connect() {\n    const url = googAsserts.assertString(this.url);\n    const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n    this.startWorking_();\n    if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n      this.ngeoQuerent_.wmsGetCapabilities(url).then(\n        (wmsCapabilities) => {\n          this.wmsCapabilities = wmsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n      this.ngeoQuerent_.wmtsGetCapabilities(url).then(\n        (wmtsCapabilities) => {\n          this.wmtsCapabilities = wmtsCapabilities;\n          this.stopWorking_();\n        },\n        () => {\n          // Something went wrong...\n          this.stopWorking_(true);\n        }\n      );\n    } else {\n      // Could not determine the type of url\n      this.timeout_(() => {\n        this.stopWorking_(true);\n      });\n    }\n  }\n\n  /**\n   * Create data source from file.\n   * @export\n   */\n  load() {\n    const file = googAsserts.assert(this.file);\n    this.gmfExternalDataSourcesManager_.createAndAddDataSourceFromFile(file, (success) => {\n      if (!success) {\n        this.hasError = true;\n      }\n    });\n  }\n\n  /**\n   * @return {string} The name of the file and human-readable size.\n   * @export\n   */\n  get fileNameAndSize() {\n    let nameAndSize = '';\n\n    const file = this.file;\n    if (file !== undefined) {\n      const fileSize = this.unitPrefixFormat_(file.size, 'o');\n      nameAndSize = `${file.name}, ${fileSize}`;\n    }\n\n    return nameAndSize;\n  }\n\n\n  // === Private methods ===\n\n  /**\n   * @private\n   */\n  startWorking_() {\n    this.pending = true;\n    this.hasError = false;\n\n    // Clear any previous objects\n    this.wmsCapabilities = null;\n    this.wmtsCapabilities = null;\n  }\n\n  /**\n   * @param {boolean=} opt_hasError Whether we stopped working because of after\n   *     an error.\n   * @private\n   */\n  stopWorking_(opt_hasError = false) {\n    this.pending = false;\n    if (opt_hasError) {\n      this.hasError = true;\n      if (this.hasErrorPromise_) {\n        this.timeout_.cancel(this.hasErrorPromise_);\n      }\n      this.hasErrorPromise_ = this.timeout_(() => {\n        this.hasError = false;\n        this.hasErrorPromise_ = null;\n      }, 3000);\n    }\n  }\n};\n\n\n/**\n * @enum {string}\n */\nexports.Controller_.Mode = {\n  LOCAL: 'Local',\n  ONLINE: 'Online'\n};\n\n\nexports.component('gmfImportdatasource', {\n  bindings: {\n    'map': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfImportdatasourceTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module gmf.import.module\n */\nimport gmfImportImportdatasourceComponent from 'gmf/import/importdatasourceComponent.js';\nimport gmfImportWmsCapabilityLayertreeComponent from 'gmf/import/wmsCapabilityLayertreeComponent.js';\nimport gmfImportWmtsCapabilityLayertreeComponent from 'gmf/import/wmtsCapabilityLayertreeComponent.js';\n\nimport './import.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfImportModule', [\n  gmfImportImportdatasourceComponent.name,\n  gmfImportWmsCapabilityLayertreeComponent.name,\n  gmfImportWmtsCapabilityLayertreeComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.Controller\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport olFeature from 'ol/Feature.js';\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {angular.$sce} $sce Angular sce service.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {ol.Collection.<ol.Feature>} ngeoFeatures Collection of features.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDrawfeatureController\n */\nconst exports = function($scope, $sce, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * Alternate collection of features in which to push the drawn features.\n   * If not defined, then `ngeoFeatures` is used instead.\n   * @type {!ol.Collection.<!ol.Feature>|undefined}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showMeasure;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n  // Fill the string collection\n  gettextCatalog.getString('Point');\n  gettextCatalog.getString('LineString');\n  gettextCatalog.getString('Polygon');\n  gettextCatalog.getString('Circle');\n  gettextCatalog.getString('Rectangle');\n  gettextCatalog.getString('Text');\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = ngeoFeatures;\n\n  /**\n   * @type {Array.<ol.interaction.Interaction>}\n   * @private\n   */\n  this.interactions_ = [];\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawPoint;\n\n  /**\n   * @type {ngeo.interaction.MeasureLength}\n   * @export\n   */\n  this.measureLength;\n\n  /**\n   * @type {ngeo.interaction.MeasureArea}\n   * @export\n   */\n  this.measureArea;\n\n  /**\n   * @type {ngeo.interaction.MeasureAzimut}\n   * @export\n   */\n  this.measureAzimut;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawRectangle;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @export\n   */\n  this.drawText;\n\n\n  // Watch the \"active\" property, and disable the draw interactions\n  // when \"active\" gets set to false.\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      if (newVal === false) {\n        this.interactions_.forEach((interaction) => {\n          interaction.setActive(false);\n        });\n      }\n    }\n  );\n\n};\n\n\n/**\n * Register a draw|measure interaction by setting it inactive, decorating it\n * and adding it to the map\n * @param {ol.interaction.Interaction} interaction Interaction to register.\n * @export\n */\nexports.prototype.registerInteraction = function(\n  interaction) {\n  this.interactions_.push(interaction);\n  interaction.setActive(false);\n  ngeoMiscDecorate.interaction(interaction);\n  this.map.addInteraction(interaction);\n};\n\n\n/**\n * Called when any of the draw or measure interaction active property changes.\n * Set the active property of this directive accordingly, i.e. if at least\n * one of the draw or measure is active then the active property is set to true.\n * @param {ol.Object.Event} event Event.\n * @export\n */\nexports.prototype.handleActiveChange = function(event) {\n  this.active = this.interactions_.some(interaction => interaction.getActive(), this);\n};\n\n\n/**\n * Called when a feature is finished being drawn. Set the default properties\n * for its style, then set its style and add it to the features collection.\n * @param {string} type Type of geometry being drawn.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.prototype.handleDrawEnd = function(type, event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  const azimut = sketch.get('azimut');\n\n  const features = this.features || this.ngeoFeatures_;\n\n  const feature = new olFeature(sketch.getGeometry());\n\n  const prop = ngeoFormatFeatureProperties;\n\n  switch (type) {\n    case ngeoGeometryType.CIRCLE:\n      feature.set(prop.IS_CIRCLE, true);\n      if (azimut !== undefined) {\n        feature.set(prop.AZIMUT, azimut);\n      }\n      break;\n    case ngeoGeometryType.TEXT:\n      feature.set(prop.IS_TEXT, true);\n      break;\n    case ngeoGeometryType.RECTANGLE:\n      feature.set(prop.IS_RECTANGLE, true);\n      break;\n    default:\n      break;\n  }\n\n  /**\n   * @type {string}\n   */\n  const name = this.gettextCatalog_.getString(type);\n  feature.set(prop.NAME, `${name} ${features.getLength() + 1}`);\n\n  /**\n   * @type {string}\n   */\n  const color = type !== ngeoGeometryType.TEXT ? '#DB4436' : '#000000';\n  feature.set(prop.COLOR, color);\n\n  feature.set(prop.ANGLE, 0);\n  feature.set(prop.OPACITY, 0.2);\n  feature.set(prop.SHOW_MEASURE, this.showMeasure ? true : false);\n  feature.set(prop.SHOW_LABEL, false);\n  feature.set(prop.SIZE, 10);\n  feature.set(prop.STROKE, 2);\n\n  // set style\n  this.featureHelper_.setStyle(feature);\n\n  // push in collection\n  features.push(feature);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoDrawfeatureController', [\n  ngeoDrawFeatures.name,\n  ngeoMiscBtnComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\nexports.module.controller('ngeoDrawfeatureController', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.point\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawpoint', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawPoint = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawPoint);\n      drawFeatureCtrl.drawPoint = drawPoint;\n\n      olEvents.listen(\n        drawPoint,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POINT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawPoint,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawpoint', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.rectangle\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawrectangle', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawrectangle\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawRectangle = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n        geometryFunction: (coordinates, geometry) => {\n          if (!geometry) {\n            geometry = new olGeomPolygon(null);\n          }\n          const start = coordinates[0];\n          const end = coordinates[1];\n          geometry.setCoordinates([\n            [start, [start[0], end[1]], end, [end[0], start[1]], start]\n          ]);\n          return geometry;\n        },\n        maxPoints: 2\n      });\n\n      drawFeatureCtrl.registerInteraction(drawRectangle);\n      drawFeatureCtrl.drawRectangle = drawRectangle;\n\n      olEvents.listen(\n        drawRectangle,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.RECTANGLE),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawRectangle,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawrectangle', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.text\n */\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport * as olEvents from 'ol/events.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawtext', []);\n\n\n/**\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawtext\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const drawText = new olInteractionDraw({\n        type: /** @type {ol.geom.GeometryType} */ ('Point')\n      });\n\n      drawFeatureCtrl.registerInteraction(drawText);\n      drawFeatureCtrl.drawText = drawText;\n\n      olEvents.listen(\n        drawText,\n        'drawend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.TEXT),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        drawText,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoDrawtext', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.area\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurearea', [\n  ngeoDrawController.module.name\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing polygon');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click starting point to finish');\n\n      const measureArea = new ngeoInteractionMeasureArea($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureArea);\n      drawFeatureCtrl.measureArea = measureArea;\n\n      olEvents.listen(\n        measureArea,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.POLYGON),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureArea,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurearea', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.azimut\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureAzimut from 'ngeo/interaction/MeasureAzimut.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport {fromCircle} from 'ol/geom/Polygon.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasureazimut', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing circle');\n      const contMsg = gettextCatalog.getString('Click to finish');\n\n      const measureAzimut = new ngeoInteractionMeasureAzimut(\n        $filter('ngeoUnitPrefix'), $filter('number'), {\n          style: new olStyleStyle(),\n          startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n          continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n          precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined,\n          decimals: $injector.has('ngeoMeasureDecimals') ? $injector.get('ngeoMeasureDecimals') : undefined\n        });\n\n      drawFeatureCtrl.registerInteraction(measureAzimut);\n      drawFeatureCtrl.measureAzimut = measureAzimut;\n\n      olEvents.listen(\n        measureAzimut,\n        'measureend',\n        /**\n         * @param {ngeox.MeasureEvent} event Event.\n         */\n        (event) => {\n          // In the case of azimut measure interaction, the feature's\n          // geometry is actually a collection (line + circle)\n          // For our purpose here, we only need the circle, which gets\n          // transformed into a polygon with 64 sides.\n          const geometry = /** @type {ol.geom.GeometryCollection} */\n                (event.detail.feature.getGeometry());\n          const circle = /** @type {ol.geom.Circle} */ (\n            geometry.getGeometries()[1]);\n          const polygon = fromCircle(circle, 64);\n          event.detail.feature = new olFeature(polygon);\n          const azimut = ngeoInteractionMeasureAzimut.getAzimut(\n            /** @type {ol.geom.LineString} */ (geometry.getGeometries()[0])\n          );\n          event.detail.feature.set('azimut', azimut);\n\n          drawFeatureCtrl.handleDrawEnd(ngeoGeometryType.CIRCLE, event);\n        },\n        drawFeatureCtrl\n      );\n\n      olEvents.listen(\n        measureAzimut,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasureazimut', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.measure.length\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport * as olEvents from 'ol/events.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoMeasurelength', [\n  ngeoDrawController.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!angular.$injector} $injector Main injector.\n * @return {!angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawpoint\n */\nexports.directive_ = function($compile, gettextCatalog, $filter, $injector) {\n  return {\n    restrict: 'A',\n    require: '^^ngeoDrawfeature',\n    /**\n     * @param {!angular.Scope} $scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {ngeo.draw.Controller} drawFeatureCtrl Controller.\n     */\n    link: ($scope, element, attrs, drawFeatureCtrl) => {\n\n      const helpMsg = gettextCatalog.getString('Click to start drawing line');\n      const contMsg = gettextCatalog.getString('Click to continue drawing<br>' +\n          'Double-click or click last point to finish');\n\n      const measureLength = new ngeoInteractionMeasureLength($filter('ngeoUnitPrefix'), gettextCatalog, {\n        style: new olStyleStyle(),\n        startMsg: $compile(`<div translate>${helpMsg}</div>`)($scope)[0],\n        continueMsg: $compile(`<div translate>${contMsg}</div>`)($scope)[0],\n        precision: $injector.has('ngeoMeasurePrecision') ? $injector.get('ngeoMeasurePrecision') : undefined\n      });\n\n      drawFeatureCtrl.registerInteraction(measureLength);\n      drawFeatureCtrl.measureLength = measureLength;\n\n      olEvents.listen(\n        measureLength,\n        'measureend',\n        drawFeatureCtrl.handleDrawEnd.bind(\n          drawFeatureCtrl, ngeoGeometryType.LINE_STRING),\n        drawFeatureCtrl\n      );\n      olEvents.listen(\n        measureLength,\n        'change:active',\n        drawFeatureCtrl.handleActiveChange,\n        drawFeatureCtrl\n      );\n    }\n  };\n};\n\n\nexports.directive('ngeoMeasurelength', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.draw.component\n */\nimport ngeoDrawController from 'ngeo/draw/Controller.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawPoint from 'ngeo/draw/point.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawRectangle from 'ngeo/draw/rectangle.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawText from 'ngeo/draw/text.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureArea from 'ngeo/measure/area.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureAzimut from 'ngeo/measure/azimut.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMeasureLength from 'ngeo/measure/length.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDrawfeature', [\n  ngeoDrawController.module.name,\n  ngeoDrawPoint.name,\n  ngeoDrawRectangle.name,\n  ngeoDrawText.name,\n  ngeoMeasureArea.name,\n  ngeoMeasureAzimut.name,\n  ngeoMeasureLength.name,\n]);\n\n\n/**\n * Directive used to draw vector features on a map.\n * Example:\n *\n *     <ngeo-drawfeature\n *         ngeo-btn-group\n *         class=\"btn-group\"\n *         ngeo-drawfeature-active=\"ctrl.drawActive\"\n *         ngeo-drawfeature-map=\"::ctrl.map\">\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawpoint\n *         class=\"btn btn-default ngeo-drawfeature-point\"\n *         ng-class=\"{active: dfCtrl.drawPoint.active}\"\n *         ng-model=\"dfCtrl.drawPoint.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurelength\n *         class=\"btn btn-default ngeo-drawfeature-linestring\"\n *         ng-class=\"{active: dfCtrl.measureLength.active}\"\n *         ng-model=\"dfCtrl.measureLength.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measurearea\n *         class=\"btn btn-default ngeo-drawfeature-polygon\"\n *         ng-class=\"{active: dfCtrl.measureArea.active}\"\n *         ng-model=\"dfCtrl.measureArea.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-measureazimut\n *         class=\"btn btn-default ngeo-drawfeature-circle\"\n *         ng-class=\"{active: dfCtrl.measureAzimut.active}\"\n *         ng-model=\"dfCtrl.measureAzimut.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawrectangle\n *         class=\"btn btn-default ngeo-drawfeature-rectangle\"\n *         ng-class=\"{active: dfCtrl.drawRectangle.active}\"\n *         ng-model=\"dfCtrl.drawRectangle.active\"></a>\n *       <a\n *         href\n *         translate\n *         ngeo-btn\n *         ngeo-drawtext\n *         class=\"btn btn-default ngeo-drawfeature-text\"\n *         ng-class=\"{active: dfCtrl.drawText.active}\"\n *         ng-model=\"dfCtrl.drawText.active\"></a>\n *     </ngeo-drawfeature>\n *\n * @htmlAttribute {boolean} ngeo-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {!ol.Collection=} ngeo-drawfeature-features The features\n *     collection in which to push the drawn features. If none is provided,\n *     then the `ngeoFeatures` collection is used.\n * @htmlAttribute {ol.Map} ngeo-drawfeature-map The map.\n * @htmlAttribute {boolean} ngeo-drawfeature-showmeasure. Checks the\n *      checkbox in order to display the feature measurements as a label.\n *      Default to false.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDrawfeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoDrawfeatureController as dfCtrl',\n    scope: true,\n    bindToController: {\n      'active': '=ngeoDrawfeatureActive',\n      'features': '=?ngeoDrawfeatureFeatures',\n      'map': '=ngeoDrawfeatureMap',\n      'showMeasure': '=?ngeoDrawfeatureShowmeasure'\n    }\n  };\n};\n\nexports.directive('ngeoDrawfeature', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.XSDAttributes\n */\nimport ngeoFormatXSDAttribute from 'ngeo/format/XSDAttribute.js';\n\n/**\n * An service used to fetch the XSD attribute definition of layers using their\n * id from a GeoMapFish server.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n  /**\n   * @type {Object.<number, !angular.$q.Promise>}\n   * @private\n   */\n  this.promises_ = {};\n\n};\n\n\n/**\n * @param {number} id Layer id.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getAttributes = function(id) {\n  if (!this.promises_[id]) {\n    const url = `${this.baseUrl_}/${id}/md.xsd`;\n    this.promises_[id] = this.http_.get(url).then(\n      this.handleGetAttributes_.bind(this));\n  }\n  return this.promises_[id];\n};\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ngeox.Attribute>} List of attributes.\n * @export\n */\nexports.prototype.handleGetAttributes_ = function(resp) {\n  return new ngeoFormatXSDAttribute().read(resp.data);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfXSDAttributes', []);\nexports.module.service('gmfXSDAttributes', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EditFeature\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * Service that provides methods to get, insert, update and delete vector\n * features with the use of a GeoMapFish Protocol as back-end.\n *\n * The GeoJSON format is used when obtaining or sending features.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n * @ngInject\n */\nconst exports = function($http, gmfLayersUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.http_ = $http;\n\n  /**\n   * Url to the GeoMapFish layers service. Required in applications that use:\n   * - the editfeature tools\n   * - the objectediting tools\n   *\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = gmfLayersUrl;\n\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids inside a specified extent.\n *\n * @param {Array.<number>} layerIds List of layer ids to get the features from.\n * @param {ol.Extent} extent The extent where to get the features from.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getFeaturesInExtent = function(layerIds, extent) {\n  const url = olUri.appendParams(\n    `${this.baseUrl_}/${layerIds.join(',')}`,\n    {\n      'bbox': extent.join(',')\n    }\n  );\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * Build a query to the MapFish protocol to fetch features from a list\n * of layer ids and a list of comparison filters.\n *\n * This method is called in the ObjectEditing service, which is injected in\n * the permalink service, i.e. it's always called. Since we don't have to\n * define the url to the GMF Protocol (layers) a dummy promise returns an\n * empty array of features if the url is not defined.\n *\n * @param {!Array.<number>} layerIds List of layer ids to get the features from.\n * @param {!Array.<!gmfx.ComparisonFilter>} filters List of comparison filters\n * @return {angular.$q.Promise} Promise.\n */\nexports.prototype.getFeaturesWithComparisonFilters = function(\n  layerIds, filters\n) {\n  const properties = [];\n  const params = {};\n\n  for (const filter of filters) {\n    params[`${filter.property}__${filter.operator}`] = filter.value;\n    properties.push(filter.property);\n  }\n\n  params['queryable'] = properties.join(',');\n\n  const url = olUri.appendParams(`${this.baseUrl_}/${layerIds.join(',')}`, params);\n  return this.http_.get(url).then(this.handleGetFeatures_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Array.<ol.Feature>} List of features.\n * @private\n */\nexports.prototype.handleGetFeatures_ = function(resp) {\n  return new olFormatGeoJSON().readFeatures(resp.data);\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {Array.<ol.Feature>} features List of features to insert.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.insertFeatures = function(layerId, features) {\n  const url = `${this.baseUrl_}/${layerId}`;\n  const geoJSON = new olFormatGeoJSON().writeFeatures(features);\n  return this.http_.post(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to update.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.updateFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  const geoJSON = new olFormatGeoJSON().writeFeature(feature);\n  return this.http_.put(url, geoJSON, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @param {number} layerId The layer id that contains the feature.\n * @param {ol.Feature} feature The feature to delete.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.deleteFeature = function(layerId, feature) {\n  const url = `${this.baseUrl_}/${layerId.toString()}/${feature.getId()}`;\n  return this.http_.delete(url, {\n    headers: {'Content-Type': 'application/json'},\n    withCredentials: true\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEditFeature', []);\nexports.module.service('gmfEditFeature', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.RasterService\n */\n/**\n * The Raster service.\n * Uses the c2cgeoportal's raster to obtain different kinds of\n * information at a specific coordinate.\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular http service.\n * @param {string} gmfRasterUrl URL to a the c2cgeoportal raster service.\n * @ngInject\n * @ngdoc service\n * @ngname gmfRaster\n */\nconst exports = function($http, gmfRasterUrl) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = gmfRasterUrl;\n};\n\n\n/**\n * @param {ol.Coordinate} coordinate Coordinate.\n * @param {Object=} opt_params Optional parameters for the request.\n * @return {angular.$q.Promise} Promise.\n * @export\n */\nexports.prototype.getRaster = function(coordinate, opt_params) {\n\n  const params = opt_params || {};\n  params[exports.Param.X] = coordinate[0];\n  params[exports.Param.Y] = coordinate[1];\n\n  return this.$http_.get(this.url_, {\n    params\n  }).then(this.handleGetRaster_.bind(this));\n};\n\n\n/**\n * @param {angular.$http.Response} resp Ajax response.\n * @return {Object.<string, number>} The response object.\n * @private\n */\nexports.prototype.handleGetRaster_ = function(resp) {\n  return resp.data;\n};\n\n\n/**\n * @enum {string}\n */\nexports.Param = {\n  X: 'lon',\n  Y: 'lat'\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfRaster', []);\nexports.module.service('gmfRaster', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.WfsPermalink\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olExtent from 'ol/extent.js';\nimport * as olFormatFilter from 'ol/format/filter.js';\nimport olFormatWFS from 'ol/format/WFS.js';\n\n/**\n * WFS permalink service that can be used to load features with a WFS\n * GetFeature request given query parameters.\n *\n * Resulting features are then highlighted and\n * the map is zoomed to the nearest map extent.\n *\n * Parameters:\n *\n * - ``wfs_layer`` tells what layer will be queried\n * - ``wfs_showFeatures`` (boolean) tells if the features should be\n *   highlighted and listed (when true) or if the map should only be\n *   recentered on the features (when false). Default is true.\n * - other parameters will be considered as WFS attribute/values filters and\n *   must be of the form:\n *   ``wfs_<layer attribute name>=<a comma-separated list of values>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_city=Oslo&wfs_number=12,34,56\n * will load parcels #12, 34 and 56 of the city of Oslo.\n *\n * It is possible to define several groups of filtering parameters by:\n *\n * - adding a ``wfs_ngroups`` parameter telling how many groups are defined\n * - prefixing all filtering parameters by the number of each group,\n *   starting at 0. For instance ``wfs_0_<layer attribute name>``\n *\n * Example:\n * http://example.com?wfs_layer=parcels&wfs_ngroups=2\n * &wfs_0_city=Oslo&wfs_0_number=12,34,56&wfs_1_city=Paris&wfs_1_number=78,90\n * will load parcels #12, 34 and 56 of the city of Oslo as well as\n * parcels #78 and 90 of the city of Paris.\n *\n * @constructor\n * @struct\n * @param {angular.$http} $http Angular $http service.\n * @param {ngeox.QueryResult} ngeoQueryResult The ngeo query result service.\n * @param {ngeox.WfsPermalinkOptions} ngeoWfsPermalinkOptions The options to\n *     configure the ngeo wfs permalink service with.\n * @ngdoc service\n * @ngname ngeoWfsPermalink\n * @ngInject\n */\nconst WfsPermalinkService = function($http, ngeoQueryResult, ngeoWfsPermalinkOptions) {\n\n  const options = ngeoWfsPermalinkOptions;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = options.url;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxFeatures_ = options.maxFeatures !== undefined ? options.maxFeatures : 50;\n\n  /**\n   * @type {Object<string, ngeox.WfsType>}\n   * @private\n   */\n  this.wfsTypes_ = {};\n\n  googAsserts.assertArray(options.wfsTypes, 'wfsTypes is not correctly set');\n  options.wfsTypes.forEach((wfsType) => {\n    this.wfsTypes_[wfsType.featureType] = wfsType;\n  });\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeatureNS_ = options.defaultFeatureNS;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.defaultFeaturePrefix_ = options.defaultFeaturePrefix;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = options.pointRecenterZoom;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.QueryResult}\n   * @private\n   */\n  this.result_ = ngeoQueryResult;\n};\n\n\n/**\n * Clear the results.\n * @export\n */\nWfsPermalinkService.prototype.clear = function() {\n  this.clearResult_();\n};\n\n\n/**\n * Build a WFS GetFeature request for the given query parameter data, send the\n * request and add the received features to {@link ngeox.QueryResult}.\n *\n * @param {ngeox.WfsPermalinkData} queryData Query data for the WFS request.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @export\n */\nWfsPermalinkService.prototype.issue = function(queryData, map) {\n  googAsserts.assert(this.url_,\n    'url is not set. to use the wfs permalink service, ' +\n      'set the value `ngeoWfsPermalinkOptions`');\n  this.clearResult_();\n\n  const typeName = queryData.wfsType;\n  if (!this.wfsTypes_.hasOwnProperty(typeName)) {\n    return;\n  }\n  const wfsType = this.wfsTypes_[typeName];\n\n  const filters = this.createFilters_(queryData.filterGroups);\n  if (filters === null) {\n    return;\n  }\n\n  this.issueRequest_(wfsType, filters, map, queryData.showFeatures);\n};\n\n\n/**\n * @param {ngeox.WfsType} wfsType Type.\n * @param {ol.format.filter.Filter} filter Filter.\n * @param {ol.Map} map The ol3 map object to get the current projection from.\n * @param {boolean} showFeatures Show features or only zoom to feature extent?\n * @private\n */\nWfsPermalinkService.prototype.issueRequest_ = function(wfsType, filter, map, showFeatures) {\n  const wfsFormat = new olFormatWFS();\n  const featureRequestXml = wfsFormat.writeGetFeature({\n    srsName: map.getView().getProjection().getCode(),\n    featureNS: (wfsType.featureNS !== undefined) ?\n      wfsType.featureNS : this.defaultFeatureNS_,\n    featurePrefix: (wfsType.featurePrefix !== undefined) ?\n      wfsType.featurePrefix : this.defaultFeaturePrefix_,\n    featureTypes: [wfsType.featureType],\n    outputFormat: 'GML3',\n    filter: filter,\n    maxFeatures: this.maxFeatures_\n  });\n\n  const featureRequest = new XMLSerializer().serializeToString(featureRequestXml);\n  const config = {\n    headers: {'Content-Type': 'text/xml; charset=UTF-8'}\n  };\n  this.$http_.post(this.url_, featureRequest, config).then((response) => {\n    const features = wfsFormat.readFeatures(response.data);\n    if (features.length == 0) {\n      return;\n    }\n\n    // zoom to features\n    const size = map.getSize();\n    if (size !== undefined) {\n      const maxZoom = this.pointRecenterZoom_;\n      const padding = [10, 10, 10, 10];\n      map.getView().fit(this.getExtent_(features), {size, maxZoom, padding});\n    }\n\n    // then show if requested\n    if (showFeatures) {\n      const resultSource = /** @type {ngeox.QueryResultSource} */ ({\n        'features': features,\n        'id': wfsType.featureType,\n        'identifierAttributeField': wfsType.label,\n        'label': wfsType.featureType,\n        'pending': false\n      });\n\n      this.result_.sources.push(resultSource);\n      this.result_.total = features.length;\n    }\n  });\n};\n\n\n/**\n * @param {Array.<ol.Feature>} features Features.\n * @return {ol.Extent} The extent of all features.\n * @private\n */\nWfsPermalinkService.prototype.getExtent_ = function(features) {\n  return features.reduce((extent, feature) => olExtent.extend(extent, feature.getGeometry().getExtent()), olExtent.createEmpty());\n};\n\n/**\n * Create OGC filters for the filter groups extracted from the query params.\n *\n * @param {Array.<ngeox.WfsPermalinkFilterGroup>} filterGroups Filter groups.\n * @return {ol.format.filter.Filter} OGC filters.\n * @private\n */\nWfsPermalinkService.prototype.createFilters_ = function(filterGroups) {\n  if (filterGroups.length == 0) {\n    return null;\n  }\n  const f = olFormatFilter;\n  const createFiltersForGroup = function(filterGroup) {\n    const filters = filterGroup.filters.map((filterDef) => {\n      const condition = filterDef.condition;\n      if (Array.isArray(condition)) {\n        return WfsPermalinkService.or_(condition.map(cond => f.equalTo(filterDef.property, cond)));\n      } else {\n        return f.equalTo(filterDef.property, filterDef.condition);\n      }\n    });\n    return WfsPermalinkService.and_(filters);\n  };\n  return WfsPermalinkService.or_(filterGroups.map(createFiltersForGroup));\n};\n\n\n/**\n * Join a list of filters with `and(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.and_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.and);\n};\n\n\n/**\n * Join a list of filters with `or(...)`.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.or_ = function(filters) {\n  return WfsPermalinkService.joinFilters_(filters, olFormatFilter.or);\n};\n\n\n/**\n * Join a list of filters with a given join function.\n *\n * @param {Array.<ol.format.filter.Filter>} filters The filters to join.\n * @param {function(!ol.format.filter.Filter, !ol.format.filter.Filter):\n *    ol.format.filter.Filter} joinFn The function to join two filters.\n * @return {ol.format.filter.Filter} The joined filters.\n * @private\n */\nWfsPermalinkService.joinFilters_ = function(filters, joinFn) {\n  return filters.reduce((combinedFilters, currentFilter) => {\n    if (combinedFilters === null) {\n      return currentFilter;\n    } else {\n      googAsserts.assert(currentFilter !== null);\n      return joinFn(combinedFilters, currentFilter);\n    }\n  }, null);\n};\n\n\n/**\n * Clear every features for all result sources and reset the total counter\n * as well.\n * @private\n */\nWfsPermalinkService.prototype.clearResult_ = function() {\n  this.result_.total = 0;\n  this.result_.sources.forEach((source) => {\n    source.features.length = 0;\n  });\n};\n\n\n/**\n * @type {!angular.Module}\n */\nWfsPermalinkService.module = angular.module('ngeoWfsPermalink', [\n  // FIXME add dependencies\n]);\n\n\n/**\n * Value that is supposed to be set in applications to enable the WFS\n * permalink functionality.\n */\nWfsPermalinkService.module.value('ngeoWfsPermalinkOptions',\n  /** @type {ngeox.WfsPermalinkOptions} */ ({\n    url: '',\n    wfsTypes: [],\n    defaultFeatureNS: '',\n    defaultFeaturePrefix: ''\n  })\n);\n\n\nWfsPermalinkService.module.service('ngeoWfsPermalink', WfsPermalinkService);\n\n\nexport default WfsPermalinkService;\n","/**\n * @module ngeo.proj.somerc\n */\nimport proj4 from 'proj4';\nimport somerc from 'proj4/projections/somerc.js';\n\n\nproj4.Proj.projections.add(somerc);\nconst exports = 'somerc';\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG21781\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg21781def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=600000',\n  '+y_0=200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg21781extent = [420000, 30000, 900000, 350000];\n\nproj4.defs('EPSG:21781', epsg21781def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:21781').setExtent(epsg21781extent);\n\nconst exports = 'EPSG:21781';\n\n\nexport default exports;\n","/**\n * @module ngeo.search.searchDirective\n */\n\n/**\n * Provides the \"ngeoSearch\" directive, which uses Twitter's\n * typeahead component to change an input text into a search field.\n *\n * Example:\n *\n *      <input type=\"text\"\n *        ngeo-search=\"ctrl.typeaheadOptions\"\n *        ngeo-search-datasets=\"ctrl.typeaheadDatasets\"\n *        ngeo-search-listeners=\"crtl.typeaheadListeners\">\n *\n * See our live example: [../examples/search.html](../examples/search.html)\n *\n * @htmlAttribute {TypeaheadOptions} ngeo-search The options.\n * @htmlAttribute {Array.<TypeaheadDataset>} ngeo-search-datasets The sources datasets.\n * @htmlAttribute {ngeox.SearchDirectiveListeners} ngeo-search-listeners The listeners.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSearch\n */\nconst exports = function() {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const typeaheadOptionsExpr = attrs['ngeoSearch'];\n      const typeaheadOptions = /** @type {TypeaheadOptions} */\n              (scope.$eval(typeaheadOptionsExpr));\n\n      const typeaheadDatasetsExpr = attrs['ngeoSearchDatasets'];\n      const typeaheadDatasets = /** @type {Array.<TypeaheadDataset>} */\n              (scope.$eval(typeaheadDatasetsExpr));\n\n      const args = typeaheadDatasets.slice();\n      args.unshift(typeaheadOptions);\n\n      element.typeahead(...args);\n\n      const typeaheadListenersExpr = attrs['ngeoSearchListeners'];\n      const typeaheadListeners_ =\n              /** @type {ngeox.SearchDirectiveListeners} */\n              (scope.$eval(typeaheadListenersExpr));\n\n      /**\n       * @type {ngeox.SearchDirectiveListeners}\n       */\n      const typeaheadListeners = exports.adaptListeners_(\n        typeaheadListeners_);\n\n      element.on('typeahead:open', () => {\n        scope.$apply(() => {\n          typeaheadListeners.open();\n        });\n      });\n\n      element.on('typeahead:close', () => {\n        scope.$apply(() => {\n          typeaheadListeners.close();\n        });\n      });\n\n      element.on('typeahead:cursorchange',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.cursorchange(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:select',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.select(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:autocomplete',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {Object} suggestion Suggestion.\n         * @param {TypeaheadDataset} dataset Dataset.\n         */\n        (event, suggestion, dataset) => {\n          scope.$apply(() => {\n            typeaheadListeners.autocomplete(event, suggestion, dataset);\n          });\n        });\n\n      element.on('typeahead:asyncreceive',\n        /**\n         * @param {jQuery.Event} event Event.\n         * @param {TypeaheadDataset} dataset Dataset.\n         * @param {string} query Query.\n         */\n        (event, dataset, query) => {\n          scope.$apply(() => {\n            const empty = element.data('tt-typeahead')['menu']['_allDatasetsEmpty']();\n            typeaheadListeners.datasetsempty(event, query, empty);\n          });\n        });\n\n    }\n  };\n};\n\n\n/**\n * Create a real ngeox.SearchDirectiveListeners object out of the object\n * returned by $eval.\n * @param {ngeox.SearchDirectiveListeners} object Object.\n * @return {ngeox.SearchDirectiveListeners} The listeners object.\n * @private\n */\nexports.adaptListeners_ = function(object) {\n  /** @type {ngeox.SearchDirectiveListeners} */\n  let typeaheadListeners;\n  if (object === undefined) {\n    typeaheadListeners = {\n      open() {},\n      close() {},\n      cursorchange() {},\n      datasetsempty() {},\n      select() {},\n      autocomplete() {}\n    };\n  } else {\n    typeaheadListeners = {\n      open: object.open !== undefined ?\n        object.open : () => {},\n      close: object.close !== undefined ?\n        object.close : () => {},\n      cursorchange: object.cursorchange !== undefined ?\n        object.cursorchange : () => {},\n      datasetsempty: object.datasetsempty !== undefined ?\n        object.datasetsempty : () => {},\n      select: object.select !== undefined ?\n        object.select : () => {},\n      autocomplete: object.autocomplete !== undefined ?\n        object.autocomplete : () => {}\n    };\n  }\n  return typeaheadListeners;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchDirective', []);\n\n\n// Register the directive in the module\nexports.module.directive('ngeoSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.colorpickerComponent\n */\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoColorpicker', []);\n\n\nexports.value('ngeoColorpickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoColorpickerTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/colorpickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/colorpickerComponent', require('./colorpickerComponent.html'));\n});\n\n\n/**\n * Provides the \"ngeoColorpicker\" directive, a widget for\n * selecting a color among predefined ones.\n *\n * Example:\n *\n *     <div ngeo-colorpicker=\"ctrl.colors\">\n *     </div>\n *\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoColorpickerTemplateUrl Template URL for the directive.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoColorpicker\n */\nexports.component_ = function(ngeoColorpickerTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: {\n      colors: '<?ngeoColorpicker',\n      color: '=?ngeoColorpickerColor'\n    },\n    controller: 'NgeoColorpickerController as ctrl',\n    bindToController: true,\n    templateUrl: ngeoColorpickerTemplateUrl\n  };\n};\n\nexports.directive('ngeoColorpicker',\n  exports.component_);\n\n/**\n * Fefault colors for the colorpicker\n * @type {Array.<Array.<string>>}\n * @const\n * @export\n */\nexports.DEFAULT_COLORS = [\n  ['#F4EB37', '#CDDC39', '#62AF44', '#009D57', '#0BA9CC', '#4186F0', '#3F5BA9', '#7C3592', '#A61B4A', '#DB4436', '#F8971B', '#F4B400', '#795046'],\n  ['#F9F7A6', '#E6EEA3', '#B7DBAB', '#7CCFA9', '#93D7E8', '#9FC3FF', '#A7B5D7', '#C6A4CF', '#D698AD', '#EE9C96', '#FAD199', '#FFDD5E', '#B29189'],\n  ['#ffffff', '#CCCCCC', '#777', '#000000']\n];\n\n/**\n * @constructor\n * @private\n * @struct\n * @param {angular.Scope} $scope Directive scope.\n * @param {angular.JQLite} $element Element.\n * @param {angular.Attributes} $attrs Attributes.\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoScaleselectorController\n */\nexports.Controller_ = function($scope, $element, $attrs) {\n\n  /**\n   * The set of color\n   * @type {Array.<Array.<string>>}\n   * @export\n   */\n  this.colors = this.colors || exports.DEFAULT_COLORS;\n\n  /**\n   * The selected color\n   * @type {undefined|string}\n   * @export\n   */\n  this.color;\n};\n\n/**\n * @param {string} color The color to select.\n * @export\n */\nexports.Controller_.prototype.setColor = function(color) {\n  this.color = color;\n};\n\nexports.controller('NgeoColorpickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.AutoProjection\n */\nimport * as olProj from 'ol/proj.js';\nimport * as olExtent from 'ol/extent.js';\n\n/**\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoAutoProjection\n */\nconst exports = function() {};\n\n\n/**\n * Parse a string and return a coordinate if the result is valid. Given string\n * must be a two numbers separated by a space.\n * @param {string} str the string to parse.\n * @return {?ol.Coordinate} A coordinate or null if the format is not valid.\n * @export\n */\nexports.prototype.stringToCoordinates = function(str) {\n  const coords = str.match(/([\\d\\.']+)[\\s,]+([\\d\\.']+)/);\n  if (coords) {\n    const x = parseFloat(coords[1].replace('\\'', ''));\n    const y = parseFloat(coords[2].replace('\\'', ''));\n    if (!isNaN(x) && !isNaN(y)) {\n      return [x, y];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Get an array of projections corresponding to their EPSG codes. Log an error\n *     for each code that are not defined in ol projections.\n * @param {Array.<string>} projectionsCodes EPSG codes (e.g. 'EPSG:3857',\n *     'epsg:3857' or '3857').\n * @return {Array.<ol.proj.Projection>} An array of projections.\n * @export\n */\nexports.prototype.getProjectionList = function(projectionsCodes) {\n  let code, proj;\n  const projections = [];\n  projectionsCodes.forEach((projection) => {\n    code = projection.toUpperCase();\n    if (code.substr(0, 5) != 'EPSG:') {\n      code = `EPSG:${code}`;\n    }\n    proj = olProj.get(code);\n    if (proj !== null) {\n      projections.push(proj);\n    } else {\n      console.error(`The projection ${code} is not defined in ol.proj.`);\n    }\n  });\n  return projections;\n};\n\n\n/**\n * It projects the point using the projection array and finds the first one for\n * which it falls inside of the viewProjection extent.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjections = function(coordinates,\n  extent, viewProjection, opt_projections) {\n  let position;\n  if (opt_projections === undefined) {\n    opt_projections = [viewProjection];\n  }\n  opt_projections.some((projection) => {\n    try {\n      position = olProj.transform(coordinates, projection, viewProjection);\n      if (olExtent.containsCoordinate(extent, position)) {\n        return true;\n      }\n    } catch (e) {\n      // Wrong coordinate leads to a transform error and ol throw an exception that we won't log.\n    }\n    position = null;\n  });\n  return position;\n};\n\n\n/**\n * Same as AutoProjection.tryProjections but if tryProjections return null,\n * re-call it with coordinates in reverse order.\n * @param {ol.Coordinate} coordinates The point to test.\n * @param {ol.Extent} extent Limits in which coordinates can be valid.\n * @param {ol.proj.Projection} viewProjection Target projection the point.\n * @param {Array.<ol.proj.Projection>=} opt_projections optional array of\n *     projections. The point is tested in each projection, in the order of\n *     the array.\n * @return {?ol.Coordinate} A coordinates in the view's projection if it matches\n *     in one of the given projections, or null else.\n * @export\n */\nexports.prototype.tryProjectionsWithInversion = function(\n  coordinates, extent, viewProjection, opt_projections) {\n  let position = this.tryProjections(coordinates, extent, viewProjection,\n    opt_projections);\n  if (position === null) {\n    position = this.tryProjections(coordinates.reverse(), extent,\n      viewProjection, opt_projections);\n  }\n  return position;\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoAutoProjection', []);\nexports.module.service('ngeoAutoProjection', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.search.FulltextSearch\n */\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * Provides the c2c-geoportal full-text search.\n * @param {angular.$injector} $injector Main injector.\n * @param {angular.$http} $http Angular http service.\n * @constructor\n * @struct\n * @ngInject\n * @export\n * @ngname gmfFulltextSearch\n */\nconst exports = function($injector, $http) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = /** @type {string} **/ ($injector.get('fulltextsearchUrl'));\n\n  const url = this.url_.split('?');\n  /**\n   * @type {string}\n   * @private\n   */\n  this.baseUrl_ = url[0];\n\n  const queryString = (url.length == 2) ? `?${url[1]}` : '';\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  this.defaultParams_ = ngeoUtils.decodeQueryString(queryString);\n};\n\n/**\n * Perform a search query on the c2c-geoportal full-text search.\n * @param {string} query Search query.\n * @param {Object.<string, string>} params Additional parameters.\n * @returns {Promise} Request promise with data array.\n */\nexports.prototype.search = function(query, params) {\n  const queryParams = Object.assign({}, this.defaultParams_, params);\n\n  queryParams['query'] = query;\n\n  const url = `${this.baseUrl_}?${ngeoUtils.encodeQueryString(queryParams)}`;\n\n  return new Promise((resolve, reject) => {\n    this.$http_.get(url)\n      .then(resp => resolve(resp['data']))\n      .catch(reject);\n  });\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfSearchFulltextSearch', []);\nexports.module.service('gmfSearchFulltextSearch', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.download.Csv\n */\nimport ngeoDownloadService from 'ngeo/download/service.js';\n\n/**\n * Service to generate and download a CSV file from tabular data.\n * Column headers are translated using {@link angularGettext.Catalog}.\n *\n * @param {angular.$injector} $injector Main injector.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngname ngeoCsvDownload\n * @ngInject\n */\nconst exports = function($injector, gettextCatalog) {\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.encoding_ = $injector.has('ngeoCsvEncoding') ?\n    $injector.get('ngeoCsvEncoding') : 'utf-8';\n\n  /**\n   * File extension of the CSV file.\n   * @type {string}\n   * @private\n   */\n  this.extension_ = $injector.has('ngeoCsvExtension') ?\n    $injector.get('ngeoCsvExtension') : '.csv';\n\n  /**\n   * Whether to include the header in the exported file or not.\n   * @type {boolean}\n   * @private\n   */\n  this.includeHeader_ = $injector.has('ngeoCsvIncludeHeader') ?\n    $injector.get('ngeoCsvIncludeHeader') : true;\n\n  /**\n   * Quote character.\n   * @type {string}\n   * @private\n   */\n  this.quote_ = $injector.has('ngeoCsvQuote') ?\n    $injector.get('ngeoCsvQuote') : '\"';\n\n  /**\n   * Separator character.\n   * @type {string}\n   * @private\n   */\n  this.separator_ = $injector.has('ngeoCsvSeparator') ?\n    $injector.get('ngeoCsvSeparator') : ',';\n\n  /**\n   * Download service.\n   * @type {ngeox.Download}\n   * @private\n   */\n  this.download_ = $injector.get('ngeoDownload');\n};\n\n\n/**\n * Generate a CSV.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @return {string} The CSV file as string.\n * @export\n */\nexports.prototype.generateCsv = function(data, columnDefs) {\n  if (data.length == 0 || columnDefs.length == 0) {\n    return '';\n  }\n\n  const translatedColumnHeaders = columnDefs.map(columnHeader => this.gettextCatalog_.getString(columnHeader.name));\n\n  const header = this.getRow_(translatedColumnHeaders);\n  const dataRows = data.map((values) => {\n    const rowValues = columnDefs.map(columnHeader => values[columnHeader.name]);\n    return this.getRow_(rowValues);\n  });\n\n  return this.includeHeader_ ? header + dataRows.join('') : dataRows.join('');\n};\n\n\n/**\n * @param {Array.<?>} values Values.\n * @return {string} CSV row.\n * @private\n */\nexports.prototype.getRow_ = function(values) {\n  const matchAllQuotesRegex = new RegExp(this.quote_, 'g');\n  const doubleQuote = this.quote_ + this.quote_;\n\n  const rowValues = values.map((value) => {\n    if (value !== undefined && value !== null) {\n      value = `${value}`;\n      // wrap each value into quotes and escape quotes with double quotes\n      return this.quote_ + value.replace(matchAllQuotesRegex, doubleQuote) + this.quote_;\n    } else {\n      return '';\n    }\n  });\n\n  return `${rowValues.join(this.separator_)}\\n`;\n};\n\n\n/**\n * Generate a CSV and start a download with the generated file.\n *\n * @param {Array.<Object>} data Entries/objects to include in the CSV.\n * @param {Array.<ngeox.GridColumnDef>} columnDefs Column definitions.\n * @param {string} fileName The CSV file name, without the extension.\n * @export\n */\nexports.prototype.startDownload = function(data, columnDefs, fileName) {\n  const fileContent = this.generateCsv(data, columnDefs);\n  this.download_(\n    fileContent, fileName, `text/csv;charset=${this.encoding_}`);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCsvDownload', [\n  ngeoDownloadService.name\n]);\nexports.module.service('ngeoCsvDownload', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.resizemap\n */\nimport googAsserts from 'goog/asserts.js';\nimport olMap from 'ol/Map.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoResizemap', []);\n\n/**\n * Provides a directive that resizes the map in an animation loop\n * during 1 second when the value of \"state\" changes. This is especially useful\n * when changing the size of other elements with a transition leads to a change\n * of the map size.\n *\n * Example:\n *\n *      <div ng-class=\"ctrl.open ? 'open' : 'close' ngeo-resizemap=\"ctrl.map\"\n *        ngeo-resizemap-state=\"open\">\n *      <div>\n *      <input type=\"checkbox\" ng-model=\"ctrl.open\" />\n *\n * See our live example: [../examples/animation.html](../examples/animation.html)\n *\n * @param {angular.$window} $window Angular window service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoResizemap\n */\nexports.directive_ = function($window) {\n  const /** @type {number} */ duration = 1000;\n\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n      const attr = 'ngeoResizemap';\n      const prop = attrs[attr];\n      const map = scope.$eval(prop);\n      googAsserts.assertInstanceof(map, olMap);\n\n      const stateExpr = attrs['ngeoResizemapState'];\n      googAsserts.assert(stateExpr !== undefined);\n\n      let start;\n      let animationDelayKey;\n\n      const animationDelay = () => {\n        map.updateSize();\n        map.renderSync();\n\n        if (Date.now() - start < duration) {\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      };\n\n      // Make sure the map is resized when the animation ends.\n      // It may help in case the animation didn't start correctly.\n      element.on('transitionend', () => {\n        map.updateSize();\n        map.renderSync();\n      });\n\n      scope.$watch(stateExpr, (newVal, oldVal) => {\n        if (newVal != oldVal) {\n          start = Date.now();\n          $window.cancelAnimationFrame(animationDelayKey);\n          animationDelayKey = $window.requestAnimationFrame(animationDelay);\n        }\n      });\n    }\n  };\n};\n\n\nexports.directive('ngeoResizemap', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.shareComponent\n */\nimport gmfPermalinkShareService from 'gmf/permalink/ShareService.js';\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\n\nconst exports = angular.module('gmfPermalinkShareComponent', [\n  gmfPermalinkShareService.module.name,\n  ngeoStatemanagerLocation.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/permalink/shareComponent', require('./shareComponent.html'));\n});\n\n\nexports.value('gmfPermalinkShareTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfPermalinkShareTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/permalink/shareComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfPermalinkShareTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPermalinkShareTemplateUrl($attrs, gmfPermalinkShareTemplateUrl) {\n  return gmfPermalinkShareTemplateUrl($attrs);\n}\n\n\n/**\n * Component to display a shortened permalink and share it by email\n * Example:\n *\n *      <gmf-share\n *        gmf-share-email=\"true\">\n *      </gmf-share>\n *\n * @htmlAttribute {boolean} gmf-share-email Enable emailing capability.\n * @type {!angular.Component}\n */\nexports.component_ = {\n  bindings: {\n    'enableEmail': '<gmfShareEmail'\n  },\n  controller: 'GmfShareController',\n  templateUrl: gmfPermalinkShareTemplateUrl\n};\nexports.component('gmfShare', exports.component_);\n\n\nclass ShareComponentController {\n  /**\n   * The controller for the share component\n   * @param {angular.Scope} $scope Scope.\n   * @param {ngeo.statemanager.Location} ngeoLocation ngeo Location service.\n   * @param {gmf.permalink.ShareService} gmfShareService service for sharing map.\n   * @param {angular.$q} $q Angular q service\n   * @param {angular.Attributes} $attrs Attributes.\n   * @constructor\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfShareController\n   */\n  constructor($scope, ngeoLocation, gmfShareService, $q, $attrs) {\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {gmf.permalink.ShareService}\n     * @private\n     */\n    this.gmfShareService_ = gmfShareService;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {ngeo.statemanager.Location}\n     * @private\n     */\n    this.ngeoLocation_ = ngeoLocation;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.enableEmail;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.shortLink;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.email;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.message;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.permalink_ = this.ngeoLocation_.getUriString();\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.showLengthWarning = this.permalink_.length > gmfPermalinkShareService.URL_MAX_LEN ||\n    ngeoLocation.getPath() > gmfPermalinkShareService.URL_PATH_MAX_LEN;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.successfullySent = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnsend = false;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.errorOnGetShortUrl = false;\n\n    this.getShortUrl();\n  }\n\n  /**\n   * Get the short version of the permalink if the email is not provided\n   * @export\n   */\n  getShortUrl() {\n    this.$q_.when(this.gmfShareService_.getShortUrl(this.permalink_))\n      .then((resp) => {\n        this.shortLink = resp.data.short_url;\n        this.errorOnGetShortUrl = false;\n      }, (resp) => {\n        this.shortLink = this.permalink;\n        this.errorOnGetShortUrl = true;\n      });\n  }\n\n  /**\n   * Send the short version of the permalink if the email is provided\n   * @export\n   */\n  sendShortUrl() {\n    if (this.$scope_['gmfShareForm'].$valid) {\n      this.$q_.when(this.gmfShareService_.sendShortUrl(this.permalink_, this.email, this.message))\n        .then((resp) => {\n          this.successfullySent = true;\n        }, (resp) => {\n          this.errorOnsend = true;\n        });\n    }\n  }\n}\n\nexports.controller('GmfShareController', ShareComponentController);\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.datasourceGroupTreeComponent\n */\nimport ngeoDatasourceDataSources from 'ngeo/datasource/DataSources.js';\nimport * as olBase from 'ol/index.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeDatasourceGroupTreeComponent', [\n  ngeoDatasourceDataSources.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree/datasourceGroupTreeComponent', require('./datasourceGroupTreeComponent.html'));\n});\n\n\nexports.value('gmfLayertreeDatasourceGroupTreeTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfLayertreeDatasourceGroupTreeTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/layertree/datasourceGroupTreeComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfLayertreeDatasourceGroupTreeTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs, gmfLayertreeDatasourceGroupTreeTemplateUrl) {\n  return gmfLayertreeDatasourceGroupTreeTemplateUrl($attrs);\n}\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {!angular.Scope} $scope Angular scope.\n   * @param {!ngeo.datasource.DataSources} ngeoDataSources Ngeo data sources\n   *     service.\n   * @private\n   * @struct\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfDatasourcegrouptreeController\n   */\n  constructor($scope, ngeoDataSources) {\n\n    // Binding properties\n\n    /**\n     * @type {!ngeo.datasource.Group}\n     * @export\n     */\n    this.group;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {!ngeox.datasource.DataSources}\n     * @private\n     */\n    this.dataSources_ = ngeoDataSources.collection;\n  }\n\n  /**\n   * @return {string} Group uid.\n   * @export\n   */\n  getGroupUid() {\n    return `datasourcegrouptree-${olBase.getUid(this.group)}`;\n  }\n\n  /**\n   * Toggle visibility of the group itself, i.e. its visibility state.\n   * @export\n   */\n  toggle() {\n    this.group.toggleVisibilityState();\n  }\n\n  /**\n   * Toggle visible property of a data source.\n   * @param {ngeo.datasource.DataSource} dataSource Data source to toggle the\n   * visibility\n   * @export\n   */\n  toggleDataSource(dataSource) {\n    dataSource.visible = !dataSource.visible;\n  }\n\n  /**\n   * Remove all data sources from the `ngeo.datasource.DataSources` collection, which\n   * will automatically remove them from the Group. The group itself\n   * is going to be removed as well, destroying this component in the process.\n   * @export\n   */\n  remove() {\n    for (let i = this.group.dataSources.length - 1, ii = 0; i >= ii; i--) {\n      this.dataSources_.remove(this.group.dataSources[i]);\n    }\n  }\n\n  /**\n   * @param {!ngeo.datasource.DataSource} dataSource Data source to remove from\n   *     the `ngeo.DataSources` collection.\n   * @export\n   */\n  removeDataSource(dataSource) {\n    this.dataSources_.remove(dataSource);\n  }\n};\n\n\nexports.component('gmfDatasourcegrouptree', {\n  bindings: {\n    'group': '<'\n  },\n  controller: exports.Controller_,\n  templateUrl: gmfLayertreeDatasourceGroupTreeTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.statemanager.module\n */\nimport ngeoStatemanagerLocation from 'ngeo/statemanager/Location.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoStatemanagerModule', [\n  ngeoStatemanagerLocation.module.name,\n  ngeoStatemanagerService.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.permalink.Permalink\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfThemeManager from 'gmf/theme/Manager.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport ngeoPopover from 'ngeo/Popover.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\n\nimport ngeoDatasourceGroup from 'ngeo/datasource/Group.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\nimport ngeoOlcsConstants from 'ngeo/olcs/constants.js';\nimport ngeoFormatFeatureHash from 'ngeo/format/FeatureHash.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoStatemanagerModule from 'ngeo/statemanager/module.js';\nimport ngeoStatemanagerService from 'ngeo/statemanager/Service.js';\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport googAsserts from 'goog/asserts.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olLayerGroup from 'ol/layer/Group.js';\n\n/**\n * The Permalink service for GMF, which uses the `ngeo.statemanager.Service` to\n * manage the GMF application state. Here's the list of states are are managed:\n *\n * - the map center and zoom level\n * - the current background layer selected\n * - whether to add a crosshair feature in the map or not\n * - the dimensions value\n *\n * To have the whole possibilities offer by the permalink, these services\n * should be instantiated: ngeoBackgroundLayerMgr, ngeoFeatureOverlayMgr,\n * ngeoFeatureHelper, gmfPermalinkOptions, gmfThemes, gmfObjectEditingManager,\n * gmfThemeManager, defaultTheme, gmfTreeManager, ngeoWfsPermalink,\n * ngeoAutoProjection and ngeoFeatures.\n *\n * @constructor\n * @struct\n * @param {!angular.$q} $q The Angular $q service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {angular.Scope} $rootScope Angular rootScope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @param {angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @param {ngeo.statemanager.Service} ngeoStateManager The ngeo statemanager service.\n * @param {ngeo.statemanager.Location} ngeoLocation ngeo location service.\n * @param {gmfx.User} gmfUser User.\n * @ngInject\n * @ngdoc service\n * @ngname gmfPermalink\n */\nconst exports = function($q, $timeout, $rootScope, $injector, ngeoDebounce, gettextCatalog,  ngeoEventHelper,\n  ngeoStateManager, ngeoLocation, gmfUser) {\n\n  /**\n   * @type {!angular.$q}\n   * @private\n   */\n  this.q_ = $q;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.rootScope_ = $rootScope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  // == listener keys ==\n\n  /**\n   * The key for map view 'propertychange' event.\n   * @type {?ol.EventsKey}\n   * @private\n   */\n  this.mapViewPropertyChangeEventKey_ = null;\n\n  // == properties from params ==\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * @type {ngeo.statemanager.Service}\n   * @private\n   */\n  this.ngeoStateManager_ = ngeoStateManager;\n\n  /**\n   * @type {?ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.ngeoFeatures_ = $injector.has('ngeoFeatures') ?\n    $injector.get('ngeoFeatures') : null;\n\n  /**\n   * @type {?ngeo.map.BackgroundLayerMgr}\n   * @private\n   */\n  this.ngeoBackgroundLayerMgr_ = $injector.has('ngeoBackgroundLayerMgr') ?\n    $injector.get('ngeoBackgroundLayerMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlayMgr}\n   */\n  const ngeoFeatureOverlayMgr = $injector.has('ngeoFeatureOverlayMgr') ?\n    $injector.get('ngeoFeatureOverlayMgr') : null;\n\n  /**\n   * @type {?ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.featureOverlay_ = ngeoFeatureOverlayMgr ?\n    ngeoFeatureOverlayMgr.getFeatureOverlay() : null;\n\n  /**\n   * @type {?ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = $injector.has('ngeoFeatureHelper') ?\n    $injector.get('ngeoFeatureHelper') : null;\n\n  /**\n   * @type {?ngeo.query.Querent}\n   * @private\n   */\n  this.ngeoQuerent_ = $injector.has('ngeoQuerent') ?\n    $injector.get('ngeoQuerent') : null;\n\n  /**\n   * The options to configure the gmf permalink service with.\n   * @type {!gmfx.PermalinkOptions}\n   */\n  const gmfPermalinkOptions = $injector.has('gmfPermalinkOptions') ?\n    $injector.get('gmfPermalinkOptions') : {};\n  if (gmfPermalinkOptions.useLocalStorage === true) {\n    // localStorage is deactivated by default\n    this.ngeoStateManager_.setUseLocalStorage(true);\n  }\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.crosshairEnabledByDefault_ = !!gmfPermalinkOptions.crosshairEnabledByDefault;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.pointRecenterZoom_ = gmfPermalinkOptions.pointRecenterZoom;\n\n  /**\n   * @type {?gmf.datasource.ExternalDataSourcesManager}\n   * @private\n   */\n  this.gmfExternalDataSourcesManager_ =\n    $injector.has('gmfExternalDataSourcesManager') ?\n      $injector.get('gmfExternalDataSourcesManager') : null;\n\n  /**\n   * @type {?gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = $injector.has('gmfThemes') ? $injector.get('gmfThemes') : null;\n\n  /**\n   * @type {?gmf.objectediting.Manager}\n   * @private\n   */\n  this.gmfObjectEditingManager_ = $injector.has('gmfObjectEditingManager') ?\n    $injector.get('gmfObjectEditingManager') : null;\n\n  /**\n   * @type {?gmf.theme.Manager}\n   * @private\n   */\n  this.gmfThemeManager_ = $injector.has('gmfThemeManager') ?\n    $injector.get('gmfThemeManager') : null;\n\n  /**\n   * @type {string|undefined}\n   * @private\n   */\n  this.defaultTheme_ = $injector.has('defaultTheme') ?\n    $injector.get('defaultTheme') : undefined;\n\n  /**\n   * @type {?gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = $injector.has('gmfTreeManager') ?\n    $injector.get('gmfTreeManager') : null;\n\n  /**\n   * @type {gmfx.User}\n   * @private\n   */\n  this.user_ = gmfUser;\n\n  // == other properties ==\n\n  /**\n   * @type {ngeo.statemanager.Location}\n   * @private\n   */\n  this.ngeoLocation_ = ngeoLocation;\n\n  /**\n   * @type {?ngeo.statemanager.WfsPermalink}\n   * @private\n   */\n  this.ngeoWfsPermalink_ = $injector.has('ngeoWfsPermalink') ?\n    $injector.get('ngeoWfsPermalink') : null;\n\n  /**\n   * @type {?gmfx.User}\n   * @export\n   */\n  this.gmfUser_ = $injector.has('gmfUser') ?\n    $injector.get('gmfUser') : null;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?ngeo.misc.AutoProjection}\n   * @private\n   */\n  this.ngeoAutoProjection_ = $injector.has('ngeoAutoProjection') ?\n    $injector.get('ngeoAutoProjection') : null;\n\n  /**\n   * A list of projections that the coordinates in the permalink can be in.\n   * @type {?Array.<ol.proj.Projection>}\n   * @private\n   */\n  this.sourceProjections_ = null;\n  if (gmfPermalinkOptions.projectionCodes !== undefined && this.ngeoAutoProjection_) {\n    const projections = this.ngeoAutoProjection_.getProjectionList(gmfPermalinkOptions.projectionCodes);\n    if (projections.length > 0) {\n      this.sourceProjections_ = projections;\n    }\n  }\n\n  /**\n   * @type {?ol.Feature}\n   * @private\n   */\n  this.crosshairFeature_ = null;\n\n  /**\n   * @type {Array<(null|ol.style.Style)>|null|ol.FeatureStyleFunction|ol.style.Style}\n   * @private\n   */\n  this.crosshairStyle_;\n\n  if (gmfPermalinkOptions.crosshairStyle !== undefined) {\n    this.crosshairStyle_ = gmfPermalinkOptions.crosshairStyle;\n  } else {\n    this.crosshairStyle_ = [new olStyleStyle({\n      image: new olStyleIcon({\n        src: require('gmf/permalink/crosshair.svg')\n      })\n    })];\n  }\n\n  /**\n   * @type {?ngeo.Popover}\n   * @private\n   */\n  this.mapTooltip_ = null;\n\n  /**\n   * @type {ngeo.format.FeatureHash}\n   * @private\n   */\n  this.featureHashFormat_ = new ngeoFormatFeatureHash({\n    setStyle: false,\n    encodeStyles: false,\n    propertiesType: {\n      'fillColor': ngeoFormatFeatureProperties.COLOR,\n      'fillOpacity': ngeoFormatFeatureProperties.OPACITY,\n      'fontColor': ngeoFormatFeatureProperties.COLOR,\n      'fontSize': ngeoFormatFeatureProperties.SIZE,\n      'isBox': ngeoFormatFeatureProperties.IS_RECTANGLE,\n      'isCircle': ngeoFormatFeatureProperties.IS_CIRCLE,\n      'isLabel': ngeoFormatFeatureProperties.IS_TEXT,\n      'name': ngeoFormatFeatureProperties.NAME,\n      'pointRadius': ngeoFormatFeatureProperties.SIZE,\n      'showLabel': ngeoFormatFeatureProperties.SHOW_LABEL,\n      'showMeasure': ngeoFormatFeatureProperties.SHOW_MEASURE,\n      'strokeColor': ngeoFormatFeatureProperties.COLOR,\n      'strokeWidth': ngeoFormatFeatureProperties.STROKE\n    },\n    defaultValues: {\n      'name': feature => gettextCatalog.getString(feature.getGeometry().getType()),\n      'fillOpacity': () => 0.5,\n      'showLabel': () => false,\n      'showMeasure': () => false\n    }\n  });\n\n  // == event listeners ==\n\n  if (this.ngeoBackgroundLayerMgr_) {\n    olEvents.listen(\n      this.ngeoBackgroundLayerMgr_,\n      'change',\n      this.handleBackgroundLayerManagerChange_,\n      this);\n  }\n\n  // visibility\n  this.rootScope_.$on('ngeo-layertree-state', (event, treeCtrl, firstParent) => {\n    const newState = {};\n    if (firstParent.node.mixed) {\n      const state = treeCtrl.getState();\n      googAsserts.assert(state === 'on' || state === 'off');\n      const visible = state === 'on';\n      treeCtrl.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined) {\n          const param = exports.ParamPrefix.TREE_ENABLE + ctrl.node.name;\n          newState[param] = visible;\n        }\n      });\n    } else {\n      const gmfLayerNames = [];\n      firstParent.traverseDepthFirst((ctrl) => {\n        if (ctrl.node.children === undefined && ctrl.getState() === 'on') {\n          gmfLayerNames.push(ctrl.node.name);\n        }\n      });\n      newState[exports.ParamPrefix.TREE_GROUP_LAYERS + firstParent.node.name] = gmfLayerNames.join(',');\n    }\n    this.ngeoStateManager_.updateState(newState);\n  });\n  this.rootScope_.$on('ngeo-layertree-opacity', (event, treeCtrl) => {\n    const newState = {};\n    const opacity = treeCtrl.layer.getOpacity();\n    const stateName = (treeCtrl.parent.node.mixed ?\n      exports.ParamPrefix.TREE_OPACITY : exports.ParamPrefix.TREE_GROUP_OPACITY\n    ) + treeCtrl.node.name;\n    newState[stateName] = opacity;\n    this.ngeoStateManager_.updateState(newState);\n  });\n\n  // ngeoFeatures\n  //   (1) read from features from the state manager first, add them\n  //   (2) listen for further features added/removed\n  const features = this.getFeatures();\n  if (this.ngeoFeatures_) {\n    features.forEach((feature) => {\n      if (this.featureHelper_) {\n        this.featureHelper_.setStyle(feature);\n      }\n      this.addNgeoFeature_(feature);\n    });\n\n    this.ngeoFeatures_.extend(features);\n    olEvents.listen(this.ngeoFeatures_, 'add', this.handleNgeoFeaturesAdd_, this);\n    olEvents.listen(this.ngeoFeatures_, 'remove', this.handleNgeoFeaturesRemove_, this);\n  }\n\n  if (this.featureHelper_) {\n    this.rootScope_.$on('$localeChangeSuccess', () => {\n      features.forEach((feature) => {\n        this.featureHelper_.setStyle(feature);\n      });\n    });\n  }\n\n  if (this.gmfThemeManager_) {\n    this.rootScope_.$on(gmfThemeManager.EventType.THEME_NAME_SET, (event, name) => {\n      this.setThemeInUrl_(name);\n    });\n  }\n\n  // External DataSources\n\n  /**\n   * @type {?angular.$q.Promise}\n   * @private\n   */\n  this.setExternalDataSourcesStatePromise_ = null;\n\n  if (this.ngeoQuerent_ && this.gmfExternalDataSourcesManager_) {\n    // First, load the external data sources that are defined in the url\n    this.initExternalDataSources_().then(() => {\n      // Then, listen to the changes made to the external data sources to\n      // update the url accordingly.\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'add',\n        this.handleExternalDSGroupCollectionAdd_,\n        this\n      );\n      olEvents.listen(\n        this.gmfExternalDataSourcesManager_.wmtsGroupsCollection,\n        'remove',\n        this.handleExternalDSGroupCollectionRemove_,\n        this\n      );\n\n      // We also need to 'register' the existing groups as well, i.e. those\n      // that were created by the Permalink\n      for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n        this.registerExternalDSGroup_(wmsGroup);\n      }\n      for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n        this.registerExternalDSGroup_(wmtsGroup);\n      }\n    });\n  }\n\n  this.initLayers_();\n};\n\n\n// === Map X, Y, Z ===\n\n/**\n * Get the coordinate to use to initialize the map view from the state manager.\n * @return {?ol.Coordinate} The coordinate for the map view center.\n * @export\n */\nexports.prototype.getMapCenter = function() {\n  const x = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_X);\n  const y = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Y);\n\n  if (!isNaN(x) && !isNaN(y)) {\n    const center = [x, y];\n    if (this.sourceProjections_ !== null && this.ngeoAutoProjection_) {\n      const targetProjection = this.map_.getView().getProjection();\n      const reprojectedCenter = this.ngeoAutoProjection_.tryProjectionsWithInversion(\n        center, targetProjection.getExtent(), targetProjection,\n        this.sourceProjections_);\n      if (reprojectedCenter) {\n        return reprojectedCenter;\n      }\n    }\n    return center;\n  }\n  return null;\n};\n\n\n/**\n * Get the zoom level to use to initialize the map view from the state manager.\n * @return {number|undefined} The zoom for the map view.\n * @export\n */\nexports.prototype.getMapZoom = function() {\n  const zoom = this.ngeoStateManager_.getInitialNumberValue(gmfBase.PermalinkParam.MAP_Z);\n  return isNaN(zoom) ? undefined : zoom;\n};\n\n\n// === Map crosshair ===\n\n\n/**\n * Get the map crosshair property from the state manager, if defined.\n * @return {boolean} Whether map crosshair property is set or not.\n * @export\n */\nexports.prototype.getMapCrosshair = function() {\n  const crosshair = this.ngeoStateManager_.getInitialBooleanValue(gmfBase.PermalinkParam.MAP_CROSSHAIR);\n  return crosshair === undefined ? this.crosshairEnabledByDefault_ : crosshair;\n};\n\n\n/**\n * Sets the map crosshair to the center (or the map center if nothing provided).\n * Overwrites an existing map crosshair.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapCrosshair = function(opt_center) {\n  let crosshairCoordinate;\n  if (opt_center) {\n    crosshairCoordinate = opt_center;\n  } else {\n    crosshairCoordinate = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(crosshairCoordinate);\n\n  // remove existing crosshair first\n  if (this.crosshairFeature_) {\n    this.featureOverlay_.removeFeature(this.crosshairFeature_);\n  }\n  // set new crosshair\n  this.crosshairFeature_ = new olFeature(\n    new olGeomPoint(crosshairCoordinate));\n  this.crosshairFeature_.setStyle(this.crosshairStyle_);\n\n  // add to overlay\n  this.featureOverlay_.addFeature(this.crosshairFeature_);\n};\n\n\n// === Map tooltip ===\n\n\n/**\n * Get the tooltip text from the state manager.\n * @return {string|undefined} Tooltip text.\n * @export\n */\nexports.prototype.getMapTooltip = function() {\n  return this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.MAP_TOOLTIP);\n};\n\n/**\n * Sets the map tooltip to the center (or the map center if nothing provided).\n * Overwrites an existing map tooltip.\n * @param {string} tooltipText Text to display in tooltip.\n * @param {?ol.Coordinate=} opt_center Optional center coordinate.\n */\nexports.prototype.setMapTooltip = function(tooltipText, opt_center) {\n  let tooltipPosition;\n  if (opt_center) {\n    tooltipPosition = opt_center;\n  } else {\n    tooltipPosition = this.map_.getView().getCenter();\n  }\n  googAsserts.assertArray(tooltipPosition);\n\n  const div = $('<div/>', {\n    'class': 'gmf-permalink-tooltip',\n    'text': tooltipText\n  })[0];\n\n  if (this.mapTooltip_ !== null) {\n    this.map_.removeOverlay(this.mapTooltip_);\n  }\n\n  this.mapTooltip_ = new ngeoPopover({\n    element: div,\n    position: tooltipPosition\n  });\n\n  this.map_.addOverlay(this.mapTooltip_);\n};\n\n\n// === NgeoFeatures (A.K.A. DrawFeature, RedLining) ===\n\n\n/**\n * Get the ngeo features from the state manager for initialization purpose\n * @return {!Array.<!ol.Feature>} The features read from the state manager.\n * @export\n */\nexports.prototype.getFeatures = function() {\n  const f = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.FEATURES);\n  if (f !== undefined && f !== '') {\n    return googAsserts.assert(this.featureHashFormat_.readFeatures(f));\n  }\n  return [];\n};\n\n\n/**\n * @param {!Object.<string, string>} dimensions The global dimensions object.\n * @export\n */\nexports.prototype.setDimensions = function(dimensions) {\n  // apply initial state\n  const keys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.DIMENSIONS);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    const value = this.ngeoLocation_.getParam(key);\n    googAsserts.assert(value);\n    dimensions[key.slice(exports.ParamPrefix.DIMENSIONS.length)] = value;\n  }\n\n  this.rootScope_.$watchCollection(() => dimensions, (dimensions) => {\n    const params = {};\n    for (const key in dimensions) {\n      params[exports.ParamPrefix.DIMENSIONS + key] = dimensions[key];\n    }\n    this.ngeoLocation_.updateParams(params);\n  });\n};\n\n\n/**\n * Bind an ol3 map object to this service. The service will, from there on,\n * listen to the properties changed within the map view and update the following\n * state properties: map_x, map_y and map_zoom.\n *\n * If the service is already bound to a map, those events are unlistened first.\n *\n * @param {?ol.Map} map The ol3 map object.\n * @export\n */\nexports.prototype.setMap = function(map) {\n\n  if (map === this.map_) {\n    return;\n  }\n\n  if (this.map_) {\n    this.unregisterMap_();\n    this.map_ = null;\n  }\n\n  if (map) {\n    this.map_ = map;\n    if (this.gmfObjectEditingManager_) {\n      this.gmfObjectEditingManager_.getFeature().then((feature) => {\n        this.registerMap_(map, feature);\n      });\n    } else {\n      this.registerMap_(map, null);\n    }\n  }\n\n};\n\n\n/**\n * Listen to the map view property change and update the state accordingly.\n * @param {ol.Map} map The ol3 map object.\n * @param {?ol.Feature} oeFeature ObjectEditing feature\n * @private\n */\nexports.prototype.registerMap_ = function(map, oeFeature) {\n\n  const view = map.getView();\n  let center;\n\n  // (1) Initialize the map view with either:\n  //     a) the given ObjectEditing feature\n  //     b) the X, Y and Z available within the permalink service, if available\n  const geom = typeof oeFeature !== 'undefined' && oeFeature !== null ? oeFeature.getGeometry() : undefined;\n  if (geom) {\n    const size = map.getSize();\n    googAsserts.assert(size);\n    let maxZoom;\n    if (geom instanceof olGeomPoint || geom instanceof olGeomMultiPoint) {\n      maxZoom = this.pointRecenterZoom_;\n    }\n    view.fit(geom.getExtent(), {\n      size,\n      maxZoom\n    });\n  } else {\n    const enabled3d = this.ngeoStateManager_.getInitialBooleanValue(ngeoOlcsConstants.Permalink3dParam.ENABLED);\n    if (!enabled3d) {\n      center = this.getMapCenter();\n      if (center) {\n        view.setCenter(center);\n      }\n      const zoom = this.getMapZoom();\n      if (zoom !== undefined) {\n        view.setZoom(zoom);\n      }\n    }\n  }\n\n\n  // (2) Listen to any property changes within the view and apply them to\n  //     the permalink service\n  this.mapViewPropertyChangeEventKey_ = olEvents.listen(\n    view,\n    'propertychange',\n    this.ngeoDebounce_(() => {\n      const center = view.getCenter();\n      const zoom = view.getZoom();\n      const object = {};\n      object[gmfBase.PermalinkParam.MAP_X] = Math.round(center[0]);\n      object[gmfBase.PermalinkParam.MAP_Y] = Math.round(center[1]);\n      object[gmfBase.PermalinkParam.MAP_Z] = zoom;\n      this.ngeoStateManager_.updateState(object);\n    }, 300, /* invokeApply */ true),\n    this);\n\n  // (3) Add map crosshair, if set\n  if (this.getMapCrosshair() && this.featureOverlay_) {\n    this.setMapCrosshair(center);\n  }\n\n  // (4) Add map tooltip, if set\n  const tooltipText = this.getMapTooltip();\n  if (tooltipText) {\n    this.setMapTooltip(tooltipText, center);\n  }\n\n  // (6) check for a wfs permalink\n  const wfsPermalinkData = this.getWfsPermalinkData_();\n  if (wfsPermalinkData !== null && this.ngeoWfsPermalink_) {\n    this.ngeoWfsPermalink_.issue(wfsPermalinkData, map);\n  }\n};\n\n\n/**\n * Remove any event listeners from the current map.\n * @private\n */\nexports.prototype.unregisterMap_ = function() {\n  googAsserts.assert(\n    this.mapViewPropertyChangeEventKey_, 'Key should be thruthy');\n  olEvents.unlistenByKey(this.mapViewPropertyChangeEventKey_);\n  this.mapViewPropertyChangeEventKey_ = null;\n};\n\n\n// === Background layer ===\n\n\n/**\n * Get the background layer object to use to initialize the map from the\n * state manager.\n * @param {!Array.<!ol.layer.Base>} layers Array of background layer objects.\n * @return {?ol.layer.Base} Background layer.\n * @export\n */\nexports.prototype.getBackgroundLayer = function(layers) {\n  const layerName = this.ngeoStateManager_.getInitialStringValue(gmfBase.PermalinkParam.BG_LAYER);\n  if (layerName !== undefined) {\n    for (const layer of layers) {\n      if (layer.get('label') === layerName) {\n        return layer;\n      }\n    }\n  }\n  return null;\n};\n\n\n/**\n * Called when the background layer changes. Update the state using the\n * background layer label, i.e. its name.\n * @private\n */\nexports.prototype.handleBackgroundLayerManagerChange_ = function() {\n  if (!this.map_ || !this.ngeoBackgroundLayerMgr_) {\n    return;\n  }\n\n  // get layer label, i.e its name\n  const layer = this.ngeoBackgroundLayerMgr_.get(this.map_);\n  const layerName = layer.get('label');\n  googAsserts.assertString(layerName);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.BG_LAYER] = layerName;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n// === Layers (layer tree) ===\n\n\n/**\n * Get the current first level node names in the tree manager and update the\n * correspondent state of the permalink.\n * @export\n */\nexports.prototype.refreshFirstLevelGroups = function() {\n  if (!this.gmfTreeManager_) {\n    return;\n  }\n  // Get first-level-groups order\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const orderedNames = groupNodes.map(node => node.name);\n\n  // set it in state\n  const object = {};\n  object[gmfBase.PermalinkParam.TREE_GROUPS] = orderedNames.join(',');\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Return true if there is a theme specified in the URL path.\n * @private\n * @param {Array.<string>} pathElements Array of path elements.\n * @return {boolean} theme in path.\n */\nexports.prototype.themeInUrl_ = function(pathElements) {\n  const indexOfTheme = pathElements.indexOf('theme');\n  return indexOfTheme != -1 && indexOfTheme == pathElements.length - 2;\n};\n\n\n/**\n * @param {string} themeName Theme name.\n * @private\n */\nexports.prototype.setThemeInUrl_ = function(themeName) {\n  if (themeName) {\n    const pathElements = this.ngeoLocation_.getPath().split('/');\n    googAsserts.assert(pathElements.length > 1);\n    if (pathElements[pathElements.length - 1] === '') {\n      // case where the path is just \"/\"\n      pathElements.splice(pathElements.length - 1);\n    }\n    if (this.themeInUrl_(pathElements)) {\n      pathElements[pathElements.length - 1] = themeName;\n    } else {\n      pathElements.push('theme', themeName);\n    }\n    this.ngeoLocation_.setPath(pathElements.join('/'));\n  }\n};\n\n\n/**\n * Get the default theme from url, local storage, user functionalities or\n * defaultTheme constant.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeName = function() {\n\n  // check if we have a theme in url\n  const pathElements = this.ngeoLocation_.getPath().split('/');\n  if (this.themeInUrl_(pathElements)) {\n    return decodeURI(pathElements[pathElements.length - 1]);\n  }\n\n  // check if we have a theme in the local storage\n  const tn = this.ngeoStateManager_.getInitialStringValue('theme');\n  if (tn) {\n    return tn;\n  }\n\n  const defaultTheme = this.defaultThemeNameFromFunctionalities();\n  if (defaultTheme !== null) {\n    return defaultTheme;\n  }\n\n  // fallback to the defaultTheme constant\n  if (this.defaultTheme_) {\n    return this.defaultTheme_;\n  }\n\n  return null;\n};\n\n\n/**\n * Get the default theme from user functionalities.\n * @return {?string} default theme name.\n * @export\n */\nexports.prototype.defaultThemeNameFromFunctionalities = function() {\n  //check if we have a theme in the user functionalities\n  if (!this.gmfUser_) {\n    return null;\n  }\n  const functionalities = this.gmfUser_.functionalities;\n  if (functionalities && 'default_theme' in functionalities) {\n    const defaultTheme = functionalities.default_theme;\n    if (defaultTheme.length > 0) {\n      return defaultTheme[0];\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n */\nexports.prototype.initLayers_ = function() {\n  const initialUri = window.location.href;\n  let authenticationRequired = false;\n\n  if (!this.gmfThemes_) {\n    return;\n  }\n  this.gmfThemes_.getThemesObject().then((themes) => {\n    const themeName = this.defaultThemeName();\n    googAsserts.assert(themeName !== null);\n\n    if (this.gmfThemeManager_) {\n      this.gmfThemeManager_.setThemeName(this.gmfThemeManager_.modeFlush ? themeName : '');\n    }\n\n    /**\n     * @type {Array<(gmfThemes.GmfGroup)>}\n     */\n    let firstLevelGroups = [];\n    let theme;\n    // Check if we have the groups in the permalink\n    const groupsNames = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.TREE_GROUPS);\n    if (groupsNames === undefined) {\n      googAsserts.assertString(themeName);\n      theme = gmfThemeThemes.findThemeByName(themes, themeName);\n      if (theme) {\n        firstLevelGroups = theme.children;\n      }\n    } else {\n      groupsNames.split(',').forEach((groupName) => {\n        const group = gmfThemeThemes.findGroupByName(themes, groupName);\n        if (group) {\n          firstLevelGroups.push(group);\n        } else {\n          authenticationRequired = true;\n        }\n      });\n    }\n\n    if (this.gmfTreeManager_) {\n      this.gmfTreeManager_.setFirstLevelGroups(firstLevelGroups);\n    }\n\n    this.$timeout_(() => {\n      if (!this.gmfTreeManager_ || !this.gmfTreeManager_.rootCtrl) {\n        // we don't have any layertree\n        if (authenticationRequired && this.user_.role_id === null) {\n          this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n        }\n        return;\n      }\n      // Enable the layers and set the opacity\n      this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n        if (treeCtrl.isRoot) {\n          return;\n        }\n\n        const opacity = this.ngeoStateManager_.getInitialNumberValue((\n          treeCtrl.parent.node.mixed ?\n            exports.ParamPrefix.TREE_OPACITY :\n            exports.ParamPrefix.TREE_GROUP_OPACITY\n        ) + treeCtrl.node.name);\n        if (opacity !== undefined && treeCtrl.layer) {\n          treeCtrl.layer.setOpacity(opacity);\n        }\n        if (treeCtrl.parent.node && treeCtrl.parent.node.mixed && treeCtrl.node.children == undefined) {\n          // Layer of a mixed group\n          const enable = this.ngeoStateManager_.getInitialBooleanValue(\n            exports.ParamPrefix.TREE_ENABLE + treeCtrl.node.name\n          );\n          if (enable !== undefined) {\n            treeCtrl.setState(enable ? 'on' : 'off', false);\n          }\n        } else if (!treeCtrl.node.mixed && treeCtrl.depth == 1) {\n          // First level non mixed group\n          const groupLayers = this.ngeoStateManager_.getInitialStringValue(\n            exports.ParamPrefix.TREE_GROUP_LAYERS + treeCtrl.node.name\n          );\n          if (groupLayers !== undefined) {\n            const groupLayersArray = groupLayers == '' ? [] : groupLayers.split(',');\n            treeCtrl.traverseDepthFirst((treeCtrl) => {\n              if (treeCtrl.node.children === undefined) {\n                const enable = olArray.includes(groupLayersArray, treeCtrl.node.name);\n                if (enable) {\n                  groupLayersArray.splice(groupLayersArray.indexOf(treeCtrl.node.name), 1);\n                }\n                treeCtrl.setState(enable ? 'on' : 'off', false);\n              }\n            });\n            if (groupLayersArray.length > 0) {\n              authenticationRequired = true;\n            }\n          }\n        }\n      });\n      const firstParents = this.gmfTreeManager_.rootCtrl.children;\n      firstParents.forEach((firstParent) => {\n        firstParent.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.getState() !== 'indeterminate') {\n            this.rootScope_.$broadcast('ngeo-layertree-state', treeCtrl, firstParent);\n            return ngeoLayertreeController.VisitorDecision.STOP;\n          }\n        });\n      });\n\n      if (authenticationRequired && this.user_.role_id === null) {\n        this.rootScope_.$broadcast('authenticationrequired', {url: initialUri});\n      }\n    });\n  });\n};\n\n\n// === ngeoFeatures, A.K.A features from the DrawFeature, RedLining  ===\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesAdd_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.addNgeoFeature_(feature);\n};\n\n\n/**\n * @param {ol.Collection.Event} event Collection event.\n * @private\n */\nexports.prototype.handleNgeoFeaturesRemove_ = function(event) {\n  const feature = event.element;\n  googAsserts.assertInstanceof(feature, olFeature);\n  this.removeNgeoFeature_(feature);\n};\n\n\n/**\n * Listen to any changes that may occur within the feature in order to\n * update the state of the permalink accordingly.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.addNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(feature, 'change',\n      this.ngeoDebounce_(this.handleNgeoFeaturesChange_, 250, true), this)\n  );\n};\n\n\n/**\n * Unregister any event listener from the feature.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.prototype.removeNgeoFeature_ = function(feature) {\n  const uid = olBase.getUid(feature);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n  this.handleNgeoFeaturesChange_();\n};\n\n\n/**\n * Called once upon initialization of the permalink service if there's at\n * least one feature in the ngeoFeatures collection, then called every time\n * the collection changes or any of the features within the collection changes.\n * @private\n */\nexports.prototype.handleNgeoFeaturesChange_ = function() {\n  if (!this.ngeoFeatures_) {\n    return;\n  }\n  const features = this.ngeoFeatures_.getArray();\n  const data = this.featureHashFormat_.writeFeatures(features);\n\n  const object = {};\n  object[gmfBase.PermalinkParam.FEATURES] = data;\n  this.ngeoStateManager_.updateState(object);\n};\n\n\n/**\n * Get the query data for a WFS permalink.\n * @return {?ngeox.WfsPermalinkData} The query data.\n * @private\n */\nexports.prototype.getWfsPermalinkData_ = function() {\n  const wfsLayer = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_LAYER);\n  if (!wfsLayer) {\n    return null;\n  }\n\n  const numGroups = this.ngeoLocation_.getParamAsInt(gmfBase.PermalinkParam.WFS_NGROUPS);\n  const paramKeys = this.ngeoLocation_.getParamKeysWithPrefix(exports.ParamPrefix.WFS);\n\n  const filterGroups = [];\n  let filterGroup;\n  if (numGroups === undefined) {\n    // no groups are used, e.g. '?wfs_layer=fuel&wfs_osm_id=123\n    filterGroup = this.createFilterGroup_(exports.ParamPrefix.WFS, paramKeys);\n    if (filterGroup !== null) {\n      filterGroups.push(filterGroup);\n    }\n  } else {\n    // filter groups are used, e.g. '?wfs_layer=osm_scale&wfs_ngroups=2&wfs_0_ele=380&\n    // wfs_0_highway=bus_stop&&wfs_1_name=Grand-Pont'\n    for (let i = 0; i < numGroups; i++) {\n      filterGroup = this.createFilterGroup_(`${exports.ParamPrefix.WFS + i}_`, paramKeys);\n      if (filterGroup !== null) {\n        filterGroups.push(filterGroup);\n      }\n    }\n  }\n\n  if (filterGroups.length == 0) {\n    return null;\n  }\n\n  const showFeaturesParam = this.ngeoLocation_.getParam(gmfBase.PermalinkParam.WFS_SHOW_FEATURES);\n  const showFeatures = !(showFeaturesParam === '0' || showFeaturesParam === 'false');\n\n  return {\n    wfsType: wfsLayer,\n    showFeatures: showFeatures,\n    filterGroups: filterGroups\n  };\n};\n\n\n/**\n * Create a filter group for a given prefix from the query params.\n * @param {string} prefix E.g. `wfs_` or `wfs_0_`.\n * @param {Array.<string>} paramKeys All param keys starting with `wfs_`.\n * @return {ngeox.WfsPermalinkFilterGroup|null} A filter group.\n * @private\n */\nexports.prototype.createFilterGroup_ = function(prefix, paramKeys) {\n  /**\n   * @type {Array.<ngeox.WfsPermalinkFilter>}\n   */\n  const filters = [];\n\n  paramKeys.forEach((paramKey) => {\n    if (paramKey == gmfBase.PermalinkParam.WFS_LAYER || paramKey == gmfBase.PermalinkParam.WFS_SHOW_FEATURES ||\n        paramKey == gmfBase.PermalinkParam.WFS_NGROUPS || paramKey.indexOf(prefix) != 0) {\n      return;\n    }\n    const value = this.ngeoLocation_.getParam(paramKey);\n    if (!value) {\n      return;\n    }\n\n    let condition = value;\n    if (value.indexOf(',') > -1) {\n      condition = value.split(',');\n    }\n\n    const filter = {\n      property: paramKey.replace(prefix, ''),\n      condition: condition\n    };\n    filters.push(filter);\n  });\n\n  return (filters.length > 0) ? {filters} : null;\n};\n\n\n// === External Data Sources management ===\n\n\n/**\n * @return {!angular.$q.Promise} Promise\n * @private\n */\n\nexports.prototype.initExternalDataSources_ = function() {\n\n  const ngeoQuerent = googAsserts.assert(this.ngeoQuerent_);\n  const gmfExtDSManager = googAsserts.assert(\n    this.gmfExternalDataSourcesManager_);\n\n  const promises = [];\n\n  const layerNamesString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES);\n  const urlsString = this.ngeoStateManager_.getInitialValue(\n    gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS);\n\n  if (layerNamesString && urlsString) {\n\n    const layerNames = layerNamesString.split(exports.ExtDSSeparator.LIST);\n    const urls = urlsString.split(exports.ExtDSSeparator.LIST);\n\n    for (let i = 0, ii = urls.length; i < ii; i++) {\n      // Stop iterating if we do not have the same number of urls and layer\n      // names\n      const groupLayerNamesString = layerNames[i];\n\n      if (!groupLayerNamesString) {\n        break;\n      }\n\n      const groupLayerNames = groupLayerNamesString.split(\n        exports.ExtDSSeparator.NAMES);\n      const url = urls[i];\n\n      const serviceType = ngeoDatasourceOGC.guessServiceTypeByUrl(url);\n\n      const getCapabilitiesDefer = this.q_.defer();\n      promises.push(getCapabilitiesDefer.promise);\n\n      if (serviceType === ngeoDatasourceOGC.Type.WMS) {\n        ngeoQuerent.wmsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else if (serviceType === ngeoDatasourceOGC.Type.WMTS) {\n        ngeoQuerent.wmtsGetCapabilities(url).then(\n          (capabilities) => {\n            getCapabilitiesDefer.resolve({\n              capabilities,\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          },\n          () => {\n            // Query to the WMTS service didn't work\n            getCapabilitiesDefer.reject({\n              groupLayerNames,\n              serviceType,\n              url\n            });\n          }\n        );\n      } else {\n        // Wrong service type\n        getCapabilitiesDefer.reject({\n          groupLayerNames,\n          serviceType,\n          url\n        });\n      }\n    }\n  }\n\n  return this.q_.all(promises).then(\n    (responses) => {\n      for (const response of responses) {\n\n        // WMS - For each layer name, find its layer capability object, then\n        //       create the data source\n        if (response.serviceType === ngeoDatasourceOGC.Type.WMS) {\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmsFindLayerCapability(\n              response.capabilities['Capability']['Layer']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n\n        } else if (response.serviceType === ngeoDatasourceOGC.Type.WMTS) {\n\n          // WMTS - For each layer name, find its layer capability object, then\n          //        create the data source\n          for (const layerName of response.groupLayerNames) {\n            const layerCap = ngeoQuerent.wmtsFindLayerCapability(\n              response.capabilities['Contents']['Layer'],\n              layerName\n            );\n            if (layerCap) {\n              gmfExtDSManager.createAndAddDataSourceFromWMTSCapability(\n                layerCap,\n                response.capabilities,\n                response.url\n              );\n            } else {\n              // TODO - handle 'not found' layer in capabilities\n            }\n          }\n        }\n      }\n    },\n    (rejections) => {\n      // TODO - handle rejections\n    }\n  );\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionAdd_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.registerExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.registerExternalDSGroup_ = function(group) {\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.listen(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Contains the layer name\n * @param {!ol.layer.Base} layer The layer to inspect\n * @param {string} name The layer name to find\n * @return {boolean} The containing status\n */\nexports.prototype.containsLayerName = function(layer, name) {\n  if (layer instanceof olLayerGroup) {\n    for (const l of layer.getLayers().getArray()) {\n      googAsserts.assert(l);\n      if (this.containsLayerName(l, name)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return layer.get('layerNodeName') == name;\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Collection event.\n * @private\n */\nexports.prototype.handleExternalDSGroupCollectionRemove_ = function(evt) {\n  const group = evt.element;\n  googAsserts.assertInstanceof(group, ngeoDatasourceGroup);\n  this.unregisterExternalDSGroup_(group);\n  this.setExternalDataSourcesState_();\n};\n\n\n/**\n * @param {!ngeo.datasource.Group} group Data source group.\n * @private\n */\nexports.prototype.unregisterExternalDSGroup_ = function(group) {\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'add',\n    this.setExternalDataSourcesState_,\n    this\n  );\n  olEvents.unlisten(\n    group.dataSourcesCollection,\n    'remove',\n    this.setExternalDataSourcesState_,\n    this\n  );\n};\n\n\n/**\n * Set the External Data Sources parameters in the url.\n * @private\n */\nexports.prototype.setExternalDataSourcesState_ = function() {\n\n  if (this.setExternalDataSourcesStatePromise_) {\n    this.$timeout_.cancel(this.setExternalDataSourcesStatePromise_);\n  }\n\n  this.setExternalDataSourcesStatePromise_ = this.$timeout_(() => {\n    const names = [];\n    const urls = [];\n\n    // (1) Collect WMS Groups and their layer names\n    for (const wmsGroup of this.gmfExternalDataSourcesManager_.wmsGroups) {\n\n      // (1a) url\n      urls.push(wmsGroup.url);\n\n      // (1b) layer names\n      const wmsGroupLayerNames = [];\n      for (const wmsDataSource of wmsGroup.dataSources) {\n        googAsserts.assertInstanceof(wmsDataSource, ngeoDatasourceOGC);\n\n        // External WMS data sources always have only one OGC layer name,\n        // as they are created using a single Capability Layer object that\n        // has only 1 layer name\n        const layerName = wmsDataSource.getOGCLayerNames()[0];\n        wmsGroupLayerNames.push(layerName);\n      }\n      names.push(wmsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (2) Collect WMTS Groups and their layer names\n    for (const wmtsGroup of this.gmfExternalDataSourcesManager_.wmtsGroups) {\n\n      // (2a) url\n      urls.push(wmtsGroup.url);\n\n      // (2b) layer names\n      const wmtsGroupLayerNames = [];\n      for (const wmtsDataSource of wmtsGroup.dataSources) {\n        googAsserts.assert(wmtsDataSource.wmtsLayer);\n        wmtsGroupLayerNames.push(wmtsDataSource.wmtsLayer);\n      }\n      names.push(wmtsGroupLayerNames.join(exports.ExtDSSeparator.NAMES));\n    }\n\n    // (3) Update state\n    this.ngeoStateManager_.updateState({\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_NAMES]: names.join(\n        exports.ExtDSSeparator.LIST\n      ),\n      [gmfBase.PermalinkParam.EXTERNAL_DATASOURCES_URLS]: urls.join(\n        exports.ExtDSSeparator.LIST\n      )\n    });\n\n    // (4) Reset promise\n    this.setExternalDataSourcesStatePromise_ = null;\n  });\n};\n\n\n/**\n * Clean the permalink parameters\n * @param {!Array.<gmfThemes.GmfGroup>} groups firstlevel groups of the tree\n */\nexports.prototype.cleanParams = function(groups) {\n  const keys = googAsserts.assert(this.ngeoLocation_.getParamKeys());\n  for (const key of keys) {\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_LAYERS)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_LAYERS.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n    if (key.startsWith(exports.ParamPrefix.TREE_GROUP_OPACITY)) {\n      const value = key.substring(exports.ParamPrefix.TREE_GROUP_OPACITY.length);\n      for (const group of groups) {\n        if (group.name == value) {\n          this.ngeoStateManager_.deleteParam(key);\n          break;\n        }\n      }\n    }\n  }\n  this.$timeout_(() => {\n    if (!this.map_) {\n      return;\n    }\n    const layer = this.map_.getLayerGroup();\n    googAsserts.assert(layer);\n    for (const key of keys) {\n      if (key.startsWith(exports.ParamPrefix.TREE_ENABLE)) {\n        const value = key.substring(exports.ParamPrefix.TREE_ENABLE.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n      if (key.startsWith(exports.ParamPrefix.TREE_OPACITY)) {\n        const value = key.substring(exports.ParamPrefix.TREE_OPACITY.length);\n        if (!this.containsLayerName(layer, value)) {\n          this.ngeoStateManager_.deleteParam(key);\n        }\n      }\n    }\n  });\n};\n\n\nexports.module = angular.module('gmfPermalink', [\n  gmfThemeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoDrawFeatures.name,\n  ngeoLayertreeController.module.name,\n  ngeoMiscDebounce.name,\n  ngeoMiscEventHelper.module.name,\n  ngeoStatemanagerModule.name,\n]);\n\nexports.module.service('gmfPermalink', exports);\n\n\n/**\n * @enum {string}\n */\nexports.OpenLayersLayerProperties = {\n  OPACITY: 'opacity'\n};\n\n/**\n * @enum {string}\n */\nexports.ParamPrefix = {\n  DIMENSIONS: 'dim_',\n  TREE_ENABLE: 'tree_enable_',\n  TREE_GROUP_LAYERS: 'tree_group_layers_',\n  TREE_GROUP_OPACITY: 'tree_group_opacity_',\n  TREE_OPACITY: 'tree_opacity_',\n  WFS: 'wfs_'\n};\n\n\n/**\n * External data source separators\n * @enum {string}\n */\nexports.ExtDSSeparator = {\n  LIST: ',',\n  NAMES: ';'\n};\n\n\nexports.module.value('gmfPermalinkOptions',\n  /** @type {gmfx.PermalinkOptions} */ ({}));\n\n\n/** Configure the ngeo state manager */\n(function() {\n  const regexp = [];\n  for (const key1 in exports.ParamPrefix) {\n    regexp.push(new RegExp(`${exports.ParamPrefix[key1]}.*`));\n  }\n  for (const key2 in gmfBase.PermalinkParam) {\n    regexp.push(new RegExp(exports.ParamPrefix[key2]));\n  }\n  ngeoStatemanagerService.module.value('ngeoUsedKeyRegexp', regexp);\n})();\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datepickerComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscTime from 'ngeo/misc/Time.js';\n\nimport 'angular-ui-date';\nimport 'jquery-ui/themes/base/all.css';\n\n// FIXME: import the locales in the applications\nimport 'jquery-ui/ui/i18n/datepicker-fr.js';\nimport 'jquery-ui/ui/i18n/datepicker-en-GB.js';\nimport 'jquery-ui/ui/i18n/datepicker-de.js';\nimport 'jquery-ui/ui/i18n/datepicker-it.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDatePicker', [\n  ngeoMiscTime.module.name,\n  'ui.date',\n]);\n\n\nexports.value('ngeoDatePickerTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoDatePickerTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/misc/datepickerComponent';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/misc/datepickerComponent', require('./datepickerComponent.html'));\n});\n\n\n/**\n * Provide a directive to select a single date or a range of dates. Requires\n * jQuery UI for the 'datepicker' widget.\n *\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n * ngeoDatePickerTemplateUrl Template for the directive.\n * @param  {angular.$timeout} $timeout angular timeout service\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoDatePicker\n */\nexports.component_ = function(ngeoDatePickerTemplateUrl,  $timeout) {\n  return {\n    scope: {\n      onDateSelected: '&',\n      time: '='\n    },\n    bindToController: true,\n    controller: 'ngeoDatePickerController as datepickerCtrl',\n    restrict: 'AE',\n    templateUrl: ngeoDatePickerTemplateUrl,\n    link: (scope, element, attrs, ctrl) => {\n      ctrl.init();\n\n      const lang =  ctrl.gettextCatalog_.getCurrentLanguage();\n      $['datepicker']['setDefaults']($['datepicker']['regional'][lang]);\n\n      ctrl.sdateOptions = angular.extend({}, ctrl.sdateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"edate\"]').datepicker('option', 'minDate', selectedDate);\n          }\n        }\n      });\n\n      ctrl.edateOptions = angular.extend({}, ctrl.edateOptions, {\n        'minDate': ctrl.initialMinDate,\n        'maxDate': ctrl.initialMaxDate,\n        'onClose': (selectedDate) => {\n          if (selectedDate) {\n            $(element[0]).find('input[name=\"sdate\"]').datepicker('option', 'maxDate', selectedDate);\n          }\n        }\n      });\n\n      angular.element('body').on('hidden.bs.popover', () => {\n        const dp = angular.element('#ui-datepicker-div');\n        if (dp && dp.css('display') === 'block') {\n          $(element[0]).find('input[name$=\"date\"]').datepicker('hide');\n        }\n      });\n\n      $timeout(() => {\n        angular.element('#ui-datepicker-div').on('mousedown', (e) => {\n          e.stopPropagation();\n        });\n      });\n    }\n  };\n};\n\nexports.directive('ngeoDatePicker', exports.component_);\n\n\n/**\n * DatePickerController - directive conttroller\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$injector} $injector injector.\n * @param {!ngeo.misc.Time} ngeoTime time service.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatePickerController\n */\nexports.Controller_ = function($scope, $injector,\n  ngeoTime, gettextCatalog) {\n\n  /**\n   * @type {!ngeo.misc.Time}\n   * @private\n   */\n  this.ngeoTime_ = ngeoTime;\n\n  /**\n   * @type {!ngeox.TimeProperty}\n   * @export\n   */\n  this.time;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n\n  /**\n   * If the component is used to select a date range\n   * @type {boolean}\n   * @export\n   */\n  this.isModeRange;\n\n\n  /**\n   * Function called after date(s) changed/selected\n   * @type {function({time: {start: number, end: number}})}\n   * @export\n   */\n  this.onDateSelected;\n\n\n  /**\n   * Initial min date for the datepicker\n   * @type {!Date}\n   */\n  this.initialMinDate;\n\n  /**\n   * Initial max date for the datepickeronDateSelected\n   * @type {!Date}\n   */\n  this.initialMaxDate;\n\n  /**\n   * Datepicker options for the second datepicker (only for range mode)\n   * @type {Object}\n   * @export\n   */\n  this.edateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Datepicker options for the first datepicker\n   * @type {Object}\n   * @export\n   */\n  this.sdateOptions = {\n    'changeMonth': true,\n    'changeYear': true\n  };\n\n  /**\n   * Start date model for the first date picker\n   * @type {Date}\n   * @export\n   */\n  this.sdate;\n\n  /**\n   * End date model for the second datepicker (only for range mode)\n   * @type {Date}\n   * @export\n   */\n  this.edate;\n\n  $scope.$watchGroup(['datepickerCtrl.sdate', 'datepickerCtrl.edate'], (newDates, oldDates) => {\n    const sDate = newDates[0];\n    const eDate = newDates[1];\n\n    if (angular.isDate(sDate) && (!this.isModeRange || angular.isDate(eDate))) {\n      this.onDateSelected({\n        time: {\n          start: this.ngeoTime_.getTime(sDate),\n          end: this.ngeoTime_.getTime(eDate)\n        }\n      });\n    }\n  });\n};\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.init = function() {\n  //fetch the initial options for the component\n  const initialOptions_ = this.ngeoTime_.getOptions(this.time);\n  this.initialMinDate = this.ngeoTime_.createDate(initialOptions_.minDate);\n  this.initialMaxDate = this.ngeoTime_.createDate(initialOptions_.maxDate);\n  this.isModeRange = this.time.mode === 'range';\n\n  if (this.isModeRange) {\n    googAsserts.assertArray(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values[0]);\n    this.edate = this.ngeoTime_.createDate(initialOptions_.values[1]);\n  } else {\n    googAsserts.assertNumber(initialOptions_.values);\n    this.sdate = this.ngeoTime_.createDate(initialOptions_.values);\n  }\n};\n\nexports.controller('ngeoDatePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.Attribute\n */\nconst exports = {};\nimport ngeoFormatAttributeType from 'ngeo/format/AttributeType.js';\n\n\n/**\n * Set the `type` and `geomType` properties of an attribute if the given\n * type is a geometry one.\n *\n * @param {ngeox.AttributeBase} attribute Attribute.\n * @param {string} type Type.\n * @return {boolean} Whether both attribute type and geomType were set.\n */\nexports.setGeometryType = function(attribute, type) {\n  const geomRegex =\n    /gml:((Multi)?(Point|Line|Polygon|Curve|Surface|Geometry)).*/;\n  if (geomRegex.exec(type)) {\n    attribute.type = ngeoFormatAttributeType.GEOMETRY;\n    if (/^gml:Point/.exec(type)) {\n      attribute.geomType = 'Point';\n    } else if (/^gml:LineString|^gml:Curve/.exec(type)) {\n      attribute.geomType = 'LineString';\n    } else if (/^gml:Polygon|^gml:Surface/.exec(type)) {\n      attribute.geomType = 'Polygon';\n    } else if (/^gml:MultiPoint/.exec(type)) {\n      attribute.geomType = 'MultiPoint';\n    } else if (/^gml:MultiLineString|^gml:MultiCurve/.exec(type)) {\n      attribute.geomType = 'MultiLineString';\n    } else if (/^gml:MultiPolygon|^gml:MultiSurface/.exec(type)) {\n      attribute.geomType = 'MultiPolygon';\n    }\n  }\n  return !!attribute.type && !!attribute.geomType;\n};\n\n\nexport default exports;\n","/**\n * @module gmf.editing.EnumerateAttribute\n */\nconst exports = class {\n\n  /**\n   * The EnumerateAttribute is responsible of fetching all possible of a given\n   * attribute of a given data source (gmf layer).\n   *\n   * @struct\n   * @param {angular.$http} $http Angular $http service.\n   * @param {string} gmfLayersUrl Url to the GeoMapFish layers service.\n   * @ngInject\n   * @ngdoc service\n   * @ngname gmfEnumerateAttribute\n   */\n  constructor($http, gmfLayersUrl) {\n\n    // === Injected services ===\n\n    /**\n     * @type {angular.$http}\n     * @private\n     */\n    this.http_ = $http;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.baseUrl_ = gmfLayersUrl;\n\n    /**\n     * @type {Object.<string, !angular.$q.Promise>}\n     * @private\n     */\n    this.promises_ = {};\n  }\n\n  /**\n   * @param {gmf.datasource.OGC} dataSource Data source.\n   * @param {string} attribute Attribute name.\n   * @return {angular.$q.Promise} Promise.\n   */\n  getAttributeValues(dataSource, attribute) {\n    const promiseId = `${dataSource.id}_${attribute}`;\n    const name = dataSource.name;\n    if (!this.promises_[promiseId]) {\n      const url = `${this.baseUrl_}/${name}/values/${attribute}`;\n      this.promises_[promiseId] = this.http_.get(url).then(\n        this.handleGetAttributeValues_.bind(this));\n    }\n    return this.promises_[promiseId];\n  }\n\n  /**\n   * @param {angular.$http.Response} resp Ajax response.\n   * @return {Array.<gmfThemes.GmfLayerAttributeValue>} List of the attribute\n   *     values.\n   * @export\n   */\n  handleGetAttributeValues_(resp) {\n    const data = /** @type {gmfThemes.GmfLayerAttributeValuesResponse} */ (\n      resp.data);\n    return data.items;\n  }\n\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('gmfEnumerateAttribute', []);\nexports.module.service('gmfEnumerateAttribute', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.File\n */\n/**\n * @constructor\n * @param {angular.$q} $q .\n * @param {angular.$http} $http .\n * @param {gettext} gettext .\n * @ngInject\n */\nconst exports = function($q, $http, gettext) {\n  let fileReader, canceler;\n\n  // Test the validity of the file size\n  this.isValidFileSize = function(fileSize) {\n    return !(fileSize > 20000000); // 20 Mo\n  };\n\n  this.isWmsGetCap = function(fileContent) {\n    return /<(WMT_MS_Capabilities|WMS_Capabilities)/.test(fileContent);\n  };\n\n  this.isWmtsGetCap = function(fileContent) {\n    return /<Capabilities/.test(fileContent);\n  };\n\n  this.isKml = function(fileContent) {\n    return /<kml/.test(fileContent) && /<\\/kml>/.test(fileContent);\n  };\n\n  this.isGpx = function(fileContent) {\n    return /<gpx/.test(fileContent) && /<\\/gpx>/.test(fileContent);\n  };\n\n  /**\n   * @param {!Blob} file .\n   * @return {angular.$q.Promise<string>} .\n   */\n  this.read = function(file) {\n    const defer = $q.defer();\n    if (fileReader && fileReader.readyState === FileReader.LOADING) {\n      fileReader.abort();\n    }\n    fileReader = new FileReader();\n    fileReader.onload = function(evt) {\n      defer.resolve(evt.target.result);\n    };\n    fileReader.onerror = function(evt) {\n      const err = evt.target.error;\n      console.error('Reading file failed: ', err);\n      defer.reject({\n        'message': err.code == 20 ? gettext('Operation canceled') : gettext('Read failed'),\n        'reason': err.message\n      });\n    };\n    fileReader.onprogress = function(evt) {\n      defer.notify(evt);\n    };\n    // Read the file\n    fileReader.readAsText(file);\n    return defer.promise;\n  };\n\n  /**\n   * @param {string} url .\n   * @param {angular.$q.Deferred=} opt_cancelP .\n   * @return {angular.$q.Promise<Blob>} .\n   */\n  this.load = function(url, opt_cancelP) {\n\n    if (canceler) {\n      canceler.resolve();\n    }\n    canceler = opt_cancelP || $q.defer();\n\n    // Angularjs doesn't handle onprogress event\n    const defer = $q.defer();\n    $http.get(url, {\n      timeout: canceler.promise\n    }).then((response) => {\n      defer.resolve(response.data);\n    }, (reason) => {\n      console.error('Uploading file failed: ', reason);\n      defer.reject({\n        'message': gettext('Upload failed'),\n        'reason': reason\n      });\n    });\n    return defer.promise;\n  };\n};\n\nexports.module = angular.module('ngeoFile', []);\n\nexports.module.service('ngeoFile', exports);\n\n\nexport default exports;\n","/**\n * @module gmf.controllers.AbstractDesktopController\n */\nimport gmfControllersAbstractAppController from 'gmf/controllers/AbstractAppController.js';\nimport gmfContextualdataModule from 'gmf/contextualdata/module.js';\nimport gmfDrawingModule from 'gmf/drawing/module.js';\nimport gmfEditingModule from 'gmf/editing/module.js';\nimport gmfPermalinkShareComponent from 'gmf/permalink/shareComponent.js';\nimport gmfPrintComponent from 'gmf/print/component.js';\nimport gmfProfileModule from 'gmf/profile/module.js';\nimport gmfRasterComponent from 'gmf/raster/component.js';\nimport ngeoDrawFeatures from 'ngeo/draw/features.js';\nimport ngeoMapResizemap from 'ngeo/map/resizemap.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoQueryBboxQueryComponent from 'ngeo/query/bboxQueryComponent.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport * as olBase from 'ol/index.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olObj from 'ol/obj.js';\nimport olCollection from 'ol/Collection.js';\nimport olMap from 'ol/Map.js';\nimport olView from 'ol/View.js';\nimport olControlScaleLine from 'ol/control/ScaleLine.js';\nimport olControlZoom from 'ol/control/Zoom.js';\nimport olControlRotate from 'ol/control/Rotate.js';\nimport * as olInteraction from 'ol/interaction.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * Desktop application abstract controller.\n *\n * This file includes `goog.require`'s for desktop components/directives used\n * by the HTML page and the controller to provide the configuration.\n *\n * @param {gmfx.Config} config A part of the application config.\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @extends {gmf.controllers.AbstractAppController}\n * @ngdoc controller\n * @ngInject\n * @export\n */\nconst exports = function(config, $scope, $injector) {\n\n  const viewConfig = {\n    projection: olProj.get(`EPSG:${config.srid || 21781}`)\n  };\n  olObj.assign(viewConfig, config.mapViewConfig || {});\n\n  const arrow = gmfControllersAbstractAppController.prototype.getLocationIcon();\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map = new olMap({\n    pixelRatio: config.mapPixelRatio,\n    layers: [],\n    view: new olView(viewConfig),\n    controls: config.mapControls || [\n      new olControlScaleLine({\n        target: document.getElementById('scaleline')\n      }),\n      new olControlZoom({\n        zoomInTipLabel: '',\n        zoomOutTipLabel: ''\n      }),\n      new olControlRotate({\n        label: arrow,\n        tipLabel: ''\n      })\n    ],\n    interactions: config.mapInteractions || olInteraction.defaults({\n      pinchRotate: true,\n      altShiftDragRotate: true\n    }),\n    loadTilesWhileAnimating: true,\n    loadTilesWhileInteracting: true\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loginActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.toolsActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.modalShareShown = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.editFeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.routingfeatureActive = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.googleStreetViewActive = false;\n\n  /**\n   * @type {!ol.style.Style}\n   * @export\n   */\n  this.googleStreetViewStyle = new olStyleStyle({\n    text: new olStyleText({\n      fill: new olStyleFill({color: '#279B61'}),\n      font: 'normal 30px FontAwesome',\n      offsetY: -15,\n      stroke: new olStyleStroke({color: '#ffffff', width: 3}),\n      text: '\\uf041'\n    })\n  });\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.importDataSourceActive = false;\n\n  const body = $('body');\n\n  // initialize tooltips\n  body.tooltip({\n    container: 'body',\n    trigger: 'hover',\n    selector: '[data-toggle=\"tooltip\"]'\n  });\n\n  // deactivate tooltips on touch device\n  body.on('touchstart.detectTouch', () => {\n    body.tooltip('destroy');\n    body.off('touchstart.detectTouch');\n  });\n\n  /**\n   * Collection of features for the draw interaction\n   * @type {ol.Collection.<ol.Feature>}\n   */\n  const ngeoFeatures = $injector.get('ngeoFeatures');\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @export\n   */\n  this.drawFeatureLayer = $injector.get('ngeoFeatureOverlayMgr')\n    .getFeatureOverlay();\n  this.drawFeatureLayer.setFeatures(ngeoFeatures);\n\n  const ngeoFeatureHelper = $injector.get('ngeoFeatureHelper');\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.editFeatureVectorLayer = new olLayerVector({\n    source: new olSourceVector({\n      wrapX: false,\n      features: new olCollection()\n    }),\n    style: (feature, resolution) => ngeoFeatureHelper.createEditingStyles(feature)\n    // style: ngeoFeatureHelper.createEditingStyles.bind(ngeoFeatureHelper)\n  });\n  this.editFeatureVectorLayer.setMap(this.map);\n\n  /**\n   * The ngeo ToolActivate manager service.\n   * @type {ngeo.misc.ToolActivateMgr}\n   */\n  const ngeoToolActivateMgr = $injector.get('ngeoToolActivateMgr');\n\n  const editFeatureActivate = new ngeoMiscToolActivate(this, 'editFeatureActive');\n  ngeoToolActivateMgr.registerTool('mapTools', editFeatureActivate, false);\n\n  const googleStreetViewActivate = new ngeoMiscToolActivate(\n    this,\n    'googleStreetViewActive'\n  );\n  ngeoToolActivateMgr.registerTool('mapTools', googleStreetViewActivate, false);\n\n  /**\n   * @type {ngeox.ScaleselectorOptions}\n   * @export\n   */\n  this.scaleSelectorOptions = {\n    dropup: true\n  };\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.profileLine = null;\n\n  gmfControllersAbstractAppController.call(this, config, $scope, $injector);\n\n  // Close the login panel on successful login.\n  $scope.$watch(() => this.gmfUser.username, (newVal) => {\n    if (newVal !== null && this.loginActive) {\n      this.loginActive = false;\n    }\n  });\n};\n\nolBase.inherits(exports, gmfControllersAbstractAppController);\n\nexports.module = angular.module('GmfAbstractDesktopControllerModule', [\n  gmfControllersAbstractAppController.module.name,\n  gmfContextualdataModule.name,\n  gmfDrawingModule.name,\n  gmfEditingModule.name,\n  gmfPermalinkShareComponent.name,\n  gmfPrintComponent.name,\n  gmfProfileModule.name,\n  gmfRasterComponent.name,\n  ngeoDrawFeatures.name,\n  ngeoMapResizemap.name,\n  ngeoQueryBboxQueryComponent.name,\n  gmfImportModule.name,\n]);\n\nexports.module.controller(\n  'AbstractDesktopController',\n  exports);\n\nexports.module.value('isDesktop', true);\n\nexports.module.value('ngeoQueryOptions', {\n  'limit': 20\n});\n\nexports.module.value('ngeoMeasurePrecision', 3);\nexports.module.value('ngeoMeasureDecimals', 0);\n\n\nexport default exports;\n","/**\n * @module ngeo.print.VectorEncoder\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport * as olMath from 'ol/math.js';\nimport olStyleIcon from 'ol/style/Icon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport * as olColor from 'ol/color.js';\n\n/**\n * @constructor\n */\nconst exports = function() {\n  /**\n   * @type {ol.format.GeoJSON}\n   */\n  this.geojsonFormat = new olFormatGeoJSON();\n};\n\n\n/**\n * @enum {string}\n */\nexports.PrintStyleType = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.print.VectorEncoder.PrintStyleType>}\n * @private\n */\nexports.PrintStyleTypes_ = {\n  'LineString': exports.PrintStyleType.LINE_STRING,\n  'Point': exports.PrintStyleType.POINT,\n  'Polygon': exports.PrintStyleType.POLYGON,\n  'MultiLineString': exports.PrintStyleType.LINE_STRING,\n  'MultiPoint': exports.PrintStyleType.POINT,\n  'MultiPolygon': exports.PrintStyleType.POLYGON\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceVector);\n\n  const features = source.getFeatures();\n\n  const /** @type {Array.<GeoJSONFeature>} */ geojsonFeatures = [];\n  const mapfishStyleObject = /** @type {MapFishPrintVectorStyle} */ ({\n    version: 2\n  });\n\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const originalFeature = features[i];\n\n    let styleData = null;\n    const styleFunction = originalFeature.getStyleFunction() || layer.getStyleFunction();\n    if (styleFunction !== undefined) {\n      styleData = styleFunction.call(layer, originalFeature, resolution);\n    }\n    const origGeojsonFeature = this.geojsonFormat.writeFeatureObject(originalFeature);\n    /**\n     * @type {Array<ol.style.Style>}\n     */\n    const styles = (styleData !== null && !Array.isArray(styleData)) ? [styleData] : styleData;\n    googAsserts.assert(Array.isArray(styles));\n\n    if (styles !== null && styles.length > 0) {\n      let isOriginalFeatureAdded = false;\n      for (let j = 0, jj = styles.length; j < jj; ++j) {\n        const style = styles[j];\n        let geometry = style.getGeometry();\n        let geojsonFeature;\n        if (!geometry) {\n          geojsonFeature = origGeojsonFeature;\n          geometry = originalFeature.getGeometry();\n          // no need to encode features with no geometry\n          if (!geometry) {\n            continue;\n          }\n          if (!isOriginalFeatureAdded) {\n            geojsonFeatures.push(geojsonFeature);\n            isOriginalFeatureAdded = true;\n          }\n        } else {\n          let styledFeature = originalFeature.clone();\n          styledFeature.setGeometry(geometry);\n          geojsonFeature = this.geojsonFormat.writeFeatureObject(styledFeature);\n          geometry = styledFeature.getGeometry();\n          styledFeature = null;\n          geojsonFeatures.push(geojsonFeature);\n        }\n\n        const geometryType = geometry.getType();\n        if (geojsonFeature.properties === null) {\n          geojsonFeature.properties = {};\n        }\n\n        const featureStyleProp = `_ngeo_style_${j}`;\n        const styleId = `${olBase.getUid(style).toString()}-${geometryType}`;\n        this.encodeVectorStyle(mapfishStyleObject, geometryType, style, styleId, featureStyleProp);\n        geojsonFeature.properties[featureStyleProp] = styleId;\n      }\n    }\n  }\n\n  // MapFish Print fails if there are no style rules, even if there are no\n  // features either. To work around this we just ignore the layer if the\n  // array of GeoJSON features is empty.\n  // See https://github.com/mapfish/mapfish-print/issues/279\n\n  if (geojsonFeatures.length > 0) {\n    const geojsonFeatureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: geojsonFeatures\n    });\n    const object = /** @type {MapFishPrintVectorLayer} */ ({\n      geoJson: geojsonFeatureCollection,\n      opacity: layer.getOpacity(),\n      style: mapfishStyleObject,\n      type: 'geojson'\n    });\n    arr.push(object);\n  }\n};\n\n\n/**\n * @param {MapFishPrintVectorStyle} object MapFish style object.\n * @param {ol.geom.GeometryType} geometryType Type of the GeoJSON geometry\n * @param {ol.style.Style} style Style.\n * @param {string} styleId Style id.\n * @param {string} featureStyleProp Feature style property name.\n */\nexports.prototype.encodeVectorStyle = function(object, geometryType, style, styleId, featureStyleProp) {\n  if (!(geometryType in exports.PrintStyleTypes_)) {\n    // unsupported geometry type\n    return;\n  }\n  const styleType = exports.PrintStyleTypes_[geometryType];\n  const key = `[${featureStyleProp} = '${styleId}']`;\n  if (key in object) {\n    // do nothing if we already have a style object for this CQL rule\n    return;\n  }\n  const styleObject = /** @type {MapFishPrintSymbolizers} */ ({\n    symbolizers: []\n  });\n  object[key] = styleObject;\n  const fillStyle = style.getFill();\n  const imageStyle = style.getImage();\n  const strokeStyle = style.getStroke();\n  const textStyle = style.getText();\n  if (styleType === exports.PrintStyleType.POLYGON) {\n    if (fillStyle !== null) {\n      this.encodeVectorStylePolygon(\n        styleObject.symbolizers, fillStyle, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.LINE_STRING) {\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleLine(styleObject.symbolizers, strokeStyle);\n    }\n  } else if (styleType === exports.PrintStyleType.POINT) {\n    if (imageStyle !== null) {\n      this.encodeVectorStylePoint(styleObject.symbolizers, imageStyle);\n    }\n  }\n  if (textStyle !== null) {\n    this.encodeTextStyle(styleObject.symbolizers, textStyle);\n  }\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerPolygon} symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @protected\n */\nexports.prototype.encodeVectorStyleFill = function(symbolizer, fillStyle) {\n  let fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n    fillColor = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    symbolizer.fillColor = ngeoUtils.rgbArrayToHex(fillColor);\n    symbolizer.fillOpacity = fillColor[3];\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleLine = function(symbolizers, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerLine} */ ({\n    type: 'line'\n  });\n  this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Image} imageStyle Image style.\n * @protected\n */\nexports.prototype.encodeVectorStylePoint = function(symbolizers, imageStyle) {\n  let symbolizer;\n  if (imageStyle instanceof olStyleCircle) {\n    symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n      type: 'point'\n    });\n    symbolizer.pointRadius = imageStyle.getRadius();\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      this.encodeVectorStyleFill(symbolizer, fillStyle);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n    }\n  } else if (imageStyle instanceof olStyleIcon) {\n    const src = new URL(imageStyle.getSrc(), window.location.href).href;\n    if (src !== undefined) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point',\n        externalGraphic: src\n      });\n      const opacity = imageStyle.getOpacity();\n      if (opacity !== null) {\n        symbolizer.graphicOpacity = opacity;\n      }\n      const size = imageStyle.getSize();\n      if (size !== null) {\n        let scale = imageStyle.getScale();\n        if (isNaN(scale)) {\n          scale = 1;\n        }\n        symbolizer.graphicWidth = size[0] * scale;\n        symbolizer.graphicHeight = size[1] * scale;\n      }\n      let rotation = imageStyle.getRotation();\n      if (isNaN(rotation)) {\n        rotation = 0;\n      }\n      symbolizer.rotation = olMath.toDegrees(rotation);\n    }\n  } else if (imageStyle instanceof olStyleRegularShape) {\n    /**\n     * Mapfish Print does not support image defined with ol.style.RegularShape.\n     * As a workaround, I try to map the image on a well-known image name.\n     */\n    const points = /** @type {ol.style.RegularShape} */ (imageStyle).getPoints();\n    if (points !== null) {\n      symbolizer = /** @type {MapFishPrintSymbolizerPoint} */ ({\n        type: 'point'\n      });\n      if (points === 4) {\n        symbolizer.graphicName = 'square';\n      } else if (points === 3) {\n        symbolizer.graphicName = 'triangle';\n      } else if (points === 5) {\n        symbolizer.graphicName = 'star';\n      } else if (points === 8) {\n        symbolizer.graphicName = 'cross';\n      }\n      const sizeShape = imageStyle.getSize();\n      if (sizeShape !== null) {\n        symbolizer.graphicWidth = sizeShape[0];\n        symbolizer.graphicHeight = sizeShape[1];\n      }\n      const rotationShape = imageStyle.getRotation();\n      if (!isNaN(rotationShape) && rotationShape !== 0) {\n        symbolizer.rotation = olMath.toDegrees(rotationShape);\n      }\n      const opacityShape = imageStyle.getOpacity();\n      if (opacityShape !== null) {\n        symbolizer.graphicOpacity = opacityShape;\n      }\n      const strokeShape = imageStyle.getStroke();\n      if (strokeShape !== null) {\n        this.encodeVectorStyleStroke(symbolizer, strokeShape);\n      }\n      const fillShape = imageStyle.getFill();\n      if (fillShape !== null) {\n        this.encodeVectorStyleFill(symbolizer, fillShape);\n      }\n    }\n  }\n  if (symbolizer !== undefined) {\n    symbolizers.push(symbolizer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizer>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStylePolygon = function(symbolizers, fillStyle, strokeStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerPolygon} */ ({\n    type: 'polygon'\n  });\n  this.encodeVectorStyleFill(symbolizer, fillStyle);\n  if (strokeStyle !== null) {\n    this.encodeVectorStyleStroke(symbolizer, strokeStyle);\n  }\n  symbolizers.push(symbolizer);\n};\n\n\n/**\n * @param {MapFishPrintSymbolizerPoint|MapFishPrintSymbolizerLine|MapFishPrintSymbolizerPolygon}\n *      symbolizer MapFish Print symbolizer.\n * @param {!ol.style.Stroke} strokeStyle Stroke style.\n * @protected\n */\nexports.prototype.encodeVectorStyleStroke = function(symbolizer, strokeStyle) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    symbolizer.strokeColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    symbolizer.strokeOpacity = strokeColorRgba[3];\n  }\n  const strokeDashstyle = strokeStyle.getLineDash();\n  if (strokeDashstyle !== null) {\n    symbolizer.strokeDashstyle = strokeDashstyle.join(' ');\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    symbolizer.strokeWidth = strokeWidth;\n  }\n  const strokeLineCap = strokeStyle.getLineCap();\n  if (strokeLineCap) {\n    symbolizer.strokeLinecap = strokeStyle.getLineCap();\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintSymbolizerText>} symbolizers Array of MapFish Print\n *     symbolizers.\n * @param {!ol.style.Text} textStyle Text style.\n * @protected\n */\nexports.prototype.encodeTextStyle = function(symbolizers, textStyle) {\n  const symbolizer = /** @type {MapFishPrintSymbolizerText} */ ({\n    type: 'Text'\n  });\n  const label = textStyle.getText();\n  if (label !== undefined) {\n    symbolizer.label = label;\n    let xAlign = 'c';\n    let yAlign = 'm';\n\n    const olTextAlign = textStyle.getTextAlign();\n    // 'left', 'right', 'center', 'end' or 'start'.\n    if (olTextAlign === 'left' || olTextAlign === 'start') {\n      xAlign = 'l';\n    } else if (olTextAlign === 'right' || olTextAlign === 'end') {\n      xAlign = 'r';\n    }\n\n    const olTextBaseline = textStyle.getTextBaseline();\n    // 'bottom', 'top', 'middle', 'alphabetic', 'hanging' or 'ideographic'\n    if (olTextBaseline === 'bottom') {\n      yAlign = 'l';\n    } else if (olTextBaseline === 'top') {\n      yAlign = 't';\n    }\n    symbolizer.labelAlign = `${xAlign}${yAlign}`;\n\n    const labelRotation = textStyle.getRotation();\n    if (labelRotation !== undefined) {\n      // Mapfish Print expects a string, not a number to rotate text\n      symbolizer.labelRotation = (labelRotation * 180 / Math.PI).toString();\n      // rotate around the vertical/horizontal center\n      symbolizer.labelAlign = 'cm';\n    }\n\n    const fontStyle = textStyle.getFont();\n    if (fontStyle !== undefined) {\n      const font = fontStyle.split(' ');\n      if (font.length >= 3) {\n        symbolizer.fontWeight = font[0];\n        symbolizer.fontSize = font[1];\n        symbolizer.fontFamily = font.splice(2).join(' ');\n      }\n    }\n\n    const strokeStyle = textStyle.getStroke();\n    if (strokeStyle !== null) {\n      const strokeColor = strokeStyle.getColor();\n      googAsserts.assert(typeof strokeColor === 'string' || Array.isArray(strokeColor));\n      const strokeColorRgba = olColor.asArray(strokeColor);\n      googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n      symbolizer.haloColor = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n      symbolizer.haloOpacity = strokeColorRgba[3];\n      const width = strokeStyle.getWidth();\n      if (width !== undefined) {\n        // Width is a stroke, radius a radius, so divide by 2\n        symbolizer.haloRadius = width / 2;\n      }\n    }\n\n    const fillStyle = textStyle.getFill();\n    if (fillStyle !== null) {\n      const fillColor = fillStyle.getColor();\n      googAsserts.assert(typeof fillColor === 'string' || Array.isArray(fillColor));\n      const fillColorRgba = olColor.asArray(fillColor);\n      googAsserts.assert(Array.isArray(fillColorRgba), 'only supporting fill colors');\n      symbolizer.fontColor = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    }\n\n    // Mapfish Print allows offset only if labelAlign is defined.\n    if (symbolizer.labelAlign !== undefined) {\n      symbolizer.labelXOffset = textStyle.getOffsetX();\n      // Mapfish uses the opposite direction of OpenLayers for y axis, so the\n      // minus sign is required for the y offset to be identical.\n      symbolizer.labelYOffset = -textStyle.getOffsetY();\n    }\n\n    symbolizers.push(symbolizer);\n  }\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.print.Service\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoPrintVectorEncoder from 'ngeo/print/VectorEncoder.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport * as olArray from 'ol/array.js';\nimport * as olObj from 'ol/obj.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport * as olMath from 'ol/math.js';\nimport * as olSize from 'ol/size.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\nimport olTilegridWMTS from 'ol/tilegrid/WMTS.js';\n\n/**\n * Provides a function to create ngeo.print.Service objects used to\n * interact with MapFish Print v3 services.\n *\n * ngeo.print.Service objects expose the following methods:\n *\n * - createSpec: create a report specification object\n * - createReport: send a create report request\n * - getStatus: get the status of a report\n * - getReportUrl: get the URL of a report\n * - getCapabilities: get the capabilities of the server\n *\n *\n *     let printBaseUrl = 'http://example.com/print';\n *     let print = new ngeo.print.Service(printBaseUrl);\n *\n *     let scale = 5000;\n *     let dpi = 72;\n *     let layout = 'A4 portrait';\n *     let format = 'pdf';\n *     let reportSpec = print.createSpec(map, scale, dpi, layout, format, {\n *       'title': 'A title for my report',\n *       'rotation': 45 // degree\n *     });\n *\n * See our live example: [../examples/mapfishprint.html](../examples/mapfishprint.html)\n *\n * TODO and limitations:\n *\n * - createSpec should also accept a bbox instead of a center and a scale.\n * - Add support for ol.style.RegularShape. MapFish Print supports symbols\n *   like crosses, stars and squares, so printing regular shapes should be\n *   possible.\n * - ol.style.Icon may use a sprite image, and offsets to define to rectangle\n *   to use within the sprite. This type of icons won't be printed correctly\n *   as MapFish Print does not support sprite icons.\n *\n * @constructor\n * @struct\n * @param {string} url URL to MapFish print web service.\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper service.\n */\nconst exports = function(url, $http, gettextCatalog, ngeoLayerHelper) {\n  /**\n   * @type {string}\n   * @private\n   */\n  this.url_ = url;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.LayerHelper}\n   * @private\n   */\n  this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {ngeo.print.VectorEncoder}\n   * @protected\n   */\n  this.vectorEncoder = new ngeoPrintVectorEncoder();\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.printNativeAngle_ = true;\n};\n\n\n/**\n * Cancel a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.cancel = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/cancel/${ref}`;\n  // \"delete\" is a reserved word, so use ['delete']\n  return this.$http_['delete'](url, httpConfig);\n};\n\n\n/**\n * Create a report specification.\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {number} dpi DPI.\n * @param {string} layout Layout.\n * @param {string} format Formats.\n * @param {Object.<string, *>} customAttributes Custom attributes.\n * @return {MapFishPrintSpec} The print spec.\n * @export\n */\nexports.prototype.createSpec = function(\n  map, scale, dpi, layout, format, customAttributes) {\n\n  const specMap = /** @type {MapFishPrintMap} */ ({\n    dpi: dpi,\n    rotation: /** number */ (customAttributes['rotation'])\n  });\n\n  this.encodeMap_(map, scale, specMap);\n\n  const attributes = /** @type {!MapFishPrintAttributes} */ ({\n    map: specMap\n  });\n  olObj.assign(attributes, customAttributes);\n\n  const lang = this.gettextCatalog_.currentLanguage;\n\n  const spec = /** @type {MapFishPrintSpec} */ ({\n    attributes,\n    format,\n    lang,\n    layout\n  });\n\n  return spec;\n};\n\n\n/**\n * @param {ol.Map} map Map.\n * @param {number} scale Scale.\n * @param {MapFishPrintMap} object Object.\n * @private\n */\nexports.prototype.encodeMap_ = function(map, scale, object) {\n  const view = map.getView();\n  const viewCenter = view.getCenter();\n  const viewProjection = view.getProjection();\n  const viewResolution = view.getResolution();\n  const viewRotation = object.rotation || olMath.toDegrees(view.getRotation());\n\n  googAsserts.assert(viewCenter !== undefined);\n  googAsserts.assert(viewProjection !== undefined);\n\n  object.center = viewCenter;\n  object.projection = viewProjection.getCode();\n  object.rotation = viewRotation;\n  object.scale = scale;\n  object.layers = [];\n\n  const mapLayerGroup = map.getLayerGroup();\n  googAsserts.assert(mapLayerGroup);\n  this.printNativeAngle_ = !(mapLayerGroup.get('printNativeAngle') === false);\n  let layers = this.ngeoLayerHelper_.getFlatLayers(mapLayerGroup);\n\n  // Sort the layer by ZIndex\n  olArray.stableSort(layers, (layer_a, layer_b) => layer_a.getZIndex() - layer_b.getZIndex());\n  layers = layers.slice().reverse();\n\n  layers.forEach((layer) => {\n    if (layer.getVisible()) {\n      googAsserts.assert(viewResolution !== undefined);\n      this.encodeLayer(object.layers, layer, viewResolution);\n    }\n  });\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Base} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeLayer = function(arr, layer, resolution) {\n  if (layer instanceof olLayerImage) {\n    this.encodeImageLayer_(arr, layer);\n  } else if (layer instanceof olLayerTile) {\n    this.encodeTileLayer_(arr, layer);\n  } else if (layer instanceof olLayerVector) {\n    this.encodeVectorLayer(arr, layer, resolution);\n  }\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Vector} layer Layer.\n * @param {number} resolution Resolution.\n */\nexports.prototype.encodeVectorLayer = function(arr, layer, resolution) {\n  this.vectorEncoder.encodeVectorLayer(arr, layer, resolution);\n};\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  const source = layer.getSource();\n  if (source instanceof olSourceImageWMS) {\n    this.encodeImageWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer Layer.\n * @private\n */\nexports.prototype.encodeImageWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerImage);\n  googAsserts.assertInstanceof(source, olSourceImageWMS);\n\n  const url = source.getUrl();\n  if (url !== undefined) {\n    this.encodeWmsLayer_(\n      arr, layer, url, source.getParams());\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Image} layer The layer.\n * @param {string} url Url of the WMS server.\n * @param {Object} params Url parameters\n * @private\n */\nexports.prototype.encodeWmsLayer_ = function(arr, layer, url, params) {\n  if (url.startsWith('//')) {\n    url = window.location.protocol  + url;\n  }\n  const url_url = new URL(url);\n  const customParams = {'TRANSPARENT': true};\n  if (url_url.searchParams) {\n    /** @type {Object} */ (url_url.searchParams).forEach((value, key) => {\n      customParams[key] = value;\n    });\n  }\n  for (const key in params) {\n    const value = params[key];\n    // remove empty params\n    if (value !== null && value !== undefined) {\n      customParams[key] = value;\n    }\n  }\n  delete customParams['LAYERS'];\n  delete customParams['FORMAT'];\n  delete customParams['SERVERTYPE'];\n  delete customParams['VERSION'];\n\n  const object = /** @type {MapFishPrintWmsLayer} */ ({\n    baseURL: exports.getAbsoluteUrl_(url_url.origin + url_url.pathname),\n    imageFormat: 'FORMAT' in params ? params['FORMAT'] : 'image/png',\n    layers: params['LAYERS'].split(','),\n    customParams: customParams,\n    serverType: params['SERVERTYPE'],\n    type: 'wms',\n    opacity: this.getOpacityOrInherited_(layer),\n    version: params['VERSION'],\n    useNativeAngle: this.printNativeAngle_,\n  });\n  arr.push(object);\n};\n\n\n/**\n * @param {string} url URL.\n * @return {string} Absolute URL.\n * @private\n */\nexports.getAbsoluteUrl_ = function(url) {\n  const a = document.createElement('a');\n  a.href = encodeURI(url);\n  return decodeURI(a.href);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  if (source instanceof olSourceWMTS) {\n    this.encodeTileWmtsLayer_(arr, layer);\n  } else if (source instanceof olSourceTileWMS) {\n    this.encodeTileWmsLayer_(arr, layer);\n  }\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmtsLayer_ = function(arr, layer) {\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  const source = layer.getSource();\n  googAsserts.assertInstanceof(source, olSourceWMTS);\n\n  const projection = source.getProjection();\n  const tileGrid = source.getTileGrid();\n  googAsserts.assertInstanceof(tileGrid, olTilegridWMTS);\n  const matrixIds = tileGrid.getMatrixIds();\n\n  /** @type {Array.<MapFishPrintWmtsMatrix>} */\n  const matrices = [];\n\n  for (let i = 0, ii = matrixIds.length; i < ii; ++i) {\n    const tileRange = tileGrid.getFullTileRange(i);\n    matrices.push(/** @type {MapFishPrintWmtsMatrix} */ ({\n      identifier: matrixIds[i],\n      scaleDenominator: tileGrid.getResolution(i) *\n          projection.getMetersPerUnit() / 0.28E-3,\n      tileSize: olSize.toSize(tileGrid.getTileSize(i)),\n      topLeftCorner: tileGrid.getOrigin(i),\n      matrixSize: [\n        tileRange.maxX - tileRange.minX,\n        tileRange.maxY - tileRange.minY\n      ]\n    }));\n  }\n\n  const dimensions = source.getDimensions();\n  const dimensionKeys = Object.keys(dimensions);\n\n  const object = /** @type {MapFishPrintWmtsLayer} */ ({\n    baseURL: this.getWmtsUrl_(source),\n    dimensions: dimensionKeys,\n    dimensionParams: dimensions,\n    imageFormat: source.getFormat(),\n    layer: source.getLayer(),\n    matrices: matrices,\n    matrixSet: source.getMatrixSet(),\n    opacity: this.getOpacityOrInherited_(layer),\n    requestEncoding: source.getRequestEncoding(),\n    style: source.getStyle(),\n    type: 'WMTS',\n    version: source.getVersion()\n  });\n\n  arr.push(object);\n};\n\n\n/**\n * @param {Array.<MapFishPrintLayer>} arr Array.\n * @param {ol.layer.Tile} layer Layer.\n * @private\n */\nexports.prototype.encodeTileWmsLayer_ = function(arr, layer) {\n  const source = layer.getSource();\n\n  googAsserts.assertInstanceof(layer, olLayerTile);\n  googAsserts.assertInstanceof(source, olSourceTileWMS);\n\n  this.encodeWmsLayer_(\n    arr, layer, source.getUrls()[0], source.getParams());\n};\n\n\n/**\n * Return the WMTS URL to use in the print spec.\n * @param {ol.source.WMTS} source The WMTS source.\n * @return {string} URL.\n * @private\n */\nexports.prototype.getWmtsUrl_ = function(source) {\n  const urls = source.getUrls();\n  googAsserts.assert(urls.length > 0);\n  return exports.getAbsoluteUrl_(urls[0]);\n};\n\n/**\n * Return an opacity value for the specified layer.\n * @param {ol.layer.Base} layer Layer.\n * @returns {number} opacity Opacity value.\n * @private\n */\nexports.prototype.getOpacityOrInherited_ = function(layer) {\n  if (layer.get('inheritedOpacity') !== undefined) {\n    return layer.get('inheritedOpacity');\n  }\n  return layer.getOpacity();\n};\n\n/**\n * Send a create report request to the MapFish Print service.\n * @param {MapFishPrintSpec} printSpec Print specification.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.createReport = function(printSpec, opt_httpConfig) {\n  const format = printSpec.format || 'pdf';\n  const url = `${this.url_}/report.${format}`;\n  const httpConfig = /** @type {!angular.$http.Config} */ ({\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8'\n    }\n  });\n  olObj.assign(httpConfig,\n    opt_httpConfig !== undefined ? opt_httpConfig : {});\n  return this.$http_.post(url, printSpec, httpConfig);\n};\n\n\n/**\n * Get the status of a report.\n * @param {string} ref Print report reference.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n * @export\n */\nexports.prototype.getStatus = function(ref, opt_httpConfig) {\n  const httpConfig = opt_httpConfig !== undefined ? opt_httpConfig :\n    /** @type {angular.$http.Config} */ ({});\n  const url = `${this.url_}/status/${ref}.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * Get the URL of a report.\n * @param {string} ref Print report reference.\n * @return {string} The report URL for this ref.\n * @export\n */\nexports.prototype.getReportUrl = function(ref) {\n  return `${this.url_}/report/${ref}`;\n};\n\n\n/**\n * Get the print capabilities from MapFish Print.\n * @param {angular.$http.Config=} opt_httpConfig $http config object.\n * @return {angular.$http.HttpPromise} HTTP promise.\n */\nexports.prototype.getCapabilities = function(opt_httpConfig) {\n  const httpConfig =\n    opt_httpConfig !== undefined ? opt_httpConfig : /** @type {angular.$http.Config} */ ({\n      withCredentials: true\n    });\n  const url = `${this.url_}/capabilities.json`;\n  return this.$http_.get(url, httpConfig);\n};\n\n\n/**\n * @param {angular.$http} $http Angular $http service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext service.\n * @param {ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @return {ngeox.CreatePrint} The function to create a print service.\n * @ngInject\n * @ngdoc service\n * @ngname ngeoCreatePrint\n */\nexports.createPrintServiceFactory = function($http, gettextCatalog, ngeoLayerHelper) {\n  return (\n    /**\n     * @param {string} url URL to MapFish print service.\n     */\n    function(url) {\n      return new exports(url, $http, gettextCatalog, ngeoLayerHelper);\n    }\n  );\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoPrint', [\n  ngeoMapLayerHelper.module.name\n]);\nexports.module.service('ngeoPrintService', exports);\nexports.module.factory('ngeoCreatePrint', exports.createPrintServiceFactory);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.editFeatureSelectorComponent\n */\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\n\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfEditingFeatureSelectorComponent', [\n  gmfEditingEditFeatureComponent.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/editing/editFeatureSelectorComponent', require('./editFeatureSelectorComponent.html'));\n});\n\n\n/**\n * Directive that uses the GMF Theme service to collect the editable layers\n * and create a drop-down list out of them. When the user selects one of the\n * layer from the list, a `gmf-editfeature` directive is created and shown,\n * which allows the user to edit that layer.\n *\n * Example:\n *\n *     <gmf-editfeatureselector\n *         gmf-editfeatureselector-active=\"ctrl.editFeatureSelectorActive\"\n *         gmf-editfeatureselector-map=\"::ctrl.map\"\n *         gmf-editfeatureselector-tolerance=\"::ctrl.tolerance\"\n *         gmf-editfeatureselector-vector=\"::ctrl.vectorLayer\"\n *         gmf-editfeatureselector-tree=\"ctrl.selectedEditableTreeCtrl\"\n *         gmf-editfeatureselector-closeaftersave=\"::true\">\n *     </gmf-editfeatureselector>\n *\n * @htmlAttribute {boolean} gmf-editfeatureselector-active Whether the\n *     directive is active or not.\n * @htmlAttribute {ol.Map} gmf-editfeatureselector-map The map.\n * @htmlAttribute {number|undefined} gmf-editfeatureselector-tolerance The\n *     buffer in pixels to use when making queries to get the features.\n * @htmlAttribute {ol.layer.Vector} gmf-editfeatureselector-vector The vector\n *     layer where the selected or created features are drawn.\n * @htmlAttribute {ngeo.layertree.Controller} gmf-editfeatureselector-tree The\n *     layertree controller handling the selectable editable layers list.\n * @htmlAttribute {boolean} gmf-editfeatureselector-closeaftersave If true,\n *     immediately return to the main edit panel after save. Default is false.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfEditfeatureselector\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfEditfeatureselectorController as efsCtrl',\n    scope: {\n      'active': '=gmfEditfeatureselectorActive',\n      'map': '<gmfEditfeatureselectorMap',\n      'tolerance': '<?gmfEditfeatureselectorTolerance',\n      'vectorLayer': '<gmfEditfeatureselectorVector',\n      'selectedEditableTreeCtrl': '=?gmfEditfeatureselectorTree',\n      'closeAfterSave': '=?gmfEditfeatureselectorCloseaftersave'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/editing/editFeatureSelectorComponent'\n  };\n};\n\n\nexports.directive('gmfEditfeatureselector', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @param {gmf.layertree.TreeManager} gmfTreeManager The gmf TreeManager service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfEditfeatureselectorController\n */\nexports.Controller_ = function($scope, $timeout, gmfThemes, gmfTreeManager) {\n\n  // === Directive options ===\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = this.active === true;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {number|undefined}\n   * @export\n   */\n  this.tolerance;\n\n  /**\n   * @type {ol.layer.Vector}\n   * @export\n   */\n  this.vectorLayer;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.closeAfterSave;\n\n  // === Injected services ===\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.$timeout_ = $timeout;\n\n  /**\n   * @type {gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  /**\n   * @type {gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  /**\n   * @param {Array.<ngeo.layertree.Controller>} value First level controllers.\n   */\n  const updateEditableTreeCtrls = function(value) {\n    // Timeout required, because the collection event is fired before the\n    // leaf nodes are created and they are the ones we're looking for here.\n    this.$timeout_(() => {\n      if (value) {\n        const editables = this.editableTreeCtrls;\n\n        editables.length = 0;\n        this.gmfTreeManager_.rootCtrl.traverseDepthFirst((treeCtrl) => {\n          if (treeCtrl.node.editable) {\n            googAsserts.assert(treeCtrl.children.length === 0);\n            editables.push(treeCtrl);\n          }\n        });\n      }\n    }, 0);\n  };\n\n  /**\n   * @type {function()}\n   * @private\n   */\n  this.treeCtrlsWatcherUnregister_ = $scope.$watchCollection(() => {\n    if (gmfTreeManager.rootCtrl) {\n      return gmfTreeManager.rootCtrl.children;\n    }\n  }, updateEditableTreeCtrls.bind(this));\n\n\n  // === Other inner properties ===\n\n  /**\n   * Flag shared with the `gmf-editfeature` directive used to determine if it\n   * has unsaved changes or not.\n   * @type {boolean}\n   * @export\n   */\n  this.dirty = false;\n\n  /**\n   * List of editable Layertree controllers.\n   * @type {Array.<ngeo.layertree.Controller>}\n   * @export\n   */\n  this.editableTreeCtrls = [];\n\n  /**\n   * The currently selected Layertree controller.\n   * @type {?ngeo.layertree.Controller}\n   * @export\n   */\n  this.selectedEditableTreeCtrl = null;\n\n  $scope.$watch(\n    () => this.selectedEditableTreeCtrl,\n    (newValue, oldValue) => {\n      this.dirty = false;\n      this.state = gmfEditingEditFeatureComponent.State.IDLE;\n    }\n  );\n\n  /**\n   * The state of this directive shared with the `gmf-editfeature` directive.\n   * This property allows the proper management of the \"stop editing\" button.\n   * When clicked, the according state is set and the `gmf-editfeature`\n   * directive checks if it has unsaved changes and allow this directive to\n   * continue the action that was made or not.\n   * @type {string}\n   * @export\n   */\n  this.state = gmfEditingEditFeatureComponent.State.IDLE;\n\n  $scope.$watch(\n    () => this.state,\n    (newValue, oldValue) => {\n      if (newValue === gmfEditingEditFeatureComponent.State.STOP_EDITING_EXECUTE ||\n          newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.selectedEditableTreeCtrl = null;\n      }\n      if (newValue === gmfEditingEditFeatureComponent.State.DEACTIVATE_EXECUTE) {\n        this.active = false;\n      }\n    }\n  );\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n\n};\n\n\n/**\n * Called when the 'stop editing' button is clicked. Set the 'state'\n * variable to 'pending' allow the editfeature directive to check if it can\n * stop or if it requires confirmation due to unsaved modifications.\n * @export\n */\nexports.Controller_.prototype.stopEditing = function() {\n  this.state = gmfEditingEditFeatureComponent.State.STOP_EDITING_PENDING;\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly.\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n  if (!active) {\n    if (!this.dirty) {\n      this.stopEditing();\n    } else {\n      // There are unsaved modifications. Prevent the deactivation and\n      // set the state accordingly for the `gmf-editfeature` directive\n      // to manage the unsaved modifications.\n      // The changes are made inside a $timeout to be taken into account\n      // in the next digest cycle.\n      this.$timeout_(() => {\n        this.active = true;\n        this.stopEditing();\n      });\n    }\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  this.treeCtrlsWatcherUnregister_();\n};\n\n\nexports.controller('GmfEditfeatureselectorController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.editing.module\n */\nimport gmfEditingEditFeature from 'gmf/editing/EditFeature.js';\nimport gmfEditingEditFeatureComponent from 'gmf/editing/editFeatureComponent.js';\nimport gmfEditingEditFeatureSelectorComponent from 'gmf/editing/editFeatureSelectorComponent.js';\nimport gmfEditingEnumerateAttribute from 'gmf/editing/EnumerateAttribute.js';\nimport gmfEditingSnapping from 'gmf/editing/Snapping.js';\nimport gmfEditingXSDAttributes from 'gmf/editing/XSDAttributes.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfEditingModule', [\n  gmfEditingEditFeature.module.name,\n  gmfEditingEditFeatureComponent.name,\n  gmfEditingEditFeatureSelectorComponent.name,\n  gmfEditingEnumerateAttribute.module.name,\n  gmfEditingSnapping.module.name,\n  gmfEditingXSDAttributes.module.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHashStyleType\n */\n/**\n * @enum {string}\n * @export\n */\nconst exports = {\n  LINE_STRING: 'LineString',\n  POINT: 'Point',\n  POLYGON: 'Polygon'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.format.FeatureHash\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoFormatFeatureHashStyleType from 'ngeo/format/FeatureHashStyleType.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport * as olArray from 'ol/array.js';\nimport * as olFormatFeature from 'ol/format/Feature.js';\nimport olFormatTextFeature from 'ol/format/TextFeature.js';\nimport olGeomGeometryLayout from 'ol/geom/GeometryLayout.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomMultiLineString from 'ol/geom/MultiLineString.js';\nimport olGeomMultiPoint from 'ol/geom/MultiPoint.js';\nimport olGeomMultiPolygon from 'ol/geom/MultiPolygon.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomPolygon from 'ol/geom/Polygon.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\n/**\n * @classdesc\n * Provide an OpenLayers format for encoding and decoding features for use\n * in permalinks.\n *\n * The code is based on Stéphane Brunner's URLCompressed format.\n *\n * TODOs:\n *\n * - The OpenLayers-URLCompressed format has options where the user\n *   can define attribute and style transformers. This is currently\n *   not supported by this format.\n * - The OpenLayers-URLCompressed format has a \"simplify\" option.\n *   This format does not have it.\n * - ol.style.Icon styles are not supported.\n * - Transformation of coordinates during encoding and decoding is\n *   not supported.\n *\n * @see https://github.com/sbrunner/OpenLayers-URLCompressed\n * @constructor\n * @struct\n * @extends {ol.format.TextFeature}\n * @param {ngeox.format.FeatureHashOptions=} opt_options Options.\n */\nconst exports = function(opt_options) {\n\n  olFormatTextFeature.call(this);\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.accuracy_ = options.accuracy !== undefined ?\n    options.accuracy : exports.ACCURACY_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.encodeStyles_ = options.encodeStyles !== undefined ?\n    options.encodeStyles : true;\n\n  /**\n   * @type {function(ol.Feature):Object.<string, (string|number)>}\n   * @private\n   */\n  this.propertiesFunction_ = options.properties !== undefined ?\n    options.properties : exports.defaultPropertiesFunction_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.setStyle_ = options.setStyle !== undefined ? options.setStyle : true;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevX_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.prevY_ = 0;\n\n  /**\n   * @type {Object.<string, string>}\n   * @private\n   */\n  exports.LegacyProperties_ = (options.propertiesType !== undefined) &&  options.propertiesType;\n\n  /**\n   * @type {Object.<string, function(ol.Feature)>}\n   * @private\n   */\n  this.defaultValues_ = options.defaultValues !== undefined ? options.defaultValues : {};\n\n};\n\nolBase.inherits(exports, olFormatTextFeature);\n\n\n/**\n * @type {Object.<ol.geom.GeometryType, ngeo.format.FeatureHashStyleType>}\n * @private\n */\nexports.StyleTypes_ = {\n  'LineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'Point': ngeoFormatFeatureHashStyleType.POINT,\n  'Polygon': ngeoFormatFeatureHashStyleType.POLYGON,\n  'MultiLineString': ngeoFormatFeatureHashStyleType.LINE_STRING,\n  'MultiPoint': ngeoFormatFeatureHashStyleType.POINT,\n  'MultiPolygon': ngeoFormatFeatureHashStyleType.POLYGON\n};\n\n/**\n * @type {Object.<string, string>}\n * @private\n */\nexports.LegacyProperties_ = {};\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nexports.prototype.writeGeometry;\n\n\n/**\n * Characters used to encode the coordinates. The characters \"~\", \"'\", \"(\"\n * and \")\" are not part of this character set, and used as separators (for\n * example to separate the coordinates from the feature properties).\n * @const\n * @private\n */\nexports.CHAR64_ =\n    '.-_!*ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghjkmnpqrstuvwxyz';\n\n\n/**\n * @const\n * @private\n */\nexports.ACCURACY_ = 0.1;\n\n\n/**\n * Get features's properties.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, (string|number)>} The feature properties to\n * serialize.\n * @private\n */\nexports.defaultPropertiesFunction_ = function(feature) {\n  return feature.getProperties();\n};\n\n\n/**\n * Sign then encode a number.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeSignedNumber_ = function(num) {\n  let signedNum = num << 1;\n  if (num < 0) {\n    signedNum = ~(signedNum);\n  }\n  return exports.encodeNumber_(signedNum);\n};\n\n\n/**\n * Transform a number into a logical sequence of characters.\n * @param {number} num Number.\n * @return {string} String.\n * @private\n */\nexports.encodeNumber_ = function(num) {\n  let encodedNumber = '';\n  while (num >= 0x20) {\n    encodedNumber += exports.CHAR64_.charAt(\n      0x20 | (num & 0x1f));\n    num >>= 5;\n  }\n  encodedNumber += exports.CHAR64_.charAt(num);\n  return encodedNumber;\n};\n\n\n/**\n * For a type of geometry, transforms an array of {@link ol.style.Style} into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {Array.<ol.style.Style>} styles Styles.\n * @param {ol.geom.GeometryType} geometryType Geometry type.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyles_ = function(styles, geometryType, encodedStyles) {\n  const styleType = exports.StyleTypes_[geometryType];\n  googAsserts.assert(styleType !== undefined);\n  for (let i = 0; i < styles.length; ++i) {\n    const style = styles[i];\n    const fillStyle = style.getFill();\n    const imageStyle = style.getImage();\n    const strokeStyle = style.getStroke();\n    const textStyle = style.getText();\n    if (styleType == ngeoFormatFeatureHashStyleType.POLYGON) {\n      if (fillStyle !== null) {\n        exports.encodeStylePolygon_(\n          fillStyle, strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.LINE_STRING) {\n      if (strokeStyle !== null) {\n        exports.encodeStyleLine_(strokeStyle, encodedStyles);\n      }\n    } else if (styleType == ngeoFormatFeatureHashStyleType.POINT) {\n      if (imageStyle !== null) {\n        exports.encodeStylePoint_(imageStyle, encodedStyles);\n      }\n    }\n    if (textStyle !== null) {\n      exports.encodeStyleText_(textStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleLine_ = function(strokeStyle, encodedStyles) {\n  exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n};\n\n\n/**\n * Transform an {@link ol.style.Circle} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Image} imageStyle Image style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePoint_ = function(imageStyle, encodedStyles) {\n  if (imageStyle instanceof olStyleCircle) {\n    const radius = imageStyle.getRadius();\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`pointRadius*${radius}`));\n    const fillStyle = imageStyle.getFill();\n    if (fillStyle !== null) {\n      exports.encodeStyleFill_(fillStyle, encodedStyles);\n    }\n    const strokeStyle = imageStyle.getStroke();\n    if (strokeStyle !== null) {\n      exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n    }\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and an {@link ol.style.Stroke} into\n * a logical sequence of characters and put the result into the given\n * encoded styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStylePolygon_ = function(fillStyle, strokeStyle, encodedStyles) {\n  exports.encodeStyleFill_(fillStyle, encodedStyles);\n  if (strokeStyle !== null) {\n    exports.encodeStyleStroke_(strokeStyle, encodedStyles);\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Fill} and optionally its properties into\n * a logical sequence of characters and put the result into the given encoded\n * styles's array.\n * @param {ol.style.Fill} fillStyle Fill style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @param {string=} opt_propertyName Property name.\n * @private\n */\nexports.encodeStyleFill_ = function(fillStyle, encodedStyles, opt_propertyName) {\n  const propertyName = opt_propertyName !== undefined ?\n    opt_propertyName : 'fillColor';\n  const fillColor = fillStyle.getColor();\n  if (fillColor !== null) {\n    googAsserts.assert(Array.isArray(fillColor), 'only supporting fill colors');\n    const fillColorRgba = olColor.asArray(fillColor);\n    googAsserts.assert(Array.isArray(fillColorRgba), 'fill color must be an array');\n    const fillColorHex = ngeoUtils.rgbArrayToHex(fillColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(\n      encodeURIComponent(`${propertyName}*${fillColorHex}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Stroke} into a logical sequence of\n * characters and put the result into the given encoded styles's array.\n * @param {ol.style.Stroke} strokeStyle Stroke style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleStroke_ = function(strokeStyle, encodedStyles) {\n  const strokeColor = strokeStyle.getColor();\n  if (strokeColor !== null) {\n    googAsserts.assert(Array.isArray(strokeColor));\n    const strokeColorRgba = olColor.asArray(strokeColor);\n    googAsserts.assert(Array.isArray(strokeColorRgba), 'only supporting stroke colors');\n    const strokeColorHex = ngeoUtils.rgbArrayToHex(strokeColorRgba);\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeColor*${strokeColorHex}`));\n  }\n  const strokeWidth = strokeStyle.getWidth();\n  if (strokeWidth !== undefined) {\n    if (encodedStyles.length > 0) {\n      encodedStyles.push('\\'');\n    }\n    encodedStyles.push(encodeURIComponent(`strokeWidth*${strokeWidth}`));\n  }\n};\n\n\n/**\n * Transform an {@link ol.style.Text} into a logical sequence of characters and\n * put the result into the given encoded styles's array.\n * @param {ol.style.Text} textStyle Text style.\n * @param {Array.<string>} encodedStyles Encoded styles array.\n * @private\n */\nexports.encodeStyleText_ = function(textStyle, encodedStyles) {\n  const fontStyle = textStyle.getFont();\n  if (fontStyle !== undefined) {\n    const font = fontStyle.split(' ');\n    if (font.length >= 3) {\n      if (encodedStyles.length > 0) {\n        encodedStyles.push('\\'');\n      }\n      encodedStyles.push(encodeURIComponent(`fontSize*${font[1]}`));\n    }\n  }\n  const fillStyle = textStyle.getFill();\n  if (fillStyle !== null) {\n    exports.encodeStyleFill_(\n      fillStyle, encodedStyles, 'fontColor');\n  }\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.LineString}.\n * @param {string} text Text.\n * @return {ol.geom.LineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'l(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const lineString = new olGeomLineString(null);\n  lineString.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiLineString}.\n * @param {string} text Text.\n * @return {ol.geom.MultiLineString} Line string.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiLineStringGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'L(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const lineStrings = text.split('\\'');\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(lineStrings[i], flatCoordinates);\n    ends[i] = flatCoordinates.length;\n  }\n  const multiLineString = new olGeomMultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return multiLineString;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Point}.\n * @param {string} text Text.\n * @return {ol.geom.Point} Point.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'p(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  googAsserts.assert(flatCoordinates.length === 2);\n  const point = new olGeomPoint(null);\n  point.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return point;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPoint}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPoint} MultiPoint.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPointGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'P(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  const flatCoordinates = this.decodeCoordinates_(text);\n  const multiPoint = new olGeomMultiPoint(null);\n  multiPoint.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates);\n  return multiPoint;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.Polygon}.\n * @param {string} text Text.\n * @return {ol.geom.Polygon} Polygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'a(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const ends = [];\n  const rings = text.split('\\'');\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    flatCoordinates = this.decodeCoordinates_(rings[i], flatCoordinates);\n    let end = flatCoordinates.length;\n    if (i === 0) {\n      flatCoordinates[end++] = flatCoordinates[0];\n      flatCoordinates[end++] = flatCoordinates[1];\n    } else {\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1]];\n      flatCoordinates[end++] = flatCoordinates[ends[i - 1] + 1];\n    }\n    ends[i] = end;\n  }\n  const polygon = new olGeomPolygon(null);\n  polygon.setFlatCoordinates(olGeomGeometryLayout.XY, flatCoordinates, ends);\n  return polygon;\n};\n\n\n/**\n * Read a logical sequence of characters and return a corresponding\n * {@link ol.geom.MultiPolygon}.\n * @param {string} text Text.\n * @return {ol.geom.MultiPolygon} MultiPolygon.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.readMultiPolygonGeometry_ = function(text) {\n  googAsserts.assert(text.substring(0, 2) === 'A(');\n  googAsserts.assert(text[text.length - 1] == ')');\n  text = text.substring(2, text.length - 1);\n  let flatCoordinates = [];\n  const endss = [];\n  const polygons = text.split(')(');\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const rings = polygons[i].split('\\'');\n    const ends = endss[i] = [];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      flatCoordinates = this.decodeCoordinates_(rings[j], flatCoordinates);\n      let end = flatCoordinates.length;\n      if (j === 0) {\n        flatCoordinates[end++] = flatCoordinates[0];\n        flatCoordinates[end++] = flatCoordinates[1];\n      } else {\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1]];\n        flatCoordinates[end++] = flatCoordinates[ends[j - 1] + 1];\n      }\n      ends[j] = end;\n    }\n  }\n  const multipolygon = new olGeomMultiPolygon(null);\n  multipolygon.setFlatCoordinates(\n    olGeomGeometryLayout.XY, flatCoordinates, endss);\n  return multipolygon;\n};\n\n\n/**\n * DEPRECATED - Use the `ngeo.misc.FeatureHelper` instead in combination with the\n * `setStyle: false` option.\n *\n * Read a logical sequence of characters and apply the decoded style on the\n * given feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleInFeature_ = function(text, feature) {\n  if (text == '') {\n    return;\n  }\n  const properties = exports.getStyleProperties_(text, feature);\n  const fillColor = properties['fillColor'];\n  const fontSize = properties['fontSize'];\n  const fontColor = properties['fontColor'];\n  const pointRadius = properties['pointRadius'];\n  const strokeColor = properties['strokeColor'];\n  const strokeWidth = properties['strokeWidth'];\n\n  let fillStyle = null;\n  if (fillColor !== undefined) {\n    fillStyle = new olStyleFill({\n      color: /** @type {Array<number>|string} */ (fillColor)\n    });\n  }\n  let strokeStyle = null;\n  if (strokeColor !== undefined && strokeWidth !== undefined) {\n    strokeStyle = new olStyleStroke({\n      color: /** @type {Array<number>|string} */ (strokeColor),\n      width: /** @type {number} */ (strokeWidth)\n    });\n  }\n  let imageStyle = null;\n  if (pointRadius !== undefined) {\n    imageStyle = new olStyleCircle({\n      radius: /** @type {number} */ (pointRadius),\n      fill: fillStyle,\n      stroke: strokeStyle\n    });\n    fillStyle = strokeStyle = null;\n  }\n  let textStyle = null;\n  if (fontSize !== undefined && fontColor !== undefined) {\n    textStyle = new olStyleText({\n      font: `${fontSize} sans-serif`,\n      fill: new olStyleFill({\n        color: /** @type {Array<number>|string} */ (fontColor)\n      })\n    });\n  }\n  const style = new olStyleStyle({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle\n  });\n  feature.setStyle(style);\n};\n\n\n/**\n * Read a logical sequence of characters and apply the decoded result as\n * style properties for the feature. Legacy keys are converted to the new ones\n * for compatibility.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @private\n */\nexports.setStyleProperties_ = function(text, feature) {\n\n  const properties = exports.getStyleProperties_(text, feature);\n  const geometry = feature.getGeometry();\n\n  // Deal with legacy properties\n  if (geometry instanceof olGeomPoint) {\n    if (properties['isLabel'] ||\n        properties[ngeoFormatFeatureProperties.IS_TEXT]) {\n      delete properties['strokeColor'];\n      delete properties['fillColor'];\n    } else {\n      delete properties['fontColor'];\n      delete properties['fontSize'];\n    }\n  } else {\n    delete properties['fontColor'];\n\n    if (geometry instanceof olGeomLineString) {\n      delete properties['fillColor'];\n      delete properties['fillOpacity'];\n    }\n  }\n\n  // Convert font size from px to pt\n  if (properties['fontSize']) {\n    let fontSize = parseFloat(properties['fontSize']);\n    if (properties['fontSize'].indexOf('px') !== -1) {\n      fontSize = Math.round(fontSize / 1.333333);\n    }\n    properties['fontSize'] = fontSize;\n  }\n\n  // Convert legacy properties\n  const clone = {};\n  for (const key in properties) {\n    const value = properties[key];\n    if (exports.LegacyProperties_[key]) {\n      clone[exports.LegacyProperties_[key]] = value;\n    } else {\n      clone[key] = value;\n    }\n  }\n\n  feature.setProperties(clone);\n};\n\n\n/**\n * Cast values in the correct type depending on the property.\n * @param {string} key Key.\n * @param {string} value Value.\n * @return {number|boolean|string} The casted value corresponding to the key.\n * @private\n */\nexports.castValue_ = function(key, value) {\n  const numProperties = [\n    ngeoFormatFeatureProperties.ANGLE,\n    ngeoFormatFeatureProperties.OPACITY,\n    ngeoFormatFeatureProperties.SIZE,\n    ngeoFormatFeatureProperties.STROKE,\n    'pointRadius',\n    'strokeWidth'\n  ];\n  const boolProperties = [\n    ngeoFormatFeatureProperties.IS_CIRCLE,\n    ngeoFormatFeatureProperties.IS_RECTANGLE,\n    ngeoFormatFeatureProperties.IS_TEXT,\n    ngeoFormatFeatureProperties.SHOW_MEASURE,\n    ngeoFormatFeatureProperties.SHOW_LABEL,\n    'isCircle',\n    'isRectangle',\n    'isLabel',\n    'showMeasure',\n    'showLabel'\n  ];\n\n  if (olArray.includes(numProperties, key)) {\n    return +value;\n  } else if (olArray.includes(boolProperties, key)) {\n    return (value === 'true') ? true : false;\n  } else {\n    return value;\n  }\n};\n\n\n/**\n * From a logical sequence of characters, create and return an object of\n * style properties for a feature. The values are cast in the correct type\n * depending on the property. Some properties are also deleted when they don't\n * match the geometry of the feature.\n * @param {string} text Text.\n * @param {ol.Feature} feature Feature.\n * @return {Object.<string, boolean|number|string>} The style properties for\n *     the feature.\n * @private\n */\nexports.getStyleProperties_ = function(text, feature) {\n  const parts = text.split('\\'');\n  const properties = {};\n\n  for (let i = 0; i < parts.length; ++i) {\n    const part = decodeURIComponent(parts[i]);\n    const keyVal = part.split('*');\n    googAsserts.assert(keyVal.length === 2);\n    const key = keyVal[0];\n    const val = keyVal[1];\n\n    properties[key] = exports.castValue_(key, val);\n  }\n\n  return properties;\n};\n\n\n/**\n * Encode a {@link ol.geom.LineString} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomLineString);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `l(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode a {@link ol.geom.MultiLineString} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiLineStringGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiLineString);\n  const ends = geometry.getEnds();\n  const lineStringCount = ends.length;\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  let offset = 0;\n  const textArray = ['L('];\n  for (let i = 0; i < lineStringCount; ++i) {\n    const end = ends[i];\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = end;\n  }\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode a {@link ol.geom.Point} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `p(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoint} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPointGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPoint);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const end = flatCoordinates.length;\n  return `P(${this.encodeCoordinates_(flatCoordinates, stride, 0, end)})`;\n};\n\n\n/**\n * Helper to encode an {@link ol.geom.Polygon} geometry.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {Array.<string>} textArray Text array.\n * @return {number} The new offset.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.encodeRings_ = function(flatCoordinates, stride, offset, ends, textArray) {\n  const linearRingCount = ends.length;\n  for (let i = 0; i < linearRingCount; ++i) {\n    // skip the \"closing\" point\n    const end = ends[i] - stride;\n    const text = this.encodeCoordinates_(flatCoordinates, stride, offset, end);\n    if (i !== 0) {\n      textArray.push('\\'');\n    }\n    textArray.push(text);\n    offset = ends[i];\n  }\n  return offset;\n};\n\n\n/**\n * Encode an {@link ol.geom.Polygon} geometry into a logical sequence\n * of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writePolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const ends = geometry.getEnds();\n  const offset = 0;\n  const textArray = ['a('];\n  exports.encodeRings_.call(this,\n    flatCoordinates, stride, offset, ends, textArray);\n  textArray.push(')');\n  return textArray.join('');\n};\n\n\n/**\n * Encode an {@link ol.geom.MultiPoligon} geometry into a logical sequence of\n * characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @return {string} Encoded geometry.\n * @this {ngeo.format.FeatureHash}\n * @private\n */\nexports.writeMultiPolygonGeometry_ = function(geometry) {\n  googAsserts.assertInstanceof(geometry, olGeomMultiPolygon);\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  const endss = geometry.getEndss();\n  const polygonCount = endss.length;\n  let offset = 0;\n  const textArray = ['A'];\n  for (let i = 0; i < polygonCount; ++i) {\n    const ends = endss[i];\n    textArray.push('(');\n    offset = exports.encodeRings_.call(this,\n      flatCoordinates, stride, offset, ends, textArray);\n    textArray.push(')');\n  }\n  return textArray.join('');\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(string):ol.geom.Geometry>}\n */\nexports.GEOMETRY_READERS_ = {\n  'P': exports.readMultiPointGeometry_,\n  'L': exports.readMultiLineStringGeometry_,\n  'A': exports.readMultiPolygonGeometry_,\n  'l': exports.readLineStringGeometry_,\n  'p': exports.readPointGeometry_,\n  'a': exports.readPolygonGeometry_\n};\n\n\n/**\n * @const\n * @private\n * @type {Object.<string, function(ol.geom.Geometry):string>}\n */\nexports.GEOMETRY_WRITERS_ = {\n  'MultiLineString': exports.writeMultiLineStringGeometry_,\n  'MultiPoint': exports.writeMultiPointGeometry_,\n  'MultiPolygon': exports.writeMultiPolygonGeometry_,\n  'LineString': exports.writeLineStringGeometry_,\n  'Point': exports.writePointGeometry_,\n  'Polygon': exports.writePolygonGeometry_\n};\n\n\n/**\n * Read a logical sequence of characters and return (or complete then return)\n * an array of numbers. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * corresponding to a geometry's coordinates.\n * @param {string} text Text.\n * @param {Array.<number>=} opt_flatCoordinates Flat coordinates array.\n * @return {Array.<number>} Flat coordinates.\n * @private\n */\nexports.prototype.decodeCoordinates_ = function(text, opt_flatCoordinates) {\n  const len = text.length;\n  let index = 0;\n  const flatCoordinates = opt_flatCoordinates !== undefined ?\n    opt_flatCoordinates : [];\n  let i = flatCoordinates.length;\n  while (index < len) {\n    let b;\n    let shift = 0;\n    let result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dx = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevX_ += dx;\n    shift = 0;\n    result = 0;\n    do {\n      b = exports.CHAR64_.indexOf(text.charAt(index++));\n      result |= (b & 0x1f) << shift;\n      shift += 5;\n    } while (b >= 32);\n    const dy = ((result & 1) ? ~(result >> 1) : (result >> 1));\n    this.prevY_ += dy;\n    flatCoordinates[i++] = this.prevX_ * this.accuracy_;\n    flatCoordinates[i++] = this.prevY_ * this.accuracy_;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * Encode an array of number (corresponding to some coordinates) into a\n * logical sequence of characters. The coordinates are assumed to be in\n * two dimensions and in latitude, longitude order.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @return {string} String.\n * @private\n */\nexports.prototype.encodeCoordinates_ = function(flatCoordinates, stride, offset, end) {\n  let encodedCoordinates = '';\n  for (let i = offset; i < end; i += stride) {\n    let x = flatCoordinates[i];\n    let y = flatCoordinates[i + 1];\n    x = Math.floor(x / this.accuracy_);\n    y = Math.floor(y / this.accuracy_);\n    const dx = x - this.prevX_;\n    const dy = y - this.prevY_;\n    this.prevX_ = x;\n    this.prevY_ = y;\n    encodedCoordinates += exports.encodeSignedNumber_(dx) +\n        exports.encodeSignedNumber_(dy);\n  }\n  return encodedCoordinates;\n};\n\n\n/**\n * Read a feature from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.Feature} Feature.\n * @protected\n * @override\n */\nexports.prototype.readFeatureFromText = function(text, opt_options) {\n  googAsserts.assert(text.length > 2);\n  googAsserts.assert(text[1] === '(');\n  googAsserts.assert(text[text.length - 1] === ')');\n  let splitIndex = text.indexOf('~');\n  const geometryText = splitIndex >= 0 ?\n    `${text.substring(0, splitIndex)})` : text;\n  const geometry = this.readGeometryFromText(geometryText, opt_options);\n  const feature = new olFeature(geometry);\n  if (splitIndex >= 0) {\n    const attributesAndStylesText = text.substring(\n      splitIndex + 1, text.length - 1);\n    splitIndex = attributesAndStylesText.indexOf('~');\n    const attributesText = splitIndex >= 0 ?\n      attributesAndStylesText.substring(0, splitIndex) :\n      attributesAndStylesText;\n    if (attributesText != '') {\n      const parts = attributesText.split('\\'');\n      for (let i = 0; i < parts.length; ++i) {\n        const part = decodeURIComponent(parts[i]);\n        const keyVal = part.split('*');\n        googAsserts.assert(keyVal.length === 2);\n        let key = keyVal[0];\n        const value = keyVal[1];\n        if (!this.setStyle_ && exports.LegacyProperties_[key]) {\n          key = exports.LegacyProperties_[key];\n        }\n        feature.set(key, exports.castValue_(key, value));\n      }\n    }\n    if (splitIndex >= 0) {\n      const stylesText = attributesAndStylesText.substring(splitIndex + 1);\n      if (this.setStyle_) {\n        exports.setStyleInFeature_(stylesText, feature);\n      } else {\n        exports.setStyleProperties_(stylesText, feature);\n      }\n    }\n  }\n  return feature;\n};\n\n\n/**\n * Read multiple features from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {Array.<ol.Feature>} Features.\n * @protected\n * @override\n */\nexports.prototype.readFeaturesFromText = function(text, opt_options) {\n  googAsserts.assert(text[0] === 'F');\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  /** @type {Array.<ol.Feature>} */\n  const features = [];\n  text = text.substring(1);\n  while (text.length > 0) {\n    const index = text.indexOf(')');\n    googAsserts.assert(index >= 0);\n    const feature = this.readFeatureFromText(\n      text.substring(0, index + 1), opt_options);\n    features.push(feature);\n    text = text.substring(index + 1);\n  }\n\n  // set default values\n  features.forEach((feature) => {\n    for (const key in this.defaultValues_) {\n      const property = exports.LegacyProperties_[key];\n      if (feature.get(property) === undefined) {\n        feature.set(property, this.defaultValues_[key].call(null, feature));\n      }\n    }\n  });\n  return features;\n};\n\n\n/**\n * Read a geometry from a logical sequence of characters.\n * @param {string} text Text.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {ol.geom.Geometry} Geometry.\n * @protected\n * @override\n */\nexports.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometryReader = exports.GEOMETRY_READERS_[text[0]];\n  googAsserts.assert(geometryReader !== undefined);\n  return geometryReader.call(this, text);\n};\n\n\n/**\n * Encode a feature into a logical sequence of characters.\n * @param {ol.Feature} feature Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded feature.\n * @protected\n * @override\n */\nexports.prototype.writeFeatureText = function(feature, opt_options) {\n  const /** @type {Array.<string>} */ encodedParts = [];\n\n  // encode geometry\n\n  let encodedGeometry = '';\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    encodedGeometry = this.writeGeometryText(geometry, opt_options);\n  }\n\n  if (encodedGeometry.length > 0) {\n    // remove the final bracket\n    googAsserts.assert(encodedGeometry[encodedGeometry.length - 1] === ')');\n    encodedGeometry = encodedGeometry.substring(0, encodedGeometry.length - 1);\n    encodedParts.push(encodedGeometry);\n  }\n\n  // encode properties\n\n  const /** @type {Array.<string>} */ encodedProperties = [];\n  const propFunction = this.propertiesFunction_(feature);\n  for (const key in propFunction) {\n    const value = propFunction[key];\n    if (value !== undefined && value !== null && key !== feature.getGeometryName()) {\n      if (encodedProperties.length !== 0) {\n        encodedProperties.push('\\'');\n      }\n      const encoded = encodeURIComponent(\n        `${key.replace(/[()'*]/g, '_')}*${\n          value.toString().replace(/[()'*]/g, '_')}`);\n      encodedProperties.push(encoded);\n    }\n  }\n\n  if (encodedProperties.length > 0) {\n    encodedParts.push('~');\n    Array.prototype.push.apply(encodedParts, encodedProperties);\n  }\n\n  // encode styles\n\n  if (this.encodeStyles_) {\n    const styleFunction = feature.getStyleFunction();\n    if (styleFunction !== undefined) {\n      let styles = styleFunction.call(feature, 0);\n      if (styles !== null) {\n        const encodedStyles = [];\n        styles = Array.isArray(styles) ? styles : [styles];\n        exports.encodeStyles_(\n          styles, geometry.getType(), encodedStyles);\n        if (encodedStyles.length > 0) {\n          encodedParts.push('~');\n          Array.prototype.push.apply(encodedParts, encodedStyles);\n        }\n      }\n    }\n  }\n\n  // append the closing bracket and return the encoded feature\n\n  encodedParts.push(')');\n  return encodedParts.join('');\n};\n\n\n/**\n * Encode an array of features into a logical sequence of characters.\n * @param {Array.<ol.Feature>} features Feature.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded features.\n * @protected\n * @override\n */\nexports.prototype.writeFeaturesText = function(features, opt_options) {\n  this.prevX_ = 0;\n  this.prevY_ = 0;\n  const textArray = [];\n  if (features.length > 0) {\n    textArray.push('F');\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      textArray.push(this.writeFeatureText(features[i], opt_options));\n    }\n  }\n  return textArray.join('');\n};\n\n\n/**\n * Encode a geometry into a logical sequence of characters.\n * @param {ol.geom.Geometry} geometry Geometry.\n * @param {olx.format.ReadOptions=} opt_options Read options.\n * @return {string} Encoded geometry.\n * @protected\n * @override\n */\nexports.prototype.writeGeometryText = function(geometry, opt_options) {\n  const geometryWriter = exports.GEOMETRY_WRITERS_[\n    geometry.getType()];\n  googAsserts.assert(geometryWriter !== undefined);\n  const transformedGeometry = /** @type {ol.geom.Geometry} */\n      (olFormatFeature.transformWithOptions(geometry, true, opt_options));\n  return geometryWriter.call(this, transformedGeometry);\n};\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\nimport olOverlay from 'ol/Overlay.js';\nimport * as olProj from 'ol/proj.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('gmfContextualdata', [\n  gmfRasterRasterService.module.name,\n]);\n\n\n/**\n * Provide a directive responsible of displaying contextual data after a right\n * click on the map.\n *\n * This directive doesn't require being rendered in a visible DOM element.\n * It's usually added to the element where the map directive is also added.\n *\n * Example:\n *\n *     <gmf-map gmf-map-map=\"mainCtrl.map\"\n *         gmf-contextualdata\n *         gmf-contextualdata-map=\"::mainCtrl.map\"\n *         gmf-contextualdata-projections=\"::[21781,4326]\">\n *\n * The content of the popover is managed in a partial that must be defined\n * using the `gmfContextualdatacontentTemplateUrl` value. See\n * {@link gmf.contextualdatacontentDirective} for more details.\n *\n * One can also provide a `gmf-contextualdata-callback` attribute in order to\n * do some additional computing on the coordinate or the values received for\n * the raster service. The callback function is called with the coordinate of\n * the clicked point and the response data from the server. It is intended to\n * return an object of additional properties to add to the scope.\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} map The map.\n * @htmlAttribute {Array<number>} projections The list of projections.\n * @htmlAttribute {Function} callback A function called after server\n *    (raster) data is received in case some additional computing is required.\n *    Optional.\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname gmfContextualdata\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    scope: false,\n    controller: 'GmfContextualdataController as cdCtrl',\n    bindToController: {\n      'map': '<gmfContextualdataMap',\n      'projections': '<gmfContextualdataProjections',\n      'callback': '<gmfContextualdataCallback'\n    },\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     * @param {gmf.contextualdata.component.Controller_} controller Controller.\n     */\n    link: (scope, element, attrs, controller) => {\n      controller.init();\n    }\n  };\n};\n\nexports.directive('gmfContextualdata',\n  exports.directive_);\n\n\n/**\n *\n * @param {angular.$compile} $compile Angular compile service.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.Scope} $scope Scope.\n * @param {gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {angular.$injector} $injector Angular injector service.\n *\n * @constructor\n * @private\n * @ngdoc controller\n * @ngInject\n */\nexports.Controller_ = function($compile, $timeout, $scope, gmfRaster, $injector) {\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {Array<number>}\n   * @export\n   */\n  this.projections;\n\n  /**\n   * @type {function(ol.Coordinate, Object):Object}\n   * @export\n   */\n  this.callback;\n\n  /**\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.overlay_;\n\n  /**\n   * @type {angular.$compile}\n   * @private\n   */\n  this.$compile_ = $compile;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.gmfContextualdataOptions_ = $injector.has('gmfContextualdataOptions') ?\n    $injector.get('gmfContextualdataOptions') : {};\n\n  angular.element('body').on('mousedown', this.hidePopover.bind(this));\n};\n\n/**\n *\n */\nexports.Controller_.prototype.init = function() {\n  this.preparePopover_();\n\n  const mapDiv = this.map.getTargetElement();\n  googAsserts.assertElement(mapDiv);\n\n  olEvents.listen(mapDiv, 'contextmenu',\n    this.handleMapContextMenu_, this);\n};\n\n/**\n * @param {!Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(event) {\n  this.$scope_.$apply(() => {\n    const pixel = this.map.getEventPixel(event);\n    const coordinate = this.map.getCoordinateFromPixel(pixel);\n    this.setContent_(coordinate);\n    event.preventDefault();\n    this.hidePopover();\n    this.showPopover();\n\n    // Use timeout to let the popover content to be rendered before displaying it.\n    this.timeout_(() => {\n      this.overlay_.setPosition(coordinate);\n    });\n  });\n};\n\nexports.Controller_.prototype.setContent_ = function(coordinate) {\n  const scope = this.$scope_.$new(true);\n  this.$compile_(this.content_)(scope);\n\n  const mapProjection = this.map.getView().getProjection().getCode();\n  this.projections.forEach((proj) => {\n    const coord = olProj.transform(coordinate, mapProjection, `EPSG:${proj}`);\n    scope[`coord_${proj}`] = coord;\n    scope[`coord_${proj}_eastern`] = coord[0];\n    scope[`coord_${proj}_northern`] = coord[1];\n  });\n\n  const getRasterSuccess = function(resp) {\n    olObj.assign(scope, resp);\n    if (this.callback) {\n      olObj.assign(scope, this.callback.call(this, coordinate, resp));\n    }\n  }.bind(this);\n  const getRasterError = function(resp) {\n    console.error('Error on getting the raster.');\n  };\n  this.gmfRaster_.getRaster(coordinate, this.gmfContextualdataOptions_.rasterParams).then(\n    getRasterSuccess,\n    getRasterError\n  );\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.preparePopover_ = function() {\n\n  const container = document.createElement('DIV');\n  container.classList.add('popover');\n  container.classList.add('bottom');\n  container.classList.add('gmf-contextualdata');\n  angular.element(container).css('position', 'relative');\n  const arrow = document.createElement('DIV');\n  arrow.classList.add('arrow');\n  container.appendChild(arrow);\n  this.content_ = document.createElement('DIV');\n  this.content_.setAttribute('gmf-contextualdatacontent', '');\n  this.content_.classList.add('popover-content');\n  container.appendChild(this.content_);\n\n  this.overlay_ = new olOverlay({\n    element: container,\n    stopEvent: true,\n    autoPan: true,\n    autoPanAnimation: /** @type {olx.animation.PanOptions} */ ({\n      duration: 250\n    }),\n    positioning: 'top-center'\n  });\n  this.map.addOverlay(this.overlay_);\n};\n\nexports.Controller_.prototype.showPopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'block');\n};\n\nexports.Controller_.prototype.hidePopover = function() {\n  const element = /** @type {Object} */ (this.overlay_.getElement());\n  angular.element(element).css('display', 'none');\n};\n\nexports.controller('GmfContextualdataController', exports.Controller_);\n\n\n/**\n * Provide a directive responsible of formatting the content of the popover for\n * the contextual data directive.\n *\n * Its main purpose is to configure the template to be used.\n * Integrators should ensure that the template values match the configuration\n * of the contextual data directive.\n *\n * For each projection the following expressions can be used (replace xxxx by\n * the relevant projection code:\n *  - {{coord_xxxx}},\n *  - {{coord_xxxx_eastern}},\n *  - {{coord_xxxx_northern}}\n *\n * Tip: one should use the `ngeoNumberCoordinates` and `ngeoDMSCoordinates`.\n *\n * The raster service is requested to query additional information. The\n * integrators can also use `{{xxxx}}` where `xxxx` will be replaced by\n * the name of the raster layers (for example 'srtm').\n *\n * See the [../examples/contribs/gmf/contextualdata.html](../examples/contribs/gmf/contextualdata.html) example for a usage sample.\n *\n * @param {string} gmfContextualdatacontentTemplateUrl Url to template.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfContextualdatacontent\n */\nexports.contentDirective_ = function(\n  gmfContextualdatacontentTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: gmfContextualdatacontentTemplateUrl\n  };\n};\n\nexports.directive('gmfContextualdatacontent', exports.contentDirective_);\n\n\nexport default exports;\n","/**\n * @module gmf.contextualdata.module\n */\nimport gmfContextualdataComponent from 'gmf/contextualdata/component.js';\n\nimport './contextualdata.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfContextualdataModule', [\n  gmfContextualdataComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createGeoJSONBloodhound\n */\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {string} url an URL to a search service.\n * @param {(function(GeoJSONFeature): boolean)=} opt_filter function to filter\n *     results.\n * @param {ol.proj.Projection=} opt_featureProjection Feature projection.\n * @param {ol.proj.Projection=} opt_dataProjection Data projection.\n * @param {BloodhoundOptions=} opt_options optional Bloodhound options. If\n *     undefined, the default Bloodhound config will be used.\n * @param {BloodhoundRemoteOptions=} opt_remoteOptions optional Bloodhound\n * remote options. Effective only if `remote` is not defined in `opt_options`.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(url, opt_filter, opt_featureProjection,\n  opt_dataProjection, opt_options, opt_remoteOptions) {\n  const geojsonFormat = new olFormatGeoJSON();\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url,\n      prepare(query, settings) {\n        settings.url = settings.url.replace('%QUERY', query);\n        return settings;\n      },\n      transform(parsedResponse) {\n        /** @type {GeoJSONFeatureCollection} */\n        let featureCollection = /** @type {GeoJSONFeatureCollection} */\n            (parsedResponse);\n        if (opt_filter !== undefined) {\n          featureCollection = /** @type {GeoJSONFeatureCollection} */ ({\n            type: 'FeatureCollection',\n            features: featureCollection.features.filter(opt_filter)\n          });\n        }\n\n        return geojsonFormat.readFeatures(featureCollection, {\n          featureProjection: opt_featureProjection,\n          dataProjection: opt_dataProjection\n        });\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const options = olObj.assign({}, opt_options || {});\n  const remoteOptions = olObj.assign({}, opt_remoteOptions || {});\n\n  if (options.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, options.remote);\n    delete options.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, options);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoSearchCreategeojsonbloodhound', []);\n\nexports.module.value(\n  'ngeoSearchCreateGeoJSONBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * expecting GeoJSON responses from the search web service, which creates\n * `ol.Feature` objects as suggestions.\n *\n * Example:\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       'http://example.com/fulltextsearch?query=%QUERY',\n *       aFilterFunction,\n *       ol.proj.get('EPSG:3857'));\n *     bloodhound.initialize();\n *\n *     let bloodhound = createGeoJSONBloodhound(\n *       '',\n *       undefined,\n *       ol.proj.get('EPSG:3857'),\n *       ol.proj.get('EPSG:21781'),\n *       {\n *         remote: {\n *           url: mySearchEngineUrl,\n *           replace: function(url, query) {\n *             return url +\n *                 '?qtext=' + encodeURIComponent(query) +\n *                 '&lang=' + gettextCatalog.currentLanguage;\n *           }\n *         }\n *       }\n *     );\n *     bloodhound.initialize();\n *\n * @typedef {function(string, (function(GeoJSONFeature): boolean)=,\n * ol.proj.Projection=, ol.proj.Projection=, BloodhoundOptions=,\n * BloodhoundRemoteOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createGeoJSONBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.createLocationSearchBloodhound\n */\nimport * as olObj from 'ol/obj.js';\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\n\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olFeature from 'ol/Feature.js';\n\nimport 'corejs-typeahead';\n\n\n/**\n * @param {ngeox.search.LocationSearchOptions=} opt_options Options.\n * @return {Bloodhound} The Bloodhound object.\n */\nconst exports = function(opt_options) {\n  const options = opt_options || {};\n\n  const sourceProjection = olProj.get(ngeoProjEPSG21781);\n  const targetProjection = options.targetProjection;\n\n  /**\n   * @param {string} bbox Bbox string.\n   * @return {?ol.Extent} Parsed extent.\n   */\n  const parseBbox = (bbox) => {\n    const regex = /BOX\\((.*?) (.*?),(.*?) (.*?)\\)/g;\n    const match = regex.exec(bbox);\n    if (match !== null) {\n      return [\n        parseFloat(match[1]),\n        parseFloat(match[2]),\n        parseFloat(match[3]),\n        parseFloat(match[4])\n      ];\n    } else {\n      return null;\n    }\n  };\n\n  const removeHtmlTags = label => label.replace(/<\\/?[ib]>/g, '');\n\n  const extractName = (label) => {\n    const regex = /<b>(.*?)<\\/b>/g;\n    const match = regex.exec(label);\n    if (match !== null) {\n      return match[1];\n    } else {\n      return label;\n    }\n  };\n\n  const bloodhoundOptions = /** @type {BloodhoundOptions} */ ({\n    remote: {\n      url: 'https://api3.geo.admin.ch/rest/services/api/SearchServer?type=locations&searchText=%QUERY',\n      prepare: (query, settings) => {\n        settings.url = settings.url.replace('%QUERY', query);\n        if (options.limit !== undefined) {\n          settings.url += `&limit=${options.limit}`;\n        }\n        if (options.origins !== undefined) {\n          settings.url += `&origins=${options.origins}`;\n        }\n\n        return (options.prepare !== undefined) ?\n          options.prepare(query, settings) : settings;\n      },\n      transform: (/** @type {geoAdminx.SearchLocationResponse} */ parsedResponse) => {\n        const features = parsedResponse.results.map((/** @type {geoAdminx.SearchLocationResult} */ result) => {\n          const attrs = result.attrs;\n\n          // note that x and y are switched!\n          const point = new olGeomPoint([attrs.y, attrs.x]);\n          let bbox = parseBbox(attrs.geom_st_box2d);\n          if (targetProjection !== undefined) {\n            point.transform(sourceProjection, targetProjection);\n            if (bbox !== null) {\n              bbox = olProj.transformExtent(bbox, sourceProjection, targetProjection);\n            }\n          }\n\n          attrs['geometry'] = point;\n          attrs['bbox'] = bbox;\n\n          // create a label without HTML tags\n          const label = attrs.label;\n          attrs['label_no_html'] = removeHtmlTags(label);\n          attrs['label_simple'] = extractName(label);\n\n          const feature = new olFeature(attrs);\n          feature.setId(attrs.featureId);\n\n          return feature;\n        });\n\n        return features;\n      }\n    },\n    // datumTokenizer is required by the Bloodhound constructor but it\n    // is not used when only a remote is passsed to Bloodhound.\n    datumTokenizer: () => {},\n    queryTokenizer: Bloodhound.tokenizers.whitespace\n  });\n\n  // the options objects are cloned to avoid updating the passed object\n  const bhOptions = olObj.assign({}, options.options || {});\n  const remoteOptions = olObj.assign({}, options.remoteOptions || {});\n\n  if (bhOptions.remote) {\n    // move the remote options to opt_remoteOptions\n    olObj.assign(remoteOptions, bhOptions.remote);\n    delete bhOptions.remote;\n  }\n\n  olObj.assign(bloodhoundOptions, bhOptions);\n  olObj.assign(bloodhoundOptions.remote, remoteOptions);\n\n  return new Bloodhound(bloodhoundOptions);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoCreateLocationSearchBloodhound', []);\n\nexports.module.value(\n  'ngeoCreateLocationSearchBloodhound',\n  exports);\n\n\n/**\n * Provides a function that creates a Bloodhound engine\n * for the GeoAdmin Location Search API, which creates `ol.Feature` objects\n * as suggestions.\n *\n * See: http://api3.geo.admin.ch/services/sdiservices.html#search\n *\n * Example:\n *\n *     let bloodhound = ngeoCreateLocationSearchBloodhound({\n *       targetProjection: ol.proj.get('EPSG:3857'),\n *       limit: 10\n *     });\n *     bloodhound.initialize();\n *\n * @typedef {function(ngeox.search.LocationSearchOptions=):Bloodhound}\n * @ngdoc service\n * @ngname search.createLocationSearchBloodhound\n */\nexports.Function;\n\n\nexport default exports;\n","/**\n * @module ngeo.search.module\n */\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoSearchCreateGeoJSONBloodhound from 'ngeo/search/createGeoJSONBloodhound.js';\nimport ngeoSearchCreateLocationSearchBloodhound from 'ngeo/search/createLocationSearchBloodhound.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSearchModule', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoSearchCreateGeoJSONBloodhound.module.name,\n  ngeoSearchCreateLocationSearchBloodhound.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.featureStyleComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingFeatureStyle', [\n  ngeoMiscColorpickerComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/featureStyleComponent', require('./featureStyleComponent.html'));\n});\n\n\n/**\n * Directive used to set the style of a vector feature. The options depend\n * on the type of geometry.\n * Example:\n *\n *     <gmf-featurestyle\n *         gmf-featurestyle-feature=\"ctrl.selectedFeature\">\n *     </gmf-featurestyle>\n *\n * @htmlAttribute {ol.Feature} gmf-featurestyle-feature The feature.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfFeaturestyle\n */\nexports.directive_ = function() {\n  return {\n    controller: 'GmfFeaturestyleController as fsCtrl',\n    scope: {\n      'feature': '=gmfFeaturestyleFeature'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/featureStyleComponent'\n  };\n};\n\n\nexports.directive('gmfFeaturestyle',\n  exports.directive_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Gmf feature helper service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfFeaturestyleController\n */\nexports.Controller_ = function($scope, ngeoFeatureHelper) {\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.color = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.label = undefined;\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.measure = undefined;\n\n  $scope.$watch(\n    () => this.color,\n    this.handleColorSet_.bind(this)\n  );\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.featureListenerKeys_ = [];\n\n  /**\n   * @type {string|undefined}\n   * @export\n   */\n  this.type;\n\n  $scope.$watch(\n    () => this.feature,\n    this.handleFeatureSet_.bind(this)\n  );\n\n};\n\n\n/**\n * Called when a new feature is set, which can also be null.\n * @param {?ol.Feature} newFeature New feature or null value.\n * @param {?ol.Feature} previousFeature Previous feature or null value.\n * @private\n */\nexports.Controller_.prototype.handleFeatureSet_ = function(\n  newFeature, previousFeature) {\n\n  const keys = this.featureListenerKeys_;\n\n  if (previousFeature) {\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n    this.type = undefined;\n    this.color = undefined;\n    this.measure = undefined;\n    this.label = undefined;\n  }\n\n  if (newFeature) {\n    [\n      ngeoFormatFeatureProperties.ANGLE,\n      ngeoFormatFeatureProperties.COLOR,\n      ngeoFormatFeatureProperties.NAME,\n      ngeoFormatFeatureProperties.SHOW_LABEL,\n      ngeoFormatFeatureProperties.OPACITY,\n      ngeoFormatFeatureProperties.SHOW_MEASURE,\n      ngeoFormatFeatureProperties.SIZE,\n      ngeoFormatFeatureProperties.STROKE\n    ].forEach(function(propName) {\n      keys.push(\n        olEvents.listen(\n          newFeature,\n          `change:${propName}`,\n          this.handleFeatureChange_,\n          this\n        )\n      );\n    }, this);\n\n    const geometry = newFeature.getGeometry();\n    googAsserts.assert(geometry, 'Geometry should be thruthy');\n\n    keys.push(\n      olEvents.listen(\n        geometry,\n        'change',\n        this.handleGeometryChange_,\n        this\n      )\n    );\n\n    this.type = this.featureHelper_.getType(newFeature);\n    this.color = this.featureHelper_.getColorProperty(newFeature);\n    this.measure = this.featureHelper_.getMeasure(newFeature);\n  }\n};\n\n\n/**\n * @param {string|undefined} newColor Color.\n * @private\n */\nexports.Controller_.prototype.handleColorSet_ = function(\n  newColor) {\n  if (this.feature && newColor) {\n    const currentColor = this.feature.get(ngeoFormatFeatureProperties.COLOR);\n    if (currentColor !== newColor) {\n      this.feature.set(ngeoFormatFeatureProperties.COLOR, newColor);\n    }\n  }\n};\n\n\n/**\n * @param {number|undefined} value A name value to set or undefined to get.\n * @return {number} The angle of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetAngle = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.ANGLE, value));\n};\n\n\n/**\n * @param {string|undefined} value A name value to set or undefined to get.\n * @return {string} The name of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetName = function(value) {\n  return googAsserts.assertString(this.getSetProperty_(ngeoFormatFeatureProperties.NAME, value));\n};\n\n/**\n * @param {boolean|undefined} value A value to set or undefined for the\n *     purpose of showing the attribute labels or not.\n * @return {boolean} Whether to show the labels or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowLabel = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_LABEL, value));\n};\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetOpacity = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.OPACITY, value));\n};\n\n\n/**\n * @param {boolean|undefined} value A value to set or undefined to get for the\n *     purpose of showing the geometry measurements or not.\n * @return {boolean} Whether to show the measurements or not.\n * @export\n */\nexports.Controller_.prototype.getSetShowMeasure = function(value) {\n  return googAsserts.assertBoolean(this.getSetProperty_(ngeoFormatFeatureProperties.SHOW_MEASURE, value));\n};\n\n\n/**\n * @param {number|undefined} value A size value to set or undefined to get.\n * @return {number} The size of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetSize = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.SIZE, value));\n};\n\n\n/**\n * @param {number|undefined} value A stroke value to set or undefined to get.\n * @return {number} The stroke of the feature.\n * @export\n */\nexports.Controller_.prototype.getSetStroke = function(value) {\n  return googAsserts.assertNumber(this.getSetProperty_(ngeoFormatFeatureProperties.STROKE, value));\n};\n\n\n/**\n * @param {string} key The property name.\n * @param {boolean|number|string|undefined} value A value to set or undefined\n *     to get.\n * @return {boolean|number|string} The property value of the feature.\n * @private\n */\nexports.Controller_.prototype.getSetProperty_ = function(key, value) {\n  if (value !== undefined) {\n    this.feature.set(key, value);\n  }\n  return /** @type {boolean|number|string} */ (this.feature.get(key));\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleFeatureChange_ = function() {\n  const feature = this.feature;\n\n  if (!feature) {\n    return;\n  }\n\n  this.featureHelper_.setStyle(feature, true);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.handleGeometryChange_ = function() {\n  googAsserts.assert(this.feature);\n  this.measure = this.featureHelper_.getMeasure(this.feature);\n\n  const showMeasure = this.featureHelper_.getShowMeasureProperty(this.feature);\n  if (showMeasure) {\n    this.handleFeatureChange_();\n  }\n\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfFeaturestyleController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.drawFeatureComponent\n */\n\n/** @suppress {extraRequire} */\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\nimport googAsserts from 'goog/asserts.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoMenu from 'ngeo/Menu.js';\n\n/** @suppress {extraRequire} */\nimport ngeoEditingExportfeaturesComponent from 'ngeo/editing/exportfeaturesComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscBtnComponent from 'ngeo/misc/btnComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDrawComponent from 'ngeo/draw/component.js';\n\nimport ngeoFormatFeatureProperties from 'ngeo/format/FeatureProperties.js';\nimport ngeoInteractionModify from 'ngeo/interaction/Modify.js';\nimport ngeoInteractionRotate from 'ngeo/interaction/Rotate.js';\nimport ngeoInteractionTranslate from 'ngeo/interaction/Translate.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoMiscToolActivate from 'ngeo/misc/ToolActivate.js';\nimport ngeoMiscToolActivateMgr from 'ngeo/misc/ToolActivateMgr.js';\nimport * as olBase from 'ol/index.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olCollection from 'ol/Collection.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('GmfDrawFeatureComponent', [\n  gmfDrawingFeatureStyleComponent.name,\n  ngeoEditingExportfeaturesComponent.name,\n  ngeoMiscBtnComponent.name,\n  ngeoDrawComponent.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoMiscToolActivateMgr.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/drawing/drawFeatureComponent', require('./drawFeatureComponent.html'));\n});\n\n\n/**\n * Directive used to create, modify and delete vector features on a map with\n * the addition of changing their style.\n * Example:\n *\n *     <gmf-drawfeature\n *         gmf-drawfeature-active=\"ctrl.drawFeatureActive\"\n *         gmf-drawfeature-map=\"::ctrl.map\">\n *     </gmf-drawfeature>\n *\n * @htmlAttribute {boolean} gmf-drawfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Map} gmf-drawfeature-map The map.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname gmfDrawfeature\n */\nexports.component_ = function() {\n  return {\n    controller: 'GmfDrawfeatureController as efCtrl',\n    scope: {\n      'active': '=gmfDrawfeatureActive',\n      'map': '<gmfDrawfeatureMap',\n      'showMeasure': '=?gmfDrawfeatureShowmeasure'\n    },\n    bindToController: true,\n    templateUrl: 'gmf/drawing/drawFeatureComponent'\n  };\n};\n\n\nexports.directive('gmfDrawfeature',\n  exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @param {!ol.Collection.<!ol.Feature>} ngeoFeatures Collection of features.\n * @param {!ngeo.misc.ToolActivateMgr} ngeoToolActivateMgr Ngeo ToolActivate manager\n *     service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfDrawfeatureController\n */\nexports.Controller_ = function($scope, $timeout, gettextCatalog,\n  ngeoFeatureHelper, ngeoFeatures, ngeoToolActivateMgr) {\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  if (this.active === undefined) {\n    this.active = false;\n  }\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.drawActive = false;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.drawToolActivate = new ngeoMiscToolActivate(this, 'drawActive');\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.mapSelectActive = true;\n\n  /**\n   * @type {number?}\n   * @private\n   */\n  this.longPressTimeout_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.mapSelectToolActivate = new ngeoMiscToolActivate(this, 'mapSelectActive');\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.features = ngeoFeatures;\n\n  /**\n   * @type {!ngeo.misc.ToolActivateMgr}\n   * @private\n   */\n  this.ngeoToolActivateMgr_ = ngeoToolActivateMgr;\n\n  /**\n   * @type {?ol.Feature}\n   * @export\n   */\n  this.selectedFeature = null;\n\n  /**\n   * @type {!ol.Collection.<!ol.Feature>}\n   * @export\n   */\n  this.selectedFeatures = new olCollection();\n\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.interactions_ = new olCollection();\n\n  /**\n   * @type {!ngeo.interaction.Modify}\n   * @private\n   */\n  this.modify_ = new ngeoInteractionModify({\n    features: this.selectedFeatures,\n    style: ngeoFeatureHelper.getVertexStyle(false)\n  });\n  this.interactions_.push(this.modify_);\n\n  /**\n   * @type {?ngeo.Menu}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.modifyToolActivate = new ngeoMiscToolActivate(this.modify_, 'active');\n\n  /**\n   * @type {!ngeo.interaction.Translate}\n   * @private\n   */\n  this.translate_ = new ngeoInteractionTranslate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf047',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.translate_);\n\n  /**\n   * @type {!ngeo.interaction.Rotate}\n   * @private\n   */\n  this.rotate_ = new ngeoInteractionRotate({\n    features: this.selectedFeatures,\n    style: new olStyleStyle({\n      text: new olStyleText({\n        text: '\\uf01e',\n        font: 'normal 18px FontAwesome',\n        fill: new olStyleFill({\n          color: '#7a7a7a'\n        })\n      })\n    })\n  });\n  this.interactions_.push(this.rotate_);\n\n  this.initializeInteractions_();\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.rotateToolActivate = new ngeoMiscToolActivate(this.rotate_, 'active');\n\n  /**\n   * @type {!ngeo.misc.ToolActivate}\n   * @export\n   */\n  this.translateToolActivate = new ngeoMiscToolActivate(this.translate_, 'active');\n\n  /**\n   * @type {!Array.<!ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * Flag used to determine whether the selection of a feature was made\n   * from the selection of an item from the list or not (the map, contextual\n   * menu, etc.)\n   * @type {boolean}\n   * @private\n   */\n  this.listSelectionInProgress_ = false;\n\n  $scope.$watch(\n    () => this.active,\n    this.handleActiveChange_.bind(this)\n  );\n\n  $scope.$watch(\n    () => this.drawActive,\n    (active) => {\n      if (active) {\n        this.selectedFeature = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.selectedFeature,\n    (newFeature, previousFeature) => {\n      this.selectedFeatures.clear();\n      if (previousFeature) {\n        this.featureHelper_.setStyle(previousFeature);\n        this.unregisterInteractions_();\n      }\n      if (newFeature) {\n        this.featureHelper_.setStyle(newFeature, true);\n        this.selectedFeatures.push(newFeature);\n        this.registerInteractions_();\n        if (this.listSelectionInProgress_) {\n          this.featureHelper_.panMapToFeature(newFeature, this.map);\n          this.listSelectionInProgress_ = false;\n        }\n      } else if (this.menu_) {\n        this.map.removeOverlay(this.menu_);\n        this.menu_ = null;\n      }\n    }\n  );\n\n  $scope.$watch(\n    () => this.mapSelectActive,\n    this.handleMapSelectActiveChange_.bind(this)\n  );\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.nameProperty = ngeoFormatFeatureProperties.NAME;\n\n  /**\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n};\n\n\n/**\n * Initialize interactions by setting them inactive and decorating them\n * @private\n */\nexports.Controller_.prototype.initializeInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    interaction.setActive(false);\n    ngeoMiscDecorate.interaction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by adding them to the map\n * @private\n */\nexports.Controller_.prototype.registerInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.addInteraction(interaction);\n  });\n};\n\n\n/**\n * Register interactions by removing them to the map\n * @private\n */\nexports.Controller_.prototype.unregisterInteractions_ = function() {\n  this.interactions_.forEach((interaction) => {\n    this.map.removeInteraction(interaction);\n  });\n};\n\n\n/**\n * Called when the active property of the this directive changes. Manage\n * the activation/deactivation accordingly (event management, etc.)\n * @param {boolean} active Whether the directive is active or not.\n * @private\n */\nexports.Controller_.prototype.handleActiveChange_ = function(active) {\n\n  const keys = this.listenerKeys_;\n  const drawUid = ['draw-', olBase.getUid(this)].join('-');\n  const otherUid = ['other-', olBase.getUid(this)].join('-');\n  const toolMgr = this.ngeoToolActivateMgr_;\n\n  if (active) {\n    // when activated\n\n    keys.push(\n      olEvents.listen(this.features, 'add', this.handleFeaturesAdd_, this),\n      olEvents.listen(this.features, 'remove', this.handleFeaturesRemove_, this)\n    );\n\n    keys.push(olEvents.listen(this.translate_,\n      'translateend',\n      this.handleTranslateEnd_, this));\n\n    keys.push(olEvents.listen(this.rotate_, 'rotateend', this.handleRotateEnd_, this));\n\n    toolMgr.registerTool(drawUid, this.drawToolActivate, false);\n    toolMgr.registerTool(drawUid, this.mapSelectToolActivate, true);\n\n    toolMgr.registerTool(otherUid, this.drawToolActivate, false);\n    toolMgr.registerTool(otherUid, this.modifyToolActivate, true);\n    toolMgr.registerTool(otherUid, this.translateToolActivate, false);\n    toolMgr.registerTool(otherUid, this.rotateToolActivate, false);\n\n    this.mapSelectActive = true;\n    this.modify_.setActive(true);\n  } else {\n    // when deactivated\n\n    keys.forEach(olEvents.unlistenByKey);\n    keys.length = 0;\n\n    toolMgr.unregisterTool(drawUid, this.drawToolActivate);\n    toolMgr.unregisterTool(drawUid, this.mapSelectToolActivate);\n\n    toolMgr.unregisterTool(otherUid, this.drawToolActivate);\n    toolMgr.unregisterTool(otherUid, this.modifyToolActivate);\n    toolMgr.unregisterTool(otherUid, this.translateToolActivate);\n    toolMgr.unregisterTool(otherUid, this.rotateToolActivate);\n\n    this.drawActive = false;\n    this.modify_.setActive(false);\n    this.mapSelectActive = false;\n    this.selectedFeature = null;\n\n    if (this.menu_) {\n      this.map.removeOverlay(this.menu_);\n      this.menu_ = null;\n    }\n  }\n\n};\n\n\n/**\n * Method called when a selection occurs from the list, i.e. when an item in\n * the list of features is clicked. Called from the template, so no need to\n * update Angular's scope.\n * @param {!ol.Feature} feature Feature to select.\n * @export\n */\nexports.Controller_.prototype.selectFeatureFromList = function(feature) {\n  this.listSelectionInProgress_ = true;\n  this.selectedFeature = feature;\n  this.drawActive = false;\n};\n\n\n/**\n * @return {!Array.<!ol.Feature>} Array.\n * @export\n */\nexports.Controller_.prototype.getFeaturesArray = function() {\n  return this.features.getArray();\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.clearFeatures = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete all the features?');\n  if (confirm(msg)) {\n    this.features.clear();\n  }\n};\n\n\n/**\n * @param {!ol.Feature} feature The feature to remove from the selection.\n * @export\n */\nexports.Controller_.prototype.removeFeature = function(feature) {\n  const gettextCatalog = this.gettextCatalog_;\n  const msg = gettextCatalog.getString(\n    'Do you really want to delete the selected feature?');\n  if (confirm(msg)) {\n    this.features.remove(feature);\n  }\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesAdd_ = function(evt) {\n  // timeout to prevent double-click to zoom the map\n  this.timeout_(() => {\n    this.selectedFeature = /** @type {ol.Feature} */ (evt.element);\n    this.drawActive = false;\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * @param {!ol.Collection.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturesRemove_ = function(evt) {\n  this.selectedFeature = null;\n};\n\n\n/**\n * Called when the mapSelectActive property changes.\n * @param {boolean} active Whether the map select is active or not.\n * @private\n */\nexports.Controller_.prototype.handleMapSelectActiveChange_ = function(\n  active) {\n\n  const mapDiv = this.map.getViewport();\n  googAsserts.assertElement(mapDiv);\n\n  if (active) {\n    olEvents.listen(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.listen(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.listen(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.listen(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.listen(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n\n  } else {\n    olEvents.unlisten(this.map, 'click',\n      this.handleMapClick_, this);\n\n    olEvents.unlisten(mapDiv, 'contextmenu',\n      this.handleMapContextMenu_, this);\n\n    olEvents.unlisten(mapDiv, 'touchstart',\n      this.handleMapTouchStart_, this);\n\n    olEvents.unlisten(mapDiv, 'touchmove',\n      this.handleMapTouchEnd_, this);\n\n    olEvents.unlisten(mapDiv, 'touchend',\n      this.handleMapTouchEnd_, this);\n  }\n};\n\n\n/**\n * @param {!ol.MapBrowserEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapClick_ = function(evt) {\n\n  const pixel = evt.pixel;\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 5\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchStart_ = function(evt) {\n  this.longPressTimeout_ = setTimeout(() => {\n    this.handleMapContextMenu_(evt);\n  }, 500);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapTouchEnd_ = function(evt) {\n  clearTimeout(this.longPressTimeout_);\n};\n\n\n/**\n * @param {!Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMapContextMenu_ = function(evt) {\n  const gettextCatalog = this.gettextCatalog_;\n  const pixel = this.map.getEventPixel(evt);\n  const coordinate = this.map.getCoordinateFromPixel(pixel);\n\n  let feature = this.map.forEachFeatureAtPixel(\n    pixel,\n    (feature) => {\n      let ret = false;\n      if (olArray.includes(this.features.getArray(), feature)) {\n        ret = feature;\n      }\n      return ret;\n    },\n    {\n      hitTolerance: 7\n    }\n  );\n\n  feature = feature ? feature : null;\n\n  // show contextual menu when clicking on certain types of features\n  if (feature) {\n    let actions = [];\n\n    const type = this.featureHelper_.getType(feature);\n    if (type == ngeoGeometryType.CIRCLE ||\n        type == ngeoGeometryType.LINE_STRING ||\n        type == ngeoGeometryType.POLYGON ||\n        type == ngeoGeometryType.RECTANGLE) {\n      actions = actions.concat([{\n        cls: 'fa fa-arrows',\n        label: gettextCatalog.getString('Move'),\n        name: 'move'\n      }, {\n        cls: 'fa fa-rotate-right',\n        label: gettextCatalog.getString('Rotate'),\n        name: 'rotate'\n      }]);\n    }\n\n    actions = actions.concat([{\n      cls: 'fa fa-trash-o',\n      label: gettextCatalog.getString('Delete'),\n      name: 'delete'\n    }]);\n\n    this.menu_ = new ngeoMenu({\n      actions\n    });\n\n    olEvents.listen(this.menu_, 'actionclick',\n      this.handleMenuActionClick_, this);\n    this.map.addOverlay(this.menu_);\n\n    this.menu_.open(coordinate);\n\n    evt.preventDefault();\n    evt.stopPropagation();\n  }\n\n  // do not do any further action if feature is null or already selected\n  if (feature === this.selectedFeature) {\n    return;\n  }\n\n  this.modify_.setActive(true);\n\n  this.selectedFeature = feature;\n\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.MenuEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuActionClick_ = function(evt) {\n  const action = evt.detail.action;\n\n  switch (action) {\n    case 'delete':\n      googAsserts.assert(\n        this.selectedFeature, 'Selected feature should be truthy');\n      this.removeFeature(this.selectedFeature);\n      this.scope_.$apply();\n      break;\n    case 'move':\n      this.translate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    case 'rotate':\n      this.rotate_.setActive(true);\n      this.scope_.$apply();\n      break;\n    default:\n      // FIXME\n      console.log(`FIXME - support: ${action}`);\n      break;\n  }\n};\n\n\n/**\n * @param {!ol.interaction.Translate.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleTranslateEnd_ = function(evt) {\n  this.translate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\n/**\n * @param {!ngeox.RotateEvent} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleRotateEnd_ = function(evt) {\n  this.rotate_.setActive(false);\n  this.scope_.$apply();\n};\n\n\nexports.controller('GmfDrawfeatureController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.drawing.module\n */\nimport gmfDrawingDrawFeatureComponent from 'gmf/drawing/drawFeatureComponent.js';\nimport gmfDrawingFeatureStyleComponent from 'gmf/drawing/featureStyleComponent.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawingModule', [\n  gmfDrawingDrawFeatureComponent.name,\n  gmfDrawingFeatureStyleComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.d3Elevation\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olObj from 'ol/obj.js';\n\nimport 'd3-transition';\nimport {bisector, extent} from 'd3-array';\nimport {axisBottom, axisLeft} from 'd3-axis';\nimport {scaleLinear} from 'd3-scale';\nimport {mouse, select, selectAll} from 'd3-selection';\nimport {area, line} from 'd3-shape';\nconst d3 = {\n  bisector,\n  extent,\n  axisBottom,\n  axisLeft,\n  scaleLinear,\n  mouse,\n  select,\n  selectAll,\n  area,\n  line,\n};\n\n\n/**\n * Provides a D3js component to be used to draw an elevation\n * profile chart.\n *\n *     let selection = d3.select('#element_id');\n *     let profile = ngeo.profile.d3Elevation({\n *       distanceExtractor: function (item) {return item['dist'];},\n *       linesConfiguration: {\n *         'lineZ1': {\n *           zExtractor: function (item) {return item['values']['z1'];}\n *         },\n *         'lineZ2': {\n *           color: '#00F',\n *           zExtractor: function (item) {return item['values']['z2'];}\n *         }\n *       },\n *       hoverCallback: function(point, dist, xUnits, elevations, yUnits) {\n *         console.log(point.x, point.y);\n *       },\n *       outCallback: function() {\n *         console.log(\"out\");\n *       }\n *     });\n *     selection.datum(data).call(profile);\n *\n * The selection data must be an array.\n * The layout for the items of this array is unconstrained: the distance values\n * is extracted using the distanceExtractor config option and multiples z values\n * can be displayed by providing multiple linesConfiguration with its specific\n * zExtractor.\n * Optionally you can provide a color in your linesConfiguration. A line without\n * color will be red. Each linesConfiguration name is used as class for its\n * respective line. So you can pass a styleDefs config option (inline css) to\n * customize the line or all the chart.\n * Optionally, POIs can be displayed and depend on a poiExtractor\n * config option.\n *\n * The data below will work for the above example:\n *\n *     [\n *         {\n *             \"y\": 199340,\n *             \"values\": {\"z1\": 788.7, \"z2\": 774.2},\n *             \"dist\": 0.0,\n *             \"x\": 541620\n *         }, ...\n *     ]\n *\n * @return {Object} D3js component.\n * @param {ngeox.profile.ProfileOptions} options Profile options.\n * @export\n */\nconst exports = function(options) {\n  /**\n   * Whether the simplified profile should be shown.\n   * @type {boolean}\n   */\n  const light = options.light !== undefined ? options.light : false;\n\n\n  /**\n   * The values for margins around the chart defined in pixels.\n   */\n  const margin = light ? {top: 0, right: 0, bottom: 0, left: 0} :\n    {top: 10, right: 20, bottom: 30, left: 40};\n\n  /**\n   * Hover callback function.\n   * @type {function(Object, number, string, Object.<string, number>, string)}\n   */\n  const hoverCallback = options.hoverCallback !== undefined ?\n    options.hoverCallback : () => {};\n\n  /**\n   * Out callback function.\n   * @type {function()}\n   */\n  const outCallback = options.outCallback !== undefined ?\n    options.outCallback : () => {};\n\n  /**\n   * Distance data extractor used to get the dist values.\n   */\n  const distanceExtractor = options.distanceExtractor;\n\n  /**\n   * Line configuration object.\n   */\n  const linesConfiguration = options.linesConfiguration;\n\n  /**\n   * Number of different configurations for the line.\n   */\n  const numberOfLines = Object.keys(linesConfiguration).length;\n\n  /**\n   * Method to get the coordinate in pixels from a distance.\n   */\n  const bisectDistance = d3.bisector(d => distanceExtractor(d)).left;\n\n  /**\n   * POI data extractor.\n   */\n  const poiExtractor = options.poiExtractor;\n\n  /**\n   * Optional SVG inline style.\n   */\n  const styleDefs = options.styleDefs;\n\n  /**\n   * @type {number}\n   */\n  const poiLabelAngle = options.poiLabelAngle !== undefined ?\n    options.poiLabelAngle : -60;\n\n  /**\n   * @type {Object.<string, string>}\n   */\n  const i18n = options.i18n || {};\n\n  /**\n   * @type {string}\n   */\n  const xAxisLabel = (i18n.xAxis || 'Distance');\n\n  /**\n   * @type {string}\n   */\n  const yAxisLabel = (i18n.yAxis || 'Elevation');\n\n  /**\n   * @type {ngeox.profile.ProfileFormatter}\n   */\n  const formatter = {\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string} Distance.\n     */\n    xhover(dist, units) {\n      return `${parseFloat(dist.toPrecision(3))} ${units}`;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string} Elevation.\n     */\n    yhover(ele, units) {\n      return ele !== null ? `${Math.round(ele)} m` : '';\n    },\n    /**\n     * @param {number} dist Distance.\n     * @param {string} units Units.\n     * @return {string|number} Distance.\n     */\n    xtick(dist, units) {\n      return dist;\n    },\n    /**\n     * @param {number} ele Elevation.\n     * @param {string} units Units.\n     * @return {string|number} Elevation.\n     */\n    ytick(ele, units) {\n      return ele;\n    }\n  };\n\n  if (options.formatter !== undefined) {\n    olObj.assign(formatter, options.formatter);\n  }\n\n  /**\n   * @type {boolean}\n   */\n  const lightXAxis = options.lightXAxis !== undefined ? options.lightXAxis : false;\n\n  // Objects shared with the showPois function\n  /**\n   * @type {Object}\n   */\n  let svg;\n\n  /**\n   * D3 x scale.\n   */\n  let x;\n\n  /**\n   * D3 y scale.\n   */\n  let y;\n\n  /**\n   * Scale modifier to allow customizing the x and y scales.\n   */\n  const scaleModifier = options.scaleModifier;\n\n  let g;\n\n  /**\n   * Height of the chart in pixels\n   */\n  let height;\n\n  /**\n   * Width of the chart in pixels\n   */\n  let width;\n\n  /**\n  * Factor to determine whether to use 'm' or 'km'.\n  */\n  let xFactor;\n\n  /**\n  * Distance units. Either 'm' or 'km'.\n  */\n  let xUnits;\n\n  /**\n   * D3 extent of the distance.\n   */\n  let xDomain;\n\n\n  const profile = function(selection) {\n    selection.each(function(data) {\n      d3.select(this).selectAll('svg').remove();\n      if (data === undefined) {\n        return;\n      }\n\n      width = Math.max(this.clientWidth - margin.right - margin.left, 0);\n      x = d3.scaleLinear().range([0, width]);\n\n      height = Math.max(this.clientHeight - margin.top - margin.bottom, 0);\n      y = d3.scaleLinear().range([height, 0]);\n\n      const xAxis = d3.axisBottom(x);\n      const yAxis = d3.axisLeft(y);\n\n      let area;\n      if (numberOfLines === 1) {\n        area = d3.area()\n          .x(d => x(distanceExtractor(d)))\n          .y0(height)\n          .y1((d) => {\n            const firstLineName =  Object.keys(linesConfiguration)[0];\n            return y(linesConfiguration[firstLineName].zExtractor(d));\n          });\n      }\n\n      // Select the svg element, if it exists.\n      svg = d3.select(this).selectAll('svg').data([data]);\n      // Otherwise, create the skeletal chart.\n      const svgEnter = svg.enter().append('svg');\n      // Then select it again to get the complete object.\n      svg = d3.select(this).selectAll('svg').data([data]);\n\n      if (styleDefs !== undefined) {\n        svgEnter.append('defs').append('style')\n          .attr('type', 'text/css')\n          .text(styleDefs);\n      }\n      const gEnter = svgEnter.append('g');\n\n      clearPois();\n\n      gEnter.style('font', '11px Arial');\n\n      if (numberOfLines === 1) {\n        gEnter.append('path').attr('class', 'area')\n          .style('fill', 'rgba(222, 222, 222, 0.5)');\n      }\n\n      gEnter.insert('g', ':first-child')\n        .attr('class', 'grid-y');\n\n      if (!light) {\n        gEnter.append('g')\n          .attr('class', 'x axis')\n          .attr('transform', `translate(0,${height})`);\n\n        gEnter.append('text')\n          .attr('class', 'x label')\n          .attr('text-anchor', 'end')\n          .attr('x', width - 4)\n          .attr('y', height - 4);\n\n        gEnter.append('g')\n          .attr('class', 'y axis');\n\n        gEnter.append('text')\n          .attr('class', 'y label')\n          .attr('text-anchor', 'end')\n          .attr('y', 6)\n          .attr('dy', '.75em')\n          .attr('transform', 'rotate(-90)')\n          .style('fill', 'grey')\n          .text(`${yAxisLabel} [m]`);\n\n        gEnter.append('g')\n          .attr('class', 'metas')\n          .attr('transform', `translate(${width + 3}, 0)`);\n      }\n\n      gEnter.append('g').attr('class', 'pois');\n\n      const xHover = gEnter.append('g').attr('class', 'x grid-hover');\n      xHover.append('svg:line').attr('stroke-dasharray', '5,5');\n      xHover.append('text');\n\n      gEnter.append('rect')\n        .attr('class', 'overlay')\n        .attr('width', width)\n        .attr('height', height)\n        .style('fill', 'none')\n        .style('pointer-events', 'all');\n\n      // Update the outer dimensions.\n      svg.attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.top + margin.bottom);\n\n      // Update the inner dimensions.\n      g = svg.select('g')\n        .attr('transform', `translate(${margin.left},${\n          margin.top})`);\n\n      xDomain = d3.extent(data, d => distanceExtractor(d));\n      x.domain(xDomain);\n\n      // Return an array with the min and max value of the min/max values of\n      // each lines.\n      const yDomain = function() {\n        let elevationsValues = [];\n        // Get min/max values (extent) of each lines.\n        for (const name in linesConfiguration) {\n          const extent = d3.extent(data, d => linesConfiguration[name].zExtractor(d));\n          // only include defined extent\n          if (extent.every(Number.isFinite)) {\n            elevationsValues = elevationsValues.concat(extent);\n          }\n        }\n        return [\n          Math.min.apply(null, elevationsValues),\n          Math.max.apply(null, elevationsValues)\n        ];\n      }();\n\n      y.domain(yDomain);\n\n      // set the ratio according to the horizontal distance\n      if (scaleModifier !== undefined) {\n        scaleModifier(x, y, width, height);\n      } else {\n        // By default, add a small padding so that it looks nicer\n        const padding = (yDomain[1] - yDomain[0]) * 0.1;\n        y.domain([yDomain[0] - padding, yDomain[1] + padding]);\n      }\n\n      // Update the area path.\n      if (numberOfLines === 1) {\n        g.select('.area')\n          .transition()\n          .attr('d', area);\n      }\n\n      // Set style and update the lines paths and y hover guides for each lines.\n      let line, name, yHover;\n      for (name in linesConfiguration) {\n        // Set style of each line and add a class with its respective name.\n        gEnter.append('path').attr('class', `line ${name}`)\n          .style('stroke', linesConfiguration[name].color || '#F00')\n          .style('fill', 'none');\n\n        // Set y hover guides\n        yHover = gEnter.append('g').attr('class', `y grid-hover ${name}`);\n        yHover.append('svg:line').attr('stroke-dasharray', '5,5');\n        yHover.append('text');\n\n        // Configure the d3 line.\n        line = d3.line()\n          .x(d => x(distanceExtractor(d)))\n          .y(d => y(linesConfiguration[name].zExtractor(d)))\n          .defined(d => linesConfiguration[name].zExtractor(d) !== null);\n\n\n        // Update path for the line.\n        g.select(`.line.${name}`)\n          .transition()\n          .attr('d', line);\n      }\n\n      if (xDomain[1] > 2000) {\n        xFactor = 1000;\n        xUnits = 'km';\n      } else {\n        xFactor = 1;\n        xUnits = 'm';\n      }\n\n      if (!light) {\n        xAxis.tickFormat(d => formatter.xtick(d / xFactor, xUnits));\n        if (lightXAxis) {\n          xAxis.tickValues([0, x.domain()[1]]);\n        }\n\n        yAxis.tickFormat(d => formatter.ytick(d, 'm'));\n\n        g.select('.x.axis')\n          .transition()\n          .call(xAxis);\n\n        g.select('.x.label')\n          .text(`${xAxisLabel} [${xUnits}]`)\n          .style('fill', 'grey')\n          .style('shape-rendering', 'crispEdges');\n\n        // Avoid too much lines with overlapping labels in small profiles\n        if (height / 15 < 10) {\n          yAxis.ticks(height / 15);\n        }\n\n        g.select('.y.axis')\n          .transition()\n          .call(yAxis);\n      }\n\n      g.select('.grid-y')\n        .transition()\n        .call(yAxis.tickSize(-width, 0).tickFormat(''))\n        .selectAll('.tick line')\n        .style('stroke', '#ccc')\n        .style('opacity', 0.7);\n\n      g.selectAll('.axis').selectAll('path, line')\n        .style('fill', 'none')\n        .style('stroke', '#000')\n        .style('shape-rendering', 'crispEdges');\n\n      g.select('.grid-y').select('path')\n        .style('stroke', 'none');\n\n      g.selectAll('.grid-hover line')\n        .style('stroke', '#222')\n        .style('opacity', 0.8);\n\n      g.select('.overlay')\n        .on('mouseout', mouseout)\n        .on('mousemove', mousemove);\n\n      function mousemove() {\n        const mouseX = d3.mouse(this)[0];\n        const x0 = x.invert(mouseX);\n\n        profile.highlight(x0);\n      }\n\n      function mouseout() {\n        profile.clearHighlight();\n      }\n    });\n  };\n\n  /**\n   * Remove any highlight.\n   * Fire the outCallback callback.\n   */\n  profile.clearHighlight = function() {\n    g.selectAll('.grid-hover')\n      .style('display', 'none');\n    outCallback.call(null);\n  };\n\n  /**\n   * Highlight the given distance and corresponding elevation on chart.\n   * Fire the hoverCallback callback with corresponding point.\n   * @param {number} distance Distance.\n   */\n  profile.highlight = function(distance) {\n    const data = svg.datum();\n    const i = bisectDistance(data, distance);\n    if (i >= data.length) {\n      return;\n    }\n\n    const point = data[i];\n    const dist = distanceExtractor(point);\n    let elevation;\n    const elevations = [];\n    const elevationsRef = {};\n    let lineName;\n\n    for (lineName in linesConfiguration) {\n      elevation = linesConfiguration[lineName].zExtractor(point);\n      if (Number.isFinite(elevation)) {\n        elevations.push(elevation);\n        elevationsRef[lineName] = elevation;\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'inline')\n          .select('line')\n          .attr('x1', x(0))\n          .attr('y1', y(elevation))\n          .attr('x2', width)\n          .attr('y2', y(elevation));\n      } else {\n        // no data for this line: hide it\n        g.select(`.y.grid-hover.${lineName}`)\n          .style('display', 'none');\n      }\n    }\n\n    const y2 = y(Math.max.apply(null, elevations));\n    g.select('.x.grid-hover')\n      .style('display', 'inline')\n      .select('line')\n      .attr('x1', x(dist))\n      .attr('y1', height)\n      .attr('x2', x(dist))\n      .attr('y2', Number.isFinite(y2) ? y2 : 0);\n\n    const right = dist > xDomain[1] / 2;\n    let xtranslate = x(dist);\n    xtranslate += right ? -10 : 10;\n\n    g.select('.x.grid-hover text')\n      .text(formatter.xhover(dist / xFactor, xUnits))\n      .style('text-anchor', right ? 'end' : 'start')\n      .attr('transform', `translate(${xtranslate},${height - 10})`);\n\n    const yUnits = 'm';\n    // Display altitude on guides only if there is one line.\n    if (numberOfLines === 1) {\n      const text = elevations[0] === null ? 'no value' : formatter.yhover(elevations[0], 'm');\n      g.select('.y.grid-hover text')\n        .text(text)\n        .style('text-anchor', right ? 'end' : 'start')\n        .attr('transform', `translate(${xtranslate},${y(elevations[0]) - 10})`);\n    }\n    hoverCallback.call(null, point, dist / xFactor, xUnits, elevationsRef, yUnits);\n  };\n\n\n  profile.showPois = function(pois) {\n    pois = pois !== undefined ? pois : [];\n    googAsserts.assert(pois.length === 0 || poiExtractor !== undefined);\n\n    const pe = poiExtractor;\n    const g = svg.select('g');\n    const profileData = svg.datum();\n    const ps = g.select('.pois');\n\n    const p = ps.selectAll('.poi').data(pois, (d) => {\n      const i = bisectDistance(profileData, Math.round(pe.dist(d) * 10) / 10, 1);\n      const point = profileData[i];\n      if (point) {\n        let lineName;\n        const elevations = [];\n        for (lineName in linesConfiguration) {\n          elevations.push(linesConfiguration[lineName].zExtractor(point));\n        }\n        const z = Math.max.apply(null, elevations);\n        pe.z(d, z);\n      }\n      return pe.id(d);\n    });\n\n    const poiEnterG = p.enter()\n      .append('g')\n      .attr('class', 'poi');\n\n    poiEnterG.append('text')\n      .attr('x', light ? 0 : 9)\n      .attr('dy', '.35em')\n      .attr('text-anchor', light ? 'middle' : 'start');\n\n    poiEnterG.append('line')\n      .style('shape-rendering', 'crispEdges');\n\n    poiEnterG.style('opacity', 0)\n      .transition()\n      .duration(1000)\n      .delay(100)\n      .style('opacity', 1);\n\n    poiEnterG.selectAll('text')\n      .attr('transform', (d) => {\n        if (light) {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 10})`];\n        } else {\n          return [`translate(${x(pe.dist(d))},${y(pe.z(d)) - 20}) rotate(${poiLabelAngle})`];\n        }\n      })\n      .text(d => pe.sort(d) + (light ? '' : (` - ${pe.title(d)}`)));\n\n    poiEnterG.selectAll('line')\n      .style('stroke', 'grey')\n      .attr('x1', d => x(pe.dist(d)))\n      .attr('y1', d => y(y.domain()[0]))\n      .attr('x2', d => x(pe.dist(d)))\n      .attr('y2', d => y(pe.z(d)));\n\n    // remove unused pois\n    poiEnterG.exit().remove();\n  };\n\n  function clearPois() {\n    profile.showPois([]);\n  }\n\n\n  return profile;\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.profile.elevationComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olObj from 'ol/obj.js';\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoProfileD3Elevation from 'ngeo/profile/d3Elevation.js';\n\nimport {select} from 'd3-selection';\nconst d3 = {\n  select,\n};\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoProfile', [\n  ngeoMiscDebounce.name\n]);\n\n\n/**\n * Provides a directive used to insert an elevation profile chart\n * in the DOM.\n *\n * Example:\n *\n *      <div ngeo-profile=\"ctrl.profileData\"\n *        ngeo-profile-options=\"ctrl.profileOptions\"\n *        ngeo-profile-pois=\"ctrl.profilePois\">\n *      </div>\n *\n * Where \"ctrl.profileOptions\" is of type {@link ngeox.profile.ProfileOptions};\n * \"ctrl.profileData\" and \"ctrl.profilePois\" are arrays which will be\n * processed by {@link ngeox.profile.ElevationExtractor} and\n * {@link ngeox.profile.PoiExtractor}.\n *\n * See our live example: [../examples/profile.html](../examples/profile.html)\n *\n * @htmlAttribute {?Object} ngeo-profile The profile data.\n * @htmlAttribute {ngeox.profile.ProfileOptions} ngeo-profile-options The options.\n * @htmlAttribute {?Array} ngeo-profile-pois The data for POIs.\n * @htmlAttribute {*} ngeo-profile-highlight Any property on the scope which\n * evaluated value may correspond to distance from origin.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce factory.\n * @return {angular.Directive} Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoProfile\n */\nexports.directive_ = function(ngeoDebounce) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const optionsAttr = attrs['ngeoProfileOptions'];\n      googAsserts.assert(optionsAttr !== undefined);\n\n      const selection = d3.select(element[0]);\n      let profile, elevationData, poiData;\n\n      scope.$watchCollection(optionsAttr, (newVal) => {\n\n        const options = /** @type {ngeox.profile.ProfileOptions} */\n                (olObj.assign({}, newVal));\n\n        if (options !== undefined) {\n\n          // proxy the hoverCallback and outCallbackin order to be able to\n          // call $applyAsync\n          //\n          // We're using $applyAsync here because the callback may be\n          // called inside the Angular context. For example, it's the case\n          // when the user hover's the line geometry on the map and the\n          // profileHighlight property is changed.\n          //\n          // For that reason we use $applyAsync instead of $apply here.\n          if (options.hoverCallback !== undefined) {\n            const origHoverCallback = options.hoverCallback;\n            options.hoverCallback = function(...args) {\n              origHoverCallback(...args);\n              scope.$applyAsync();\n            };\n          }\n\n          if (options.outCallback !== undefined) {\n            const origOutCallback = options.outCallback;\n            options.outCallback = function() {\n              origOutCallback();\n              scope.$applyAsync();\n            };\n          }\n\n          profile = ngeoProfileD3Elevation(options);\n          refreshData();\n        }\n      });\n\n      scope.$watch(attrs['ngeoProfile'], (newVal, oldVal) => {\n        elevationData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfilePois'], (newVal, oldVal) => {\n        poiData = newVal;\n        refreshData();\n      });\n\n      scope.$watch(attrs['ngeoProfileHighlight'],\n        (newVal, oldVal) => {\n          if (newVal === undefined) {\n            return;\n          }\n          if (newVal > 0) {\n            profile.highlight(newVal);\n          } else {\n            profile.clearHighlight();\n          }\n        });\n\n      olEvents.listen(window, 'resize', ngeoDebounce(refreshData, 50, true));\n\n      function refreshData() {\n        if (profile !== undefined) {\n          selection.datum(elevationData).call(profile);\n          if (elevationData !== undefined) {\n            profile.showPois(poiData);\n          }\n        }\n      }\n    }\n  };\n};\n\nexports.directive('ngeoProfile', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olOverlay from 'ol/Overlay.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\n/** @suppress {extraRequire} */\nimport ngeoDownloadCsv from 'ngeo/download/Csv.js';\n\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\n\n/** @suppress {extraRequire} */\nimport ngeoProfileElevationComponent from 'ngeo/profile/elevationComponent.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfile', [\n  ngeoDownloadCsv.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoProfileElevationComponent.name,\n]);\n\n\nexports.value('gmfProfileTemplateUrl',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const templateUrl = $attrs['gmfProfileTemplateurl'];\n    return templateUrl !== undefined ? templateUrl : 'gmf/profile';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/profile', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfProfileTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfProfileTemplateUrl($element, $attrs, gmfProfileTemplateUrl) {\n  return gmfProfileTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a profile panel. This profile use the given\n * LineString geometry to request the c2cgeoportal profile.json service. The\n * raster used in the request are the keys of the 'linesconfiguration' object.\n * The 'map' attribute is optional and are only used to display on the map the\n * information that concern the hovered point (in the profile and on the map)\n * of the line.\n * This profile relies on the ngeo.profile (d3) and ngeo.ProfileComponent.\n *\n * Example:\n *\n *      <gmf-profile\n *        gmf-profile-active=\"ctrl.profileActive\"\n *        gmf-profile-line=\"ctrl.profileLine\"\n *        gmf-profile-map=\"::ctrl.map\"\n *        gmf-profile-linesconfiguration=\"::ctrl.profileLinesconfiguration\">\n *      </gmf-profile>\n *\n *\n * @htmlAttribute {boolean} gmf-profile-active Active the component.\n * @htmlAttribute {ol.geom.LineString} gmf-profile-line The linestring geometry\n *     to use to draw the profile.\n * @htmlAttribute {ol.Map?} gmf-profile-map An optional map.\n * @htmlAttribute {Object.<string, gmfx.ProfileLineConfiguration>}\n *     gmf-profile-linesconfiguration The configuration of the lines. Each keys\n *     will be used to request elevation layers.\n * @htmlAttribute {ol.style.Style?} gmf-profile-hoverpointstyle Optional style\n *     for the 'on Hover' point on the line.\n * @htmlAttribute {number?} gmf-profile-numberofpoints Optional maximum limit of\n *     points to request. Default to 100.\n * @htmlAttribute {Object.<string, *>?} gmf-profile-options Optional options\n *     object like {@link ngeox.profile.ProfileOptions} but without any\n *     mandatory value. Will be passed to the ngeo profile component. Providing\n *     'linesConfiguration', 'distanceExtractor', hoverCallback, outCallback\n *     or i18n will override native gmf profile values.\n *\n * @ngdoc component\n * @ngname gmfProfile\n */\nexports.component_ = {\n  controller: 'GmfProfileController as ctrl',\n  bindings: {\n    'active': '=gmfProfileActive',\n    'line': '=gmfProfileLine',\n    'getMapFn': '&?gmfProfileMap',\n    'getLinesConfigurationFn': '&gmfProfileLinesconfiguration',\n    'getHoverPointStyleFn': '&?gmfProfileHoverpointstyle',\n    'getNbPointsFn': '&?gmfProfileNumberofpoints',\n    'getOptionsFn': '&?gmfProfileOptions'\n  },\n  templateUrl: gmfProfileTemplateUrl\n};\n\nexports.component('gmfProfile', exports.component_);\n\n\n/**\n * @param {angular.Scope} $scope Angular scope.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.JQLite} $element Element.\n * @param {angular.$filter} $filter Angular filter\n * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @param {string} gmfProfileJsonUrl URL of GMF service JSON profile.\n * @param {ngeo.download.Csv} ngeoCsvDownload CSV Download service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname GmfProfileController\n */\nexports.Controller_ = function($scope, $http, $element, $filter,\n  gettextCatalog, ngeoFeatureOverlayMgr, gmfProfileJsonUrl,\n  ngeoCsvDownload) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.$element_ = $element;\n\n  /**\n   * @type {angular.$filter}\n   * @export\n   */\n  this.$filter_ = $filter;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {ngeo.map.FeatureOverlay}\n   * @private\n   */\n  this.pointHoverOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.gmfProfileJsonUrl_ = gmfProfileJsonUrl;\n\n  /**\n   * @type {ngeo.download.Csv}\n   * @private\n   */\n  this.ngeoCsvDownload_ = ngeoCsvDownload;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?Object<string, !gmfx.ProfileLineConfiguration>}\n   * @private\n   */\n  this.linesConfiguration_ = null;\n\n  /**\n   * @type {!Array.<string>}\n   * @private\n   */\n  this.layersNames_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.nbPoints_ = 100;\n\n  /**\n   * @type {ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {Array.<Object>}\n   * @export\n   */\n  this.profileData = [];\n\n  /**\n   * @type {gmfx.ProfileHoverPointInformations}\n   * @export\n   */\n  this.currentPoint = {\n    coordinate: undefined,\n    distance: undefined,\n    elevations: {},\n    xUnits: undefined,\n    yUnits: undefined\n  };\n\n  /**\n   * Distance to highlight on the profile. (Property used in ngeo.Profile.)\n   * @type {number}\n   * @export\n   */\n  this.profileHighlight = -1;\n\n  /**\n   * Overlay to show the measurement.\n   * @type {ol.Overlay}\n   * @private\n   */\n  this.measureTooltip_ = null;\n\n  /**\n   * The measure tooltip element.\n   * @type {Element}\n   * @private\n   */\n  this.measureTooltipElement_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @private\n   */\n  this.snappedPoint_ = new olFeature();\n  this.pointHoverOverlay_.addFeature(this.snappedPoint_);\n\n  /**\n   * @type {ngeox.profile.I18n}\n   * @private\n   */\n  this.profileLabels_ = {\n    xAxis: gettextCatalog.getString('Distance'),\n    yAxis: gettextCatalog.getString('Elevation')\n  };\n\n\n  /**\n   * @type {?ngeox.profile.ProfileOptions}\n   * @export\n   */\n  this.profileOptions = null;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active = false;\n\n  /**\n   * @type {ol.EventsKey}\n   * @private\n   */\n  this.pointerMoveKey_;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.isErrored = false;\n\n\n  // Watch the active value to activate/deactive events listening.\n  $scope.$watch(\n    () => this.active,\n    (newValue, oldValue) => {\n      if (oldValue !== newValue) {\n        this.updateEventsListening_();\n      }\n    });\n\n  // Watch the line to update the profileData (data for the chart).\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (oldLine !== newLine) {\n        this.update_();\n      }\n    });\n\n  this.updateEventsListening_();\n};\n\n\n/**\n * Init the controller\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.map_ = this['getMapFn'] ? this['getMapFn']() : null;\n  this.nbPoints_ = this['getNbPointsFn'] ? this['getNbPointsFn']() : 100;\n\n  let hoverPointStyle;\n  const hoverPointStyleFn = this['getHoverPointStyleFn'];\n  if (hoverPointStyleFn) {\n    hoverPointStyle = hoverPointStyleFn();\n    googAsserts.assertInstanceof(hoverPointStyle, olStyleStyle);\n  } else {\n    hoverPointStyle = new olStyleStyle({\n      image: new olStyleCircle({\n        fill: new olStyleFill({color: '#ffffff'}),\n        radius: 3\n      })\n    });\n  }\n  this.pointHoverOverlay_.setStyle(hoverPointStyle);\n\n  const linesConfiguration = this['getLinesConfigurationFn']();\n  googAsserts.assertInstanceof(linesConfiguration, Object);\n\n  this.linesConfiguration_ = linesConfiguration;\n\n  for (const name in this.linesConfiguration_) {\n    // Keep an array of all layer names.\n    this.layersNames_.push(name);\n    // Add generic zExtractor to lineConfiguration object that doesn't have one.\n    const lineConfig = this.linesConfiguration_[name];\n    if (!lineConfig.zExtractor) {\n      this.linesConfiguration_[name].zExtractor = this.getZFactory_(name);\n    }\n  }\n\n  this.profileOptions = /** @type {ngeox.profile.ProfileOptions} */ ({\n    linesConfiguration: this.linesConfiguration_,\n    distanceExtractor: this.getDist_,\n    hoverCallback: this.hoverCallback_.bind(this),\n    outCallback: this.outCallback_.bind(this),\n    i18n: this.profileLabels_\n  });\n\n  const optionsFn = this['getOptionsFn'];\n  if (optionsFn) {\n    const options = optionsFn();\n    googAsserts.assertObject(options);\n    olObj.assign(this.profileOptions, options);\n  }\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.update_ = function() {\n  this.isErrored = false;\n  if (this.line) {\n    this.getJsonProfile_();\n  } else {\n    this.profileData = [];\n  }\n  this.active = !!this.line;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.updateEventsListening_ = function() {\n  if (this.active && this.map_ !== null) {\n    this.pointerMoveKey_ = olEvents.listen(this.map_, 'pointermove',\n      this.onPointerMove_.bind(this));\n  } else {\n    olEvents.unlistenByKey(this.pointerMoveKey_);\n  }\n};\n\n\n/**\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.onPointerMove_ = function(e) {\n  if (e.dragging || !this.line) {\n    return;\n  }\n  const coordinate = this.map_.getEventCoordinate(e.originalEvent);\n  const closestPoint = this.line.getClosestPoint(coordinate);\n  // compute distance to line in pixels\n  const eventToLine = new olGeomLineString([closestPoint, coordinate]);\n  const pixelDist = eventToLine.getLength() / this.map_.getView().getResolution();\n\n  if (pixelDist < 16) {\n    this.profileHighlight = this.getDistanceOnALine_(closestPoint, this.line);\n  } else {\n    this.profileHighlight = -1;\n  }\n  this.$scope_.$apply();\n};\n\n\n/**\n * Return the distance between the beginning of the line and the given point.\n * The point must be on the line. If not, this function will return the total\n * length of the line.\n * @param {ol.Coordinate} pointOnLine A point on the given line.\n * @param {ol.geom.LineString} line A line.\n * @return {number} A distance.\n * @private\n */\nexports.Controller_.prototype.getDistanceOnALine_ = function(pointOnLine,\n  line) {\n  let segment;\n  let distOnLine = 0;\n  const fakeExtent = [\n    pointOnLine[0] - 0.5,\n    pointOnLine[1] - 0.5,\n    pointOnLine[0] + 0.5,\n    pointOnLine[1] + 0.5\n  ];\n  this.line.forEachSegment((firstPoint, lastPoint) => {\n    segment = new olGeomLineString([firstPoint, lastPoint]);\n    // Is the pointOnLine on this swegement ?\n    if (segment.intersectsExtent(fakeExtent)) {\n      // If the closestPoint is on the line, add the distance between the first\n      // point of this segment and the pointOnLine.\n      segment.setCoordinates([firstPoint, pointOnLine]);\n      return distOnLine += segment.getLength(); // Assign value and break;\n    } else {\n      // Do the sum of the length of each eventual previous segment.\n      distOnLine += segment.getLength();\n    }\n  });\n  return distOnLine;\n};\n\n\n/**\n * @param {Object} point Point.\n * @param {number} dist distance on the line.\n * @param {string} xUnits X units label.\n * @param {Object.<string, number>} elevationsRef Elevations references.\n *  @param {string} yUnits Y units label.\n * @private\n */\nexports.Controller_.prototype.hoverCallback_ = function(point, dist, xUnits, elevationsRef, yUnits) {\n  // Update information point.\n  const coordinate = [point.x, point.y];\n\n  this.currentPoint.elevations = elevationsRef;\n  this.currentPoint.distance = dist;\n  this.currentPoint.xUnits = xUnits;\n  this.currentPoint.yUnits = yUnits;\n  this.currentPoint.coordinate = coordinate;\n\n  // Update hover.\n  const geom = new olGeomPoint(coordinate);\n  this.createMeasureTooltip_();\n  this.measureTooltipElement_.innerHTML = this.getTooltipHTML_();\n  this.measureTooltip_.setPosition(coordinate);\n  this.snappedPoint_.setGeometry(geom);\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.outCallback_ = function() {\n  // Reset information point.\n  this.currentPoint.coordinate = undefined;\n  this.currentPoint.distance = undefined;\n  this.currentPoint.elevations = {};\n  this.currentPoint.xUnits = undefined;\n  this.currentPoint.yUnits = undefined;\n\n  // Reset hover.\n  this.removeMeasureTooltip_();\n  this.snappedPoint_.setGeometry(null);\n};\n\n\n/**\n * @return {string} A text formatted to a tooltip.\n * @private\n */\nexports.Controller_.prototype.getTooltipHTML_ = function() {\n  const gettextCatalog = this.gettextCatalog_;\n  const separator = '&nbsp;: ';\n  let elevationName, translatedElevationName;\n  const innerHTML = [];\n  const number = this.$filter_('number');\n  const DistDecimal = this.currentPoint.xUnits === 'm' ? 0 : 2;\n  const value = number(this.currentPoint.distance, DistDecimal);\n  innerHTML.push(`${this.profileLabels_.xAxis} ${separator} ${value}&nbsp;${this.currentPoint.xUnits}`);\n  for (elevationName in this.currentPoint.elevations) {\n    translatedElevationName = gettextCatalog.getString(elevationName);\n    const int_value = this.currentPoint.elevations[elevationName];\n    const value = int_value === null ?\n      gettextCatalog.getString('no value') :\n      `${number(int_value, 0)}&nbsp;${this.currentPoint.yUnits}`;\n    innerHTML.push(`${translatedElevationName} ${separator} ${value}`);\n  }\n  return innerHTML.join('</br>');\n};\n\n\n/**\n * Creates a new 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.createMeasureTooltip_ = function() {\n  this.removeMeasureTooltip_();\n  this.measureTooltipElement_ = document.createElement('div');\n  this.measureTooltipElement_.className += 'tooltip ngeo-tooltip-measure';\n  this.measureTooltip_ = new olOverlay({\n    element: this.measureTooltipElement_,\n    offset: [0, -15],\n    positioning: 'bottom-center'\n  });\n  this.map_.addOverlay(this.measureTooltip_);\n};\n\n\n/**\n * Destroy the 'hover' tooltip\n * @private\n */\nexports.Controller_.prototype.removeMeasureTooltip_ = function() {\n  if (this.measureTooltipElement_ !== null) {\n    this.measureTooltipElement_.parentNode.removeChild(this.measureTooltipElement_);\n    this.measureTooltipElement_ = null;\n    this.map_.removeOverlay(this.measureTooltip_);\n  }\n};\n\n\n/**\n * Return the styler value of a gmfx.ProfileLineConfiguration.\n * @param {string} layerName name of the elevation layer.\n * @return {object} The object representation of the style.\n * @export\n */\nexports.Controller_.prototype.getStyle = function(layerName) {\n  const lineConfiguration = this.linesConfiguration_[layerName];\n  if (!lineConfiguration) {\n    return {};\n  }\n  return {\n    'color': lineConfiguration.color || '#F00'\n  };\n};\n\n\n/**\n * Return a copy of the existing layer names.\n * @return {Array.<string>} The names of layers.\n * @export\n */\nexports.Controller_.prototype.getLayersNames = function() {\n  return this.layersNames_.slice(0);\n};\n\n\n/**\n * @param {string} layerName name of the elevation layer.\n * @return {function(Object):number} Z extractor function.\n * @private\n */\nexports.Controller_.prototype.getZFactory_ = function(layerName) {\n  /**\n   * Generic GMF extractor for the 'given' value in 'values' in profileData.\n   * @param {Object} item The item.\n   * @return {number} The elevation.\n   * @private\n   */\n  const getZFn = function(item) {\n    if ('values' in item && layerName in item['values'] && item['values'][layerName]) {\n      return parseFloat(item['values'][layerName]);\n    }\n    return null;\n  };\n  return getZFn;\n};\n\n\n/**\n * Extractor for the 'dist' value in profileData.\n * @param {Object} item The item.\n * @return {number} The distance.\n * @private\n */\nexports.Controller_.prototype.getDist_ = function(item) {\n  if ('dist' in item) {\n    return item['dist'];\n  }\n  return 0;\n};\n\n\n/**\n * Request the profile.\n * @private\n */\nexports.Controller_.prototype.getJsonProfile_ = function() {\n  const geom = {\n    'type': 'LineString',\n    'coordinates': this.line.getCoordinates()\n  };\n\n  const params = {\n    'layers': this.layersNames_.join(','),\n    'geom': JSON.stringify(geom),\n    'nbPoints': this.nbPoints_\n  };\n\n  /** @type {Function} */ (this.$http_)({\n    url: this.gmfProfileJsonUrl_,\n    method: 'POST',\n    params: params,\n    paramSerializer: '$httpParamSerializerJQLike',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n  }).then(\n    this.getProfileDataSuccess_.bind(this),\n    this.getProfileDataError_.bind(this)\n  );\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataSuccess_ = function(resp) {\n  const profileData = resp.data['profile'];\n  if (profileData instanceof Array) {\n    this.profileData = profileData;\n  }\n};\n\n\n/**\n * @param {!angular.$http.Response} resp Response.\n * @private\n */\nexports.Controller_.prototype.getProfileDataError_ = function(resp) {\n  this.isErrored = true;\n  console.error('Can not get JSON profile.');\n};\n\n\n/**\n * Request the csv profile with the current profile data.\n * @export\n */\nexports.Controller_.prototype.downloadCsv = function() {\n  if (this.profileData.length === 0) {\n    return;\n  }\n\n  /** @type {Array.<ngeox.GridColumnDef>} */\n  const headers = [];\n  let hasDistance = false;\n  const firstPoint = this.profileData[0];\n  if ('dist' in firstPoint) {\n    headers.push({name: 'distance'});\n    hasDistance = true;\n  }\n  const layers = [];\n  for (const layer in firstPoint['values']) {\n    headers.push({'name': layer});\n    layers.push(layer);\n  }\n  headers.push({name: 'x'});\n  headers.push({name: 'y'});\n\n  const rows = this.profileData.map((point) => {\n    const row = {};\n    if (hasDistance) {\n      row['distance'] = point['dist'];\n    }\n\n    layers.forEach((layer) => {\n      row[layer] = point['values'][layer];\n    });\n\n    row['x'] = point['x'];\n    row['y'] = point['y'];\n\n    return row;\n  });\n\n  this.ngeoCsvDownload_.startDownload(rows, headers, 'profile.csv');\n};\n\n\nexports.controller('GmfProfileController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.drawLineComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport olCollection from 'ol/Collection.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olMap from 'ol/Map.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscDecorate from 'ngeo/misc/decorate.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfDrawProfileLine', [\n  ngeoMapFeatureOverlayMgr.module.name,\n]);\n\n\n/**\n * Simple directive that can be put on any element. The directive listen on\n * clicks events to allow/disallow to draw one line (and only one) on the\n * map. Typically used to draw the line that will serve the gmf.Profile.\n *\n * Example:\n *\n *      <gmf-drawprofileline\n *        gmf-drawprofileline-active=\"mainCtrl.drawProfileActive\"\n *        gmf-drawprofileline-map=\"mainCtrl.map\"\n *        gmf-drawprofileline-line=\"mainCtrl.line\"\n *      </gmf-drawprofileline>\n *\n *\n * @htmlAttribute {ol.Map} gmf-drawprofileline-map The map.\n * @htmlAttribute {ol.geom.LineString} gmf-drawprofileline-line The variable to\n *     connect with the drawed line.\n * @htmlAttribute {boolean=} gmf-drawprofileline-active Active the component.\n * @htmlAttribute {ol.style.Style=} gmf-drawprofileline-style Optional style\n *     for the drawed line.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfDrawprofileline\n */\nexports.directive_ = function() {\n  return {\n    scope: true,\n    controller: 'GmfDrawprofilelineController as ctrl',\n    restrict: 'A',\n    bindToController: {\n      'getMapFn': '&gmfDrawprofilelineMap',\n      'line': '=gmfDrawprofilelineLine',\n      'active': '=gmfDrawprofilelineActive',\n      'getStyleFn': '&?gmfDrawprofilelineStyle'\n    }\n  };\n};\n\n\nexports.directive('gmfDrawprofileline',\n  exports.directive_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Feature overlay\n *     manager.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfDrawprofilelineController\n */\nexports.Controller_ = function($scope, $element, $timeout,\n  ngeoFeatureOverlayMgr) {\n\n  /**\n   * @type {?ol.geom.LineString}\n   * @export\n   */\n  this.line;\n\n  /**\n   * @type {?ol.Map}\n   * @private\n   */\n  this.map_ = null;\n\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {!ol.Collection}\n   * @private\n   */\n  this.features_ = new olCollection();\n\n  const overlay = ngeoFeatureOverlayMgr.getFeatureOverlay();\n  overlay.setFeatures(this.features_);\n\n  let style;\n  const styleFn = this['getStyleFn'];\n  if (styleFn) {\n    style = styleFn();\n    googAsserts.assertInstanceof(style, olStyleStyle);\n  } else {\n    style = new olStyleStyle({\n      stroke: new olStyleStroke({\n        color: '#ffcc33',\n        width: 2\n      })\n    });\n  }\n  overlay.setStyle(style);\n\n  /**\n   * @type {!ol.interaction.Draw}\n   * @export\n   */\n  this.interaction = new olInteractionDraw({\n    type: /** @type {ol.geom.GeometryType} */ ('LineString'),\n    features: this.features_\n  });\n\n  ngeoMiscDecorate.interaction(this.interaction);\n\n  // Clear the line as soon as the interaction is activated.\n  this.interaction.on('change:active', () => {\n    if (this.interaction.getActive()) {\n      this.clear_();\n    }\n  });\n\n  // Update the profile with the new geometry.\n  this.interaction.on('drawend', (event) => {\n    this.line = event.feature.getGeometry();\n    // using timeout to prevent double click to zoom the map\n    $timeout(() => {\n      this.interaction.setActive(false);\n    }, 0);\n  });\n\n  // Line may be removed from an other component\n  // for example closing the chart panel\n  $scope.$watch(\n    () => this.line,\n    (newLine, oldLine) => {\n      if (newLine === null) {\n        this.clear_();\n      }\n    });\n\n  $scope.$watch(\n    () => this.active,\n    (newValue) => {\n      if (newValue === false) {\n        this.clear_();\n      }\n      // Will activate the interaction automatically the first time\n      this.interaction.setActive(this.active);\n    }\n  );\n};\n\n\n/**\n * Initialise the controller.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const map = this['getMapFn']();\n  googAsserts.assertInstanceof(map, olMap);\n  this.map_ = map;\n  this.map_.addInteraction(this.interaction);\n};\n\n\n/**\n * Clear the overlay and profile line.\n * @private\n */\nexports.Controller_.prototype.clear_ = function() {\n  this.features_.clear();\n  this.line = null;\n};\n\n\nexports.controller('GmfDrawprofilelineController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module gmf.profile.module\n */\nimport gmfProfileComponent from 'gmf/profile/component.js';\nimport gmfProfileDrawLineComponent from 'gmf/profile/drawLineComponent.js';\n\nimport './profile.less';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfProfileModule', [\n  gmfProfileComponent.name,\n  gmfProfileDrawLineComponent.name,\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.query.bboxQueryComponent\n */\n/** @suppress {extraRequire} */\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\n\nimport olInteractionDragBox from 'ol/interaction/DragBox.js';\nimport * as olEventsCondition from 'ol/events/condition.js';\n\nconst exports = angular.module('ngeoBboxQuery', [\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\n/**\n * Provides a \"bbox query\" directive.\n *\n * This directive is responsible of binding a map and the ngeo query service\n * together. While active, drawing a bbox while CTRL or the 'meta' key is pressed\n * issues a request to the query service.\n *\n * This directive doesn't require to be rendered in a visible DOM element, but\n * it could be used with a ngeo-btn to manage the activation of the directive.\n * See below an example without any use of UI:\n *\n * Example:\n *\n *      <span\n *        ngeo-bbox-query=\"\"\n *        ngeo-bbox-query-map=\"::ctrl.map\"\n *        ngeo-bbox-query-limit=\"50\"\n *        ngeo-bbox-query-active=\"ctrl.queryActive\">\n *        ngeo-bbox-query-autoclear=\"ctrl.queryAutoClear\">\n *      </span>\n *\n * See the live example: [../examples/bboxquery.html](../examples/bboxquery.html)\n *\n * @param {ngeo.query.MapQuerent} ngeoMapQuerent The ngeo map querent service.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoBboxQuery\n */\nexports.directive_ = function(ngeoMapQuerent) {\n  return {\n    restrict: 'A',\n    scope: false,\n    link: (scope, elem, attrs) => {\n      /**\n       * @type {ol.Map}\n       */\n      const map = scope.$eval(attrs['ngeoBboxQueryMap']);\n\n      const interaction = new olInteractionDragBox({\n        condition: olEventsCondition.platformModifierKeyOnly\n      });\n\n      /**\n       * Called when a bbox is drawn while this controller is active. Issue\n       * a request to the query service using the extent that was drawn.\n       * @param {ol.interaction.DragBox.Event} evt Event.\n       */\n      const handleBoxEnd = function(evt) {\n        const extent = interaction.getGeometry().getExtent();\n        ngeoMapQuerent.issue({\n          limit: scope.$eval(attrs['ngeoBboxQueryLimit']),\n          extent: extent,\n          map: map\n        });\n      };\n      interaction.on('boxend', handleBoxEnd);\n\n      // watch 'active' property -> activate/deactivate accordingly\n      scope.$watch(attrs['ngeoBboxQueryActive'],\n        (newVal, oldVal) => {\n          if (newVal) {\n            // activate\n            map.addInteraction(interaction);\n          } else {\n            // deactivate\n            map.removeInteraction(interaction);\n            if (scope.$eval(attrs['ngeoBboxQueryAutoclear']) !== false) {\n              ngeoMapQuerent.clear();\n            }\n          }\n        }\n      );\n    }\n  };\n};\n\nexports.directive('ngeoBboxQuery', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module gmf.raster.component\n */\nimport gmfRasterRasterService from 'gmf/raster/RasterService.js';\nimport googAsserts from 'goog/asserts.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\nimport * as olEvents from 'ol/events.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfRasterComponent', [\n  gmfRasterRasterService.module.name,\n  ngeoMiscDebounce.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/raster/widgetComponent', require('./widgetComponent.html'));\n});\n\n\nexports.value('gmfElevationwidgetTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['gmfElevationwidgetTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/raster/widgetComponent';\n  });\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} gmfElevationwidgetTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfElevationwidgetTemplateUrl($attrs, gmfElevationwidgetTemplateUrl) {\n  return gmfElevationwidgetTemplateUrl($attrs);\n}\n\n\n/**\n * Provide a directive that set a value each 500ms with the elevation under the\n * mouse cursor position on the map. The value must come from the elevation\n * service of a c2cgeoportal server. The server's URL must be defined as\n * config value of the application.\n *\n * Example:\n *\n *      <span gmf-elevation\n *            gmf-elevation-active=\"elevationActive\"\n *            gmf-elevation-elevation=\"elevationValue\"\n *            gmf-elevation-layer=\"mainCtrl.elevationLayer\"\n *            gmf-elevation-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *            gmf-elevation-map=\"::mainCtrl.map\">\n *            {{elevationValue}}\n *      </span>\n *\n *  For value in meter `elevationLayersConfig` can be an empty object, complex example:\n *\n *      elevationLayersConfig = {\n *          '<layer>': {\n *              'filter': 'ngeoUnitPrefix',\n *              'args': ['m²', 'square'],\n *              'postfix': '<notice>',\n *              'separator': ''\n *          }\n *      };\n *\n *\n * @htmlAttribute {boolean} gmf-elevation-active A boolean to set active or\n *     deactive the component.\n * @htmlAttribute {number} gmf-elevation-elevation The value to set with the\n *     elevation value.\n * @htmlAttribute {string} gmf-elevation-layer Elevation layer to use.\n * @htmlAttribute {Object.<string, gmf.raster.component.LayerConfig>} gmf-elevation-layersconfig Elevation layer configurations.\n * @htmlAttribute {ol.Map} gmf-elevation-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname gmfElevation\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: 'GmfElevationController as ctrl',\n    bindToController: true,\n    scope: {\n      'active': '<gmfElevationActive',\n      'elevation': '=gmfElevationElevation',\n      'layersconfig': '=gmfElevationLayersconfig',\n      'loading': '=?gmfElevationLoading',\n      'layer': '<gmfElevationLayer',\n      'map': '=gmfElevationMap'\n    },\n    link: (scope, element, attr) => {\n      const ctrl = scope['ctrl'];\n\n      // Watch active or not.\n      scope.$watch(() => ctrl.active, function(active) {\n        this.toggleActive_(active);\n      }.bind(ctrl));\n\n      // Watch current layer.\n      scope.$watch(() => ctrl.layer, function(layer) {\n        this.layer = layer;\n        this.elevation = null;\n      }.bind(ctrl));\n    }\n  };\n};\n\n\nexports.directive('gmfElevation', exports.component_);\n\n/**\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$filter} $filter Angular filter.\n * @param {!ngeox.miscDebounce} ngeoDebounce Ngeo debounce factory\n * @param {!gmf.raster.RasterService} gmfRaster Gmf Raster service\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname gmfElevationController\n */\nexports.Controller_ = function($scope, $filter, ngeoDebounce, gmfRaster, gettextCatalog) {\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * @type {gmf.raster.RasterService}\n   * @private\n   */\n  this.gmfRaster_ = gmfRaster;\n\n  /**\n   * @type {angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog = gettextCatalog;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersConfig;\n\n  /**\n   * @type {boolean}\n   */\n  this.active;\n\n  /**\n   * @type {!string|undefined}\n   * @export\n   */\n  this.elevation;\n\n  /**\n   * @type {string}\n   */\n  this.layer;\n\n  /**\n   * @type {ol.Map}\n   */\n  this.map;\n\n  /**\n   * @type {Array.<ol.EventsKey>}\n   * @private\n   */\n  this.listenerKeys_ = [];\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.inViewport_ = false;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.loading = false;\n};\n\n/**\n * Active or deactive the request of the raster each 500 ms on pointermove.\n * @param {boolean} active true to make requests.\n * @private\n */\nexports.Controller_.prototype.toggleActive_ = function(active) {\n  this.elevation = undefined;\n  if (active) {\n    googAsserts.assert(this.listenerKeys_.length === 0);\n\n    // Moving the mouse clears previously displayed elevation\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      function(e) {\n        this.scope_.$apply(() => {\n          this.inViewport_ = true;\n          this.elevation = undefined;\n          this.loading = false;\n        });\n      }, this));\n\n    // Launch the elevation service request when the user stops moving the\n    // mouse for less short delay\n    this.listenerKeys_.push(olEvents.listen(this.map, 'pointermove',\n      this.ngeoDebounce_(this.pointerStop_.bind(this), 500, true)\n    ));\n\n    this.listenerKeys_.push(olEvents.listen(this.map.getViewport(), 'mouseout', () => {\n      this.scope_.$apply(() => {\n        this.elevation = undefined;\n        this.inViewport_ = false;\n        this.loading = false;\n      });\n    }));\n  } else {\n    this.elevation = undefined;\n    this.listenerKeys_.forEach(olEvents.unlistenByKey);\n    this.listenerKeys_.length = 0;\n  }\n};\n\n\n/**\n * Request data from a raster from a MapBrowserPointerEvent's coordinates.\n * Called when the user stopped moving the mouse for 500ms.\n * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n * @private\n */\nexports.Controller_.prototype.pointerStop_ = function(e) {\n  if (this.inViewport_) {\n    this.loading = true;\n    const params = {\n      'layers': this.layer\n    };\n    this.gmfRaster_.getRaster(e.coordinate, params).then(\n      this.getRasterSuccess_.bind(this),\n      this.getRasterError_.bind(this)\n    );\n  }\n};\n\n\n/**\n * @param {Object.<string, number>} resp Response of the get Raster service.\n * @private\n */\nexports.Controller_.prototype.getRasterSuccess_ = function(resp) {\n  googAsserts.assert(this.layer, 'A layer should be selected');\n  const value = resp[this.layer];\n  if (value !== undefined && value !== null) {\n    const options = this.layersconfig[this.layer] || {};\n    const filter = options.filter || 'number';\n    const custom_args = options.args || [];\n    const postfix = options.hasOwnProperty('postfix') ? options.postfix : 'm';\n    const separator = postfix.length > 0 ?\n      (options.hasOwnProperty('separator') ? options.separator : '\\u00a0') : '';\n    const args = Array.prototype.concat([value], custom_args);\n    this.elevation = this.filter_(filter)(...args) + separator + postfix;\n  } else {\n    const gettextCatalog = this.gettextCatalog;\n    this.elevation = gettextCatalog.getString('No value');\n  }\n  this.loading = false;\n};\n\n\n/**\n * @private\n */\nexports.Controller_.prototype.getRasterError_ = function() {\n  console.error('Error on getting the raster.');\n  this.elevation = undefined;\n  this.loading = false;\n};\n\n\nexports.controller('GmfElevationController', exports.Controller_);\n\n\n/**\n * Provides a component which encapsulates the elevation component (see above)\n * in a button with dropdown menu to be included in a application directly.\n *\n * Example:\n *  <gmf-elevationwidget\n *      gmf-elevationwidget-map=\"::mainCtrl.map\"\n *      gmf-elevationwidget-layers=\"::mainCtrl.elevationLayers\"\n *      gmf-elevationwidget-layersconfig=\"::mainCtrl.elevationLayersConfig\"\n *      gmf-elevationwidget-active=\"mainCtrl.showInfobar\">\n *  </gmf-elevationwidget>\n *\n * @htmlAttribute {ol.Map} gmf-elevationwidget-map The map.\n * @htmlAttribute {Array.<string>} gmf-elevationwidget-layers The list of\n *     layers.\n * @htmlAttribute {boolean} gmf-elevationwidget-active Whether to activate the\n *     elevation component.\n *\n * @ngdoc component\n * @ngname gmfElevationwidget\n */\nexports.widgetComponent_ = {\n  controller: 'gmfElevationwidgetController as ctrl',\n  bindings: {\n    'map': '<gmfElevationwidgetMap',\n    'layers': '<gmfElevationwidgetLayers',\n    'layersconfig': '=gmfElevationwidgetLayersconfig',\n    'active': '<gmfElevationwidgetActive'\n  },\n  templateUrl: gmfElevationwidgetTemplateUrl\n};\nexports.component('gmfElevationwidget', exports.widgetComponent_);\n\n\n/**\n * @constructor\n * @private\n * @ngdoc controller\n */\nexports.WidgetController_ = function() {\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!Array.<string>}\n   * @export\n   */\n  this.layers;\n\n  /**\n   * @type {!Object.<string, gmf.raster.component.LayerConfig>}\n   * @private\n   */\n  this.layersconfig;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.selectedElevationLayer;\n};\n\n\nexports.WidgetController_.prototype.$onInit = function() {\n  this.selectedElevationLayer = this.layers[0];\n};\n\n\nexports.controller('gmfElevationwidgetController', exports.WidgetController_);\n\n/**\n * @typedef {{\n *     filter: (string|undefined),\n *     args: (Array.<string>|undefined),\n *     postfix: (string|undefined),\n *     separator: (string|undefined)\n * }}\n */\nexports.LayerConfig;\n\nexport default exports;\n","/**\n * @module gmf.print.component\n */\nimport gmfBase from 'gmf/index.js';\n\n/** @suppress {extraRequire} */\nimport gmfAuthenticationService from 'gmf/authentication/Service.js';\n\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport ngeoPrintService from 'ngeo/print/Service.js';\nimport ngeoPrintUtils from 'ngeo/print/Utils.js';\nimport ngeoQueryMapQuerent from 'ngeo/query/MapQuerent.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport olLayerImage from 'ol/layer/Image.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerGroup from 'ol/layer/Group.js';\nimport olMap from 'ol/Map.js';\nimport * as olMath from 'ol/math.js';\n\nimport 'bootstrap/js/dropdown.js';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfPrintComponent', [\n  gmfAuthenticationService.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMiscFeatureHelper.module.name,\n  ngeoPrintService.module.name,\n  ngeoPrintUtils.module.name,\n  ngeoQueryMapQuerent.module.name,\n]);\n\n\nexports.value('gmfPrintTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['gmfPrintTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'gmf/print';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/print', require('./component.html'));\n});\n\n\n/**\n * @enum {string}\n * @export\n */\nexports.PrintStateEnum = {\n\n  /**\n   * @type {string}\n   * @export\n   */\n  NOT_IN_USE: 'notInUse',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  PRINTING: 'printing',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_REPORT: 'errorOnReport',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  CAPABILITIES_NOT_LOADED: 'capabilitiesNotLoaded',\n\n  /**\n   * @type {string}\n   * @export\n   */\n  ERROR_ON_GETCAPABILITIES: 'errorOnGetCapabilities'\n};\n\n\nexports.value('gmfPrintState', {\n  'state': exports.PrintStateEnum.CAPABILITIES_NOT_LOADED\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfPrintTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfPrintTemplateUrl($element, $attrs, gmfPrintTemplateUrl) {\n  return gmfPrintTemplateUrl($element, $attrs);\n}\n\n\n/**\n * Provide a component that display a print panel. This panel is populated with\n * a form corresponding to the capabilities delivered by a GMF print v3 server.\n * If you want to use another template for your print panel, you can see the\n * available layout information in the 'gmfx.PrintLayoutInfo' classes.\n *\n * Simple example:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\">\n *      </gmf-print>\n *\n * Example with user defined attribute:\n *\n *      <gmf-print\n *        gmf-print-map=\"::mainCtrl.map\"\n *        gmf-print-active=\"printActive\"\n *        gmf-print-rotatemask=\"::true\"\n *        gmf-print-hiddenattributes=\"::['name']\"\n *        gmf-print-attributes-out=\"::attributes\">\n *        <div ng-repeat=\"attribute in ::attributes\">\n *          <div ng-if=\"attribute.name == 'name'\">\n *            <input ng-model=\"attribute.value\" placeholder=\"name\" />\n *          </div>\n *        </div>\n *      </gmf-print>\n *\n * Note: The 'print' and 'cancel' functions can also be called via globals\n * events 'gmfStartPrint' and 'gmfCancelPrint'.\n *\n * @htmlAttribute {ol.Map} gmf-print-map The map.\n * @htmlAttribute {boolean} gmf-print-active A boolean that informs if the\n *     panel is open or not.\n * @htmlAttribute {boolean} gmf-print-rotatemask Optional. True to apply\n *     rotation on the mask instead of the map. By default, the map rotates.\n * @htmlAttribute {Object.<string, string|number|boolean>}\n *     gmf-print-fieldvalues optional. Key, value object to define default\n *     value in each of your print panel field. The key refers to the\n *     property's name of the field.\n *     Example: {'comments': 'demo', 'legend': false}. Doesn't work for the dpi\n *     and the scale. Server's values are used in priority.\n * @htmlAttribute {Array.<string>} gmf-print-hiddenattributes The list of attributes that should be hidden.\n * @ngdoc component\n * @ngname gmfPrint\n */\nexports.component_ = {\n  bindings: {\n    'map': '<gmfPrintMap',\n    'active': '=gmfPrintActive',\n    'rotateMask': '<?gmfPrintRotatemask',\n    'fieldValues': '<?gmfPrintFieldvalues',\n    'hiddenAttributeNames': '<?gmfPrintHiddenattributes',\n    'attributesOut': '=?gmfPrintAttributesOut'\n  },\n  controller: 'GmfPrintController',\n  templateUrl: gmfPrintTemplateUrl,\n  transclude: true\n};\n\n\nexports.component('gmfPrint', exports.component_);\n\n/**\n * @typedef {{\n *     useBbox: (boolean|undefined),\n *     label: (Object.<string, boolean>),\n *     params: (Object.<string, Object.<string, string>>)\n * }}\n */\nexports.optionsLegendType;\n\n/**\n * @typedef {{\n *     scaleInput: (boolean|undefined),\n *     legend: (optionsLegendType|undefined)\n * }}\n */\nexports.optionsType;\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {angular.Scope} $rootScope Angular root scope.\n   * @param {angular.Scope} $scope Angular scope.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$q} $q The Angular $q service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.map.LayerHelper} ngeoLayerHelper The ngeo Layer Helper service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo Feature Overlay\n   *     Manager service.\n   * @param {ngeo.print.Utils} ngeoPrintUtils The ngeo PrintUtils service.\n   * @param {ngeox.CreatePrint} ngeoCreatePrint The ngeo Create Print function.\n   * @param {string} gmfPrintUrl A MapFishPrint url.\n   * @param {gmf.authentication.Service} gmfAuthenticationService The authentication service.\n   * @param {ngeox.QueryResult} ngeoQueryResult ngeo query result.\n   * @param {angular.$filter} $filter Angular $filter service.\n   * @param {gmf.print.component.PrintStateEnum} gmfPrintState GMF print state.\n   * @param {gmf.theme.Themes} gmfThemes The gmf Themes service.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfPrintController\n   */\n  constructor($element, $rootScope, $scope, $timeout, $q, $injector,\n    gettextCatalog, ngeoLayerHelper, ngeoFeatureOverlayMgr,  ngeoPrintUtils,\n    ngeoCreatePrint, gmfPrintUrl, gmfAuthenticationService, ngeoQueryResult,\n    $filter, gmfPrintState, gmfThemes) {\n\n    /**\n     * @type {gmf.print.component.PrintStateEnum}\n     * @private\n     */\n    this.gmfPrintState_ = gmfPrintState;\n\n    /**\n     * @type {function(string): string}\n     * @private\n     */\n    this.translate_ = $filter('translate');\n\n    /**\n     * @type {ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.rotateMask = false;\n\n    /**\n     * @type {Object.<string, string|number|boolean>!}\n     * @export\n     */\n    this.fieldValues = {};\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.attributesOut;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$rootScope_ = $rootScope;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.$scope_ = $scope;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.$timeout_ = $timeout;\n\n    /**\n     * @type {angular.$q}\n     * @private\n     */\n    this.$q_ = $q;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {ngeo.map.LayerHelper}\n     * @private\n     */\n    this.ngeoLayerHelper_ = ngeoLayerHelper;\n\n    /**\n     * @type {ol.layer.Vector}\n     * @private\n     */\n    this.featureOverlayLayer_ = ngeoFeatureOverlayMgr.getLayer();\n\n    /**\n     * @type {ngeo.print.Utils}\n     * @private\n     */\n    this.ngeoPrintUtils_ = ngeoPrintUtils;\n\n    /**\n     * @type {ngeo.print.Service}\n     * @private\n     */\n    this.ngeoPrint_ = ngeoCreatePrint(gmfPrintUrl);\n\n    /**\n     * @type {ngeox.QueryResult}\n     * @private\n     */\n    this.ngeoQueryResult_ = ngeoQueryResult;\n\n    /**\n     * @type {gmf.authentication.Service}\n     * @private\n     */\n    this.gmfAuthenticationService_ = gmfAuthenticationService;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    this.cacheVersion_ = '0';\n    if ($injector.has('cacheVersion')) {\n      this.cacheVersion_ = $injector.get('cacheVersion');\n    }\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.scaleInput = false;\n\n    /**\n     * @type optionsLegendType\n     * @private\n     */\n    this.gmfLegendOptions_ = {\n      useBbox: true,\n      label: {},\n      params: {},\n    };\n\n    if ($injector.has('gmfPrintOptions')) {\n      /**\n       * @type optionsType\n       */\n      const options = $injector.get('gmfPrintOptions');\n      if (options.scaleInput) {\n        this.scaleInput = options.scaleInput;\n      }\n      if (options.legend) {\n        Object.assign(this.gmfLegendOptions_, options.legend);\n      }\n    }\n\n    /**\n     * @type {?angular.$q.Deferred}\n     * @private\n     */\n    this.requestCanceler_ = null;\n\n    /**\n     * @type {?angular.$q.Promise}\n     * @private\n     */\n    this.statusTimeoutPromise_ = null;\n\n    /**\n     * @type {Array.<number>|null}\n     * @private\n     */\n    this.onDragPreviousMousePosition_ = null;\n\n    /**\n     * @type {?angular.$q.Promise|null}\n     * @private\n     */\n    this.rotationTimeoutPromise_ = null;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.postComposeListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.pointerDragListenerKey_;\n\n    /**\n     * @type {ol.EventsKey}\n     * @private\n     */\n    this.mapViewResolutionChangeKey_;\n\n    /**\n     * Current report reference id.\n     * @type {string}\n     * @private\n     */\n    this.curRef_ = '';\n\n    /**\n     * Formats availables in capabilities.\n     * @type {Array.<string>}\n     * @private\n     */\n    this.formats_ = [];\n\n    /**\n     * An array of attributes objects from capabilities.\n     * @type {Array.<Object>}\n     * @private\n     */\n    this.layouts_ = [];\n\n    /**\n     * An attributes object from capabilities.\n     * @type {Object}\n     * @private\n     */\n    this.layout_ = {};\n\n    /**\n     * @type {Array.<number>}\n     * @private\n     */\n    this.paperSize_ = [];\n\n    /**\n     * @type {gmfx.PrintLayoutInfo}\n     * @export\n     */\n    this.layoutInfo = {};\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.rotation = 0;\n\n    /**\n     * @type {Array.<string>}\n     * @export\n     */\n    this.hiddenAttributeNames;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.scaleManuallySelected_ = false;\n\n    /**\n     * @type {angular.JQLite}\n     * @export\n     */\n    this.rotationInput_ = $element.find('.gmf-print-rotation-input');\n\n    this.rotationInput_.on('input', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n    // Workaround for IE11\n    this.rotationInput_.on('change', (event) => {\n      const rotation = $(event.target).val();\n      if (rotation !== '') {\n        this.setRotation(/** @type {number} */ (rotation));\n      }\n    });\n\n    /**\n     * @type {function(ol.render.Event)}\n     */\n    this.postcomposeListener_;\n\n    /**\n     * @type {angular.$http.HttpPromise}\n     * @private\n     */\n    this.capabilities_;\n\n    /**\n     * @type {gmfThemes.GmfOgcServers}\n     * @private\n     */\n    this.ogcServers_;\n\n    /**\n     * @type {Array.<gmfThemes.GmfTheme>}\n     * @private\n     */\n    this.currentThemes_;\n  }\n\n\n  /**\n   * Init the controller\n   */\n  $onInit() {\n\n    olEvents.listen(this.map.getView(), 'change:rotation', (event) => {\n      this.updateRotation_(Math.round(olMath.toDegrees(event.target.getRotation())));\n    });\n\n    // Clear the capabilities if the roleId changes\n    this.$scope_.$watch(() => this.gmfAuthenticationService_.getRoleId(), () => {\n      this.gmfPrintState_.state = exports.PrintStateEnum.CAPABILITIES_NOT_LOADED;\n      this.capabilities_ = null;\n    });\n\n    this.$scope_.$watch(() => this.active, (active) => {\n      this.togglePrintPanel_(active);\n    });\n\n    // Print on event.\n    this.$rootScope_.$on('gmfStartPrint', (event, format) => {\n      this.print(`${format}`);\n    });\n\n    // Cancel print task on event.\n    this.$rootScope_.$on('gmfCancelPrint', () => {\n      this.cancel();\n    });\n\n    this.gmfThemes_.getOgcServersObject().then((ogcServersObject) => {\n      this.ogcServers_ = ogcServersObject;\n    });\n\n    this.gmfThemes_.getThemesObject().then((currentThemes) => {\n      this.currentThemes_ = currentThemes;\n    });\n\n    /**\n     * @return {ol.Size} Size in dots of the map to print.\n     */\n    const getSizeFn = () => this.paperSize_;\n\n    let getRotationFn;\n    if (this.rotateMask) {\n      /**\n       * @return {number} rotation to apply.\n       */\n      getRotationFn = () => this.rotation;\n    }\n\n    this.postcomposeListener_ = this.ngeoPrintUtils_.createPrintMaskPostcompose(\n      getSizeFn, this.getScaleFn.bind(this), getRotationFn);\n  }\n\n\n  /**\n   * @param {olx.FrameState} frameState Frame state.\n   * @return {number} Scale of the map to print.\n   */\n  getScaleFn(frameState) {\n    // Don't compute an optimal scale if the user manually choose a value not in\n    // the pre-defined scales. (`scaleInput` in `gmfPrintOptions`).\n    googAsserts.assert(this.layoutInfo.scales);\n    googAsserts.assert(this.layoutInfo.scale !== undefined);\n    if (!this.scaleManuallySelected_ &&\n        (this.layoutInfo.scale === -1 || olArray.includes(this.layoutInfo.scales, this.layoutInfo.scale))) {\n      const mapSize = frameState.size;\n      const viewResolution = frameState.viewState.resolution;\n      this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * @param {boolean} active True to listen events related to the print and get\n   *     capabilities. False to stop listen them and set rotation to 0.\n   * @private\n   */\n  togglePrintPanel_(active) {\n    if (active) {\n      if (!this.capabilities_) {\n        this.getCapabilities_();\n      }\n      this.capabilities_.then((resp) => {\n        // make sure the panel is still open\n        if (!this.active) {\n          return;\n        }\n        this.gmfPrintState_.state = exports.PrintStateEnum.NOT_IN_USE;\n        // Get capabilities - On success\n        this.parseCapabilities_(resp);\n        this.postComposeListenerKey_ = olEvents.listen(this.map, 'postcompose', this.postcomposeListener_);\n        this.pointerDragListenerKey_ = olEvents.listen(this.map, 'pointerdrag', this.onPointerDrag_, this);\n        this.mapViewResolutionChangeKey_ = olEvents.listen(this.map.getView(), 'change:resolution', () => {\n          this.scaleManuallySelected_ = false;\n        });\n        this.map.render();\n      }, (resp) => {\n        // Get capabilities - On error\n        this.gmfPrintState_.state = exports.PrintStateEnum.ERROR_ON_GETCAPABILITIES;\n        this.capabilities_ = null;\n      });\n    } else {\n      olEvents.unlistenByKey(this.postComposeListenerKey_);\n      olEvents.unlistenByKey(this.pointerDragListenerKey_);\n      olEvents.unlistenByKey(this.mapViewResolutionChangeKey_);\n      this.setRotation(0);\n      this.map.render(); // Redraw (remove) post compose mask;\n    }\n  }\n\n\n  /**\n   * Gets the print capabilities.\n   * @param {number|null=} opt_roleId The role id.\n   * @private\n   */\n  getCapabilities_(opt_roleId) {\n    this.capabilities_ = this.ngeoPrint_.getCapabilities(\n      /** @type {angular.$http.Config} */ ({\n        withCredentials: true,\n        params: opt_roleId ? {\n          'role': opt_roleId,\n          'cache_version': this.cacheVersion_\n        } : {\n          'cache_version': this.cacheVersion_\n        }\n      }));\n  }\n\n\n  /**\n   * Create the list of layouts, get the formats, get the first layout in\n   * gmf print v3 capabilities and then update the print panel layout information.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  parseCapabilities_(resp) {\n    const data = resp['data'];\n    this.formats_ = data['formats'] || [];\n    this.layouts_ = data['layouts'];\n    this.layout_ = data['layouts'][0];\n\n    this.layoutInfo.layouts = [];\n    this.layouts_.forEach((layout) => {\n      this.layoutInfo.layouts.push(layout.name);\n    });\n\n    this.updateFields_();\n  }\n\n\n  /**\n   * Update layout information with the user values if there are always available in the\n   * current layout otherwise use the defaults values of the layout.\n   * If a field doesn't exist in the current layout, set it to undefined so the\n   * view can hide it. Update also the paper size.\n   * custom print templates).\n   * @private\n   */\n  updateFields_() {\n    this.layoutInfo.layout = this.layout_.name;\n\n    const mapInfo = this.isAttributeInCurrentLayout_('map');\n    googAsserts.assertObject(mapInfo);\n    const clientInfo = mapInfo['clientInfo'];\n    googAsserts.assertObject(clientInfo);\n    this.paperSize_ = [clientInfo['width'], clientInfo['height']];\n\n    this.updateCustomFields_();\n\n    this.layoutInfo.legend = this.fieldValues['legend'] !== false;\n    this.layoutInfo.scales = clientInfo['scales'] || [];\n    this.layoutInfo.dpis = clientInfo['dpiSuggestions'] || [];\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution();\n    this.layoutInfo.scale = this.getOptimalScale_(mapSize, viewResolution);\n\n    this.layoutInfo.dpi =\n        (this.layoutInfo.dpi && this.layoutInfo.dpis.indexOf(this.layoutInfo.dpi) > 0) ?\n          this.layoutInfo.dpi : this.layoutInfo.dpis[0];\n\n    this.layoutInfo.formats = {};\n    this.formats_.forEach((format) => {\n      this.layoutInfo.formats[format] = true;\n    });\n\n    this.attributesOut = this.layoutInfo['simpleAttributes'];\n\n    // Force the update of the mask\n    this.map.render();\n  }\n\n\n  /**\n   * Update simple attributes information with gmfx.Customfield to be able to generate a form\n   * from a custom GMF print v3 configuration.\n   * @private\n   */\n  updateCustomFields_() {\n    let name, rawType, value, type;\n    if (!this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes = [];\n    }\n    if (!this.layoutInfo.attributes) {\n      this.layoutInfo.attributes = [];\n    }\n    const simpleAttributes = this.layoutInfo.simpleAttributes;\n    const previousAttributes = simpleAttributes.splice(0, simpleAttributes.length);\n\n    // The attributes without 'clientParams' are the custom layout information (defined by end user).\n    this.layout_.attributes.forEach((attribute) => {\n      this.layoutInfo.attributes.push(attribute.name);\n      if (!attribute['clientParams']) {\n        name = `${attribute.name}`;\n        const defaultValue = attribute.default;\n        value = (defaultValue !== undefined && defaultValue !== '') ?\n          defaultValue : this.fieldValues[name];\n\n        // Try to use existing form field type\n        rawType = `${attribute.type}`;\n        switch (rawType) {\n          case 'String':\n            type = (name === 'comments') ? 'textarea' : 'text';\n            break;\n          case 'Boolean':\n            type = 'checkbox';\n            break;\n          case 'Number':\n            type = 'number';\n            value = parseFloat(value);\n            value = isNaN(value) ? 0 : value;\n            break;\n          default:\n            type = rawType;\n        }\n\n        // If it exists use the value of previous same field.\n        previousAttributes.forEach((c) => {\n          if (c.name === name && c.type === type) {\n            return value = c.value;\n          }\n        });\n\n        this.layoutInfo.simpleAttributes.push(/** gmfx.PrintSimpleAttributes */ ({\n          name,\n          type,\n          value\n        }));\n      }\n    });\n  }\n\n\n  /**\n   * Return a capabilities 'attribute' object corresponding to the given name.\n   * @param {string} name Name of the attribute to get.\n   * @return {Object|null} corresponding attribute or null.\n   * @private\n   */\n  isAttributeInCurrentLayout_(name) {\n    let attr = null;\n    this.layout_.attributes.forEach((attribute) => {\n      if (attribute.name === name) {\n        return attr = attribute;\n      }\n    });\n    return attr;\n  }\n\n\n  /**\n   * Set the current rotation value.\n   * Updating the rotation will redraw the mask or rotate the map (depending on the configuration).\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  setRotation(rotation) {\n    this.updateRotation_(rotation);\n    // Render the map to update the postcompose mask or rotate the map.\n    if (this.rotateMask) {\n      this.map.render();\n    } else {\n      this.map.getView().setRotation(olMath.toRadians(this.rotation));\n    }\n  }\n\n  /**\n   * Set the current rotation value.\n   * @param {number} rotation The optional new rotation value in degrees.\n   */\n  updateRotation_(rotation) {\n    this.rotation = olMath.clamp(rotation, -180, 180);\n    // sync all the inputs\n    this.rotationInput_.val(this.rotation.toString());\n  }\n\n  /**\n   * Calculate the angle and the sense of rotation between two lines. One from the\n   * center of the map and the point of the last call to this function and one\n   * from the same center and the point of the current call.\n   * @param {ol.MapBrowserPointerEvent} e An ol map browser pointer event.\n   * @private\n   */\n  onPointerDrag_(e) {\n    const originalEvent = e.originalEvent;\n    const mapCenter = this.map.getView().getCenter();\n    if (this.active && originalEvent.altKey && originalEvent.shiftKey && mapCenter) {\n      const center = this.map.getPixelFromCoordinate(mapCenter);\n      const pixel = e.pixel;\n      // Reset previous position between two different sessions of drags events.\n      if (this.rotationTimeoutPromise_ === null) {\n        this.onDragPreviousMousePosition_ = null;\n      } else {\n        // Cancel the timeout to keep this session of drags event\n        this.$timeout_.cancel(this.rotationTimeoutPromise_);\n        // Calculate angle and sense of rotation.\n        const p0x = this.onDragPreviousMousePosition_[0] - center[0];\n        const p0y = this.onDragPreviousMousePosition_[1] - center[1];\n        const p1x = pixel[0] - center[0];\n        const p1y = pixel[1] - center[1];\n        const centerToP0 = Math.sqrt(Math.pow(p0x, 2) + Math.pow(p0y, 2));\n        const centerToP1 = Math.sqrt(Math.pow(p1x, 2) + Math.pow(p1y, 2));\n        const sense = (p0x * p1y - p0y * p1x) > 0 ? 1 : -1;\n        let angle = (p0x * p1x + p0y * p1y) / (centerToP0 * centerToP1);\n        angle = angle <= 1 ? sense * Math.acos(angle) : 0;\n        const boost = centerToP1 / 200;\n        const increment = Math.round(olMath.toDegrees(angle) * boost);\n\n        // Set rotation then update the view.\n        this.setRotation(this.rotation + increment);\n        this.$scope_.$digest();\n      }\n      // Prepare the removal of this session of drags events\n      this.rotationTimeoutPromise_ = this.$timeout_(() => {\n        this.rotationTimeoutPromise_ = null;\n      }, 500);\n      // Keep the current position for the next calculation.\n      this.onDragPreviousMousePosition_ = pixel;\n    }\n  }\n\n\n  /**\n   * Create a print report based on the values of the 'layoutInfo' values.\n   * @param {string} format An output format corresponding to one format in the\n   *     capabilities document ('pdf', 'png', etc).\n   * @export\n   */\n  print(format) {\n    // Do not print if a print task is already processing.\n    if (this.gmfPrintState_.state === exports.PrintStateEnum.PRINTING) {\n      return;\n    }\n    this.requestCanceler_ = this.$q_.defer();\n    this.gmfPrintState_.state = exports.PrintStateEnum.PRINTING;\n\n    const mapSize = this.map.getSize();\n    const viewResolution = this.map.getView().getResolution() || 0;\n    const scale = this.layoutInfo.scale || this.getOptimalScale_(mapSize, viewResolution);\n    const datasource = this.getDataSource_();\n\n    const customAttributes = {};\n\n    if (this.layoutInfo.attributes.indexOf('datasource') >= 0) {\n      customAttributes['datasource'] = datasource;\n    }\n\n    if (this.layoutInfo.simpleAttributes) {\n      this.layoutInfo.simpleAttributes.forEach((field) => {\n        customAttributes[field.name] = field.value;\n      });\n    }\n\n    if (this.layoutInfo.legend) {\n      const center = this.map.getView().getCenter();\n      const deltaX = this.paperSize_[0] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const deltaY = this.paperSize_[1] * scale / 2 / ngeoPrintUtils.INCHES_PER_METER_ / ngeoPrintUtils.DOTS_PER_INCH_;\n      const bbox = [\n        center[0] - deltaX,\n        center[1] - deltaY,\n        center[0] + deltaX,\n        center[1] + deltaY,\n      ];\n      const legend = this.getLegend_(scale, this.layoutInfo.dpi, bbox);\n      if (legend !== null) {\n        customAttributes['legend'] = legend;\n      }\n    }\n\n    googAsserts.assertNumber(this.layoutInfo.dpi);\n    googAsserts.assertString(this.layoutInfo.layout);\n\n    // convert the WMTS layers to WMS\n    const map = new olMap({});\n    map.setView(this.map.getView());\n    const ol_layers = this.ngeoLayerHelper_.getFlatLayers(this.map.getLayerGroup());\n    const new_ol_layers = [];\n    let print_native_angle = true;\n    for (let i = 0, ii = ol_layers.length; i < ii; i++) {\n      let layer = ol_layers[i];\n      const metadata = layer.get('metadata');\n      if (metadata) {\n        const server_name = metadata.ogcServer;\n        const layer_names = metadata.printLayers || metadata.layers;\n        if (server_name && layer_names) {\n          const server = this.ogcServers_[server_name];\n          if (server) {\n            layer = this.ngeoLayerHelper_.createBasicWMSLayer(\n              server.url,\n              layer_names,\n              server.imageType,\n              server.type,\n              undefined,\n              undefined,\n              undefined,\n              undefined,\n              {opacity: ol_layers.opacity}\n            );\n            layer.setZIndex(-200);\n          } else {\n            console.error('Missing ogcServer:', server_name);\n          }\n        }\n      }\n\n      // Get the print native angle parameter for WMS layers when set to not use default value\n      // Is applied only once when the value is overridden with a metadata from administration\n      if (layer instanceof olLayerImage && layer.get('printNativeAngle') === false) {\n        print_native_angle = false;\n      }\n\n      new_ol_layers.push(layer);\n    }\n    map.setLayerGroup(new olLayerGroup({\n      layers: new_ol_layers,\n      'printNativeAngle': print_native_angle\n    }));\n\n    const spec = this.ngeoPrint_.createSpec(map, scale, this.layoutInfo.dpi,\n      this.layoutInfo.layout, format, customAttributes);\n\n    // Add feature overlay layer to print spec.\n    const layers = [];\n    this.ngeoPrint_.encodeLayer(layers, this.featureOverlayLayer_,\n      viewResolution);\n    if (layers.length > 0) {\n      spec.attributes.map.layers.unshift(layers[0]);\n    }\n\n    this.ngeoPrint_.createReport(spec, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleCreateReportSuccess_.bind(this),\n      this.handleCreateReportError_.bind(this)\n    );\n\n    // remove temporary map\n    map.setTarget(null);\n  }\n\n\n  /**\n   * Cancel the current print and reset its state.\n   * @export\n   */\n  cancel() {\n    // Cancel the latest request, if it's not finished yet.\n    if (this.requestCanceler_ !== null) {\n      this.requestCanceler_.resolve();\n    }\n\n    // Cancel the status timeout if there's one set, to make sure no other\n    // status request is sent.\n    if (this.statusTimeoutPromise_ !== null) {\n      this.$timeout_.cancel(this.statusTimeoutPromise_);\n    }\n\n    if (this.curRef_.length > 0) {\n      this.ngeoPrint_.cancel(this.curRef_);\n    }\n\n    this.resetPrintStates_();\n  }\n\n\n  /**\n   * @param {gmf.print.component.PrintStateEnum=} opt_printState the print state.\n   * @private\n   */\n  resetPrintStates_(opt_printState) {\n    this.gmfPrintState_.state = opt_printState || exports.PrintStateEnum.NOT_IN_USE;\n    this.curRef_ = '';\n  }\n\n\n  /**\n   * Get datasource object for print report\n   * @private\n   * @return {Array.<gmfx.datasource.DataSourcePrintReportObject>} the data\n   *     source objet for the print report\n   */\n  getDataSource_() {\n    let datasourceObj, data, columns;\n    const datasourceArr = [];\n    const sources = this.ngeoQueryResult_.sources;\n    sources.forEach(function(source) {\n      data = [];\n      columns = [];\n      source.features.forEach(function(feature, i) {\n        googAsserts.assert(feature);\n        const properties = ngeoMiscFeatureHelper.getFilteredFeatureValues(feature);\n        if (i === 0) {\n          columns = Object.keys(properties).map(function tanslateColumns(prop) {\n            return this.translate_(prop);\n          }, this);\n        }\n        data.push(Object.keys(properties).map(key => properties[key]));\n      }, this);\n      if (columns.length) {\n        datasourceObj =\n          /** @type {gmfx.datasource.DataSourcePrintReportObject} */({\n            title: this.translate_(source.label),\n            table: {\n              columns,\n              data\n            }\n          });\n        datasourceArr.push(datasourceObj);\n      }\n    }, this);\n    return datasourceArr;\n  }\n\n\n  /**\n   * Get the optimal scale to display the print mask. Return the first scale if\n   * no scale matches.\n   * @param {ol.Size|undefined} mapSize Size of the map on the screen (px).\n   * @param {number|undefined} viewResolution Resolution of the map on the screen.\n   * @return {number} The best scale. -1 is returned if there is no optimal\n   *     scale, that is the optimal scale is lower than or equal to the first\n   *     value in printMapScales.\n   * @private\n   */\n  getOptimalScale_(mapSize, viewResolution) {\n    const scales = this.layoutInfo.scales.slice();\n    if (mapSize !== undefined && viewResolution !== undefined) {\n      return this.ngeoPrintUtils_.getOptimalScale(mapSize, viewResolution,\n        this.paperSize_, scales.reverse());\n    }\n    return this.layoutInfo.scales[0];\n  }\n\n\n  /**\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleCreateReportSuccess_(resp) {\n    const mfResp = /** @type {MapFishPrintReportResponse} */ (resp.data);\n    const ref = mfResp.ref;\n    googAsserts.assert(ref.length > 0);\n    this.curRef_ = ref;\n    this.getStatus_(ref);\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @private\n   */\n  getStatus_(ref) {\n    this.requestCanceler_ = this.$q_.defer();\n    this.ngeoPrint_.getStatus(ref, /** @type {angular.$http.Config} */ ({\n      timeout: this.requestCanceler_.promise\n    })).then(\n      this.handleGetStatusSuccess_.bind(this, ref),\n      this.handleCreateReportError_.bind(this)\n    );\n  }\n\n\n  /**\n   * @param {string} ref Ref.\n   * @param {!angular.$http.Response} resp Response.\n   * @private\n   */\n  handleGetStatusSuccess_(ref, resp) {\n    const mfResp = /** @type {MapFishPrintStatusResponse} */ (resp.data);\n    const done = mfResp.done;\n    if (done) {\n      if (mfResp.status != 'error') {\n        // The report is ready. Open it by changing the window location.\n        window.location.href = this.ngeoPrint_.getReportUrl(ref);\n        this.resetPrintStates_();\n      } else {\n        console.error(mfResp.error);\n        this.handleCreateReportError_();\n      }\n    } else {\n      // The report is not ready yet. Check again in 1s.\n      this.statusTimeoutPromise_ = this.$timeout_(() => {\n        this.getStatus_(ref);\n      }, 1000, false);\n    }\n  }\n\n\n  /**\n   * @private\n   */\n  handleCreateReportError_() {\n    this.resetPrintStates_(exports.PrintStateEnum.ERROR_ON_REPORT);\n  }\n\n\n  /**\n   * @param {number} scale The scale to get the legend (for wms layers only).\n   * @param {number} dpi The DPI.\n   * @param {Array.number} bbox The bbox.\n   * @return {Object?} Legend object for print report or null.\n   * @private\n   */\n  getLegend_(scale, dpi, bbox) {\n    const legend = {'classes': []};\n    const gettextCatalog = this.gettextCatalog_;\n\n    // Get layers from layertree only.\n    const dataLayerGroup = this.ngeoLayerHelper_.getGroupFromMap(this.map,\n      gmfBase.DATALAYERGROUP_NAME);\n    const layers = this.ngeoLayerHelper_.getFlatLayers(dataLayerGroup);\n\n    // For each visible layer in reverse order, get the legend url.\n    layers.reverse().forEach((layer) => {\n      const classes = [];\n      if (layer.getVisible() && layer.getSource()) {\n        // For WMTS layers.\n        if (layer instanceof olLayerTile) {\n          const layerName = `${layer.get('layerNodeName')}`;\n          let icons = this.getMetadataLegendImage_(layerName);\n          if (!icons) {\n            icons = this.ngeoLayerHelper_.getWMTSLegendURL(layer);\n          }\n          // Don't add classes without legend url.\n          if (icons) {\n            classes.push({\n              'name': gettextCatalog.getString(layerName),\n              'icons': [icons]\n            });\n          }\n        } else {\n          const source = /** @type ol.source.ImageWMS */ (layer.getSource());\n          // For each name in a WMS layer.\n          const layerNames = source.getParams()['LAYERS'].split(',');\n          layerNames.forEach((name) => {\n            let icons = this.getMetadataLegendImage_(name);\n            if (!icons) {\n              icons = this.ngeoLayerHelper_.getWMSLegendURL(source.getUrl(), name,\n                scale, undefined, undefined, undefined, source.serverType_, dpi,\n                this.gmfLegendOptions_.useBbox ? bbox : undefined,\n                this.map.getView().getProjection().getCode(),\n                this.gmfLegendOptions_.params[layer.getSource().serverType_]\n              );\n            }\n            const type = icons ? 'image' : source.serverType_;\n\n            // Don't add classes without legend url or from layers without any\n            // active name.\n            if (icons && name.length !== 0) {\n              classes.push(Object.assign({\n                'name': this.gmfLegendOptions_.label[type] === false ? '' :\n                  gettextCatalog.getString(name),\n                'icons': [icons]\n              }, type === 'qgis' ? {\n                'dpi': dpi,\n              } : {}));\n            }\n          });\n        }\n      }\n\n      // Add classes object only if it contains something.\n      if (classes.length > 0) {\n        legend['classes'].push({'classes': classes});\n      }\n\n    });\n\n    return legend['classes'].length > 0 ?  legend : null;\n  }\n\n\n  /**\n   * Return the metadata legendImage of a layer from the found corresponding node\n   * or undefined.\n   * @param {string} layerName a layer name.\n   * @return {string|undefined} The legendImage or undefined.\n   * @private\n   */\n  getMetadataLegendImage_(layerName) {\n    const groupNode = gmfThemeThemes.findGroupByLayerNodeName(this.currentThemes_, layerName);\n    let node;\n    if (groupNode && groupNode.children) {\n      node = gmfThemeThemes.findObjectByName(groupNode.children, layerName);\n    }\n    let legendImage;\n    if (node && node.metadata) {\n      legendImage = node.metadata.legendImage;\n    }\n    return legendImage;\n  }\n\n\n  /**\n   * Set the current layout and update all layout information with this new layout parameters.\n   * @param {string!} layoutName A layout name as existing in the list of\n   *     existing layouts.\n   * @export\n   */\n  setLayout(layoutName) {\n    let layout;\n    this.layouts_.forEach((l) => {\n      if (l.name === layoutName) {\n        layout = l;\n        return true; // break;\n      }\n    });\n    this.layout_ = layout;\n    this.updateFields_();\n  }\n\n\n  /**\n   * Get or set the print scale value and adapt the zoom to match with this new scale.\n   * @param {number=} opt_scale A scale value as existing in the scales list field.\n   * @return {number|undefined} New scale.\n   * @export\n   */\n  getSetScale(opt_scale) {\n    if (opt_scale !== undefined) {\n      const mapSize = this.map.getSize() || [0, 0];\n      this.layoutInfo.scale = opt_scale;\n      const res = this.ngeoPrintUtils_.getOptimalResolution(mapSize, this.paperSize_, opt_scale);\n      const contrainRes = this.map.getView().constrainResolution(res, 0, 1);\n      this.map.getView().setResolution(contrainRes);\n      // Render the map to update the postcompose mask manually\n      this.map.render();\n      this.scaleManuallySelected_ = true;\n    }\n    return this.layoutInfo.scale;\n  }\n\n\n  /**\n   * Set the print dpi value.\n   * @param {number} dpi A dpi value as existing in the dpis list field.\n   * @export\n   */\n  setDpi(dpi) {\n    this.layoutInfo.dpi = dpi;\n  }\n\n\n  /**\n   * Check the current state of the print.\n   * @param {string} stateEnumKey An enum key from gmf.print.component.PrintStateEnum.\n   * @return {boolean} True if the given state matches with the current print\n   *     state. False otherwise.\n   * @export\n   */\n  isState(stateEnumKey) {\n    return this.gmfPrintState_.state === exports.PrintStateEnum[stateEnumKey];\n  }\n};\n\nexports.controller('GmfPrintController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.createfeatureComponent\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoGeometryType from 'ngeo/GeometryType.js';\nimport ngeoInteractionMeasureArea from 'ngeo/interaction/MeasureArea.js';\nimport ngeoInteractionMeasureLength from 'ngeo/interaction/MeasureLength.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoUtils from 'ngeo/utils.js';\nimport * as olBase from 'ol/index.js';\nimport olCollection from 'ol/Collection.js';\nimport * as olEvents from 'ol/events.js';\nimport olFeature from 'ol/Feature.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport olStyleStyle from 'ol/style/Style.js';\n\nconst exports = angular.module('ngeoCreatefeature', [\n  ngeoMiscEventHelper.module.name,\n  ngeoMiscFilters.name,\n]);\n\n\n/**\n * A directive used to draw vector features of a single geometry type using\n * either a 'draw' or 'measure' interaction. Once a feature is finished being\n * drawn, it is added to a collection of features.\n *\n * The geometry types supported are:\n *  - Point\n *  - LineString\n *  - Polygon\n *\n * Example:\n *\n *     <a\n *       href\n *       translate\n *       ngeo-btn\n *       ngeo-createfeature\n *       ngeo-createfeature-active=\"ctrl.createPointActive\"\n *       ngeo-createfeature-features=\"ctrl.features\"\n *       ngeo-createfeature-geom-type=\"ctrl.pointGeomType\"\n *       ngeo-createfeature-map=\"::ctrl.map\"\n *       class=\"btn btn-default ngeo-createfeature-point\"\n *       ng-class=\"{active: ctrl.createPointActive}\"\n *       ng-model=\"ctrl.createPointActive\">\n *     </a>\n *\n * @htmlAttribute {boolean} ngeo-createfeature-active Whether the directive is\n *     active or not.\n * @htmlAttribute {ol.Collection} ngeo-createfeature-features The collection of\n *     features where to add those created by this directive.\n * @htmlAttribute {string} ngeo-createfeature-geom-type Determines the type\n *     of geometry this directive should draw.\n * @htmlAttribute {ol.Map} ngeo-createfeature-map The map.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoCreatefeature\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoCreatefeatureController',\n    bindToController: true,\n    scope: {\n      'active': '=ngeoCreatefeatureActive',\n      'features': '=ngeoCreatefeatureFeatures',\n      'geomType': '=ngeoCreatefeatureGeomType',\n      'map': '=ngeoCreatefeatureMap'\n    }\n  };\n};\n\nexports.directive('ngeoCreatefeature', exports.directive_);\n\n\n/**\n * @param {!angularGettext.Catalog} gettextCatalog Gettext catalog.\n * @param {!angular.$compile} $compile Angular compile service.\n * @param {!angular.$filter} $filter Angular filter\n * @param {!angular.Scope} $scope Scope.\n * @param {!angular.$timeout} $timeout Angular timeout service.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoCreatefeatureController\n */\nexports.Controller_ = function(gettextCatalog, $compile, $filter, $scope,\n  $timeout, ngeoEventHelper) {\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.active;\n\n  /**\n   * @type {ol.Collection.<!ol.Feature>|!ol.source.Vector}\n   * @export\n   */\n  this.features;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.geomType;\n\n  /**\n   * @type {!ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * @type {!angular.$compile}\n   * @private\n   */\n  this.compile_ = $compile;\n\n  /**\n   * @type {!angular.$filter}\n   * @private\n   */\n  this.filter_ = $filter;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * The draw or measure interaction responsible of drawing the vector feature.\n   * The actual type depends on the geometry type.\n   * @type {ol.interaction.Interaction}\n   * @private\n   */\n  this.interaction_;\n\n\n  // == Event listeners ==\n  $scope.$watch(\n    () => this.active,\n    (newVal) => {\n      this.interaction_.setActive(newVal);\n    }\n  );\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.active = this.active === true;\n  const gettextCatalog = this.gettextCatalog_;\n\n  // Create the draw or measure interaction depending on the geometry type\n  let interaction;\n  if (this.geomType === ngeoGeometryType.POINT ||\n      this.geomType === ngeoGeometryType.MULTI_POINT\n  ) {\n    interaction = new olInteractionDraw({\n      type: /** @type {ol.geom.GeometryType} */ ('Point')\n    });\n  } else if (this.geomType === ngeoGeometryType.LINE_STRING ||\n      this.geomType === ngeoGeometryType.MULTI_LINE_STRING\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing length');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click last point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureLength(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  } else if (this.geomType === ngeoGeometryType.POLYGON ||\n      this.geomType === ngeoGeometryType.MULTI_POLYGON\n  ) {\n    const helpMsg = gettextCatalog.getString('Click to start drawing area');\n    const contMsg = gettextCatalog.getString(\n      'Click to continue drawing<br/>' +\n      'Double-click or click starting point to finish'\n    );\n\n    interaction = new ngeoInteractionMeasureArea(\n      this.filter_('ngeoUnitPrefix'),\n      gettextCatalog,\n      {\n        style: new olStyleStyle(),\n        startMsg: this.compile_(`<div translate>${helpMsg}</div>`)(this.scope_)[0],\n        continueMsg: this.compile_(`<div translate>${contMsg}</div>`)(this.scope_)[0]\n      }\n    );\n  }\n\n  googAsserts.assert(interaction);\n\n  interaction.setActive(this.active);\n  this.interaction_ = interaction;\n  this.map.addInteraction(interaction);\n\n  const uid = olBase.getUid(this);\n  if (interaction instanceof olInteractionDraw) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'drawend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  } else if (interaction instanceof ngeoInteractionMeasureLength ||\n     interaction instanceof ngeoInteractionMeasureArea) {\n    this.ngeoEventHelper_.addListenerKey(\n      uid,\n      olEvents.listen(\n        interaction,\n        'measureend',\n        this.handleDrawEnd_,\n        this\n      )\n    );\n  }\n};\n\n\n/**\n * Called when a feature is finished being drawn. Add the feature to the\n * collection.\n * @param {ol.interaction.Draw.Event|ngeox.MeasureEvent} event Event.\n * @export\n */\nexports.Controller_.prototype.handleDrawEnd_ = function(event) {\n  let sketch;\n  if (event.feature) {\n    // ol.interaction.Draw.Event\n    sketch = event.feature;\n  } else {\n    // ngeox.MeasureEvent\n    sketch = event.detail.feature;\n  }\n  googAsserts.assert(sketch);\n\n  // convert to multi if geomType is multi and feature is not\n  let geometry = sketch.getGeometry();\n  const type = geometry.getType();\n  if (this.geomType.indexOf('Multi') != type.indexOf('Multi')) {\n    geometry = ngeoUtils.toMulti(geometry);\n  }\n  const feature = new olFeature(geometry);\n  if (this.features instanceof olCollection) {\n    this.features.push(feature);\n  } else {\n    this.features.addFeature(feature);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the interaction from the map.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  this.timeout_(() => {\n    const uid = olBase.getUid(this);\n    this.ngeoEventHelper_.clearListenerKey(uid);\n    this.interaction_.setActive(false);\n    this.map.removeInteraction(this.interaction_);\n  }, 0);\n};\n\nexports.controller('ngeoCreatefeatureController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.datetimepickerComponent\n */\nimport DateFormatter from 'ngeo/misc/php-date-formatter.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.js';\nimport 'jquery-datetimepicker/jquery.datetimepicker.css';\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoDateTimePicker', ['gettext']);\n\n/**\n * A directive used to display a date or time picker\n *\n * Example:\n *\n *      <input ngeo-datetimepicker\n *          ngeo-datetimepicker-options=\"{timepicker: false}\"\n *\n * @htmlAttribute {Object} ngeo-datetimepicker-options The options.\n *\n * @return {angular.Directive} The directive specs.\n * @ngdoc directive\n * @ngname ngeoDatetimepicker\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    controller: exports.Controller_,\n    bindToController: true,\n    scope: {\n      'options': '<ngeoDatetimepickerOptions'\n    }\n  };\n};\n\nexports.directive('ngeoDatetimepicker', exports.component_);\n\n\n/**\n * @param {!jQuery} $element Element.\n * @param {!angularGettext.Catalog} gettextCatalog service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoDatetimepickerController\n */\nexports.Controller_ = function($element, gettextCatalog) {\n  /**\n   * @const {!jQuery}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * The gettext catalog\n   * @type {!angularGettext.Catalog}\n   * @private\n   */\n  this.gettextCatalog_ = gettextCatalog;\n\n  /**\n   * The options\n   * @type {Object|String}\n   * @private\n   */\n  this.options;\n};\n\n\n/**\n * Initialize the directive.\n */\nexports.Controller_.prototype.$onInit = function() {\n  const lang = this.gettextCatalog_.getCurrentLanguage();\n  $.datetimepicker.setLocale(lang);\n  $.datetimepicker.setDateFormatter(new DateFormatter());\n  if (typeof this.options === 'string') {\n    this.options = angular.fromJson(this.options);\n  }\n  this.element_.datetimepicker(this.options);\n};\n\nexports.controller('ngeoDateTimePickerController',\n  exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.attributesComponent\n */\nimport * as olBase from 'ol/index.js';\nimport * as olEvents from 'ol/events.js';\nimport ngeoMiscEventHelper from 'ngeo/misc/EventHelper.js';\nimport ngeoMiscDatetimepickerComponent from 'ngeo/misc/datetimepickerComponent.js';\n\nconst exports = angular.module('ngeoAttributes', [\n  ngeoMiscDatetimepickerComponent.name,\n  ngeoMiscEventHelper.module.name,\n]);\n\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/editing/attributescomponent', require('./attributescomponent.html'));\n});\n\n\nexports.value('ngeoAttributesTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoAttributesTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/editing/attributescomponent';\n  });\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoAttributesTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoAttributesTemplateUrl($attrs, ngeoAttributesTemplateUrl) {\n  return ngeoAttributesTemplateUrl($attrs);\n}\n\n\n/**\n * Component used to render the attributes of a feature into a form.\n * Example:\n *\n *     <ngeo-attributes\n *       ngeo-attributes-attributes=\"::ctrl.attributes\"\n *       ngeo-attributes-disabled=\"ctrl.attributesDisabled\"\n *       ngeo-attributes-feature=\"::ctrl.feature\">\n *     </ngeo-attributes>\n *\n * @htmlAttribute {Array.<ngeox.Attribute>} ngeo-attributes-attributes The\n *     list of attributes to use.\n * @htmlAttribute {boolean} ngeo-attributes-disabled Whether the fieldset should\n *     be disabled or not.\n * @htmlAttribute {ol.Feature} ngeo-attributes-feature The feature.\n *\n * @ngdoc component\n * @ngname ngeoAttributes\n */\nexports.component_ = {\n  controller: 'ngeoAttributesController as attrCtrl',\n  bindings: {\n    'attributes': '=ngeoAttributesAttributes',\n    'disabled': '<ngeoAttributesDisabled',\n    'feature': '=ngeoAttributesFeature'\n  },\n  require: {\n    'form': '^'\n  },\n  templateUrl: ngeoAttributesTemplateUrl\n};\n\nexports.component('ngeoAttributes', exports.component_);\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.misc.EventHelper} ngeoEventHelper Ngeo event helper service\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoAttributesController\n */\nexports.Controller_ = function($scope, ngeoEventHelper) {\n\n  /**\n   * The list of attributes to create the form with.\n   * @type {Array.<ngeox.Attribute>}\n   * @export\n   */\n  this.attributes;\n\n  /**\n   * Whether the fieldset should be disabled or not.\n   * @type {boolean}\n   * @export\n   */\n  this.disabled = false;\n\n  /**\n   * The feature containing the values.\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * The properties bound to the form, initialized with the inner properties\n   * of the feature.\n   * @type {?Object.<string, *>}\n   * @export\n   */\n  this.properties;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.misc.EventHelper}\n   * @private\n   */\n  this.ngeoEventHelper_ = ngeoEventHelper;\n\n  /**\n   * While changes happen from the form (from the template), they are applied\n   * to the feature inner properties. The 'propertychange' event registered\n   * above does the opposite, i.e. it listens to the feature inner properties\n   * changes and apply them to the form. To prevent circular issues, while\n   * applying changes coming from the form, this flag is set. While set, changes\n   * from the feature inner properties are ignored.\n   * @type {boolean}\n   * @private\n   */\n  this.updating_ = false;\n};\n\n\n/**\n * Initialise the component.\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.properties = this.feature.getProperties();\n\n  // Listen to the feature inner properties change and apply them to the form\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.addListenerKey(\n    uid,\n    olEvents.listen(this.feature, 'propertychange', this.handleFeaturePropertyChange_, this)\n  );\n};\n\n\n/**\n * Called when an input node value changes\n * @param {string} name Attribute name\n * @export\n */\nexports.Controller_.prototype.handleInputChange = function(name) {\n  this.updating_ = true;\n  const value = this.properties[name];\n  this.feature.set(name, value);\n  this.updating_ = false;\n};\n\n\n/**\n * Cleanup event listeners.\n */\nexports.Controller_.prototype.$onDestroy = function() {\n  const uid = olBase.getUid(this);\n  this.ngeoEventHelper_.clearListenerKey(uid);\n};\n\n\n/**\n * @param {ol.Object.Event} evt Event.\n * @private\n */\nexports.Controller_.prototype.handleFeaturePropertyChange_ = function(evt) {\n  if (this.updating_) {\n    return;\n  }\n  this.properties[evt.key] = evt.target.get(evt.key);\n  this.scope_.$apply();\n};\n\n\nexports.controller('ngeoAttributesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.editing.exportfeaturesComponent\n */\nimport ngeoMiscFeatureHelper from 'ngeo/misc/FeatureHelper.js';\nimport * as olBase from 'ol/index.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\n\nconst exports = angular.module('ngeoExportfeatures', [\n  ngeoMiscFeatureHelper.module.name\n]);\n\n/**\n * Directive used to export vector features in different types of format.\n * To configure which formats to use, define the `ngeoExportFeatureFormats`\n * value, as such:\n *\n *     app.module.value('ngeoExportFeatureFormats', [\n *         ngeo.misc.FeatureHelper.FormatType.KML,\n *         ngeo.misc.FeatureHelper.FormatType.GPX\n *     ]);\n *\n * Example:\n *\n *     <button\n *       ngeo-exportfeatures\n *       ngeo-exportfeatures-features=\"ctrl.features\"\n *       class=\"btn btn-link\">Export</button>\n *\n * @htmlAttribute {ol.Collection.<ol.Feature>} ngeo-exportfeatures-features The\n *     features to export\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoExportfeatures\n */\nexports.directive_ = function() {\n  return {\n    controller: 'ngeoExportfeaturesController as efCtrl',\n    scope: true,\n    bindToController: {\n      'features': '=ngeoExportfeaturesFeatures'\n    }\n  };\n};\n\n\nexports.directive('ngeoExportfeatures', exports.directive_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {ngeo.misc.FeatureHelper} ngeoFeatureHelper Ngeo feature helper service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname ngeoExportfeaturesController\n */\nexports.Controller_ = function($element, $injector, $scope,\n  ngeoFeatureHelper) {\n\n  /**\n   * @type {ol.Collection.<ol.Feature>}\n   * @private\n   */\n  this.features;\n\n  /**\n   * @type {angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  const uid = olBase.getUid(this);\n  const id = ['ngeo-exportfeature', uid].join('-');\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.id_ = id;\n\n  /**\n   * @type {ngeo.misc.FeatureHelper}\n   * @private\n   */\n  this.featureHelper_ = ngeoFeatureHelper;\n\n  let formats;\n  if ($injector.has('ngeoExportFeatureFormats')) {\n    formats = $injector.get('ngeoExportFeatureFormats');\n  } else {\n    formats = [ngeoMiscFeatureHelper.FormatType.KML];\n  }\n\n  /**\n   * @type {?jQuery}\n   * @private\n   */\n  this.menu_ = null;\n\n  /**\n   * @type {Array.<jQuery>}\n   * @private\n   */\n  this.items_ = [];\n\n  // build the drop-down menu and items if there's more than one format\n  if (formats.length > 1) {\n    $element.attr('id', id);\n    const $menu = $('<ul />', {\n      'class': 'dropdown-menu',\n      'aria-labelledby': id\n    }).appendTo($element.parent()[0]);\n\n    this.menu_ = $menu;\n    let $item;\n\n    formats.forEach((format) => {\n      $item = $('<li />')\n        .appendTo($menu)\n        .append($('<a />', {\n          'href': '#',\n          'text': format\n        })\n          .on(\n            ['click', id].join('.'),\n            this.handleMenuItemClick_.bind(this, format)\n          )\n        );\n      this.items_.push($item);\n    });\n  }\n\n  /**\n   * @type {Array.<string>}\n   * @private\n   */\n  this.formats_ = formats;\n\n  $element.on(['click', id].join('.'), this.handleElementClick_.bind(this));\n\n  $scope.$on('$destroy', this.handleDestroy_.bind(this));\n};\n\n\n/**\n * Called when the element bound to this directive is clicked. Use the feature\n * helper to export the feature(s) depending on the format(s) available(s).\n * If there's only one, the call to the export method is direct, otherwise\n * a drop-down menu is show to let the user choose the format of the export.\n * Finally, if there's only one feature in the collection to export and there's\n * more than one format set, some formats may not support the type of geometry.\n * If that's the case, then disable each format item in the drop-down menu\n * that doesn't support the type of geometry.\n * @private\n */\nexports.Controller_.prototype.handleElementClick_ = function() {\n\n  const features = this.features.getArray();\n\n  if (this.formats_.length === 1) {\n    this.featureHelper_.export(features, this.formats_[0]);\n  } else if (features.length === 1) {\n    const feature = features[0];\n    const geom = feature.getGeometry();\n    let $item;\n    this.formats_.forEach((format, i) => {\n      $item = this.items_[i];\n      if (format === ngeoMiscFeatureHelper.FormatType.GPX) {\n        if (geom instanceof olGeomPoint ||\n            geom instanceof olGeomLineString) {\n          $item.removeClass('disabled');\n        } else {\n          $item.addClass('disabled');\n        }\n      }\n    });\n  }\n};\n\n\n/**\n * Called when a menu item is clicked. Export the features to the selected\n * format.\n * @param {string} format Format.\n * @param {jQuery.Event} event Event.\n * @private\n */\nexports.Controller_.prototype.handleMenuItemClick_ = function(format, event) {\n  if (!$(event.target.parentElement).hasClass('disabled')) {\n    const features = this.features.getArray();\n    this.featureHelper_.export(features, format);\n  }\n};\n\n\n/**\n * Cleanup event listeners and remove the menu from DOM, if any.\n * @private\n */\nexports.Controller_.prototype.handleDestroy_ = function() {\n  const id = this.id_;\n\n  this.element_.off(['click', id].join('.'));\n\n  if (this.menu_) {\n    this.menu_.remove();\n    this.items_.forEach(($item) => {\n      $item.off(['click', id].join('.'));\n    });\n    this.items_.length = 0;\n    this.menu_ = null;\n  }\n};\n\n\nexports.controller(\n  'ngeoExportfeaturesController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.sortableComponent\n */\nimport 'jquery-ui/ui/widgets/sortable.js';\nimport 'jquery-ui-touch-punch';\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoSortable', []);\n\n\n/**\n * Provides a directive that allows drag-and-dropping DOM items between them.\n * It also changes the order of elements in the given array.\n *\n * It is typically used together with `ng-repeat`, for example for re-ordering\n * layers in a map.\n *\n * Example:\n *\n *     <ul ngeo-sortable=\"ctrl.layers\"\n *         ngeo-sortable-options=\"{handleClassName: 'ngeo-sortable-handle'}\">\n *       <li ng-repeat=\"layer in ctrl.layers\">\n *         <span class=\"ngeo-sortable-handle\">handle</span>{{layer.get('name')}}\n *       </li>\n *     </ul>\n *\n * The value of the \"ngeo-sortable\" attribute is an expression which evaluates\n * to an array (an array of layers in the above example). This is the array\n * that is re-ordered after a drag-and-drop.\n *\n * The element with the class \"ngeo-sortable-handle\" is the \"drag handle\".\n * It is required.\n *\n * This directives uses `$watchCollection` to watch the \"sortable\" array. So\n * if some outside code adds/removes elements to/from the \"sortable\" array,\n * the \"ngeoSortable\" directive will pick it up.\n *\n * See our live example: [../examples/layerorder.html](../examples/layerorder.html)\n *\n * @htmlAttribute {Array.<ol.layer.Base>} ngeo-sortable The layers to sort.\n * @htmlAttribute {!ngeox.miscSortableOptions} ngeo-sortable-options The options.\n * @htmlAttribute {Function(angular.JQLite, Array)?} ngeo-sortable-callback\n *     Callback function called after the move end. The Function will be called\n *     with the element and the sort array as arguments.\n * @htmlAttribute {Object?} ngeo-sortable-callback-ctx Context to apply at\n *     the call of the callback function.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @return {angular.Directive} The directive specs.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoSortable\n */\nexports.component_ = function($timeout) {\n  return {\n    restrict: 'A',\n    /**\n     * @param {angular.Scope} scope Scope.\n     * @param {angular.JQLite} element Element.\n     * @param {angular.Attributes} attrs Attributes.\n     */\n    link: (scope, element, attrs) => {\n\n      const sortable = /** @type {Array} */\n              (scope.$eval(attrs['ngeoSortable'])) || [];\n      googAsserts.assert(Array.isArray(sortable));\n\n      scope.$watchCollection(() => sortable, () => {\n        sortable.length && $timeout(resetUpDragDrop, 0);\n      });\n\n      const optionsObject = scope.$eval(attrs['ngeoSortableOptions']);\n      const options = getOptions(optionsObject);\n\n      const callbackFn = scope.$eval(attrs['ngeoSortableCallback']);\n      const callbackCtx = scope.$eval(attrs['ngeoSortableCallbackCtx']);\n\n      /**\n       * This function resets drag&drop for the list. It is called each\n       * time the sortable array changes (see $watchCollection above).\n       */\n      function resetUpDragDrop() {\n        // Add an index to the sortable to allow sorting of the\n        // underlying data.\n        const children = element.children();\n        for (let i = 0; i < children.length; ++i) {\n          angular.element(children[i]).data('idx', i);\n        }\n\n        const sortableElement = $(element);\n\n        // the element is already sortable; reset it.\n        if (sortableElement.data('ui-sortable')) {\n          sortableElement.off('sortupdate');\n          sortableElement.sortable('destroy');\n        }\n\n        const sortableOptions = {\n          'axis': 'y',\n          'classes': {\n            'ui-sortable-helper': options['draggerClassName']\n          }\n        };\n\n        // CSS class of the handle\n        if (options['handleClassName']) {\n          sortableOptions['handle'] = `.${options['handleClassName']}`;\n        }\n\n        // Placeholder for the item being dragged in the sortable list\n        if (options['placeholderClassName']) {\n          sortableOptions['placeholder'] = options['placeholderClassName'];\n          sortableOptions['forcePlaceholderSize'] = true;\n        }\n\n        sortableElement.sortable(sortableOptions);\n\n        // This event is triggered when the user stopped sorting and\n        // the DOM position (i.e. order in the sortable list) has changed.\n        sortableElement.on('sortupdate', (event, ui) => {\n          const oldIndex = $(ui.item[0]).data('idx');\n          const newIndex = ui.item.index();\n\n          // Update (data)-index on dom element to its new position\n          $(ui.item[0]).data('idx', newIndex);\n\n          // Move dragged item to new position\n          scope.$apply(() => {\n            sortable.splice(newIndex, 0, sortable.splice(oldIndex, 1)[0]);\n          });\n\n          // Call the callback function if it exists.\n          if (callbackFn instanceof Function) {\n            callbackFn.apply(callbackCtx, [element, sortable]);\n          }\n        });\n      }\n\n      /**\n       * @param {?} options Options after expression evaluation.\n       * @return {!ngeox.miscSortableOptions} Options object.\n       * @private\n       */\n      function getOptions(options) {\n        let ret;\n        const defaultHandleClassName = 'ngeo-sortable-handle';\n        if (options === undefined) {\n          ret = {'handleClassName': defaultHandleClassName};\n        } else {\n          if (options['handleClassName'] === undefined) {\n            options['handleClassName'] = defaultHandleClassName;\n          }\n          ret = /** @type {ngeox.miscSortableOptions} */ (options);\n        }\n        return ret;\n      }\n\n    }\n  };\n};\n\nexports.directive('ngeoSortable', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.message.popoverComponent\n */\nimport 'bootstrap/js/tooltip.js';\nimport 'bootstrap/js/popover.js';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoPopover', []);\n\n\n/**\n * Provides a directive used to display a Bootstrap popover.\n *\n *<div ngeo-popover>\n *  <a ngeo-popover-anchor class=\"btn btn-info\">anchor 1</a>\n *  <div ngeo-popover-content>\n *    <ul>\n *      <li>action 1:\n *        <input type=\"range\"/>\n *      </li>\n *    </ul>\n *  </div>\n *</div>\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopover\n * @return {angular.Directive} The Directive Definition Object.\n */\nexports.component_ = function() {\n  return {\n    restrict: 'A',\n    scope: true,\n    controller: 'NgeoPopoverController as popoverCtrl',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm.on('hidden.bs.popover', () => {\n        /**\n         * @type {{inState : Object}}\n         */\n        const popover = ngeoPopoverCtrl.anchorElm.data('bs.popover');\n        popover['inState'].click = false;\n      });\n\n      ngeoPopoverCtrl.anchorElm.on('inserted.bs.popover', () => {\n        ngeoPopoverCtrl.bodyElm.show();\n        ngeoPopoverCtrl.shown = true;\n      });\n\n      ngeoPopoverCtrl.anchorElm.popover({\n        container: 'body',\n        html: true,\n        content: ngeoPopoverCtrl.bodyElm,\n        placement: attrs['ngeoPopoverPlacement'] || 'right'\n      });\n\n      if (attrs['ngeoPopoverDismiss']) {\n        $(attrs['ngeoPopoverDismiss']).on('scroll', () => {\n          ngeoPopoverCtrl.dismissPopover();\n        });\n      }\n\n      scope.$on('$destroy', () => {\n        ngeoPopoverCtrl.anchorElm.popover('destroy');\n        ngeoPopoverCtrl.anchorElm.unbind('inserted.bs.popover');\n        ngeoPopoverCtrl.anchorElm.unbind('hidden.bs.popover');\n      });\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverAnchor\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.anchorComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.anchorElm = elem;\n    }\n  };\n};\n\n/**\n * @ngdoc directive\n * @ngInject\n * @ngname ngeoPopoverContent\n * @return {angular.Directive} The Directive Definition Object\n */\nexports.contentComponent = function() {\n  return {\n    restrict: 'A',\n    require: '^^ngeoPopover',\n    link: (scope, elem, attrs, ngeoPopoverCtrl) => {\n      ngeoPopoverCtrl.bodyElm = elem;\n      elem.hide();\n    }\n  };\n};\n\n/**\n * The controller for the 'popover' directive.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoPopoverController\n * @param {angular.Scope} $scope Scope.\n */\nexports.PopoverController_ = function($scope) {\n  /**\n   * The state of the popover (displayed or not)\n   * @type {boolean}\n   * @export\n   */\n  this.shown = false;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.anchorElm = undefined;\n\n  /**\n   * @type {angular.JQLite|undefined}\n   * @export\n   */\n  this.bodyElm = undefined;\n\n  function onMouseDown(clickEvent) {\n    if (this.anchorElm[0] !== clickEvent.target &&\n      this.bodyElm.parent()[0] !== clickEvent.target &\n      this.bodyElm.parent().find(clickEvent.target).length === 0 && this.shown) {\n      this.dismissPopover();\n    }\n  }\n\n  angular.element('body').on('mousedown', onMouseDown.bind(this));\n\n  $scope.$on('$destroy', () => {\n    angular.element('body').off('mousedown', onMouseDown);\n  });\n};\n\n\n/**\n * Dissmiss popover function\n * @export\n */\nexports.PopoverController_.prototype.dismissPopover = function() {\n  this.shown = false;\n  this.anchorElm.popover('hide');\n};\n\n\nexports.controller('NgeoPopoverController', exports.PopoverController_);\nexports.directive('ngeoPopover', exports.component_);\nexports.directive('ngeoPopoverAnchor', exports.anchorComponent);\nexports.directive('ngeoPopoverContent', exports.contentComponent);\n\n\nexport default exports;\n","/**\n * @module gmf.search.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfSearchFulltextSearch from 'gmf/search/FulltextSearch.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport ngeoMiscAutoProjection from 'ngeo/misc/AutoProjection.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMiscColorpickerComponent from 'ngeo/misc/colorpickerComponent.js';\n\n/** @suppress {extraRequire} */\nimport ngeoMessagePopoverComponent from 'ngeo/message/popoverComponent.js';\n\nimport ngeoSearchModule from 'ngeo/search/module.js';\nimport olFeature from 'ol/Feature.js';\nimport * as olColor from 'ol/color.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport * as olObj from 'ol/obj.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport * as olProj from 'ol/proj.js';\nimport olStyleCircle from 'ol/style/Circle.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleRegularShape from 'ol/style/RegularShape.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport * as olUri from 'ol/uri.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfSearch', [\n  gmfLayertreeTreeManager.module.name,\n  gmfSearchFulltextSearch.module.name,\n  gmfThemeThemes.module.name,\n  ngeoMiscAutoProjection.module.name,\n  ngeoMiscColorpickerComponent.name,\n  ngeoSearchModule.name,\n  ngeoMapFeatureOverlayMgr.module.name,\n  ngeoMessagePopoverComponent.name,\n]);\n\n\n/**\n * @param {angular.JQLite} element Element.\n * @param {angular.Attributes} attrs Attributes.\n * @return {string} Template URL.\n */\nexports.gmfSearchTemplateUrl_ = (element, attrs) => {\n  const templateUrl = attrs['gmfSearchTemplateurl'];\n  return templateUrl !== undefined ? templateUrl :\n    'gmf/search';\n};\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/search', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfSearchTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction gmfSearchTemplateUrl($element, $attrs, gmfSearchTemplateUrl) {\n  return gmfSearchTemplateUrl($element, $attrs);\n}\n\n\n/**\n * A component that allows to search and recenter on a selected\n * result's feature.\n * It can search in multiple GeoJSON datasources.\n * It can filter and group results by a feature's property.\n *\n * This component uses the {@link ngeo.map.FeatureOverlayMgr} to create a\n * feature overlay for drawing features on the map. The application\n * is responsible to initialize the {@link ngeo.map.FeatureOverlayMgr}\n * with the map.\n *\n * Example flat results:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 20}) | n}');\n *          module.value('gmfSearchGroups', []);\n *          module.constant('gmfSearchActions', [\n *                {action: 'add_theme', title: 'Add a theme'},\n *                {action: 'add_group', title: 'Add a sub theme'},\n *                {action: 'add_layer', title: 'Add a layer'}\n *          ]);\n *        })();\n *      </script>\n *\n * Example with categories:\n *\n *      <gmf-search gmf-search-map=\"::ctrl.map\"\n *        gmf-search-options=\"::ctrl.searchOptions\"\n *        gmf-search-styles=\"::ctrl.searchStyles\"\n *        gmf-search-datasources=\"::ctrl.searchDatasources\"\n *        gmf-search-coordinatesprojections=\"::ctrl.searchCoordinatesProjections\">\n *      </gmf-search>\n *      <script>\n *        (function() {\n *          let module = angular.module('app');\n *          module.value('fulltextsearchUrl', '${request.route_url('fulltextsearch', _query={\"limit\": 30, \"partitionlimit\": 5}) | n}');\n *          module.value('gmfSearchGroups', ${dumps(fulltextsearch_groups) | n});\n *          module.value('gmfSearchActions', []);\n *        })();\n *     </scriptrchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n *\n * The 'fulltextsearchUrl' value in the examples above set three \"_query\" parameters: \"limit\",\n * \"partitionlimit\" and \"ranksystem\". For this last one \"ts_rank_cd\" is the only effective value. It's used to\n * order your search results with the \"ts_rank_cd\" ranking system from PostgreSQL module pg_trgm. Without\n * this value, the PostgreSQL function \"similarity\" (module pg_trgm) is used for the ranking. Read the\n * full-text search c2cgeoportal documentation to know more.\n * You can also add these parameters to the \"url\" variable of one (or more) of the\n * gmfx.SearchDirectiveDatasource given to this component (here within the \"ctrl.searchDatasources\"). That\n * allows you to have multiples configurations on one search component.\n *\n * @htmlAttribute {string} gmf-search-input-value The input value (read only).\n * @htmlAttribute {ol.Map} gmf-search-map The map.\n * @htmlAttribute {TypeaheadOptions|undefined} gmf-search-options Addition Typeahead options.\n * @htmlAttribute {gmfx.SearchComponentDatasource} gmf-search-datasource\n *      The datasources.\n * @htmlAttribute {Object.<string, ol.style.Style>}\n *      gmf-search-styles A map of styles to apply on searched features. Keys\n *      must be the 'layer_name' property of features except for coordinates\n *      where the key ifor its style is the value of the constant\n *      'gmf.COORDINATES_LAYER_NAME'. The 'default' key is used to apply the\n *      default style.\n * @htmlAttribute {Array.<string>} gmf-search-coordinatesprojections codes\n *      of supported projections for coordinates search (projections must be\n *      defined in ol3). If not provided, only the map's view projection\n *      format will be supported.\n * @htmlAttribute {ngeox.SearchComponentListeners} gmf-search-listeners\n *      The listeners.\n * @htmlAttribute {boolean=} gmf-search-clearbutton Optional clear button in the input search. Default to true.\n * @htmlAttribute {number=} gmf-search-delay Optional bloodhound request delay in ms. Default to 50 ms.\n * @htmlAttribute {boolean=} gmf-search-colorchooser Optional. Whether to let the user\n *      change the style of the feature on the map. Default is false.\n * @htmlAttribute {number=} gmf-search-maxzoom Optional maximum zoom we will zoom on result, default is 16.\n * @htmlAttribute {function=} gmf-search-on-init Optional function called when the component is initialized.\n * @ngdoc component\n * @ngname gmfSearch\n */\nexports.component_ = {\n  bindings: {\n    'inputValue': '=?gmfSearchInputValue',\n    'placeholder': '@?gmfSearchPlaceholder',\n    'map': '<gmfSearchMap',\n    'datasources': '<gmfSearchDatasources',\n    'typeaheadOptions': '<?gmfSearchOptions',\n    'featuresStyles': '<?gmfSearchStyles',\n    'clearButton': '=?gmfSearchClearbutton',\n    'colorChooser': '<?gmfSearchColorchooser',\n    'coordinatesProjections': '<?gmfSearchCoordinatesprojections',\n    'additionalListeners': '<gmfSearchListeners',\n    'maxZoom': '<?gmfSearchMaxzoom',\n    'delay': '<?gmfSearchDelay',\n    'onInitCallback': '<?gmfSearchOnInit'\n  },\n  controller: 'gmfSearchController',\n  templateUrl: gmfSearchTemplateUrl\n};\n\n\nexports.value('gmfSearchTemplateUrl', exports.gmfSearchTemplateUrl_);\n\n\n// Register the controller in the module\nexports.component('gmfSearch', exports.component_);\n\n\n/**\n * @private\n */\nexports.SearchController_ = class {\n\n  /**\n   * @private\n   * @param {jQuery} $element Element.\n   * @param {angular.Scope} $scope The component's scope.\n   * @param {angular.$compile} $compile Angular compile service.\n   * @param {angular.$timeout} $timeout Angular timeout service.\n   * @param {angular.$injector} $injector Main injector.\n   * @param {angularGettext.Catalog} gettextCatalog Gettext catalog.\n   * @param {ngeo.misc.AutoProjection} ngeoAutoProjection The ngeo coordinates service.\n   * @param {ngeo.search.createGeoJSONBloodhound.Function} ngeoSearchCreateGeoJSONBloodhound The ngeo\n   *     create GeoJSON Bloodhound service.\n   * @param {ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr The ngeo feature\n   *     overlay manager service.\n   * @param {gmf.theme.Themes} gmfThemes gmf Themes service.\n   * @param {gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n   * @param {gmf.search.FulltextSearch} gmfSearchFulltextSearch gmf Full text search service.\n   * @ngInject\n   * @ngdoc controller\n   * @ngname GmfSearchController\n   */\n  constructor($element, $scope, $compile, $timeout, $injector,\n    gettextCatalog, ngeoAutoProjection, ngeoSearchCreateGeoJSONBloodhound,\n    ngeoFeatureOverlayMgr, gmfThemes, gmfTreeManager, gmfSearchFulltextSearch) {\n\n\n    /**\n     * @type {jQuery}\n     * @private\n     */\n    this.element_ = $element;\n\n    /**\n     * @type {angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n    /**\n     * @type {angular.$compile}\n     * @private\n     */\n    this.compile_ = $compile;\n\n    /**\n     * @type {angular.$timeout}\n     * @private\n     */\n    this.timeout_ = $timeout;\n\n    /**\n     * @type {angularGettext.Catalog}\n     * @private\n     */\n    this.gettextCatalog_ = gettextCatalog;\n\n    /**\n     * @type {gmf.theme.Themes}\n     * @private\n     */\n    this.gmfThemes_ = gmfThemes;\n\n    /**\n     * @type {gmf.layertree.TreeManager}\n     * @private\n     */\n    this.gmfTreeManager_ = gmfTreeManager;\n\n    /**\n     * @type {gmf.search.FulltextSearch}\n     * @private\n     */\n    this.fullTextSearch_ = gmfSearchFulltextSearch;\n\n    /**\n     * @type {ngeo.search.createGeoJSONBloodhound.Function}\n     * @private\n     */\n    this.ngeoSearchCreateGeoJSONBloodhound_ = ngeoSearchCreateGeoJSONBloodhound;\n\n    /**\n     * @type {ngeo.map.FeatureOverlayMgr}\n     * @private\n     */\n    this.ngeoFeatureOverlayMgr = ngeoFeatureOverlayMgr;\n\n    /**\n     * @type {ngeo.statemanager.Location|undefined}\n     * @private\n     */\n    this.ngeoLocation_;\n\n    if ($injector.has('ngeoLocation')) {\n      this.ngeoLocation_ = $injector.get('ngeoLocation');\n    }\n\n    /**\n     * @type {ngeo.misc.AutoProjection}\n     * @private\n     */\n    this.ngeoAutoProjection_ = ngeoAutoProjection;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {Object}\n     * @private\n     */\n    this.styles_ = {};\n\n    /**\n     * @type {function()}\n     * @export\n     */\n    this.onInitCallback;\n\n    /**\n     * Whether or not to show a button to clear the search text.\n     * Default to true.\n     * @type {boolean}\n     * @export\n     */\n    this.clearButton;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.colorChooser;\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.placeholder;\n\n    /**\n     * @type {number}\n     * @export\n     */\n    this.delay;\n\n    /**\n     * The maximum zoom we will zoom on result.\n     * @type {number}\n     * @export\n     */\n    this.maxZoom = 16;\n\n    /**\n     * Supported projections for coordinates search.\n     * @type {Array.<ol.proj.Projection>}\n     * @export\n     */\n    this.coordinatesProjections;\n\n    /**\n     * @type {ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = ngeoFeatureOverlayMgr.getFeatureOverlay();\n\n    /**\n     * @type {Array.<gmfx.SearchComponentDatasource>}\n     * @export\n     */\n    this.datasources = [];\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.typeaheadOptions;\n\n    /**\n     * @type {TypeaheadOptions}\n     * @export\n     */\n    this.options = /** @type {TypeaheadOptions} */ ({\n      highlight: true\n    });\n\n    /**\n     * @type {Object.<string, ol.style.Style>}\n     * @export\n     */\n    this.featuresStyles;\n\n    /**\n     * @type {Array.<TypeaheadDataset>}\n     * @export\n     */\n    this.datasets = [];\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.inputValue = '';\n\n    /**\n     * @type {string}\n     * @export\n     */\n    this.color;\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.displayColorPicker = false;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.listeners;\n\n    /**\n     * @type {ngeox.SearchDirectiveListeners}\n     * @export\n     */\n    this.additionalListeners;\n  }\n\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n    const gettextCatalog = this.gettextCatalog_;\n    this.clearButton = this.clearButton !== false;\n    this.colorChooser = this.colorChooser === true;\n    if (this.delay === undefined) {\n      this.delay = 50;\n    }\n    this.placeholder = this.placeholder !== undefined ? this.placeholder :\n      gettextCatalog.getString('Search…');\n\n    // Init coordinates projections\n    let coordProj = this.coordinatesProjections;\n    if (coordProj === undefined) {\n      coordProj = [this.map.getView().getProjection()];\n    } else {\n      coordProj = this.ngeoAutoProjection_.getProjectionList(\n        /** @type {Array.<string>} */ (coordProj)\n      );\n    }\n    this.coordinatesProjections = coordProj;\n\n    if (!this.clearButton) {\n      // Empty the search field on focus and blur.\n      this.element_.find('input').on('focus blur', () => {\n        this.clear();\n      });\n    }\n\n    if (this.onInitCallback) {\n      this.onInitCallback();\n    }\n\n    this.initStyles_();\n\n    this.featureOverlay_.setStyle(this.getSearchStyle_.bind(this));\n\n    if (this.typeaheadOptions) {\n      olObj.assign(this.options, this.typeaheadOptions);\n    }\n\n    this.initDatasets_();\n\n    this.scope_.$watch(\n      () => this.color,\n      this.setStyleColor.bind(this)\n    );\n\n    this.listeners = this.mergeListeners_(\n      this.additionalListeners,\n      /** @type {ngeox.SearchDirectiveListeners} */ ({\n        select: this.select_.bind(this),\n        close: this.close_.bind(this),\n        datasetsempty: this.datasetsempty_.bind(this)\n      })\n    );\n\n    if (this.ngeoLocation_) {\n      const searchQuery = this.ngeoLocation_.getParam('search');\n      if (searchQuery) {\n        let resultIndex = 1;\n        if (this.ngeoLocation_.getParam('search-select-index')) {\n          resultIndex = parseInt(this.ngeoLocation_.getParam('search-select-index'), 10);\n        }\n        let mapZoom;\n        if (this.ngeoLocation_.getParam('search-maxzoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('search-maxzoom'), 10);\n        } else if (this.ngeoLocation_.getParam('map_zoom')) {\n          mapZoom = parseInt(this.ngeoLocation_.getParam('map_zoom'), 10);\n        }\n        this.fulltextsearch_(searchQuery, resultIndex, mapZoom);\n      }\n    }\n  }\n\n\n  /**\n   * Merges the custom listeners received via the component attributes and the\n   * listeners that are needed for this controller to function (close and select).\n   * @param {ngeox.SearchDirectiveListeners} additionalListeners Custom provided\n   *    listeners.\n   * @param {ngeox.SearchDirectiveListeners} listeners Default listeners.\n   * @return {ngeox.SearchDirectiveListeners} Merged listeners.\n   * @private\n   */\n  mergeListeners_(additionalListeners, listeners) {\n    if (additionalListeners === undefined) {\n      return listeners;\n    }\n    return {\n      open: additionalListeners.open,\n      close: additionalListeners.close === undefined ?\n        listeners.close : function() {\n          listeners.close();\n          additionalListeners.close();\n        },\n      cursorchange: additionalListeners.cursorchange,\n      datasetsempty: additionalListeners.datasetsempty,\n      select: additionalListeners.select === undefined ?\n        listeners.select : function(evt, obj, dataset) {\n          listeners.select(evt, obj, dataset);\n          additionalListeners.select(evt, obj, dataset);\n        },\n      autocomplete: additionalListeners.autocomplete\n    };\n  }\n\n\n  /**\n   * Initialize datasets for the search\n   * @private\n   */\n  initDatasets_() {\n    const gettextCatalog = this.gettextCatalog_;\n    for (let i = 0; i < this.datasources.length; i++) {\n      const datasource = this.datasources[i];\n\n      /** @type {Array.<string>} */\n      const groupValues = datasource.groupValues !== undefined ? datasource.groupValues : [];\n      /** @type {Array.<string>} */\n      const groupActions = datasource.groupActions ? datasource.groupActions : [];\n      const filters = [];\n\n      if (groupValues.length === 0) {\n        filters.push({\n          'title': '',\n          'filter': this.filterLayername_()\n        });\n      } else {\n        groupValues.forEach(function(layerName) {\n          filters.push({\n            'title': layerName,\n            'filter': this.filterLayername_(layerName)\n          });\n        }, this);\n      }\n\n      groupActions.forEach(function(action) {\n        filters.push({\n          'title': gettextCatalog.getString(action['title']),\n          'filter': this.filterAction_(action['action'])\n        });\n      }, this);\n\n      filters.forEach(function(filter) {\n        this.datasets.push(this.createDataset_({\n          bloodhoundOptions: datasource.bloodhoundOptions,\n          datasetTitle: filter['title'],\n          groupsKey: 'layer_name',\n          labelKey: datasource.labelKey,\n          projection: datasource.projection,\n          typeaheadDatasetOptions: datasource.typeaheadDatasetOptions,\n          url: datasource.url\n        }, filter['filter']));\n      }, this);\n    }\n\n    // For searching coordinates\n    this.datasets.push({\n      source: this.createSearchCoordinates_(this.map.getView()),\n      name: 'coordinates',\n      display: 'label',\n      templates: {\n        header: () => {\n          const header = gettextCatalog.getString('Recenter to');\n          return `<div class=\"gmf-search-header\" translate>${header}</div>`;\n        },\n        suggestion: (suggestion) => {\n          const coordinates = suggestion['label'];\n\n          let html = `<p class=\"gmf-search-label\">${coordinates}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return html;\n        }\n      }\n    });\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter A filter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {TypeaheadDataset} A typeahead dataset.\n   * @private\n   */\n  createDataset_(config, opt_filter) {\n    const gettextCatalog = this.gettextCatalog_;\n    const componentScope = this.scope_;\n    const compile = this.compile_;\n    const bloodhoundEngine = this.createAndInitBloodhound_(config, opt_filter);\n    const typeaheadDataset = /** @type {TypeaheadDataset} */ ({\n      limit: Infinity,\n      source: bloodhoundEngine.ttAdapter(),\n      display: (suggestion) => {\n        const feature = /** @type {ol.Feature} */ (suggestion);\n        return feature.get(config.labelKey);\n      },\n      templates: /* TypeaheadTemplates */ ({\n        header: () => {\n          if (config.datasetTitle === undefined) {\n            return '';\n          } else {\n            const header = gettextCatalog.getString(config.datasetTitle);\n            return `<div class=\"gmf-search-header\">${header}</div>`;\n          }\n        },\n        suggestion: (suggestion) => {\n          const feature = /** @type {ol.Feature} */ (suggestion);\n\n          const scope = componentScope.$new(true);\n          scope['feature'] = feature;\n\n          let html = `<p class=\"gmf-search-label\" translate>${\n            feature.get(config.labelKey)}</p>`;\n          html += `<p class=\"gmf-search-group\" translate>${feature.get('layer_name') ||\n                  config.datasetTitle}</p>`;\n          html = `<div class=\"gmf-search-datum\">${html}</div>`;\n          return compile(html)(scope);\n        }\n      })\n    });\n    if (config.typeaheadDatasetOptions) {\n      olObj.assign(typeaheadDataset, config.typeaheadDatasetOptions);\n    }\n    return typeaheadDataset;\n  }\n\n\n  /**\n   * @param {string} action The action to keep.\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterAction_(action) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const properties = feature['properties'];\n        if (properties['actions']) {\n          // result is an action (add_theme, add_group, ...)\n          // add it to the corresponding group\n          return !properties['layer_name'] && properties['actions'].some(act => act.action === action);\n        } else {\n          return false;\n        }\n      }\n    );\n  }\n\n\n  /**\n   * @param {string=} opt_layerName The layerName to keep. If null, keep all layers\n   *     (In all cases, except actions layers).\n   * @return {(function(GeoJSONFeature): boolean)} A filter function based on a\n   *     GeoJSONFeaturesCollection's array.\n   * @private\n   */\n  filterLayername_(opt_layerName) {\n    return (\n    /**\n         * @param {GeoJSONFeature} feature\n         * @return {boolean}\n         */\n      function(feature) {\n        const featureLayerName = feature['properties']['layer_name'];\n        // Keep only layers with layer_name (don't keep action layers).\n        if (featureLayerName === undefined) {\n          return false;\n        }\n        if (opt_layerName === undefined) {\n          return true;\n        }\n        return featureLayerName === opt_layerName;\n      }\n    );\n  }\n\n\n  /**\n   * @param {gmfx.SearchComponentDatasource} config The config of the dataset.\n   * @param {(function(GeoJSONFeature): boolean)=} opt_filter Afilter function\n   *     based on a GeoJSONFeaturesCollection's array.\n   * @return {Bloodhound} The bloodhound engine.\n   * @private\n   */\n  createAndInitBloodhound_(config, opt_filter) {\n    const mapProjectionCode = this.map.getView().getProjection().getCode();\n    const remoteOptions = this.getBloodhoudRemoteOptions_();\n    const bloodhound = this.ngeoSearchCreateGeoJSONBloodhound_(config.url, opt_filter,\n      olProj.get(mapProjectionCode), olProj.get(config.projection),\n      config.bloodhoundOptions, remoteOptions);\n    bloodhound.initialize();\n    return bloodhound;\n  }\n\n\n  /**\n   * @return {BloodhoundRemoteOptions} Options.\n   * @private\n   */\n  getBloodhoudRemoteOptions_() {\n    const gettextCatalog = this.gettextCatalog_;\n    return {\n      rateLimitWait: this.delay,\n      prepare: (query, settings) => {\n        const url = settings.url;\n        const lang = gettextCatalog.currentLanguage;\n        settings.xhrFields = {\n          withCredentials: true\n        };\n        settings.url = olUri.appendParams(url, {\n          'query': query,\n          'lang': lang,\n        });\n        return settings;\n      }\n    };\n  }\n\n\n  /**\n   * @param {ol.View} view View.\n   * @return {function(string, function(Object))} function defining parameters for the search suggestions.\n   * @private\n   */\n  createSearchCoordinates_(view) {\n    const viewProjection = view.getProjection();\n    const extent = viewProjection.getExtent();\n    return function(query, callback) {\n      const suggestions = [];\n      const coordinates = this.ngeoAutoProjection_.stringToCoordinates(query);\n      if (coordinates === null) {\n        return;\n      }\n      const position = this.ngeoAutoProjection_.tryProjectionsWithInversion(coordinates,\n        extent, viewProjection, this.coordinatesProjections);\n      if (position === null) {\n        return;\n      }\n      suggestions.push({\n        label: coordinates.join(' '),\n        position: position,\n        'tt_source': 'coordinates'\n      });\n      callback(suggestions);\n    }.bind(this);\n  }\n\n\n  /**\n   * Init the style object for the search results. It set defaults for the\n   * coordinates and the polygon styles, and both can be overloaded from component\n   * attributes. The styles from component attributes can specify custom styles\n   * for each search group.\n   * @private\n   */\n  initStyles_() {\n    this.styles_[gmfBase.COORDINATES_LAYER_NAME] = new olStyleStyle({\n      image: new olStyleRegularShape({\n        stroke: new olStyleStroke({color: [0, 0, 0, 0.7], width: 2}),\n        points: 4,\n        radius: 8,\n        radius2: 0,\n        angle: 0\n      })\n    });\n    const fill = new olStyleFill({\n      color: [65, 134, 240, 0.5]\n    });\n    const stroke = new olStyleStroke({\n      color: [65, 134, 240, 1],\n      width: 2\n    });\n    this.styles_['default'] = new olStyleStyle({\n      fill: fill,\n      image: new olStyleCircle({\n        fill: fill,\n        radius: 5,\n        stroke: stroke\n      }),\n      stroke: stroke\n    });\n    const customStyles = this.featuresStyles || {};\n    olObj.assign(this.styles_, customStyles);\n  }\n\n  /**\n   * Style for search results.\n   * @param {null|ol.Feature|ol.render.Feature} feature The searched feature.\n   * @param {number} resolution The current resolution of the map.\n   * @return {ol.style.Style} A style for this kind of features.\n   * @private\n   */\n  getSearchStyle_(feature, resolution) {\n    googAsserts.assert(feature);\n    const style = this.styles_[feature.get('layer_name')] || this.styles_['default'];\n    if (this.color) {\n      const color = olColor.asArray(this.color);\n\n      const strokeColor = color.slice();\n      // 100% opacity for the stroke color\n      strokeColor[3] = 1;\n\n      const fillColor = color.slice();\n      // 50% opacity for the fill color\n      fillColor[3] = 0.5;\n\n      const strokeStyle = style.getStroke();\n      if (strokeStyle) {\n        strokeStyle.setColor(strokeColor);\n      }\n      const fillStyle = style.getFill();\n      if (fillStyle) {\n        fillStyle.setColor(fillColor);\n      }\n      // the image style can't be changed in place, the colors are updated on a clone.\n      let imageStyle = style.getImage();\n      if (imageStyle) {\n        imageStyle = imageStyle.clone();\n        const imageStrokeStyle = imageStyle.getStroke();\n        if (imageStrokeStyle) {\n          imageStrokeStyle.setColor(strokeColor);\n        }\n        const imageFillStyle = imageStyle.getFill();\n        if (imageFillStyle) {\n          imageFillStyle.setColor(fillColor);\n        }\n        style.setImage(imageStyle);\n      }\n    }\n    return style;\n  }\n\n  /**\n   * Set a new color for the search feature style.\n   * @param {string} color The color to set.\n   * @export\n   */\n  setStyleColor(color) {\n    if (color) {\n      this.color = color;\n      this.ngeoFeatureOverlayMgr.getLayer().changed();\n    }\n  }\n\n  /**\n   * @private\n   */\n  setTTDropdownVisibility_() {\n    if (this.clearButton) {\n      const ttDropdown = this.element_.find('.twitter-typeahead .tt-menu');\n      (this.inputValue) ? ttDropdown.show() : ttDropdown.hide();\n    }\n  }\n\n\n  /**\n   * @export\n   */\n  onClearButton() {\n    this.featureOverlay_.clear();\n    this.clear();\n  }\n\n\n  /**\n   * @export\n   */\n  clear() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const ttmenu = typeahead.children('.tt-menu');\n    const inputs = typeahead.children('input');\n    // clear model value, the 'real' input value and tt's suggestions\n    this.inputValue = '';\n    $(inputs[1]).typeahead('val', '');\n    ttmenu.children('.tt-dataset').empty();\n    this.setTTDropdownVisibility_();\n    this.displayColorPicker = false;\n  }\n\n\n  /**\n   * @export\n   */\n  blur() {\n    const typeahead = this.element_.find('.twitter-typeahead');\n    const inputs = typeahead.children('input');\n    // Blur as soon as possible in digest loops\n    this.timeout_(() => {\n      $(inputs[1]).blur();\n    });\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {Object|ol.Feature} suggestion Suggestion.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  select_(event, suggestion, dataset) {\n    if (suggestion['tt_source'] === 'coordinates') {\n      const geom = new olGeomPoint(suggestion['position']);\n\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(new olFeature({\n        geometry: geom,\n        'layer_name': gmfBase.COORDINATES_LAYER_NAME\n      }));\n      this.map.getView().setCenter(suggestion['position']);\n      this.leaveSearch_();\n    } else {\n      googAsserts.assertInstanceof(suggestion, olFeature);\n      this.selectFromGMF_(event, suggestion, dataset);\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {ol.Feature} feature Feature.\n   * @param {TypeaheadDataset} dataset Dataset.\n   * @private\n   */\n  selectFromGMF_(event, feature, dataset) {\n    const actions = feature.get('actions');\n    const featureGeometry = /** @type {ol.geom.SimpleGeometry} */\n        (feature.getGeometry());\n    if (actions) {\n      for (let i = 0, ii = actions.length; i < ii; i++) {\n        const action = actions[i];\n        const actionName = action['action'];\n        const actionData = action['data'];\n        if (actionName == 'add_theme') {\n          this.gmfThemes_.getThemesObject().then((themes) => {\n            const theme = gmfThemeThemes.findThemeByName(themes, actionData);\n            if (theme) {\n              this.gmfTreeManager_.addFirstLevelGroups(theme.children);\n            }\n          });\n        } else if (actionName == 'add_group') {\n          this.gmfTreeManager_.addGroupByName(actionData, true);\n        } else if (actionName == 'add_layer') {\n          const groupActions = /** @type {Array.<string>} */ (\n            this.datasources[0].groupActions);\n          let datasourcesActionsHaveAddLayer;\n          groupActions.forEach((groupAction) => {\n            if (groupAction['action'] === 'add_layer') {\n              return datasourcesActionsHaveAddLayer = true;\n            }\n          });\n          if (datasourcesActionsHaveAddLayer) {\n            const silent = !!featureGeometry;\n            this.gmfTreeManager_.addGroupByLayerName(actionData, true, silent);\n          }\n        }\n      }\n    }\n\n    const size = this.map.getSize();\n    if (featureGeometry && size) {\n      const view = this.map.getView();\n      this.featureOverlay_.clear();\n      this.featureOverlay_.addFeature(feature);\n      this.displayColorPicker = true;\n      const fitArray = featureGeometry.getType() === 'GeometryCollection' ?\n        featureGeometry.getExtent() : featureGeometry;\n      view.fit(fitArray, {\n        size: size,\n        maxZoom: this.maxZoom\n      });\n    }\n    this.leaveSearch_();\n  }\n\n\n  /**\n   * @private\n   */\n  leaveSearch_() {\n    if (!this.clearButton) {\n      this.clear();\n    }\n    this.blur();\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @private\n   */\n  close_(event) {\n    if (!this.clearButton) {\n      this.setTTDropdownVisibility_();\n    }\n  }\n\n\n  /**\n   * @param {jQuery.Event} event Event.\n   * @param {string} query Query.\n   * @param {boolean} empty Empty.\n   * @private\n   */\n  datasetsempty_(event, query, empty) {\n    // workaround to display a 'no result found' in the search result when all of\n    // the datasets are empty.\n    // based on https://github.com/twitter/typeahead.js/issues/780#issuecomment-251554452\n    // FIXME: remove this workaround when https://github.com/corejavascript/typeahead.js/issues/60 is fixed\n\n    const menu = this.element_.find('.twitter-typeahead .tt-menu');\n    const message = menu.children('.gmf-search-no-results');\n    if (message.length == 0) {\n      const div = $('<div class=\"gmf-search-no-results\" translate>No result found</div>');\n      menu.append(div);\n    }\n    if (empty) {\n      message.show();\n      menu.addClass('gmf-search-no-results');\n    } else {\n      menu.removeClass('gmf-search-no-results');\n      message.hide();\n    }\n  }\n\n\n  /**\n   * Performs a full-text search and centers the map on the first search result.\n   * @param {string} query Search query.\n   * @param {number} resultIndex Return nth result instead.\n   * @param {number=} opt_zoom Optional zoom level.\n   * @private\n   */\n  fulltextsearch_(query, resultIndex, opt_zoom) {\n    if (resultIndex < 1) { // can't be lower than one\n      resultIndex = 1;\n    }\n    this.fullTextSearch_.search(query, {'limit': resultIndex})\n      .then((data) => {\n        if (data && data.features[resultIndex - 1]) {\n          const format = new olFormatGeoJSON();\n          const feature = format.readFeature(data.features[resultIndex - 1]);\n          this.featureOverlay_.addFeature(feature);\n          const fitOptions = /** @type {olx.view.FitOptions} */ ({});\n          if (opt_zoom !== undefined) {\n            fitOptions.maxZoom = opt_zoom;\n            fitOptions.size = this.map.getSize();\n          }\n          this.map.getView().fit(feature.getGeometry().getExtent(), fitOptions);\n          this.inputValue = /** @type {string} */ (feature.get('label'));\n        }\n      });\n  }\n};\n\n\n// Register the controller in the module\nexports.controller('gmfSearchController', exports.SearchController_);\n\n\nexport default exports;\n","/**\n * @module ngeo.map.recenter\n */\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoRecenter', []);\n\n/**\n * Provides the \"ngeoRecenter\" directive, a widget for recentering a map\n * to a specific extent (by using `ngeo-extent`) or a specific zoom level\n * (by using `ngeo-zoom`).\n *\n * Example:\n *\n *      <div ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <a href=\"#\" ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</a>\n *        <a href=\"#\" ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</a>\n *        <a href=\"#\" ngeo-zoom=\"1\">Zoom to level 1</a>\n *      </div>\n *\n * Or with a select:\n *\n *      <select ngeo-recenter ngeo-recenter-map=\"::ctrl.map\">\n *        <option ngeo-extent=\"[-1898084, 4676723, 3972279, 8590299]\">A</option>\n *        <option ngeo-extent=\"[727681, 5784754, 1094579, 6029353]\">B</option>\n *      </select>\n *\n * See our live example: [../examples/recenter.html](../examples/recenter.html)\n *\n * @htmlAttribute {ol.Map} ngeo-recenter-map The map.\n * @return {angular.Directive} Directive Definition Object.\n * @ngdoc directive\n * @ngname ngeoRecenter\n */\nexports.directive_ = function() {\n  return {\n    restrict: 'A',\n    link: ($scope, $element, $attrs) => {\n      const mapExpr = $attrs['ngeoRecenterMap'];\n      const map = /** @type {ol.Map} */ ($scope.$eval(mapExpr));\n\n      function recenter(element) {\n        const extent = element.attr('ngeo-extent');\n        if (extent !== undefined) {\n          const size = /** @type {ol.Size} */ (map.getSize());\n          map.getView().fit($scope.$eval(extent), {size});\n        }\n        const zoom = element.attr('ngeo-zoom');\n        if (zoom !== undefined) {\n          map.getView().setZoom($scope.$eval(zoom));\n        }\n      }\n\n      // if the children is a link or button\n      $element.on('click', '*', function(event) {\n        recenter(angular.element($(this)));\n      });\n\n      // if the children is an option inside a select\n      $element.on('change', (event) => {\n        const selected = event.target.options[event.target.selectedIndex];\n        recenter(angular.element(selected));\n      });\n\n    }\n  };\n};\n\n// Register the directive in the module\nexports.directive('ngeoRecenter', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.misc.syncArrays\n */\nimport googAsserts from 'goog/asserts.js';\n\n/**\n * Provides a function that synchronizes two arrays, arr1 and\n * arr2. arr2 is a subset of arr1, it includes the elements of arr1 that passes\n * the filter. When elements are added to/removed from arr1, arr2 is updated to\n * include the elements of arr1 that pass the filter. When the order of\n * elements in arr2 changes, arr1 is reordered to have the same order as arr2.\n *\n * This can for example be used to synchronize the array of layers in the map\n * with the array of selected layers, where layers may be added to/removed from\n * the map, and the order of selected layers may change.\n *\n *     let dereg = ngeoSyncArrays(map.getLayers().getArray(), selectedLayers,\n *         true, scope, function(layer) {\n *           // exclude the layer at index 0 in the map\n *           return map.getLayers().indexOf(layer) !== 0;\n *         });\n *\n * This will return a function that can be called to cancel synchronization.\n *\n * @param {Array.<T>} arr1 Array 1.\n * @param {Array.<T>} arr2 Array 2.\n * @param {boolean} reverse `true` if arr2 is in reverse order, `false`\n *     otherwise.\n * @param {angular.Scope} scope Angular scope. Used to watch arr1 and arr2\n *     using $watchCollection.\n * @param {function(T):boolean} filter Filter function.\n * @return {function()} Function to call to stop synchronization\n * @template T\n */\nconst exports = function(arr1, arr2, reverse, scope, filter) {\n\n\n  // Update arr2 when elements are added to, or removed from, arr1.\n\n  const dereg1 = scope.$watchCollection(() => arr1, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = arr1.length - 1, j = 0; i >= 0; --i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr2[j++] = arr1[i];\n        }\n      }\n    }\n    arr2.length = j;\n  });\n\n\n  // Update arr1 when the order of elements changes in arr2.\n\n  const dereg2 = scope.$watchCollection(() => arr2, () => {\n    let i, ii, j;\n    if (reverse) {\n      for (i = 0, ii = arr1.length, j = arr2.length - 1; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j--];\n        }\n      }\n      googAsserts.assert(j == -1);\n    } else {\n      for (i = 0, ii = arr1.length, j = 0; i < ii; ++i) {\n        if (filter(arr1[i])) {\n          arr1[i] = arr2[j++];\n        }\n      }\n      googAsserts.assert(j == arr2.length);\n    }\n  });\n\n  return function() {\n    dereg1();\n    dereg2();\n  };\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.layertree.component\n */\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\n\nimport 'bootstrap/js/collapse.js'; // needed to collapse a layertree\n\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoLayertree', [\n  ngeoLayertreeController.module.name\n]);\n\n\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => {\n    const templateUrl = attrs['ngeoLayertreeTemplateurl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/layertree';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/layertree', require('./component.html'));\n});\n\n\n/**\n * Provides the \"ngeoLayertree\" directive, a directive for\n * creating layer trees in application.\n *\n * The directive assumes that tree nodes that are not leaves have a \"children\"\n * property referencing an array of child nodes.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\">\n *      </div>\n *\n * The \"ngeo-layertree\", \"ngeo-layertree-map\" and\n * \"ngeo-layertree-nodelayer\" attributes are mandatory attributes.\n *\n * - \"ngeo-layertree\" specifies an expression providing the tree. The\n *   directive watches that expression, making it possible to retrieve\n *   the tree data through Ajax.\n *\n * - \"ngeo-layertree-map\" specifies an expression providing the OpenLayers\n *   map. The directive doesn't watch that expression.\n *\n * - The \"ngeo-layertree-nodelayer\" specifies an expression providing the\n *   layer for a given node. In most cases that expression will be function\n *   call with \"node\" as the argument to the function call. E.g.\n *   \"ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\".\n *\n * - The \"ngeo-layertree-listeners\" specifies an expression providing a function\n *   to bind scope events to customs functions. You'll must set the listener on\n *   the \"treeScope\" and probably use \"treeCtrl\" as context. E.g.\n *   \"ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\".\n *\n * The directive comes with a default template. That template assumes that\n * tree nodes that are not leaves have a \"children\" property referencing an\n * array of child nodes. It also assumes that nodes have a \"name\" property.\n *\n * By default the directive uses \"layertree.html\" as its templateUrl. This\n * can be changed by redefining the \"ngeoLayertreeTemplateUrl\" value (using\n * app.module.value('ngeoLayertreeTemplateUrl', 'path/layertree.html'), or\n * by adding an \"ngeo-layertree-templateurl\" attribute to the element.\n *\n * Example:\n *\n *      <div ngeo-layertree=\"ctrl.tree\"\n *        ngeo-layertree-templateurl=\"path/to/layertree.html\"\n *        ngeo-layertree-map=\"ctrl.map\"\n *        ngeo-layertree-nodelayer=\"ctrl.getLayer(node)\"\n *        ngeo-layertree-listeners=\"ctrl.listeners(treeScope, treeCtrl)\"\n *      </div>\n *\n * The directive has its own scope, but it is not an isolate scope. That scope\n * has a \"layertreeCtrl\" property which is a reference to the directive's\n * controller: \"layertreeCtrl\". You can refer to that property in a custom\n * template for example.\n *\n * See our live example: [../examples/layertree.html](../examples/layertree.html)\n *\n * @htmlAttribute {Object} ngeo-layertree One theme (JSON).\n * @htmlAttribute {string} ngeo-layertree-templateurl The template URL.\n * @htmlAttribute {ol.Map} ngeo-layertree-map The map.\n * @htmlAttribute {string} ngeo-layertree-nodelayer Expression that will be parsed\n *      to be a {@link Function} that return a {@link ol.layer.Layer}\n *      with the argument:\n *      {\n *          'node': {@link Object}|undefined,\n *          'depth': {@link number}\n *      }\n * @htmlAttribute {string} ngeo-layertree-nodelayerexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-nodelayer}.\n * @htmlAttribute {string} ngeo-layertree-listeners Expression that will be parsed\n *      to be a {@link Function} with the argument:\n *      {\n *          'treeScope': !{@link angular.Scope},\n *          'treeCtrl': {@link ngeo.layertree.Controller}\n *      }\n * @htmlAttribute {string} ngeo-layertree-listenersexpr Expression that will be parsed\n *      to be a {@link ngeo-layertree-listeners}.\n * @param {string|function(!angular.JQLite=, !angular.Attributes=)}\n *     ngeoLayertreeTemplateUrl Template URL for the directive.\n * @return {angular.Directive} The Directive Definition Object.\n * @ngInject\n * @ngdoc directive\n * @ngname ngeoLayertree\n */\nexports.directive_ = function(ngeoLayertreeTemplateUrl) {\n  return {\n    restrict: 'A',\n    scope: true,\n    templateUrl: ngeoLayertreeTemplateUrl,\n    controller: ngeoLayertreeController\n  };\n};\n\n\nexports.directive('ngeoLayertree', exports.directive_);\n\n\nexport default exports;\n","/**\n * @module ngeo.olcs.constants\n */\nconst exports = {};\n\n/**\n * @enum {string}\n * @export\n */\nexports.Permalink3dParam = {\n  /**\n   * @type {string}\n   * @export\n   */\n  ENABLED: '3d_enabled',\n  /**\n   * @type {string}\n   * @export\n   */\n  LON: '3d_lon',\n  /**\n   * @type {string}\n   * @export\n   */\n  LAT: '3d_lat',\n  /**\n   * @type {string}\n   * @export\n   */\n  ELEVATION: '3d_elevation',\n  /**\n   * @type {string}\n   * @export\n   */\n  HEADING: '3d_heading',\n  /**\n   * @type {string}\n   * @export\n   */\n  PITCH: '3d_pitch',\n  /**\n   * @type {string}\n   * @export\n   */\n  PREFIX: '3d_'\n};\n\n\nexport default exports;\n","/**\n * @module ngeo.Popover\n */\nimport * as olBase from 'ol/index.js';\nimport olOverlay from 'ol/Overlay.js';\n\n/**\n * @classdesc\n * An openlayers overlay that uses bootstrap popover to produce a popup\n * for maps.\n *\n * @constructor\n * @extends {ol.Overlay}\n * @param {olx.OverlayOptions=} opt_options Overlay options.\n */\nconst exports = function(opt_options) {\n\n  const options = opt_options !== undefined ? opt_options : {};\n\n  let originalEl;\n  if (options.element) {\n    originalEl = options.element;\n    delete options.element;\n  } else {\n    originalEl = $('<div />')[0];\n  }\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.closeEl_ = $('<button>', {\n    'class': 'close',\n    'html': '&times;'\n  });\n\n  /**\n   * @type {jQuery}\n   * @private\n   */\n  this.contentEl_ = $('<div/>')\n    .append(this.closeEl_)\n    .append(originalEl);\n\n  options.element = $('<div />')[0];\n\n  olOverlay.call(this, options);\n\n};\n\nolBase.inherits(exports, olOverlay);\n\n\n/**\n * @override\n */\nexports.prototype.setMap = function(map) {\n\n  const element = this.getElement();\n\n  const currentMap = this.getMap();\n  if (currentMap) {\n    $(element).popover('destroy');\n  }\n\n  olOverlay.prototype.setMap.call(this, map);\n\n  if (map) {\n    const contentEl = this.contentEl_;\n    // wait for the overlay to be rendered in the map before poping over\n    window.setTimeout(() => {\n      $(element)\n        .popover({\n          'content': contentEl,\n          'html': true,\n          'placement': 'top',\n          'template': [\n            '<div class=\"popover ngeo-popover\" role=\"tooltip\">',\n            '  <div class=\"arrow\"></div>',\n            '  <h3 class=\"popover-title\"></h3>',\n            '  <div class=\"popover-content\"></div>',\n            '</div>'\n          ].join('')\n        })\n        .popover('show');\n    }, 0);\n\n    this.closeEl_.one('click', () => {\n      const map = this.getMap();\n      if (map) {\n        map.removeOverlay(this);\n      }\n    });\n  }\n};\n\n\nexport default exports;\n","/**\n * @module gmf.layertree.component\n */\nimport gmfBase from 'gmf/index.js';\nimport gmfDatasourceDataSourceBeingFiltered from 'gmf/datasource/DataSourceBeingFiltered.js';\nimport gmfDatasourceExternalDataSourcesManager from 'gmf/datasource/ExternalDataSourcesManager.js';\nimport gmfPermalinkPermalink from 'gmf/permalink/Permalink.js';\n\n/** @suppress {extraRequire} */\nimport gmfLayertreeDatasourceGroupTreeComponent from 'gmf/layertree/datasourceGroupTreeComponent.js';\n\nimport gmfLayertreeSyncLayertreeMap from 'gmf/layertree/SyncLayertreeMap.js';\nimport gmfLayertreeTreeManager from 'gmf/layertree/TreeManager.js';\nimport gmfThemeThemes from 'gmf/theme/Themes.js';\nimport googAsserts from 'goog/asserts.js';\nimport ngeoDatasourceOGC from 'ngeo/datasource/OGC.js';\n\n/** @suppress {extraRequire} */\nimport ngeoLayertreeComponent from 'ngeo/layertree/component.js';\n\nimport ngeoLayertreeController from 'ngeo/layertree/Controller.js';\nimport ngeoMapLayerHelper from 'ngeo/map/LayerHelper.js';\nimport ngeoMiscSyncArrays from 'ngeo/misc/syncArrays.js';\nimport ngeoMiscWMSTime from 'ngeo/misc/WMSTime.js';\nimport olLayerTile from 'ol/layer/Tile.js';\nimport olLayerLayer from 'ol/layer/Layer.js';\nimport * as olObj from 'ol/obj.js';\nimport olSourceImageWMS from 'ol/source/ImageWMS.js';\nimport olSourceTileWMS from 'ol/source/TileWMS.js';\nimport olSourceWMTS from 'ol/source/WMTS.js';\n\nimport 'bootstrap/js/collapse.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('gmfLayertreeComponent', [\n  gmfDatasourceDataSourceBeingFiltered.module.name,\n  gmfDatasourceExternalDataSourcesManager.module.name,\n  gmfPermalinkPermalink.module.name,\n  gmfLayertreeDatasourceGroupTreeComponent.name,\n  gmfLayertreeSyncLayertreeMap.module.name,\n  gmfLayertreeTreeManager.module.name,\n  gmfThemeThemes.module.name,\n  ngeoLayertreeComponent.name,\n  ngeoLayertreeController.module.name,\n  ngeoMapLayerHelper.module.name,\n  ngeoMiscWMSTime.module.name,\n]);\n\n\n// Overrides the path to the layertree template (used by each node, except\n// the root node that path is defined by the gmfLayertreeTemplate value.\nexports.value('ngeoLayertreeTemplateUrl',\n  /**\n   * @param {angular.JQLite} element Element.\n   * @param {angular.Attributes} attrs Attributes.\n   * @return {string} Template URL.\n   */\n  (element, attrs) => 'gmf/layertree');\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('gmf/layertree', require('./component.html'));\n});\n\n\nexports.value('gmfLayertreeTemplate',\n  /**\n   * @param {!angular.JQLite} $element Element.\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template.\n   */\n  ($element, $attrs) => {\n    const subTemplateUrl = 'gmf/layertree';\n    return '<div ngeo-layertree=\"gmfLayertreeCtrl.root\" ' +\n          'ngeo-layertree-map=\"gmfLayertreeCtrl.map\" ' +\n          'ngeo-layertree-nodelayer=\"gmfLayertreeCtrl.getLayer(treeCtrl)\" ' +\n          'ngeo-layertree-listeners=\"gmfLayertreeCtrl.listeners(treeScope, treeCtrl)\" ' +\n          `ngeo-layertree-templateurl=\"${subTemplateUrl}\">` +\n          '</div>';\n  }\n);\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.JQLite, !angular.Attributes): string} gmfLayertreeTemplate Template function.\n * @return {string} Template.\n * @ngInject\n */\nfunction gmfLayertreeTemplate($element, $attrs, gmfLayertreeTemplate) {\n  return gmfLayertreeTemplate($element, $attrs);\n}\n\n\n/**\n * This component creates a layertree based on the c2cgeoportal JSON themes\n * source and a {@link ngeo.layertreeComponent}. The controller used by this\n * component defines some functions for each node that are created by a default\n * template. This default template can be overridden by setting the value\n * 'gmf.layertreeTemplateUrl' but you will have to adapt the\n * ngeoLayertreeTemplateUrl value too (to define the children's nodes template\n * path).\n *\n * Example:\n *\n *      <gmf-layertree\n *        gmf-layertree-dimensions=\"ctrl.dimensions\"\n *        gmf-layertree-map=\"ctrl.map\">\n *      </gmf-layertree>\n *\n * You can add an attribute 'gmf-layertree-openlinksinnewwindow=\"::true\"' to open\n * metadata URLs in a new window. By default, and in the default template,\n * links will be opened in a popup (The window.gmfx.openIframePopup function must be available !)\n *\n * Used UI metadata:\n *\n *  * isChecked: if 'false' the layer visibility will be set to false.\n *  * iconUrl: layer icon full URL.\n *  * legendRule: WMS rule used to get a layer icon.\n *  * isLegendExpanded: if 'true' the legend is expanded by default.\n *  * metadataUrl: Display a popup with the content of the given URL if\n *    possible also open a new window.\n *\n * @htmlAttribute {ol.Map} gmf-layertree-map The map.\n * @htmlAttribute {Object<string, string>|undefined} gmf-layertree-dimensions Global dimensions object.\n * @htmlAttribute {boolean|undefined} gmf-layertree-openlinksinnewwindow if true, open\n *     metadataURLs in a new window. Otherwise open them in a popup.\n *\n * @ngdoc component\n * @ngname gmfLayertreeComponent\n */\nexports.component_ = {\n  controller: 'GmfLayertreeController as gmfLayertreeCtrl',\n  bindings: {\n    'map': '=gmfLayertreeMap',\n    'dimensions': '=?gmfLayertreeDimensions',\n    'openLinksInNewWindow': '<?gmfLayertreeOpenlinksinnewwindow',\n  },\n  template: gmfLayertreeTemplate\n};\n\nexports.component('gmfLayertree', exports.component_);\n\n\n/**\n * @param {angular.JQLite} $element Element.\n * @param {!angular.Scope} $scope Angular scope.\n * @param {!ngeo.map.LayerHelper} ngeoLayerHelper Ngeo Layer Helper.\n * @param {gmfx.datasource.DataSourceBeingFiltered} gmfDataSourceBeingFiltered\n *     The Gmf value service that determines the data source currently being\n *     filtered.\n * @param {!gmf.datasource.ExternalDataSourcesManager}\n *     gmfExternalDataSourcesManager The Gmf external data sources manager\n *     service. Used here to fetch the external WMS groups.\n * @param {!gmf.permalink.Permalink} gmfPermalink The gmf permalink service.\n * @param {!gmf.layertree.TreeManager} gmfTreeManager gmf Tree Manager service.\n * @param {!gmf.layertree.SyncLayertreeMap} gmfSyncLayertreeMap gmfSyncLayertreeMap service.\n * @param {!ngeo.misc.WMSTime} ngeoWMSTime wms time service.\n * @param {!gmf.theme.Themes} gmfThemes The gmf Themes service.\n * @constructor\n * @private\n * @struct\n * @ngInject\n * @ngdoc controller\n * @ngname gmfLayertreeController\n */\nexports.Controller_ = function($element, $scope, ngeoLayerHelper, gmfDataSourceBeingFiltered,\n  gmfExternalDataSourcesManager, gmfPermalink, gmfTreeManager, gmfSyncLayertreeMap, ngeoWMSTime, gmfThemes) {\n\n  /**\n   * @type {?ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {?Object<string, string>}\n   * @export\n   */\n  this.dimensions;\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {!ngeo.map.LayerHelper}\n   * @private\n   */\n  this.layerHelper_ = ngeoLayerHelper;\n\n  /**\n   * @type {gmfx.datasource.DataSourceBeingFiltered}\n   * @export\n   */\n  this.gmfDataSourceBeingFiltered = gmfDataSourceBeingFiltered;\n\n  /**\n   * @type {!gmf.datasource.ExternalDataSourcesManager}\n   * @export\n   */\n  this.gmfExternalDataSourcesManager = gmfExternalDataSourcesManager;\n\n  /**\n   * @type {!gmf.permalink.Permalink}\n   * @private\n   */\n  this.gmfPermalink_ = gmfPermalink;\n\n  /**\n   * @type {!gmf.layertree.TreeManager}\n   * @private\n   */\n  this.gmfTreeManager_ = gmfTreeManager;\n\n  const root = gmfTreeManager.root;\n  googAsserts.assert(root);\n\n  /**\n   * @type {!gmfThemes.GmfRootNode}\n   * @export\n   */\n  this.root = root;\n\n  /**\n   * @type {!gmf.layertree.SyncLayertreeMap}\n   * @private\n   */\n  this.gmfSyncLayertreeMap_ = gmfSyncLayertreeMap;\n\n  /**\n   * @type {!ngeo.misc.WMSTime}\n   * @private\n   */\n  this.ngeoWMSTime_ = ngeoWMSTime;\n\n  /**\n   * @type {!Object.<number, !Array.<string>>}\n   * @private\n   */\n  this.groupNodeStates_ = {};\n\n  /**\n   * @type {boolean|undefined}\n   * @export\n   */\n  this.openLinksInNewWindow;\n\n  /**\n   * @type {?ol.layer.Group}\n   * @private\n   */\n  this.dataLayerGroup_ = null;\n\n  /**\n   * @type {!Array.<!ol.layer.Base>}\n   * @export\n   */\n  this.layers = [];\n\n  /**\n   * @type {!gmf.theme.Themes}\n   * @private\n   */\n  this.gmfThemes_ = gmfThemes;\n\n  // enter digest cycle on node collapse\n  $element.on('shown.bs.collapse', () => {\n    this.scope_.$apply();\n  });\n};\n\n\n/**\n * Init the controller,\n */\nexports.Controller_.prototype.$onInit = function() {\n  this.openLinksInNewWindow = this.openLinksInNewWindow === true;\n  this.dataLayerGroup_ = this.layerHelper_.getGroupFromMap(this.map,\n    gmfBase.DATALAYERGROUP_NAME);\n\n  ngeoMiscSyncArrays(this.dataLayerGroup_.getLayers().getArray(), this.layers, true, this.scope_, () => true);\n\n  // watch any change on layers array to refresh the map\n  this.scope_.$watchCollection(() => this.layers,\n    () => {\n      this.map.render();\n    });\n\n  // watch any change on dimensions object to refresh the layers\n  this.scope_.$watchCollection(() => {\n    if (this.gmfTreeManager_.rootCtrl) {\n      return this.dimensions;\n    }\n  }, (dimensions) => {\n    if (dimensions) {\n      this.updateDimensions_(this.gmfTreeManager_.rootCtrl);\n    }\n  });\n};\n\n\n/**\n * @param {ngeo.layertree.Controller} treeCtrl Layer tree controller.\n * @private\n */\nexports.Controller_.prototype.updateDimensions_ = function(treeCtrl) {\n  treeCtrl.traverseDepthFirst((ctrl) => {\n    if (ctrl.node.dimensions) {\n      const layer = ctrl.layer;\n      googAsserts.assertInstanceof(layer, olLayerLayer);\n      this.updateLayerDimensions_(layer, /** @type gmfThemes.GmfGroup|gmfThemes.GmfLayer */ (ctrl.node));\n    }\n  });\n};\n\n\n/**\n * @param {ol.layer.Layer} layer Layer to update.\n * @param {gmfThemes.GmfGroup|gmfThemes.GmfLayer} node Layer tree node.\n * @private\n */\nexports.Controller_.prototype.updateLayerDimensions_ = function(layer, node) {\n  if (this.dimensions && node.dimensions) {\n    const dimensions = {};\n    for (const key in node.dimensions) {\n      if (node.dimensions[key] === null) {\n        const value = this.dimensions[key];\n        if (value !== undefined) {\n          dimensions[key] = value;\n        }\n      } else {\n        dimensions[key] = node.dimensions[key];\n      }\n    }\n    if (!olObj.isEmpty(dimensions)) {\n      const source = layer.getSource();\n      if (source instanceof olSourceWMTS) {\n        source.updateDimensions(dimensions);\n      } else if (source instanceof olSourceTileWMS || source instanceof olSourceImageWMS) {\n        source.updateParams(dimensions);\n      } else {\n        // the source is not ready yet\n        layer.once('change:source', () => {\n          googAsserts.assertInstanceof(layer, olLayerLayer);\n          this.updateLayerDimensions_(layer, node);\n        });\n      }\n    }\n  }\n};\n\n\n/**\n * Use the gmfSyncLayertreeMap_ to create and get layer corresponding to this\n * treeCtrl. The layer will be inserted into the map. The layer can be null\n * if the treeCtrl is based on a node inside a mixed node. It this case, the\n * layer will be in the first parent declared as a mixed node.\n * @param {ngeo.layertree.Controller} treeCtrl tree controller of the node\n * @return {ol.layer.Base|ol.layer.Group|null} The OpenLayers layer or group\n *     for the node.\n * @export\n */\nexports.Controller_.prototype.getLayer = function(treeCtrl) {\n  let opt_position;\n  if (treeCtrl.parent.isRoot) {\n    this.gmfTreeManager_.rootCtrl = treeCtrl.parent;\n    // Precise the index to add first level groups.\n    opt_position = this.gmfTreeManager_.root.children.length -\n        this.gmfTreeManager_.numberOfGroupsToAddInThisDigestLoop || 0;\n  }\n\n  const layer = this.gmfSyncLayertreeMap_.createLayer(treeCtrl, this.map,\n    this.dataLayerGroup_, opt_position);\n\n  if (layer instanceof olLayerLayer) {\n    const node = /** @type {gmfThemes.GmfGroup|gmfThemes.GmfLayer} */ (treeCtrl.node);\n    this.updateLayerDimensions_(layer, node);\n  }\n\n  return layer;\n};\n\n\n/**\n * Remove layer from this component's layergroup (and then, from the map) on\n * a ngeo layertree destroy event.\n * @param {angular.Scope} scope treeCtrl scope.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.listeners = function(scope, treeCtrl) {\n  const dataLayerGroup = this.dataLayerGroup_;\n  scope.$on('$destroy', () => {\n    // Remove the layer from the map.\n    dataLayerGroup.getLayers().remove(treeCtrl.layer);\n  });\n};\n\n/**\n * Toggle the state of treeCtrl's node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.toggleActive = function(treeCtrl) {\n  treeCtrl.setState(treeCtrl.getState() === 'on' ? 'off' : 'on');\n};\n\n\n/**\n * Return the current state of the given treeCtrl's node.\n * Return a class name that match with the current node activation state.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string} 'on' or 'off' or 'indeterminate'.\n * @export\n */\nexports.Controller_.prototype.getNodeState = function(treeCtrl) {\n  return treeCtrl.getState();\n};\n\n\n/**\n * Update the `timeRangeValue` property of the data source bound to the\n * given tree controller using the given time. If the tree controller has\n * no data source, it means that it has children and they might have\n * data sources.\n *\n * The setting of the TIME parameter on the layer occurs in the\n * `gmf.datasource.Manager` service\n *\n * LayertreeController.prototype.updateWMSTimeLayerState - description\n * @param {ngeo.layertree.Controller} layertreeCtrl ngeo layertree controller\n * @param {{start : number, end : number}} time The start\n * and optionally the end datetime (for time range selection) selected by user\n * @export\n */\nexports.Controller_.prototype.updateWMSTimeLayerState = function(\n  layertreeCtrl, time) {\n  if (!time) {\n    return;\n  }\n  const dataSource = layertreeCtrl.getDataSource();\n  if (dataSource) {\n    googAsserts.assertInstanceof(dataSource, ngeoDatasourceOGC);\n    dataSource.timeRangeValue = time;\n  } else if (layertreeCtrl.children) {\n    for (let i = 0, ii = layertreeCtrl.children.length; i < ii; i++) {\n      this.updateWMSTimeLayerState(layertreeCtrl.children[i], time);\n    }\n  }\n};\n\n\n/**\n * Get the icon image URL for the given treeCtrl's layer. It can only return a\n * string for internal WMS layers without multiple childlayers in the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {string|undefined} The icon legend URL or undefined.\n * @export\n */\nexports.Controller_.prototype.getLegendIconURL = function(treeCtrl) {\n  const iconUrl = treeCtrl.node.metadata.iconUrl;\n\n  if (iconUrl !== undefined) {\n    return iconUrl;\n  }\n\n  if (treeCtrl.node.children !== undefined) {\n    return undefined;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  if (gmfLayer.type !== 'WMS') {\n    return undefined;\n  }\n\n  const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n\n  const legendRule = gmfLayerWMS.metadata.legendRule;\n\n  if (legendRule === undefined) {\n    return undefined;\n  }\n\n  //In case of multiple layers for a gmfLayerWMS, always take the first layer\n  //name to get the icon\n  const layerName = gmfLayerWMS.layers.split(',')[0];\n  const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n  return this.layerHelper_.getWMSLegendURL(\n    gmfOgcServer.url, layerName, undefined, legendRule, 20, 20\n  );\n};\n\n\n/**\n * Get the legends object (<LayerName: url> for each layer) for the given treeCtrl.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {Object.<string, string>} A <layerName: url> object that provides a\n *     layer for each layer.\n * @export\n */\nexports.Controller_.prototype.getLegendsObject = function(treeCtrl) {\n  const legendsObject = {};\n  if (/** @type gmfThemes.GmfGroup */ (treeCtrl.node).children !== undefined) {\n    return null;\n  }\n\n  const gmfLayer = /** @type {gmfThemes.GmfLayer} */ (treeCtrl.node);\n  const gmfLayerDefaultName = gmfLayer.name;\n  if (gmfLayer.metadata.legendImage) {\n    legendsObject[gmfLayerDefaultName] = gmfLayer.metadata.legendImage;\n    return legendsObject;\n  }\n\n  const layer = treeCtrl.layer;\n  if (gmfLayer.type === 'WMTS') {\n    googAsserts.assertInstanceof(layer, olLayerTile);\n    const wmtsLegendURL = this.layerHelper_.getWMTSLegendURL(layer);\n    legendsObject[gmfLayerDefaultName] = wmtsLegendURL;\n    return wmtsLegendURL ? legendsObject : null;\n  } else {\n    const gmfLayerWMS = /** @type {gmfThemes.GmfLayerWMS} */ (gmfLayer);\n    let layersNames = gmfLayerWMS.layers;\n    const gmfOgcServer = this.gmfTreeManager_.getOgcServer(treeCtrl);\n    const scale = this.getScale_();\n    // QGIS can handle multiple layers natively. Use Multiple URLs for other map\n    // servers\n    if (gmfOgcServer.type === ngeoDatasourceOGC.ServerType.QGISSERVER) {\n      layersNames = [layersNames];\n    } else {\n      layersNames = layersNames.split(',');\n    }\n    layersNames.forEach((layerName) => {\n      legendsObject[layerName] = this.layerHelper_.getWMSLegendURL(gmfOgcServer.url, layerName, scale);\n    });\n    return legendsObject;\n  }\n};\n\n\n/**\n * Get the number of legends object for this layertree controller.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @return {number} The number of Legends object.\n * @export\n */\nexports.Controller_.prototype.getNumberOfLegendsObject = function(treeCtrl) {\n  const legendsObject = this.getLegendsObject(treeCtrl);\n  return legendsObject ? Object.keys(legendsObject).length : 0;\n};\n\n\n/**\n * Return the current scale of the map.\n * @return {number} Scale.\n * @private\n */\nexports.Controller_.prototype.getScale_ = function() {\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const mpu = view.getProjection().getMetersPerUnit();\n  const dpi = 25.4 / 0.28;\n  return resolution * mpu * 39.37 * dpi;\n};\n\n\n/**\n * Opens a gmfx.openIframePopup with the content of the metadata url of a node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.displayMetadata = function(treeCtrl) {\n  const node = treeCtrl.node;\n  const metadataURL = node.metadata['metadataUrl'];\n  if (metadataURL !== undefined) {\n    // FIXME layertree should not rely on a window function.\n    const gmfx = window.gmfx;\n    if (gmfx.openIframePopup) {\n      gmfx.openIframePopup(metadataURL, node.name, undefined, undefined, false);\n    }\n  }\n};\n\n\n/**\n * Update the layers order in the map and the treeCtrl in the treeManager after\n * a reorder of the first-level groups. Then update the permalink.\n * @export\n */\nexports.Controller_.prototype.afterReorder = function() {\n  const groupNodes = this.gmfTreeManager_.rootCtrl.node.children;\n  const currentTreeCtrls = this.gmfTreeManager_.rootCtrl.children;\n  const treeCtrls = [];\n\n  // Get order of first-level groups for treectrl and layers;\n  groupNodes.forEach((node) => {\n    currentTreeCtrls.some((treeCtrl) => {\n      if (treeCtrl.node === node) {\n        treeCtrls.push(treeCtrl);\n        return;\n      }\n    });\n  });\n\n  // Update gmfTreeManager rootctrl children order\n  this.gmfTreeManager_.rootCtrl.children = treeCtrls;\n\n  // Update map 'data' groupe layers order\n  this.layers.length = 0;\n  this.gmfTreeManager_.rootCtrl.children.forEach((child) => {\n    this.layers.push(child.layer);\n  });\n\n  // Update the permalink order\n  this.gmfPermalink_.refreshFirstLevelGroups();\n};\n\n\n/**\n * @param {gmfThemes.GmfGroup} node Layer tree node to remove.\n * @export\n */\nexports.Controller_.prototype.removeNode = function(node) {\n  this.gmfTreeManager_.removeGroup(node);\n};\n\n\n/**\n * @export\n */\nexports.Controller_.prototype.removeAllNodes = function() {\n  this.gmfTreeManager_.removeAll();\n};\n\n\n/**\n * @return {number} first level node count.\n * @export\n */\nexports.Controller_.prototype.nodesCount = function() {\n  return this.gmfTreeManager_.root.children.length;\n};\n\n/**\n * Return 'out-of-resolution' if the current resolution of the map is out of\n * the min/max resolution in the node.\n * @param {gmfThemes.GmfLayerWMS} gmfLayer the GeoMapFish Layer. WMTS layer is\n *     also allowed (the type is defined as GmfLayerWMS only to avoid some\n *     useless tests to know if a minResolutionHint property can exist\n *     on the node).\n * @return {string|undefined} 'out-of-resolution' or undefined.\n * @export\n */\nexports.Controller_.prototype.getResolutionStyle = function(gmfLayer) {\n  const resolution = this.map.getView().getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    return 'out-of-resolution';\n  }\n  const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n  if (maxResolution !== undefined && resolution > maxResolution) {\n    return 'out-of-resolution';\n  }\n  return undefined;\n};\n\n\n/**\n * Set the resolution of the map with the max or min resolution of the node.\n * @param {ngeo.layertree.Controller} treeCtrl ngeo layertree controller, from\n *     the current node.\n * @export\n */\nexports.Controller_.prototype.zoomToResolution = function(treeCtrl) {\n  const gmfLayer = /** @type {gmfThemes.GmfLayerWMS} */ (treeCtrl.node);\n  const view = this.map.getView();\n  const resolution = view.getResolution();\n  const minResolution = gmfThemeThemes.getNodeMinResolution(gmfLayer);\n  if (minResolution !== undefined && resolution < minResolution) {\n    view.setResolution(view.constrainResolution(minResolution, 0, 1));\n  } else {\n    const maxResolution = gmfThemeThemes.getNodeMaxResolution(gmfLayer);\n    if (maxResolution !== undefined && resolution > maxResolution) {\n      view.setResolution(view.constrainResolution(maxResolution, 0, -1));\n    }\n  }\n};\n\n\n/**\n * Toggle the legend for a node\n * @param {string} legendNodeId The DOM node legend id to toggle\n * @export\n */\nexports.Controller_.prototype.toggleNodeLegend = function(legendNodeId) {\n  $(legendNodeId).toggle({\n    toggle: true\n  });\n};\n\n\n/**\n * @param {gmf.datasource.OGC} ds Data source to filter.\n * @export\n */\nexports.Controller_.prototype.toggleFiltrableDataSource = function(ds) {\n  this.gmfDataSourceBeingFiltered.dataSource = ds;\n};\n\n\n/**\n * @param {string} legendNodeId The DOM node legend id\n * @return {boolean} Whenever the legend is currently displayed.\n * @export\n */\nexports.Controller_.prototype.isNodeLegendVisible = function(legendNodeId) {\n  return $(legendNodeId).is(':visible');\n};\n\n\n/**\n * Determines whether the layer tree controller supports being customized.\n * For example, having its layer opacity changed, displaying its legend, etc.\n *\n * If any requirement is met, then the treeCtrl is considered supporting\n * \"customization\", regardless of what it actually is.\n *\n * The requirements are:\n *\n * - must not be the root controller, any of the following:\n *   - it supports legend\n *   - it supports having the layer opacity being changed\n *\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports being\n *     \"customized\" or not.\n * @export\n */\nexports.Controller_.prototype.supportsCustomization = function(treeCtrl) {\n  return !treeCtrl.isRoot &&\n    (\n      this.supportsLegend(treeCtrl) ||\n      this.supportsOpacityChange(treeCtrl)\n    );\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having a\n *     legend being shown.\n * @export\n */\nexports.Controller_.prototype.supportsLegend = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  return !!node.metadata &&\n    !!node.metadata.legend &&\n    !!this.getLegendsObject(treeCtrl);\n};\n\n\n/**\n * @param {!ngeo.layertree.Controller} treeCtrl Ngeo tree controller.\n * @return {boolean} Whether the layer tree controller supports having its\n *     layer opacity being changed or not.\n * @export\n */\nexports.Controller_.prototype.supportsOpacityChange = function(treeCtrl) {\n  const node = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.node);\n  const parentNode = /** @type {!gmfThemes.GmfGroup} */ (treeCtrl.parent.node);\n  return !!treeCtrl.layer &&\n    (\n      (\n        treeCtrl.depth === 1 && !node.mixed\n      ) ||\n      (\n        treeCtrl.depth > 1 && parentNode.mixed\n      )\n    );\n};\n\nexports.controller('GmfLayertreeController', exports.Controller_);\n\n\nexport default exports;\n","/**\n * @module app\n */\nconst exports = {};\n\n/**\n * This file provides the \"app\" namespace, which is the\n * application's main namespace. And it defines the application's Angular\n * module.\n */\n\nimport ngeoUtils from 'ngeo/utils.js';\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('app', []);\n\nexports.module.config(['$compileProvider', function($compileProvider) {\n  if (!('debug' in ngeoUtils.decodeQueryString(window.location.search))) {\n    // Disable the debug info\n    $compileProvider.debugInfoEnabled(false);\n  }\n}]);\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.component\n */\nimport googAsserts from 'goog/asserts.js';\nimport ngeoMapFeatureOverlayMgr from 'ngeo/map/FeatureOverlayMgr.js';\nimport * as olArray from 'ol/array.js';\nimport * as olEvents from 'ol/events.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomPoint from 'ol/geom/Point.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetview', [\n  ngeoMapFeatureOverlayMgr.module.name\n]);\n\n\nexports.value('ngeoGooglestreetviewTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} The template url.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoGooglestreetviewTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/googlestreetview';\n  });\n\nexports.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/googlestreetview', require('./component.html'));\n});\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoGooglestreetviewTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoGooglestreetviewTemplateUrl($attrs, ngeoGooglestreetviewTemplateUrl) {\n  return ngeoGooglestreetviewTemplateUrl($attrs);\n}\n\n\n/**\n * @private\n */\nexports.Controller_ = class {\n\n  /**\n   * @param {angular.JQLite} $element Element.\n   * @param {!angular.Scope} $scope Scope.\n   * @param {!ngeo.map.FeatureOverlayMgr} ngeoFeatureOverlayMgr Ngeo FeatureOverlay\n   *     manager.\n   * @private\n   * @ngInject\n   * @ngdoc controller\n   * @ngname NgeoGooglestreetviewController\n   */\n  constructor($element, $scope, ngeoFeatureOverlayMgr) {\n\n    // Binding properties\n\n    /**\n     * @type {boolean}\n     * @export\n     */\n    this.active;\n\n    $scope.$watch(\n      () => this.active,\n      this.handleActiveChange_.bind(this)\n    );\n\n    /**\n     * Style for the feature.\n     * @type {ol.style.Style|Array.<ol.style.Style>|\n     *     ol.FeatureStyleFunction|ol.StyleFunction|undefined}\n     * @export\n     */\n    this.featureStyle;\n\n    /**\n     * @type {!ol.Map}\n     * @export\n     */\n    this.map;\n\n    /**\n     * @type {number|undefined}\n     * @export\n     */\n    this.radius;\n\n\n    // Injected properties\n\n    /**\n     * @type {!angular.Scope}\n     * @private\n     */\n    this.scope_ = $scope;\n\n\n    // Inner properties\n\n    /**\n     * @type {!ol.Feature}\n     * @private\n     */\n    this.feature_ = new olFeature();\n\n    /**\n     * @type {!ngeo.map.FeatureOverlay}\n     * @private\n     */\n    this.featureOverlay_ = googAsserts.assert(\n      ngeoFeatureOverlayMgr.getFeatureOverlay()\n    );\n\n    /**\n     * @type {Array.<!ol.EventsKey>}\n     * @private\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * The current location in the OpenLayers' map view projection.\n     * @type {?ol.Coordinate}\n     * @private\n     */\n    this.location = null;\n\n    /**\n     * Flag that determines whether there's data at a given location or not.\n     * @type {boolean}\n     * @export\n     */\n    this.noDataAtLocation = false;\n\n    /**\n     * @type {!google.maps.StreetViewPanorama}\n     * @private\n     */\n    this.panorama_ = new google.maps.StreetViewPanorama(\n      $element[0],\n      {\n        pov: {\n          heading: 0,\n          pitch: 0\n        },\n        visible: false,\n        zoom: 1\n      }\n    );\n\n    /**\n     * @type {?google.maps.MapsEventListener}\n     * @private\n     */\n    this.panoramaListener_ = null;\n\n    /**\n     * @type {ol.geom.Point}\n     * @private\n     */\n    this.point_ = new olGeomPoint([0, 0]);\n\n    this.feature_.setGeometry(this.point_);\n\n    /**\n     * @type {google.maps.StreetViewService}\n     * @private\n     */\n    this.streetViewService_ = new google.maps.StreetViewService();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panoramaPositionChanging_ = false;\n  }\n\n  /**\n   * Called on initialization of the controller.\n   */\n  $onInit() {\n\n    // === Watchers ===\n\n    // (1) Watch for any change in the location\n    this.scope_.$watch(\n      () => this.location,\n      this.handleLocationChange_.bind(this)\n    );\n\n    // (2) Watch for both the active and location. When we have both, the\n    //     state is considered 'ready'.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        return isActive && hasLocation;\n      },\n      this.handleReadyChange_.bind(this)\n    );\n\n    // (3) Watcher to manage the visibility of the panorama.\n    this.scope_.$watch(\n      () => {\n        const isActive = this.active;\n        const hasLocation = this.location !== null;\n        const hasData = this.noDataAtLocation === false;\n        return isActive && hasLocation && hasData;\n      },\n      (show, oldShow) => {\n        if (show === oldShow) {\n          return;\n        }\n\n        this.panorama_.setVisible(show);\n\n        if (show) {\n          this.panoramaListener_ = google.maps.event.addListener(\n            this.panorama_,\n            'position_changed',\n            this.handlePanoramaPositionChange_.bind(this)\n          );\n        } else if (this.panoramaListener_) {\n          google.maps.event.removeListener(this.panoramaListener_);\n          this.panoramaListener_ = null;\n        }\n      }\n    );\n\n\n    // Other initialization\n    if (this.featureStyle) {\n      this.feature_.setStyle(this.featureStyle);\n    }\n\n  }\n\n  /**\n   * Called when the 'active' property of this component changes.\n   * @param {boolean} active Active.\n   * @private\n   */\n  handleActiveChange_(active) {\n\n    const keys = this.listenerKeys_;\n\n    if (active) {\n      keys.push(\n        olEvents.listen(this.map, 'click', this.handleMapClick_, this)\n      );\n    } else {\n      keys.forEach(olEvents.unlistenByKey);\n      keys.length = 0;\n    }\n  }\n\n  /**\n   * Called when the 'location' property of this component changes.\n   * @param {?ol.Coordinate} location Location, in OL map view projection.\n   * @param {?ol.Coordinate} oldLocation The previous location.\n   * @private\n   */\n  handleLocationChange_(location, oldLocation) {\n\n    // (1) No need to do anything if the old value equals the new value\n    if (location === oldLocation || (\n      Array.isArray(location) && Array.isArray(oldLocation) &&\n        olArray.equals(location, oldLocation)\n    )) {\n      return;\n    }\n\n    // (2) Update point coordinates\n    this.point_.setCoordinates(location);\n\n    // (3) Update StreetView location\n    if (location && !this.panoramaPositionChanging_) {\n      const lonLat = this.toLonLat_(location);\n      this.streetViewService_.getPanorama({\n        location: {\n          lat: lonLat[1],\n          lng: lonLat[0]\n        },\n        radius: this.radius\n      }, this.handleStreetViewServiceGetPanorama_.bind(this));\n    }\n  }\n\n  /**\n   * Called when the map is clicked while this component is active. Update the\n   * location accordingly.\n   * @param {ol.MapBrowserEvent} evt The map browser event being fired.\n   * @private\n   */\n  handleMapClick_(evt) {\n    this.location = evt.coordinate;\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the component 'virtual ready' state changes.\n   *\n   * When ready:\n   *  - add the feature to the overlay\n   *\n   * When not ready:\n   *  - remove the feature from the overlay\n   *\n   * @param {boolean} ready Whether the component is ready or not.\n   * @param {boolean} oldReady Previous ready value.\n   * @private\n   */\n  handleReadyChange_(ready, oldReady) {\n\n    if (ready === oldReady) {\n      return;\n    }\n\n    if (ready) {\n      this.featureOverlay_.addFeature(this.feature_);\n    } else {\n      this.featureOverlay_.removeFeature(this.feature_);\n    }\n  }\n\n  /**\n   * @param {google.maps.StreetViewPanoramaData} data Data.\n   * @param {google.maps.StreetViewStatus} status Status.\n   * @private\n   */\n  handleStreetViewServiceGetPanorama_(data, status) {\n\n    const panorama = this.panorama_;\n\n    if (status === google.maps.StreetViewStatus.OK) {\n      this.noDataAtLocation = false;\n      panorama.setPosition(data.location.latLng);\n    } else {\n      this.noDataAtLocation = true;\n    }\n\n    this.scope_.$apply();\n  }\n\n  /**\n   * Called when the panorama position changes. Update the location.\n   * @private\n   */\n  handlePanoramaPositionChange_() {\n    this.panoramaPositionChanging_ = true;\n    const position = this.panorama_.getPosition();\n    const lonLat = [position.lng(), position.lat()];\n    const location = this.fromLonLat_(lonLat);\n    this.location = location;\n    this.scope_.$apply();\n    this.panoramaPositionChanging_ = false;\n  }\n\n\n  // Utility methods\n\n  /**\n   * @param {!ol.Coordinate} lonLat LonLat coordinate.\n   * @return {ol.Coordinate} Map view projection coordinate.\n   */\n  fromLonLat_(lonLat) {\n    return olProj.fromLonLat(\n      lonLat,\n      this.map.getView().getProjection()\n    );\n  }\n\n  /**\n   * @param {!ol.Coordinate} coordinate Map view projection coordinate.\n   * @return {ol.Coordinate} LonLat coordinate.\n   */\n  toLonLat_(coordinate) {\n    return olProj.toLonLat(\n      coordinate,\n      this.map.getView().getProjection()\n    );\n  }\n};\n\n\nexports.component('ngeoGooglestreetview', {\n  bindings: {\n    'active': '<',\n    'featureStyle': '<?',\n    'map': '<',\n    'radius': '<?'\n  },\n  controller: exports.Controller_,\n  templateUrl: ngeoGooglestreetviewTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.googlestreetview.module\n */\nimport ngeoGooglestreetviewComponent from 'ngeo/googlestreetview/component.js';\n\n/**\n * @type {!angular.Module}\n */\nconst exports = angular.module('ngeoGooglestreetviewModule', [\n  ngeoGooglestreetviewComponent.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimService\n */\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\n\n/**\n * Service to provide access to Nominatim, which allows to search for\n * OSM data by name and address.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoNominatimService\n * @see https://wiki.openstreetmap.org/wiki/Nominatim\n */\nconst exports = function($http, $injector, ngeoDebounce) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.miscDebounce}\n   * @private\n   */\n  this.ngeoDebounce_ = ngeoDebounce;\n\n  /**\n   * URL for Nominatim backend\n   * Defaults openstreetmap instance.\n   * @type {string}\n   * @private\n   */\n  this.nominatimUrl_ = 'https://nominatim.openstreetmap.org/';\n\n  if ($injector.has('ngeoNominatimUrl')) {\n    this.nominatimUrl_ = $injector.get('ngeoNominatimUrl');\n\n    // the url is expected to end with a slash\n    if (this.nominatimUrl_.substr(-1) !== '/') {\n      this.nominatimUrl_ += '/';\n    }\n  }\n\n  /**\n   * @type {Object<string, string>}\n   * @private\n   */\n  this.searchDefaultParams_ = {};\n\n  if ($injector.has('ngeoNominatimSearchDefaultParams')) {\n    this.searchDefaultParams_ = $injector.get('ngeoNominatimSearchDefaultParams');\n  }\n\n  /**\n   * Delay (in milliseconds) to avoid calling the API too often.\n   * Only if there were no calls for that many milliseconds,\n   * the last call will be executed.\n   * @type {number}\n   * @private\n   */\n  this.typeaheadDebounceDelay_ = 500;\n\n  /**\n   * @export\n   * @type {function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))}\n   */\n  this.typeaheadSourceDebounced =\n    /** @type{function(string,function(Array.<BloodhoundDatum>),(function(Array.<ol.Feature>)|undefined))} */\n    (this.ngeoDebounce_(/** @type {function(?)} */ (this.typeaheadSource_.bind(this)), this.typeaheadDebounceDelay_, true));\n};\n\n/**\n * Search by name\n * @param {string} query Search query\n * @param {?Object} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Search\n * @export\n */\nexports.prototype.search = function(query, params) {\n  let url = `${this.nominatimUrl_}search?q=${query}`;\n\n  params = params || {};\n  params = Object.assign({}, this.searchDefaultParams_, params);\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '&';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Reverse Geocoding\n * @param {ol.Coordinate} coordinate Search coordinate in LonLat projection\n * @param {(Object|undefined)} params Optional parameters\n * @return {!angular.$http.HttpPromise} promise of the Nominatim API request\n * @see https://wiki.openstreetmap.org/wiki/Nominatim#Reverse_Geocoding\n * @export\n */\nexports.prototype.reverse = function(coordinate, params) {\n  let url = `${this.nominatimUrl_}reverse`;\n\n  params = Object.assign({}, params);\n\n  // coordinate\n  params['lon'] = coordinate[0];\n  params['lat'] = coordinate[1];\n\n  // require JSON response\n  params['format'] = 'json';\n\n  if (params) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(params)) {\n      options.push(`${option}=${params[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * @param {string} query Search query\n * @param {function(Array.<BloodhoundDatum>)} syncResults Callback for synchronous execution, unused\n * @param {function(Array.<ngeox.NominatimSearchResult>)} asyncResults Callback for asynchronous execution\n * @private\n */\nexports.prototype.typeaheadSource_ = function(query, syncResults, asyncResults) {\n  const onSuccess_ = function(resp) {\n    /**\n     * Parses result response.\n     * @param {ngeox.NominatimSearchResponseResult} result Result\n     * @return {ngeox.NominatimSearchResult} Parsed result\n     */\n    const parse = function(result) {\n      return /** @type{ngeox.NominatimSearchResult} */({\n        coordinate: [result.lon, result.lat],\n        name: result.display_name\n      });\n    };\n    asyncResults(resp.data.map(parse));\n  };\n\n  const onError_ = function(resp) {\n    asyncResults([]);\n  };\n\n  this.search(query, {}).then(onSuccess_, onError_);\n};\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoNominatimService', [\n  ngeoMiscDebounce.name\n]);\n\nexports.module.service('ngeoNominatimService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingService\n */\n/**\n * Service to provide access to a [Open Source Routing Machine (OSRM) backend](https://github.com/Project-OSRM/osrm-backend)\n * of version 5.8 and higher and its features.\n * @param {angular.$http} $http Angular http service.\n * @param {angular.$injector} $injector Main injector.\n * @constructor\n * @struct\n * @ngdoc service\n * @ngInject\n * @export\n * @ngname ngeoRoutingService\n */\nconst exports = function($http, $injector) {\n\n  /**\n   * @type {angular.$http}\n   * @private\n   */\n  this.$http_ = $http;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * URL for OSRM backend API.\n   * Defaults to demo backend.\n   * @type {string}\n   * @private\n   */\n  this.ngeoOsrmBackendUrl_ = this.routingOptions_.backendUrl || 'https://router.project-osrm.org/';\n\n  // the url is expected to end with a slash\n  if (this.ngeoOsrmBackendUrl_.substr(-1) !== '/') {\n    this.ngeoOsrmBackendUrl_ += '/';\n  }\n\n  /**\n   * Version of the protocol implemented by the service.\n   * see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md\n   * @type {string}\n   * @private\n   */\n  this.protocolVersion_ = 'v1';\n\n};\n\n/**\n * Route request\n * @param {Array.<ol.Coordinate>} coordinates coordinates of the route (at least two!)\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n */\nexports.prototype.getRoute = function(coordinates, config) {\n\n  config = config || {};\n\n  // Service\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  if (!config['service']) {\n    config['service'] = 'route'; // default to route\n  }\n\n  // Mode of transportation,\n  // can be: car, bike, foot\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#requests\n  //\n  // As of version 5.8.0, OSRM (server) does not support multiple profiles simultaneously.\n  // This means the value actually does not matter.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [ [a,b] , [c,d] ] -> 'a,b;c,d'\n  const coordinateString = coordinates.map(c => c.join(',')).join(';');\n\n  url += coordinateString;\n\n  // look for route service options\n  // see: https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#route-service\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n/**\n * Snaps a coordinate to the street network and returns the nearest match\n * @param {ol.Coordinate} coordinate coordinate to query\n * @param {?Object} config optional configuration\n * @return {!angular.$http.HttpPromise} promise of the OSRM API request\n * @see https://github.com/Project-OSRM/osrm-backend/blob/master/docs/http.md#nearest-service\n */\nexports.prototype.getNearest = function(coordinate, config) {\n  config = config || {};\n\n  // service is always nearest\n  config['service'] = 'nearest';\n\n  // Mode of transportation\n  // If used in combination with a getRoute request, choose the same profile.\n  if (!config['profile']) {\n    config['profile'] = 'car'; // default to car\n  }\n\n  // build request URL\n  let url = this.ngeoOsrmBackendUrl_;\n\n  // Common workaround to provide multiple profiles (since it is not supported yet)\n  // Every profile runs on its own instance.\n  if (config['instance']) {\n    url += `${config['instance']}/`;\n  }\n\n  url += `${config['service']}/${this.protocolVersion_}/${config['profile']}/`;\n\n  // [a,b] -> 'a,b'\n  const coordinateString = coordinate.join(',');\n  url += coordinateString;\n\n  // look for nearest service options\n  if (config.options) {\n    url += '?';\n    const options = [];\n    for (const option of Object.keys(config.options)) {\n      options.push(`${option}=${config.options[option]}`);\n    }\n    url += options.join('&');\n  }\n\n  return this.$http_.get(url);\n};\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingService', [\n]);\n\nexports.module.service('ngeoRoutingService', exports);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.NominatimInputComponent\n */\nconst exports = {};\nimport ngeoSearchSearchDirective from 'ngeo/search/searchDirective.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingNominatimInputComponent', [\n  ngeoSearchSearchDirective.module.name,\n  ngeoRoutingNominatimService.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/nominatiminput', require('./nominatiminput.html'));\n});\n\n\nexports.module.value('ngeoRoutingNominatimInputComponentTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingNominatimInputComponentTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/nominatiminput';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingNominatimInputComponentTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingNominatimInputComponentTemplateUrl($attrs, ngeoRoutingNominatimInputComponentTemplateUrl) {\n  return ngeoRoutingNominatimInputComponentTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.JQLite} $element Element.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoNominatimInputController\n */\nexports.Controller = function($element, $injector, $scope, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.JQLite}\n   * @private\n   */\n  this.element_ = $element;\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @export\n   */\n  this.ngeoNominatimService = ngeoNominatimService;\n\n  /**\n   * @type {(function(Object)|undefined)}\n   * @export\n   */\n  this.onSelect;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.inputValue;\n\n  /**\n   * @type {TypeaheadOptions}\n   * @export\n   */\n  this.options = /** @type {TypeaheadOptions} */ ({\n  });\n\n  /**\n   * @type {Array.<TypeaheadDataset>}\n   * @export\n   */\n  this.datasets = [/** @type {TypeaheadDataset} */({\n    name: 'nominatim',\n    display: 'name',\n    source: this.ngeoNominatimService.typeaheadSourceDebounced\n  })];\n\n  /**\n   * @type {ngeox.SearchDirectiveListeners}\n   * @export\n   */\n  this.listeners = /** @type {ngeox.SearchDirectiveListeners} */({\n    select: this.select_.bind(this)\n  });\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.placeholder = '';\n\n};\n\n/**\n * @param {jQuery.Event} event Event.\n * @param {ngeox.NominatimSearchResult} suggestion Suggestion.\n * @param {TypeaheadDataset} dataset Dataset.\n * @this {ngeo.routing.NominatimInputComponent.Controller}\n * @private\n */\nexports.Controller.prototype.select_ = function(event, suggestion, dataset) {\n  if (this.onSelect) {\n    this.onSelect(suggestion);\n  }\n};\n\n/**\n * Input form field which provides Nominatim typeahead lookup using {@link ngeo.routing.NominatimService}.\n *\n * Example:\n *\n *     <ngeo-nominatim-input\n *         ngeo-nominatim-input-value=\"ctrl.label\"\n *         ngeo-nominatim-input-placeholder=\"type to search\"\n *         ngeo-nominatim-input-on-select=\"ctrl.onSelect\">\n *\n * Is used in in the partial of {@link ngeo.routingFeatureComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example to see it in action.\n *\n * @htmlAttribute {function(ngeox.NominatimSearchResult)} ngeo-nominatim-input-on-select\n *  Event fired when user selects a new suggestion.\n * @htmlAttribute {string} ngeo-nominatim-input-value\n *  Value of input field, will be set to the label of the search result.\n * @htmlAttribute {string} ngeo-nominatim-input-placeholder\n *  Placeholder text, when field is empty.\n * @ngdoc directive\n * @ngname ngeoNominatimInput\n */\nconst component = {\n  controller: exports.Controller,\n  bindings: {\n    'onSelect': '=?ngeoNominatimInputOnSelect',\n    'inputValue': '=?ngeoNominatimInputValue',\n    'placeholder': '@?ngeoNominatimInputPlaceholder'\n  },\n  templateUrl: ngeoRoutingNominatimInputComponentTemplateUrl\n};\n\nexports.module.component('ngeoNominatimInput', component);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingFeatureComponent\n */\nconst exports = {};\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingNominatimInputComponent from 'ngeo/routing/NominatimInputComponent.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olCollection from 'ol/Collection.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleText from 'ol/style/Text.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport olGeomPoint from 'ol/geom/Point.js';\nimport olInteractionModify from 'ol/interaction/Modify.js';\nimport olInteractionDraw from 'ol/interaction/Draw.js';\nimport 'font-awesome/css/font-awesome.css';\n\n\n/**\n * @type {!angular.Module}\n */\nexports.module = angular.module('ngeoRoutingFeatureComponent', [\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingNominatimInputComponent.module.name\n]);\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routingfeature', require('./routingfeature.html'));\n});\n\n\nexports.module.value('ngeoRoutingFeatureTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingFeatureTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routingfeature';\n  }\n);\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingFeatureTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingFeatureTemplateUrl($attrs, ngeoRoutingFeatureTemplateUrl) {\n  return ngeoRoutingFeatureTemplateUrl($attrs);\n}\n\n\n/**\n * @param {!angular.Scope} $scope Angular scope.\n * @param {angular.$timeout} $timeout Angular timeout service.\n * @param {!angular.$q} $q Angular q service\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingFeatureController\n */\nexports.Controller = function($scope, $timeout, $q, ngeoNominatimService) {\n\n  /**\n   * @type {!angular.Scope}\n   * @private\n   */\n  this.scope_ = $scope;\n\n  /**\n   * @type {angular.$timeout}\n   * @private\n   */\n  this.timeout_ = $timeout;\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ol.Map}\n   * @private\n   */\n  this.map;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.feature;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.featureLabel = '';\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.fillColor;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.strokeColor;\n\n  /**\n   * @type {function(ol.Feature)}\n   * @export\n   */\n  this.onChange;\n\n  /**\n   * @type {ol.Collection}\n   * @private\n   */\n  this.vectorFeatures_ = new olCollection();\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.vectorSource_ = new olSourceVector({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.vectorLayer_ = new olLayerVector({\n    source: this.vectorSource_,\n    style: (function(feature, resolution) {\n      return [new olStyleStyle({\n        text: new olStyleText({\n          fill: new olStyleFill({\n            color: this.fillColor || '#000000'\n          }),\n          font: 'normal 30px FontAwesome',\n          offsetY: -15,\n          stroke: new olStyleStroke({\n            width: 3,\n            color: this.strokeColor || '#000000'\n          }),\n          text: '\\uf041'\n        })\n      })];\n    }).bind(this)\n  });\n\n  /**\n   * Interaction for moving start and end.\n   * @type {ol.interaction.Modify}\n   * @private\n   */\n  this.modifyFeature_ = new olInteractionModify({\n    features: this.vectorFeatures_\n  });\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  /**\n   * @param {ngeox.NominatimSearchResult} selected Selected result.\n   * @export\n   */\n  this.onSelect = this.onSelect_.bind(this);\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n};\n\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.vectorLayer_);\n\n  // setup modify interaction\n  this.modifyFeature_.setActive(true);\n  this.map.addInteraction(this.modifyFeature_);\n\n  this.modifyFeature_.on('modifyend', (event) => {\n    const feature = event.features.getArray()[0];\n    this.vectorSource_.clear();\n    this.snapFeature_(feature);\n  });\n\n  this.scope_.$watch(\n    () => this.feature,\n    (newVal, oldVal) => {\n      if (newVal) {\n        this.onFeatureChange_();\n      }\n      if (newVal === null) {\n        this.vectorSource_.clear();\n        this.featureLabel = '';\n      }\n    }\n  );\n};\n\n/**\n * Cleanup, mostly relevant for vias.\n */\nexports.Controller.prototype.$onDestroy = function() {\n  this.map.removeLayer(this.vectorLayer_);\n  this.modifyFeature_.setActive(false);\n  this.map.removeInteraction(this.modifyFeature_);\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.set = function() {\n  if (this.draw_) {\n    this.map.removeInteraction(this.draw_);\n  }\n\n  this.draw_ = new olInteractionDraw({\n    features: this.vectorFeatures_,\n    type: /** @type {ol.geom.GeometryType} */ ('Point')\n  });\n\n  this.draw_.on('drawstart', () => {\n    if (this.feature) {\n      this.vectorSource_.removeFeature(this.feature);\n    }\n  });\n\n  this.draw_.on('drawend', (event) => {\n    if (this.draw_) {\n      this.map.removeInteraction(this.draw_);\n    }\n    this.snapFeature_(event.feature);\n    this.modifyFeature_.setActive(true);\n  });\n\n  this.modifyFeature_.setActive(false);\n  this.map.addInteraction(this.draw_);\n};\n\n/**\n * @param {ol.Coordinate} coordinate LonLat coordinate.\n * @param {string} label Feature name/label.\n * @private\n */\nexports.Controller.prototype.setFeature_ = function(coordinate, label) {\n  const transformedCoordinate = olProj.fromLonLat(coordinate, this.map.getView().getProjection());\n  if (label === '') {\n    label = transformedCoordinate.join('/');\n  }\n  this.feature = new olFeature({\n    geometry: new olGeomPoint(transformedCoordinate),\n    name: label\n  });\n};\n\nexports.Controller.prototype.onFeatureChange_ = function() {\n  // update label\n  this.featureLabel = /** @type{string} */(this.feature.get('name') || '');\n\n  //update vector source\n  this.vectorSource_.clear();\n  this.vectorSource_.addFeature(this.feature);\n\n  // notify others\n  if (this.onChange) {\n    this.timeout_(() => {\n      this.onChange(this.feature);\n    });\n  }\n};\n\n/**\n * @param {ngeox.NominatimSearchResult} selected Selected result.\n * @private\n */\nexports.Controller.prototype.onSelect_ = function(selected) {\n  const coordinate = selected.coordinate.map(parseFloat);\n  const label = selected.label;\n  this.setFeature_(coordinate, label);\n  const newCoordinates = /** @type{ol.geom.Point} */(this.feature.getGeometry()).getCoordinates();\n  this.map.getView().setCenter(newCoordinates);\n};\n\n/**\n * Snaps a feature to the street network using the getNearest\n * function of the routing service. Replaces the feature.\n * @param {ol.Feature} feature Feature to snap\n * @private\n */\nexports.Controller.prototype.snapFeature_ = function(feature) {\n  const coord = this.getLonLatFromPoint_(feature);\n  const config = {};\n\n  const onSuccess = (function(resp) {\n    const lon = parseFloat(resp['data']['lon']);\n    const lat = parseFloat(resp['data']['lat']);\n    const coordinate = [lon, lat];\n    const label = resp['data']['display_name'];\n    this.setFeature_(coordinate, label);\n  }).bind(this);\n\n  const onError = (function(resp) {\n    this.errorMessage = 'Error: nominatim server not responding.';\n    console.log(resp);\n  }).bind(this);\n\n  this.$q_.when(this.ngeoNominatimService_.reverse(coord, config))\n    .then(onSuccess.bind(this), onError.bind(this));\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n\n/**\n * Provides a text input and draw interaction to allow a user to create and modify a ol.Feature (point geometry).\n *\n * The text input is provided by {@link ngeo.nominatimInputComponent} and includes Nominatim search.\n *\n * Example:\n *\n *     <ngeo-routing-feature\n *         ngeo-routing-feature-map=\"ctrl.map\"\n *         ngeo-routing-feature-feature=\"ctrl.feature\"\n *         ngeo-routing-feature-fill-color=\"#6BE62E\"\n *         ngeo-routing-feature-stroke-color=\"#4CB01E\"\n *         ngeo-routing-feature-on-change=\"ctrl.handleChange\">\n *\n * Is used in in the partial of {@link ngeo.routingComponent}.\n *\n * See the [../examples/routing.html](../examples/routing.html) example for a usage sample.\n *\n * @htmlAttribute {ol.Map} ngeo-routing-feature-map The map.\n * @htmlAttribute {ol.Feature} ngeo-routing-feature-feature The feature.\n * @htmlAttribute {string} ngeo-routing-feature-fill-color The marker fill color.\n * @htmlAttribute {string} ngeo-routing-feature-stroke-color The marker stroke color.\n * @htmlAttribute {function(ol.Feature)} ngeo-routing-feature-on-change Event fired when feature changes.\n * @ngdoc directive\n * @ngname ngeoRoutingFeature\n */\nexports.component_ = {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingFeatureMap',\n    'feature': '=ngeoRoutingFeatureFeature',\n    'fillColor': '<?ngeoRoutingFeatureFillColor',\n    'strokeColor': '<?ngeoRoutingFeatureStrokeColor',\n    'onChange': '=?ngeoRoutingFeatureOnChange'\n  },\n  templateUrl: ngeoRoutingFeatureTemplateUrl\n};\n\nexports.module.component('ngeoRoutingFeature', exports.component_);\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.RoutingComponent\n */\nconst exports = {};\nimport ngeoMiscDebounce from 'ngeo/misc/debounce.js';\nimport ngeoMiscFilters from 'ngeo/misc/filters.js';\nimport ngeoRoutingNominatimService from 'ngeo/routing/NominatimService.js';\nimport ngeoRoutingRoutingService from 'ngeo/routing/RoutingService.js';\nimport ngeoRoutingRoutingFeatureComponent from 'ngeo/routing/RoutingFeatureComponent.js';\nimport olFormatGeoJSON from 'ol/format/GeoJSON.js';\nimport olSourceVector from 'ol/source/Vector.js';\nimport olLayerVector from 'ol/layer/Vector.js';\nimport olStyleStyle from 'ol/style/Style.js';\nimport olStyleFill from 'ol/style/Fill.js';\nimport olStyleStroke from 'ol/style/Stroke.js';\nimport * as olProj from 'ol/proj.js';\nimport olFeature from 'ol/Feature.js';\nimport olGeomLineString from 'ol/geom/LineString.js';\nimport 'font-awesome/css/font-awesome.css';\n\nexports.module = angular.module('ngeoRoutingComponent', [\n  ngeoMiscDebounce.name,\n  ngeoMiscFilters.name,\n  ngeoRoutingNominatimService.module.name,\n  ngeoRoutingRoutingService.module.name,\n  ngeoRoutingRoutingFeatureComponent.module.name\n]);\n\n\nexports.module.run(/* @ngInject */ ($templateCache) => {\n  $templateCache.put('ngeo/routing/routing', require('./routing.html'));\n});\n\n\nexports.module.value('ngeoRoutingTemplateUrl',\n  /**\n   * @param {!angular.Attributes} $attrs Attributes.\n   * @return {string} Template URL.\n   */\n  ($attrs) => {\n    const templateUrl = $attrs['ngeoRoutingTemplateUrl'];\n    return templateUrl !== undefined ? templateUrl :\n      'ngeo/routing/routing';\n  }\n);\n\n\n/**\n * @param {!angular.Attributes} $attrs Attributes.\n * @param {!function(!angular.Attributes): string} ngeoRoutingTemplateUrl Template function.\n * @return {string} Template URL.\n * @ngInject\n */\nfunction ngeoRoutingTemplateUrl($attrs, ngeoRoutingTemplateUrl) {\n  return ngeoRoutingTemplateUrl($attrs);\n}\n\n\n/**\n * The controller for the routing directive.\n * @param {angular.$injector} $injector Main injector.\n * @param {!angular.Scope} $scope Scope.\n * @param {!ngeo.routing.RoutingService} ngeoRoutingService service for OSRM routing\n * @param {!ngeo.routing.NominatimService} ngeoNominatimService service for Nominatim\n * @param {!angular.$q} $q Angular q service\n * @param {ngeox.miscDebounce} ngeoDebounce ngeo Debounce service.\n * @constructor\n * @private\n * @ngInject\n * @ngdoc controller\n * @ngname NgeoRoutingController\n */\nexports.Controller = function($injector, $scope, ngeoRoutingService, ngeoNominatimService, $q, ngeoDebounce) {\n\n  /**\n   * @type {angular.Scope}\n   * @private\n   */\n  this.$scope_ = $scope;\n\n  /**\n   * @type {ngeo.routing.RoutingService}\n   * @private\n   */\n  this.ngeoRoutingService_ = ngeoRoutingService;\n\n  /**\n   * @type {ngeo.routing.NominatimService}\n   * @private\n   */\n  this.ngeoNominatimService_ = ngeoNominatimService;\n\n  /**\n   * @type {ngeox.RoutingOptions}\n   * @private\n   */\n  this.routingOptions_ = $injector.has('ngeoRoutingOptions') ? $injector.get('ngeoRoutingOptions') : {};\n\n  /**\n   * Available routing profiles.\n   * Example: [\n   *            {\n   *              label: 'Car', // used as label in the UI\n   *              profile: 'routed-car' // used as part of the query\n   *            }\n   *          ]\n   * @type {Array<ngeox.RoutingProfile>}\n   * @export\n   */\n  this.routingProfiles = this.routingOptions_.profiles || [];\n\n  /**\n   * @type {?ngeox.RoutingProfile}\n   * @export\n   */\n  this.selectedRoutingProfile = this.routingProfiles.length > 0 ? this.routingProfiles[0] : null;\n\n  $scope.$watch(\n    () => this.selectedRoutingProfile,\n    this.calculateRoute.bind(this)\n  );\n\n  /**\n   * @type {angular.$q}\n   * @private\n   */\n  this.$q_ = $q;\n\n  /**\n   * @type {ol.Map}\n   * @export\n   */\n  this.map;\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.errorMessage = '';\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.startFeature_ = null;\n\n  /**\n   * @type {ol.Feature}\n   * @export\n   */\n  this.targetFeature_ = null;\n\n  /**\n   * @type {Array.<ngeox.RoutingVia>}\n   * @export\n   */\n  this.viaArray = [];\n\n  /**\n   * @type {Object<string, string>}\n   * @export\n   */\n  this.colors = {\n    'start.fill': '#6BE62E',\n    'start.stroke': '#4CB01E',\n    'destination.fill': '#FF3E13',\n    'destination.stroke': '#CD3412',\n    'via.fill': '#767676',\n    'via.stroke': '#000000'\n  };\n\n  /**\n   * @type {ol.source.Vector}\n   * @private\n   */\n  this.routeSource_ = new olSourceVector({\n    features: []\n  });\n\n  /**\n   * @type {ol.layer.Vector}\n   * @private\n   */\n  this.routeLayer_ = new olLayerVector({\n    source: this.routeSource_,\n    style: new olStyleStyle({\n      fill: new olStyleFill({\n        color: 'rgba(16, 112, 29, 0.6)'\n      }),\n      stroke: new olStyleStroke({\n        color: 'rgba(16, 112, 29, 0.6)',\n        width: 5\n      })\n    })\n  });\n\n  /**\n   * Distance of route in meters\n   * @type {number}\n   * @export\n   */\n  this.routeDistance = 0;\n\n  /**\n   * Duration of route in minutes.\n   * @type {?number}\n   * @export\n   */\n  this.routeDuration = null;\n\n  /**\n   * @type {RegExp}\n   * @private\n   */\n  this.regexIsFormattedCoord = /\\d+\\.\\d+\\/\\d+\\.\\d+/;\n\n  /**\n   * @type {ol.interaction.Draw}\n   * @private\n   */\n  this.draw_ = null;\n\n  const debounceDelay = 200; // in milliseconds\n\n  /**\n   * Debounced because in some cases (reverse route) multiple changes are done\n   * at once and spam this function.\n   * @export\n   * @type {function()}\n   */\n  this.handleChange = /** @type {function()} */\n          (ngeoDebounce(\n            /** @type {function(?)} */ (this.calculateRoute.bind(this)),\n            debounceDelay,\n            true));\n};\n\n/**\n * Init the controller\n */\nexports.Controller.prototype.$onInit = function() {\n  this.map.addLayer(this.routeLayer_);\n};\n\n/**\n * Clears start, end and vias. Removes features from map.\n * @export\n */\nexports.Controller.prototype.clearRoute = function() {\n  this.startFeature_ = null;\n  this.targetFeature_ = null;\n  this.viaArray = [];\n  this.routeDistance = 0;\n  this.routeDuration = null;\n  this.routeSource_.clear();\n  this.errorMessage = '';\n};\n\n/**\n * Converts feature point into LonLat coordinate.\n * @param {ol.Feature} point Feature point to convert\n * @return {ol.Coordinate} LonLat coordinate\n * @private\n */\nexports.Controller.prototype.getLonLatFromPoint_ = function(point) {\n  const geometry = /** @type {ol.geom.Point} */ (point.getGeometry());\n  const coords = geometry.getCoordinates();\n  const projection = this.map.getView().getProjection();\n  return olProj.toLonLat(coords, projection);\n};\n\n/**\n * Flip start and target and re-calculate route.\n * @export\n */\nexports.Controller.prototype.reverseRoute = function() {\n  // swap start and target\n  const tmpFeature = this.startFeature_;\n  this.startFeature_ = this.targetFeature_;\n  this.targetFeature_ = tmpFeature;\n\n  // reverse vias\n  this.viaArray = this.viaArray.reverse();\n\n  // recalculation is done by the debounced handleChange\n};\n\n/**\n * @param {Object} route Routes of OSRM response\n * @returns {Array<ol.Feature>} parsed route features\n * @private\n */\nexports.Controller.prototype.parseRoute_ = function(route) {\n  let parsedRoutes = [];\n  const format = new olFormatGeoJSON();\n  const formatConfig = {\n    dataProjection: 'EPSG:4326',\n    featureProjection: this.map.getView().getProjection()\n  };\n  // if there are is useful \"legs\" data, parse this\n  if (route.legs) {\n    parsedRoutes = route.legs.map(leg => leg.steps.map(step => new olFeature({geometry: format.readGeometry(step.geometry, formatConfig)})));\n    // flatten\n    parsedRoutes = [].concat(...parsedRoutes);\n  } else if (route.geometry) {\n  // otherwise parse (overview) geometry\n    parsedRoutes.push(new olFeature({geometry: format.readGeometry(route.geometry, formatConfig)}));\n  }\n  return parsedRoutes;\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.calculateRoute = function() {\n  if (this.startFeature_ && this.targetFeature_) {\n    // remove rendered routes\n    this.routeSource_.clear();\n\n    const coordFrom = this.getLonLatFromPoint_(this.startFeature_);\n    const coordTo = this.getLonLatFromPoint_(this.targetFeature_);\n    const vias = this.viaArray.filter(via => via.feature !== null).map(via => this.getLonLatFromPoint_(via.feature));\n    const route =  [coordFrom].concat(vias, [coordTo]);\n\n    const onSuccess_ = (function(resp) {\n      const features = this.parseRoute_(resp.data.routes[0]);\n      if (features.length === 0) {\n        console.log('No route or not supported format.');\n        return;\n      }\n      this.routeSource_.addFeatures(features);\n\n      // recenter map on route\n      this.map.getView().fit(this.routeSource_.getExtent());\n\n      this.routeDistance = parseInt(resp.data.routes[0].distance, 10);\n      this.routeDuration = resp.data.routes[0].duration;\n\n      // get first and last coordinate of route\n      const startRoute = /** @type{ol.geom.LineString} */(features[0].getGeometry()).getCoordinateAt(0);\n      const endRoute = /** @type{ol.geom.LineString} */(features[features.length - 1].getGeometry()).getCoordinateAt(1);\n\n      // build geometries to connect route to start and end point of query\n      const startToRoute = [/** @type {ol.geom.Point} */(this.startFeature_.getGeometry()).getCoordinates(), startRoute];\n      const routeToEnd = [endRoute, /** @type {ol.geom.Point} */(this.targetFeature_.getGeometry()).getCoordinates()];\n      const routeConnections = [\n        new olFeature(new olGeomLineString(startToRoute)),\n        new olFeature(new olGeomLineString(routeToEnd))\n      ];\n\n      // add them to the source\n      this.routeSource_.addFeatures(routeConnections);\n    }).bind(this);\n\n    const onError_ = (function(resp) {\n      this.errorMessage = 'Error: routing server not responding.';\n      console.log(resp);\n    }).bind(this);\n\n    const options = {};\n    options['steps'] = true;\n    options['overview'] = false;\n    options['geometries'] = 'geojson';\n\n    const config = {};\n    config['options'] = options;\n\n    if (this.selectedRoutingProfile) {\n      config['instance'] = this.selectedRoutingProfile['profile'];\n    }\n\n    this.$q_.when(this.ngeoRoutingService_.getRoute(route, config))\n      .then(onSuccess_.bind(this), onError_.bind(this));\n  }\n};\n\n/**\n * @export\n */\nexports.Controller.prototype.addVia = function() {\n  this.viaArray.push(/** @type{ngeox.RoutingVia} */({\n    feature: null,\n    onSelect: null\n  }));\n};\n\n/**\n * @param {number} index Array index.\n * @export\n */\nexports.Controller.prototype.deleteVia = function(index) {\n  if (this.viaArray.length > index) {\n    this.viaArray.splice(index, 1);\n    this.calculateRoute();\n  }\n};\n\n\nexports.module.component('ngeoRouting', {\n  controller: exports.Controller,\n  bindings: {\n    'map': '<ngeoRoutingMap'\n  },\n  templateUrl: ngeoRoutingTemplateUrl\n});\n\n\nexport default exports;\n","/**\n * @module ngeo.routing.module\n */\nimport ngeoRoutingRoutingComponent from 'ngeo/routing/RoutingComponent.js';\n\nimport './routing.less';\n\n/**\n * @type {angular.Module}\n */\nconst exports = angular.module('ngeoRoutingModule', [\n  ngeoRoutingRoutingComponent.module.name\n]);\n\n\nexport default exports;\n","/**\n * @module ngeo.proj.EPSG2056\n */\nimport * as olProj from 'ol/proj.js';\n\n/** @suppress {extraRequire} */\nimport * as olProjProj4 from 'ol/proj/proj4.js';\n\nimport somerc from 'ngeo/proj/somerc.js';\nimport proj4 from 'proj4';\n\nconst epsg2056def = [\n  `+proj=${somerc}`,\n  '+lat_0=46.95240555555556',\n  '+lon_0=7.439583333333333',\n  '+k_0=1',\n  '+x_0=2600000',\n  '+y_0=1200000',\n  '+ellps=bessel',\n  '+towgs84=674.374,15.056,405.346,0,0,0,0',\n  '+units=m',\n  '+no_defs'\n].join(' ');\nconst epsg2056extent = [2420000, 1030000, 2900000, 1350000];\n\nproj4.defs('EPSG:2056', epsg2056def);\nolProjProj4.register(proj4);\nolProj.get('EPSG:2056').setExtent(epsg2056extent);\n\nconst exports = 'EPSG:2056';\n\n\nexport default exports;\n","/**\n * @module app.desktop_alt.Controller\n */\n/**\n * Application entry point.\n *\n * This file includes `goog.require`'s for all the components/directives used\n * by the HTML page and the controller to provide the configuration.\n */\n\nimport gmfControllersAbstractDesktopController from 'gmf/controllers/AbstractDesktopController.js';\nimport './less/main.less';\nimport appBase from '../appmodule.js';\nimport gmfImportModule from 'gmf/import/module.js';\nimport ngeoGooglestreetviewModule from 'ngeo/googlestreetview/module.js';\nimport ngeoRoutingModule from 'ngeo/routing/module.js';\nimport ngeoProjEPSG2056 from 'ngeo/proj/EPSG2056.js';\nimport ngeoProjEPSG21781 from 'ngeo/proj/EPSG21781.js';\nimport ngeoStatemanagerWfsPermalink from 'ngeo/statemanager/WfsPermalink.js';\nimport * as olBase from 'ol/index.js';\nimport {Circle, Fill, Stroke, Style} from 'ol/style';\nimport Raven from 'raven-js/src/raven.js';\nimport RavenPluginsAngular from 'raven-js/plugins/angular.js';\n\nif (!window.requestAnimationFrame) {\n  alert('Your browser is not supported, please update it or use another one. You will be redirected.\\n\\n'\n    + 'Votre navigateur n\\'est pas supporté, veuillez le mettre à jour ou en utiliser un autre. Vous allez être redirigé.\\n\\n'\n    + 'Ihr Browser wird nicht unterstützt, bitte aktualisieren Sie ihn oder verwenden Sie einen anderen. Sie werden weitergeleitet.');\n  window.location = 'http://geomapfish.org/';\n}\n\n/**\n * @param {angular.Scope} $scope Scope.\n * @param {angular.$injector} $injector Main injector.\n * @param {ngeo.misc.File} ngeoFile The file service.\n * @param {gettext} gettext The gettext service\n * @param {angular.$q} $q Angular $q.\n * @constructor\n * @extends {gmf.controllers.AbstractDesktopController}\n * @ngInject\n * @export\n */\nconst exports = function($scope, $injector, ngeoFile, gettext, $q) {\n  gmfControllersAbstractDesktopController.call(this, {\n    srid: 21781,\n    mapViewConfig: {\n      center: [632464, 185457],\n      zoom: 3,\n      resolutions: [250, 100, 50, 20, 10, 5, 2, 1, 0.5, 0.25, 0.1, 0.05]\n    }\n  }, $scope, $injector);\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.searchCoordinatesProjections = [ngeoProjEPSG21781, ngeoProjEPSG2056, 'EPSG:4326'];\n\n  /**\n   * @type {number}\n   * @export\n   */\n  this.searchDelay = 500;\n\n  /**\n   * @type {boolean}\n   * @export\n   */\n  this.showInfobar = true;\n\n  /**\n   * @type {!Array.<number>}\n   * @export\n   */\n  this.scaleSelectorValues = [250000, 100000, 50000, 20000, 10000, 5000, 2000, 1000, 500, 250, 100, 50];\n\n  /**\n   * @type {Array.<string>}\n   * @export\n   */\n  this.elevationLayers = ['srtm'];\n\n  /**\n   * @type {Object.<string, gmf.raster.component.LayerConfig>}\n   * @export\n   */\n  this.elevationLayersConfig = {};\n\n  /**\n   * @type {Object.<string, gmfx.ProfileLineConfiguration>}\n   * @export\n   */\n  this.profileLinesconfiguration = {\n    'srtm': {}\n  };\n\n  /**\n   * @type {Array.<gmfx.MousePositionProjection>}\n   * @export\n   */\n  this.mousePositionProjections = [{\n    code: 'EPSG:2056',\n    label: 'CH1903+ / LV95',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:21781',\n    label: 'CH1903 / LV03',\n    filter: 'ngeoNumberCoordinates::{x}, {y} m'\n  }, {\n    code: 'EPSG:4326',\n    label: 'WGS84',\n    filter: 'ngeoDMSCoordinates:2'\n  }];\n\n  /**\n   * @type {gmfx.GridMergeTabs}\n   * @export\n   */\n  this.gridMergeTabs = {\n    'OSM_time_merged': ['osm_time', 'osm_time2'],\n    'transport (merged)': ['fuel', 'parking'],\n    'Learning [merged]': ['information', 'bus_stop']\n  };\n\n  const radius = 5;\n  const fill = new Fill({color: [255, 255, 255, 0.6]});\n  const stroke = new Stroke({color: [255, 0, 0, 1], width: 2});\n  const image = new Circle({fill, radius, stroke});\n  const default_search_style = new Style({\n    fill,\n    image,\n    stroke\n  });\n\n  /**\n   * @type {Object.<string, ol.style.Style>} Map of styles for search overlay.\n   * @export\n   */\n  this.searchStyles = {\n    'default': default_search_style\n  };\n\n  // Allow angular-gettext-tools to collect the strings to translate\n  /** @type {angularGettext.Catalog} */\n  const gettextCatalog = $injector.get('gettextCatalog');\n  gettextCatalog.getString('OSM_time_merged');\n  gettextCatalog.getString('OSM_time (merged)');\n  gettextCatalog.getString('Learning [merged]');\n  gettextCatalog.getString('Add a theme');\n  gettextCatalog.getString('Add a sub theme');\n  gettextCatalog.getString('Add a layer');\n\n  /**\n   * @type {string}\n   * @export\n   */\n  this.bgOpacityOptions = 'Test aus Olten';\n\n  if ($injector.has('sentryUrl')) {\n    const options = $injector.has('sentryOptions') ? $injector.get('sentryOptions') : undefined;\n    const raven = new Raven();\n    raven.config($injector.get('sentryUrl'), options)\n      .addPlugin(RavenPluginsAngular)\n      .install();\n  }\n};\n\nolBase.inherits(exports, gmfControllersAbstractDesktopController);\n\n\n/**\n * @param {jQuery.Event} event keydown event.\n * @export\n */\nexports.prototype.onKeydown = function(event) {\n  if (event.ctrlKey && event.key === 'p') {\n    this.printPanelActive = true;\n    event.preventDefault();\n  }\n};\n\n\nexports.module = angular.module('Appdesktop_alt', [\n  appBase.module.name,\n  gmfControllersAbstractDesktopController.module.name,\n  gmfImportModule.name,\n  ngeoRoutingModule.name,\n  ngeoGooglestreetviewModule.name,\n  ngeoStatemanagerWfsPermalink.module.name,\n]);\n\nexports.module.controller('AlternativeDesktopController', exports);\n\nexport default exports;\n","module.exports = \"<div class=ngeo-routing> <div class=\\\"ngeo-routing-start form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.startFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['start.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['start.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"ngeo-routing-vias form-group\\\" ng-repeat=\\\"(index, via) in $ctrl.viaArray\\\"> <div class=form-inline> <div class=form-group> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=via.feature ngeo-routing-feature-fill-color=\\\"$ctrl.colors['via.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['via.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <button type=button class=\\\"btn btn-primary delete-via\\\" ng-click=$ctrl.deleteVia(index)> <span class=\\\"fa fa-trash-o\\\"></span> </button> </div> </div> <div class=\\\"ngeo-routing-destination form-group\\\"> <ngeo-routing-feature ngeo-routing-feature-map=$ctrl.map ngeo-routing-feature-feature=$ctrl.targetFeature_ ngeo-routing-feature-fill-color=\\\"$ctrl.colors['destination.fill']\\\" ngeo-routing-feature-stroke-color=\\\"$ctrl.colors['destination.stroke']\\\" ngeo-routing-feature-on-change=$ctrl.handleChange> </ngeo-routing-feature> </div> <div class=\\\"form-group pull-right\\\"> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.clearRoute()> <span class=\\\"fa fa-trash-o\\\"></span> <span translate>Clear</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.reverseRoute()> <span class=\\\"fa fa-exchange\\\"></span> <span translate>Reverse</span> </button> <button type=button class=\\\"btn btn-primary\\\" ng-click=$ctrl.addVia()> <span class=\\\"fa fa-plus\\\"></span> <span translate>Add via</span> </button> </div> <div class=clearfix></div> <div class=form-horizontal ng-if=\\\"$ctrl.routingProfiles.length > 1\\\"> <div class=form-group> <label class=\\\"control-label col-md-4\\\" translate>Profile</label> <div class=col-md-8> <select class=form-control ng-model=$ctrl.selectedRoutingProfile> <option ng-repeat=\\\"profile in $ctrl.routingProfiles\\\" ng-value=profile>{{profile.label}}</option> </select> </div> </div> </div> <div class=\\\"ngeo-routing-error form-group clearfix\\\" ng-hide=\\\"$ctrl.errorMessage === ''\\\"> {{$ctrl.errorMessage}} </div> <div class=clearfix></div> <div class=form-horizontal ng-hide=\\\"$ctrl.routeDuration === null && $ctrl.routeDistance <= 0\\\"> <div class=row> <div class=col-md-12> <strong translate>Route statistics</strong> </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDuration === null\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Duration </div> <div class=col-md-8> {{$ctrl.routeDuration | ngeoDuration}} </div> </div> <div class=row ng-hide=\\\"$ctrl.routeDistance <= 0\\\"> <div class=\\\"col-md-4 text-right\\\" translate> Distance </div> <div class=col-md-8> {{$ctrl.routeDistance | ngeoUnitPrefix:'m'}} </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-routing-feature> <div class=input-group> <ngeo-nominatim-input ngeo-nominatim-input-value=$ctrl.featureLabel ngeo-nominatim-input-placeholder=\\\"{{'Search...' | translate}}\\\" ngeo-nominatim-input-on-select=$ctrl.onSelect> </ngeo-nominatim-input> <div class=\\\"input-group-addon btn\\\" ng-click=$ctrl.set()> <span class=\\\"fa fa-map-marker\\\"></span> </div> </div> </div> \";","module.exports = \"<div class=ngeo-nominatim-input> <input type=text class=form-control placeholder={{$ctrl.placeholder}} ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> </div> \";","module.exports = \"<div class=ngeo-googlestreetview-instructions ng-if=\\\"$ctrl.location === null\\\" translate> Click on a road on the map to start StreetView. </div> <div class=ngeo-googlestreetview-nodata ng-if=$ctrl.noDataAtLocation translate> Street View data not found for this location. </div> \";","module.exports = \"<div class=form-group> <select class=form-control ng-model=$ctrl.mode ng-options=\\\"mode | translate for mode in $ctrl.modes\\\" ng-click=\\\"$ctrl.hasError = false\\\"> </select> </div> <div> <form name=idsl_form novalidate ng-show=\\\"$ctrl.mode === 'Local'\\\"> <div class=form-group> <div class=input-group> <input name=file type=file required/> <input class=form-control placeholder=\\\"{{'No file' | translate}}\\\" readonly=readonly type=text value={{$ctrl.fileNameAndSize}} ng-click=$ctrl.browse() /> <span class=input-group-btn> <button class=\\\"btn btn-default\\\" type=button ng-click=$ctrl.browse() translate>Browse</button> </span> </div> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Load a file from local' | translate}}\\\" type=submit ng-click=\\\"idsl_form.$valid && $ctrl.load()\\\" ng-disabled=\\\"$ctrl.file === undefined || $ctrl.hasError\\\"> <span ng-if=!$ctrl.hasError>{{'Load local file' | translate}}</span> <span ng-if=$ctrl.hasError>{{'Unable to load the file' | translate}}</span> </button> </div> </form> <form name=idsc_form novalidate ng-show=\\\"$ctrl.mode === 'Online'\\\"> <div class=\\\"form-group gmf-importdatasource-url-form-group\\\"> <input autocomplete=off class=form-control name=url placeholder=\\\"{{'Choose or enter online resource URL' | translate}}\\\" required type=url ng-disabled=$ctrl.pending ng-model=$ctrl.url /> </div> <div class=form-group> <button class=\\\"btn btn-sm btn-default form-control gmf-importdatasource-connect-btn\\\" ng-class=\\\"{'has-error': $ctrl.hasError}\\\" title=\\\"{{'Connect to online resource' | translate}}\\\" type=submit ng-click=\\\"idsc_form.$valid && $ctrl.connect()\\\" ng-disabled=\\\"idsc_form.$invalid || $ctrl.pending\\\"> <span ng-if=$ctrl.pending>{{'Connecting, please wait...' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && $ctrl.hasError\\\">{{'Failed to connect' | translate}}</span> <span ng-if=\\\"!$ctrl.pending && !$ctrl.hasError\\\">{{'Connect' | translate}}</span> </button> </div> </form> </div> <div class=gmf-importdatasource-layers ng-if=\\\"$ctrl.wmsCapabilities !== null || $ctrl.wmtsCapabilities !== null\\\"> <hr/> <gmf-wmscapabilitylayertreenode capabilities=::$ctrl.wmsCapabilities layer=::$ctrl.wmsCapabilities.Capability.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmsCapabilities !== null\\\"> </gmf-wmscapabilitylayertreenode> <gmf-wmtscapabilitylayertree capabilities=::$ctrl.wmtsCapabilities layers=::$ctrl.wmtsCapabilities.Contents.Layer url=::$ctrl.url ng-if=\\\"$ctrl.wmtsCapabilities !== null\\\"> </gmf-wmtscapabilitylayertree> </div> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layers\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> </li> </ul> \";","module.exports = \"<ul> <li ng-repeat=\\\"layer in ::$ctrl.layer.Layer\\\"> <div class=gmf-wmscapabilitylayertreenode-header> <span class=gmf-wmscapabilitylayertreenode-popover-container ng-if=\\\"::(layer.Name !== undefined || layer.Abstract !== undefined)\\\" ngeo-popover ngeo-popover-dismiss=.content ngeo-popover-placement=left> <span ngeo-popover-anchor class=\\\"fa fa-cog gmf-wmscapabilitylayertreenode-actions\\\"> </span> <div class=gmf-wmscapabilitylayertreenode-popover-content ngeo-popover-content> <ul> <li ng-if=\\\"::(layer.Name !== undefined)\\\"> <i class=\\\"fa fa-plus fa-fw\\\"></i> <a href=\\\"\\\" ng-click=\\\"$ctrl.createAndAddDataSource(layer); popoverCtrl.dismissPopover()\\\"> <span translate>Add layer</span> </a> </li> <li ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a aria-expanded=false data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-click=popoverCtrl.dismissPopover()> <span translate>Open/Close description</span> </a> </li> </ul> </div> </span> <a aria-expanded=false class=\\\"fa gmf-wmscapabilitylayertreenode-expand-node fa-fw\\\" data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\"></a> <span ng-if=\\\"::(layer.Layer !== undefined && layer.Layer.length)\\\" class=\\\"fa fa-fw gmf-wmscapabilitylayertreenode-group\\\"> </span> <a class=\\\"fa fa-circle-thin gmf-wmscapabilitylayertreenode-no-icon fa-fw\\\" ng-if=\\\"::(layer.Layer === undefined || layer.Layer.length === 0)\\\"></a> <span class=gmf-wmscapabilitylayertreenode-title>{{ ::layer.Title }}</span> <div class=\\\"collapse gmf-wmscapabilitylayertreenode-description\\\" id=gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}} ng-if=\\\"::(layer.Abstract !== undefined)\\\"> <a aria-expanded=false class=gmf-wmscapabilitylayertreenode-description-toggle data-toggle=collapse href=#gmf-wmscapabilitylayertreenode-description-{{::$ctrl.getUid(layer)}}> <span translate>Hide description</span> </a> <span class=gmf-wmscapabilitylayertreenode-description-content>{{ ::layer.Abstract }}</span> </div> </div> <gmf-wmscapabilitylayertreenode class=collapse id=gmf-wmscapabilitylayertreenode-children-{{::$ctrl.getUid(layer)}} capabilities=::$ctrl.capabilities layer=::layer ng-if=\\\"::(layer.Layer !== undefined)\\\"> </gmf-wmscapabilitylayertreenode> </li> </ul> \";","module.exports = \"<div class=\\\"text-center btn-group dropup\\\" gmf-elevation gmf-elevation-active=ctrl.active gmf-elevation-elevation=ctrl.elevationValue gmf-elevation-loading=ctrl.elevationLoading gmf-elevation-layer=ctrl.selectedElevationLayer gmf-elevation-layersconfig=ctrl.layersconfig gmf-elevation-map=::ctrl.map> <a type=button class=\\\"btn btn-default\\\" aria-expanded=false ng-class=\\\"::{'dropdown-toggle': ctrl.layers.length > 1}\\\" ng-attr-data-toggle=\\\"{{::(ctrl.layers.length > 1) ? 'dropdown' : ''}}\\\"> <span class=gmf-elevationwidget-value> {{ctrl.elevationValue}} <span ng-show=ctrl.elevationLoading class=\\\"fa fa-spinner\\\"></span> <span ng-show=\\\"!ctrl.elevationValue && !ctrl.elevationLoading\\\" translate>Elevation…</span> </span><span class=caret ng-if=\\\"::ctrl.layers.length > 1\\\"></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu ng-if=\\\"::ctrl.layers.length > 1\\\"> <li class=dropdown-header translate>Elevation data sources</li> <li ng-repeat=\\\"elevationItem in ::ctrl.layers\\\"> <a href ng-click=\\\"ctrl.selectedElevationLayer = elevationItem\\\"> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedElevationLayer === elevationItem}\\\"></span> {{elevationItem | translate}} </a> </li> </ul> </div> \";","module.exports = \"<div class=\\\"gmf-profile-container panel\\\" ng-show=ctrl.active> <div class=ngeo-profile ng-show=!ctrl.isErrored ngeo-profile=ctrl.profileData ngeo-profile-highlight=ctrl.profileHighlight ngeo-profile-options=::ctrl.profileOptions> </div> <ul class=gmf-profile-legend ng-show=!ctrl.isErrored> <li ng-repeat=\\\"name in ::ctrl.getLayersNames()\\\"> <i class=\\\"fa fa-minus\\\" ng-style=ctrl.getStyle(name)></i> {{name | translate}} <span ng-if=\\\"ctrl.currentPoint.elevations[name] != null\\\"> {{ctrl.currentPoint.elevations[name]}}&nbsp;{{ctrl.currentPoint.yUnits}} </span> </li> </ul> <div class=\\\"gmf-profile-export btn-group dropup\\\" ng-show=!ctrl.isErrored> <a class=dropdown-toggle href=\\\"\\\" ng-show=\\\"ctrl.profileData.length !== 0\\\" data-toggle=dropdown aria-expanded=false> {{'Export' | translate}}&nbsp;<i class=\\\"fa fa-caret-up\\\"></i> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=\\\"\\\" ng-click=::ctrl.downloadCsv()> <i class=\\\"fa fa-table\\\"></i>&nbsp;{{'Download CSV' | translate}}</a> </li> </ul> </div> <div class=gmf-profile-error ng-show=ctrl.isErrored> <p>{{'The profile service does not respond, please try later.' | translate}}</p> </div> <div class=close ng-click=\\\"ctrl.line = null\\\">&times;</div> </div> \";","module.exports = \"<div class=gmf-print> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED') !== true && $ctrl.isState('ERROR_ON_GETCAPABILITIES') !== true\\\"> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"><ng-transclude/></div> <div ng-repeat=\\\"attribute in $ctrl.layoutInfo.simpleAttributes\\\" class=\\\"gmf-print-layoutinfo form-group\\\"> <div ng-if=\\\"$ctrl.hiddenAttributeNames === undefined || $ctrl.hiddenAttributeNames.indexOf(attribute.name) < 0\\\"> <input ng-if=\\\"attribute.type === 'number'\\\" ng-model=attribute.value class=form-control type=number ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <input ng-if=\\\"attribute.type === 'text'\\\" ng-model=attribute.value class=form-control type=text ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"> <textarea ng-if=\\\"attribute.type === 'textarea'\\\" ng-model=attribute.value class=form-control row=3 ng-attr-placeholder=\\\"{{attribute.name | translate}}\\\"></textarea> <div ng-if=\\\"attribute.type === 'checkbox'\\\" class=checkbox> <label> <input ng-model=attribute.value type=checkbox> <span>{{attribute.name | translate}}</span> </label> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.legend !== undefined\\\" class=\\\"gmf-print-legend checkbox\\\"> <label> <input ng-model=$ctrl.layoutInfo.legend type=checkbox> <span translate>Legend</span> </label> </div> <div class=\\\"gmf-print-layout-selector form-horizontal\\\"> <div ng-show=\\\"$ctrl.layoutInfo.layouts.length !== 1\\\" class=form-group> <label class=\\\"control-label col-md-5\\\" translate>Layout</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown> <span>{{$ctrl.layoutInfo.layout | translate}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"layout in $ctrl.layoutInfo.layouts\\\"> <a ng-click=$ctrl.setLayout(layout) href=\\\"\\\">{{layout | translate}}</a> </li> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.scales.length !== 1\\\" class=\\\"gmf-print-scale-selector form-group\\\"> <label class=\\\"control-label col-md-5\\\" translate>Scale</label> <div class=col-md-7> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.scale | ngeoScalify}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"scale in $ctrl.layoutInfo.scales\\\"> <a ng-click=$ctrl.getSetScale(scale) href=\\\"\\\">{{scale | ngeoScalify}}</a> </li> <span ng-if=$ctrl.scaleInput> <li class=dropdown-header translate>Manual entry</li> <li> <div class=gmf-print-custom-scale> 1 : <input class=gmf-print-custom-scale-input type=number min=1 ng-model=$ctrl.getSetScale ng-model-options=\\\"{getterSetter: true}\\\"> </div> </li> </span> </ul> </div> </div> </div> <div ng-show=\\\"$ctrl.layoutInfo.dpis.length !== 1\\\" class=\\\"gmf-print-dpi-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>DPI</label> <div class=col-md-5> <div class=\\\"btn-group btn-block\\\"> <button type=button class=\\\"btn btn-default form-control\\\" data-toggle=dropdown aria-expanded=false> <span>{{$ctrl.layoutInfo.dpi}}&nbsp;</span> <i class=\\\"fa fa-caret-down\\\"></i> </button> <ul class=\\\"dropdown-menu dropdown-menu-right btn-block\\\" role=menu> <li ng-repeat=\\\"dpi in $ctrl.layoutInfo.dpis\\\"> <a href=\\\"\\\" ng-click=$ctrl.setDpi(dpi)>{{dpi}}</a> </li> </ul> </div> </div> </div> <div class=\\\"gmf-print-rotation-selector form-group\\\"> <label class=\\\"control-label col-md-3\\\" translate>Rotation</label> <div class=col-md-5> <input class=\\\"form-control gmf-print-rotation-input\\\" type=range value=0 min=-180 max=180 data-toggle=tooltip title=\\\"{{'You can also use Alt+Shift on the map' | translate}}\\\"> </div> <div class=col-md-4> <input class=\\\"form-control gmf-print-rotation-input\\\" type=number min=-180 max=180 value=0> </div> </div> </div> <div class=\\\"gmf-print-actions form-group pull-right\\\"> <span ng-show=\\\"$ctrl.isState('PRINTING')\\\"> <i class=\\\"fa fa-refresh fa-spin\\\"></i> </span> <a ng-show=\\\"$ctrl.isState('PRINTING')\\\" class=\\\"gmf-print-cancel btn btn-link\\\" href=\\\"\\\" ng-click=$ctrl.cancel() translate>Abort</a> <button ng-show=$ctrl.layoutInfo.formats.png class=\\\"gmf-print-image btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('png')\\\" translate>Image</button> <button ng-show=$ctrl.layoutInfo.formats.pdf class=\\\"gmf-print-pdf btn btn-primary\\\" ng-disabled=\\\"$ctrl.isState('PRINTING')\\\" ng-click=\\\"$ctrl.print('pdf')\\\" translate>PDF</button> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_REPORT')\\\" class=\\\"gmf-print-error-report form-group pull-left text-danger\\\"> <p>{{'Error during the print, please try again.' | translate}}</p> </div> </div> <div ng-show=\\\"$ctrl.isState('CAPABILITIES_NOT_LOADED')\\\" class=\\\"gmf-print-wait form-group pull-left\\\"> <p>{{'Connecting to the print server, please wait.' | translate}}</p> </div> <div ng-show=\\\"$ctrl.isState('ERROR_ON_GETCAPABILITIES')\\\" class=\\\"gmf-print-error-capabilities form-group pull-left text-danger\\\"> <p>{{'The print server is unavailable. Please, try later.' | translate}}</p> </div> </div> \";","module.exports = \"<div ng-switch=efsCtrl.selectedEditableTreeCtrl> <div ng-switch-when=null> <select class=form-control ng-model=efsCtrl.selectedEditableTreeCtrl ng-show=\\\"efsCtrl.editableTreeCtrls.length > 0\\\" ng-options=\\\"treeCtrl.node.name | translate for treeCtrl in efsCtrl.editableTreeCtrls\\\"> <option value=\\\"\\\" translate>-- Choose a layer --</option> </select> <span ng-show=\\\"efsCtrl.editableTreeCtrls.length == 0\\\" translate>No editable layer available!</span> </div> <div ng-switch-default> <div class=row> <div class=col-sm-12> <span translate>Currently editing: </span> <b>{{ efsCtrl.selectedEditableTreeCtrl.node.name | translate }}</b> <span class=\\\"fa fa-pencil\\\"></span> <br> <button ng-click=efsCtrl.stopEditing() class=\\\"btn btn-link btn-xs pull-right\\\"> <span class=\\\"fa fa-times\\\"></span> {{'Stop editing' | translate}} </button> </div> </div> <gmf-editfeature gmf-editfeature-dirty=efsCtrl.dirty gmf-editfeature-editabletreectrl=::efsCtrl.selectedEditableTreeCtrl gmf-editfeature-map=::efsCtrl.map gmf-editfeature-state=efsCtrl.state gmf-editfeature-tolerance=::efsCtrl.tolerance gmf-editfeature-vector=::efsCtrl.vectorLayer gmf-editfeature-closeaftersave=::efsCtrl.closeAfterSave> </gmf-editfeature> </div> </div> \";","module.exports = \"<div> <div ng-switch=efCtrl.feature> <a ng-switch-when=null ng-if=efCtrl.geomType href ngeo-btn ngeo-createfeature ngeo-createfeature-active=efCtrl.createActive ngeo-createfeature-features=::efCtrl.features ngeo-createfeature-geom-type=::efCtrl.geomType ngeo-createfeature-map=::efCtrl.map class=\\\"btn btn-default\\\" ng-class=\\\"{active: efCtrl.createActive}\\\" ng-model=efCtrl.createActive> <span ng-switch=::efCtrl.geomType> <span ng-switch-when=Point> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=MultiPoint> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> {{'Draw new point' | translate}} </span> <span ng-switch-when=LineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=MultiLineString> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> {{'Draw new linestring' | translate}} </span> <span ng-switch-when=Polygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> <span ng-switch-when=MultiPolygon> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> {{'Draw new polygon' | translate}} </span> </span> </a> <div ng-switch-default> <form novalidate name=form class=\\\"form gmf-editfeature-attributes-container\\\" ng-if=efCtrl.attributes> <div class=row> <div class=col-sm-12> <a class=close ng-click=efCtrl.cancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>&times;</a> </div> </div> <ngeo-attributes ngeo-attributes-attributes=::efCtrl.attributes ngeo-attributes-disabled=efCtrl.pending ngeo-attributes-feature=::efCtrl.feature> </ngeo-attributes> <input type=submit value=\\\"{{'Save' | translate}}\\\" class=\\\"btn btn-sm btn-default gmf-editfeature-btn-save\\\" ng-click=\\\"form.$valid && efCtrl.save()\\\" ng-disabled=\\\"!efCtrl.dirty || efCtrl.pending\\\" title=\\\"{{'Save modifications' | translate}}\\\"> <a class=\\\"btn btn-sm btn-default gmf-editfeature-btn-cancel\\\" ng-click=efCtrl.confirmCancel() ng-disabled=efCtrl.pending title=\\\"{{'Cancel modifications' | translate}}\\\" href>{{'Cancel' | translate}}</a> <button class=\\\"btn btn-sm btn-link gmf-editfeature-btn-delete\\\" ng-click=efCtrl.delete() ng-disabled=efCtrl.pending ng-show=efCtrl.featureId title=\\\"{{'Delete this feature' | translate}}\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </form> </div> </div> <ngeo-modal ng-model=efCtrl.unsavedModificationsModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Unsaved modifications!' | translate}} </h4> </div> <div class=modal-body> {{'There are unsaved changes.' | translate}} </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.continueWithoutSaving()> {{'Continue without saving' | translate}} </button> <button type=button class=\\\"btn btn-primary\\\" data-dismiss=modal> {{'Cancel' | translate}} </button> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal ng-click=efCtrl.submit()> {{'Save' | translate}} </button> </div> </ngeo-modal> <ngeo-modal ng-model=efCtrl.showServerError> <div class=modal-header>{{'Server error.' | translate}}</div> <div class=modal-body>{{efCtrl.serverErrorType}}<br> {{efCtrl.serverErrorMessage || ('Unexpected server error.' | translate)}}</div> </ngeo-modal> </div> \";","module.exports = \"<fieldset ng-disabled=attrCtrl.disabled> <div class=form-group ng-repeat=\\\"attribute in ::attrCtrl.attributes\\\"> <div ng-if=\\\"attribute.type !== 'geometry'\\\"> <label ng-if=\\\"::attribute.type !== 'boolean'\\\" class=control-label>{{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span> </label> <div ng-switch=::attribute.type> <div ng-switch-when=boolean class=checkbox> <label> <input name={{::attribute.name}} ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); type=checkbox>  <span> {{ ::attribute.name | translate }} <span class=text-muted>{{::attribute.required ? \\\"*\\\" : \\\"\\\"}}</span></span> </label> </div> <select name={{::attribute.name}} ng-required=attribute.required ng-switch-when=select ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=text> <option ng-repeat=\\\"attribute in ::attribute.choices\\\" value=\\\"{{ ::attribute }}\\\"> {{ ::attribute }} </option> </select> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=date ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;timepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} id=time ng-required=attribute.required ng-switch-when=time ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;datepicker&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=datetime ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ngeo-datetimepicker ngeo-datetimepicker-options=\\\"'{&quot;scrollTime&quot;: false, &quot;format&quot;: &quot;' + attribute.format + '&quot;, &quot;allowBlank&quot;: true, &quot;todayButton&quot;: false, &quot;mask&quot;: &quot;' + attribute.mask + '&quot;, &quot;defaultTime&quot;: &quot;00:00&quot;}'\\\" class=form-control type=text>  <div ng-switch-when=number ng-switch=::attribute.numType> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-when=integer ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control step=1 type=number>  <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); class=form-control type=number>  </div> <input name={{::attribute.name}} ng-required=attribute.required ng-switch-default ng-model=attrCtrl.properties[attribute.name] ng-change=attrCtrl.handleInputChange(attribute.name); ng-maxlength=attribute.maxLength class=form-control type=text>  <div ng-show=\\\"attrCtrl.form.$submitted || attrCtrl.form[attribute.name].$touched\\\"> <p class=text-danger ng-show=attrCtrl.form[attribute.name].$error.required> {{'This field is required' | translate}} </p> </div> </div> </div> </div> </fieldset> \";","module.exports = \"<ngeo-drawfeature ngeo-btn-group class=btn-group ngeo-drawfeature-active=efCtrl.drawActive ngeo-drawfeature-map=efCtrl.map ngeo-drawfeature-showmeasure=efCtrl.showMeasure> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-default ngeo-drawfeature-point\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-default ngeo-drawfeature-linestring\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a text label on the map' | translate}}\\\" href ngeo-btn ngeo-drawtext class=\\\"btn btn-default ngeo-drawfeature-text\\\" ng-class=\\\"{active: dfCtrl.drawText.active}\\\" ng-model=dfCtrl.drawText.active> <span class=\\\"gmf-icon gmf-icon-text\\\"></span> </a> </ngeo-drawfeature> <div ng-switch=efCtrl.selectedFeature> <hr class=gmf-drawfeature-separator ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div ng-switch-when=null> <div ng-show=\\\"efCtrl.getFeaturesArray().length > 0\\\"> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.features class=\\\"btn btn-link btn-sm\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.clearFeatures() class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete All' | translate}} </button> </div> <div class=gmf-eol></div> <div class=\\\"gmf-drawfeature-featurelist list-group list-group-sm\\\"> <button role=button class=list-group-item ng-repeat=\\\"feature in efCtrl.getFeaturesArray()\\\" ng-click=efCtrl.selectFeatureFromList(feature);> {{ feature.get(efCtrl.nameProperty) }} </button> </div> </div> </div> <div ng-switch-default> <button ng-click=\\\"efCtrl.selectedFeature = null;\\\" class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-arrow-left\\\"></span> {{'List' | translate}} </button> <div class=ngeo-drawfeature-actionbuttons> <button type=button data-toggle=dropdown aria-haspopup=true aria-expanded=false ngeo-exportfeatures ngeo-exportfeatures-features=efCtrl.selectedFeatures class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-mail-forward\\\"></span> {{'Export' | translate}} <span class=caret></span> </button> <button ng-click=efCtrl.removeFeature(efCtrl.selectedFeature); class=\\\"btn btn-link btn-xs\\\"> <span class=\\\"fa fa-trash\\\"></span> {{'Delete' | translate}} </button> </div> <div class=gmf-eol></div> <gmf-featurestyle gmf-featurestyle-feature=efCtrl.selectedFeature> </gmf-featurestyle> </div> </div> \";","module.exports = \"<div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\"> <div class=form-group> <input ng-model=fsCtrl.getSetName ng-model-options=\\\"{getterSetter: true}\\\" ng-attr-placeholder=\\\"{{'Name' | translate}}\\\" class=form-control /> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showlabel type=checkbox ng-model=fsCtrl.getSetShowLabel ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showlabel class=control-label> {{'Display label' | translate}} </label> </div> <div ng-if=\\\"fsCtrl.type !== 'Text'\\\" class=form-group> <input id=gmf-featurestyle-showmeasure type=checkbox ng-model=fsCtrl.getSetShowMeasure ng-model-options=\\\"{getterSetter: true}\\\"/> <label ng-switch=fsCtrl.type for=gmf-featurestyle-showmeasure class=control-label> <span ng-switch-when=Circle> {{'Display azimuth and radius' | translate}} </span> <span ng-switch-when=Polygon> {{'Display surface' | translate}} </span> <span ng-switch-when=Rectangle> {{'Display surface' | translate}} </span> <span ng-switch-when=LineString> {{'Display length' | translate}} </span> <span ng-switch-when=Point> {{'Display coordinates' | translate}} </span> </label> <em class=text-muted> ({{ fsCtrl.measure }}) </em> </div> </div> <div ng-if=\\\"fsCtrl.feature && fsCtrl.type\\\" class=form-horizontal> <div class=form-group> <div ngeo-colorpicker=\\\"\\\" ngeo-colorpicker-color=fsCtrl.color class=col-md-12> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Point'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=3 max=20 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Size' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=8 max=30 step=1 ng-model=fsCtrl.getSetSize ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'LineString' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Stroke' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0.5 max=5 step=0.5 ng-model=fsCtrl.getSetStroke ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Circle' || fsCtrl.type === 'Polygon' || fsCtrl.type === 'Rectangle'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Opacity' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=0 max=1 step=0.05 ng-model=fsCtrl.getSetOpacity ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> <div ng-if=\\\"fsCtrl.type === 'Text'\\\" class=\\\"form-group form-group-nomargin\\\"> <label class=\\\"control-label col-md-4\\\">{{'Angle' | translate}}</label> <div class=col-md-8> <input type=range class=form-control min=-180 max=180 step=22.5 ng-model=fsCtrl.getSetAngle ng-model-options=\\\"{getterSetter: true}\\\"/> </div> </div> </div> \";","module.exports = \"<div class=ngeo-displaywindow ng-show=$ctrl.open ng-style=$ctrl.style title=\\\"\\\"> <div class=windowcontainer> <button type=button class=\\\"btn fa-close close\\\" ng-click=$ctrl.close()> </button> <div class=animation-container> <div class=slide-animation> <div class=\\\"header ui-draggable-handle\\\" ng-if=\\\"$ctrl.title !== null\\\"> <p class=title>{{$ctrl.title | translate}}</p> </div> <div class=\\\"details content\\\" ng-if=$ctrl.content ng-bind-html=$ctrl.content> </div> <div class=\\\"details iframe\\\" ng-if=\\\"$ctrl.url !== null\\\"> <iframe frameborder=0 type=text/html height=100% width=100% ng-src=\\\"{{ $ctrl.urlTrusted }}\\\"></iframe> </div> <div class=content-template-container></div> </div> </div> </div> </div> \";","module.exports = \"<ul class=gmf-theme-selector> <li ng-repeat=\\\"theme in $ctrl.themes\\\" ng-click=$ctrl.setTheme(theme) ng-class=\\\"{'gmf-theme-selector-active': $ctrl.gmfThemeManager.getThemeName() == theme.name}\\\"> <img class=gmf-thumb ng-src={{::theme.icon}} /> <span class=gmf-text>{{theme.name | translate}}</span> </li> </ul> \";","module.exports = \"<div class=gmf-search> <input type=text ng-attr-placeholder={{$ctrl.placeholder|translate}} class=form-control ng-model=$ctrl.inputValue ngeo-search=$ctrl.options ngeo-search-datasets=$ctrl.datasets ngeo-search-listeners=$ctrl.listeners> <span class=\\\"gmf-clear-button ng-hide\\\" ng-hide=\\\"!$ctrl.clearButton || $ctrl.inputValue == ''\\\" ng-click=$ctrl.onClearButton()> </span> </div> <span ng-if=$ctrl.colorChooser> <span ng-show=$ctrl.displayColorPicker ngeo-popover ngeo-popover-placement=bottom> <button class=\\\"gmf-color-button fa fa-tint\\\" ngeo-popover-anchor data-original-title=\\\"{{'Change the color of the search result'|translate}}\\\"></button> <div ngeo-popover-content> <div ngeo-colorpicker ngeo-colorpicker-color=$ctrl.color></div> </div> </span> </span> \";","module.exports = \"<table class=ngeo-colorpicker-palette> <tr ng-repeat=\\\"colors in ::ctrl.colors\\\"> <td ng-repeat=\\\"color in ::colors\\\" ng-click=ctrl.setColor(color) ng-class=\\\"{'ngeo-colorpicker-selected': color == ctrl.color}\\\"> <div ng-style=\\\"::{'background-color': color}\\\"></div> </td> </tr> </table> \";","module.exports = \"<div class=gmf-displayquerywindow ng-class=\\\"{'desktop': ctrl.desktop, 'mobile': !ctrl.desktop}\\\" ng-show=ctrl.open> <button class=collapse-button type=button ng-show=::!ctrl.desktop ngeo-swipe-up=\\\"ctrl.collapsed = false\\\" ngeo-swipe-down=\\\"ctrl.collapsed = true\\\" ngeo-swipe-disable-mouse ng-click=\\\"ctrl.collapsed = !ctrl.collapsed\\\" ng-class=\\\"[ctrl.collapsed ? 'collapse-button-up' : 'collapse-button-down']\\\"> </button> <div class=windowcontainer ng-swipe-disable-mouse ng-swipe-left=ctrl.next() ng-swipe-right=ctrl.previous()> <button type=button class=\\\"btn fa-close close\\\" ng-click=ctrl.close()> </button> <div class=animation-container ng-class=\\\"[ctrl.collapsed ? '' : 'animation-container-detailed', ctrl.isNext ? 'next' : 'previous']\\\"> <div ng-animate-swap=ctrl.animate class=\\\"slide-animation gmf-animatable\\\"> <div class=header> <p class=title>{{ctrl.source.label | translate}}</p> <p class=subtitle>{{ctrl.getFeatureValues()[ctrl.source.identifierAttributeField]}}</p> </div> <div class=details> <table> <tr ng-repeat=\\\"(key, value) in ctrl.getFeatureValues()\\\" ng-if=\\\"value !== undefined\\\"> <td class=details-key ng-bind-html=\\\"key | translate | ngeoTrustHtml\\\"></td> <td class=details-value ng-bind-html=\\\"value | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </table> </div> </div> </div> <div class=navigate> <div class=placeholder> <button type=button class=\\\"previous btn\\\" ng-disabled=ctrl.isFirst() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.previous()> <span ng-show=::ctrl.desktop>{{'Prev.' | translate}}</span> </button> </div> <div class=results> <span ng-show=::!ctrl.desktop>{{'Result' | translate}}</span> <span>{{ctrl.currentResult + 1}}</span> <span>/</span> <span>{{ctrl.getResultLength()}}</span> <div ng-show=::ctrl.desktop class=dropup> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=\\\"fa fa-filter\\\"></span> <span class=\\\"fa fa-caret-up\\\"></span> </button> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li> <a href=# ng-click=ctrl.setSelectedSource(null)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === null}\\\"> </i> <span>{{'All layers' | translate}} ({{ctrl.ngeoQueryResult.total}})</span> </a> </li> <li role=separator class=divider> </li> <li ng-repeat-start=\\\"source in ctrl.ngeoQueryResult.sources | filter: ctrl.sourcesFilter\\\" ng-repeat-end ng-class=\\\"{'disabled': source.features.length <= 0}\\\"> <a href=# ng-click=ctrl.setSelectedSource(source)> <i class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.selectedSource === source}\\\"> </i> <span>{{source.label | translate}} ({{source.features.length}})</span> </a> </li> </ul> </div> </div> <div class=placeholder> <button type=button class=\\\"next btn\\\" ng-disabled=ctrl.isLast() ng-show=\\\"ctrl.getResultLength() > 1\\\" ng-click=ctrl.next()> <span ng-show=::ctrl.desktop>{{'Next' | translate}}</span> </button> </div> </div> </div> </div> \";","module.exports = \"<div class=\\\"gmf-displayquerygrid panel\\\" ng-show=ctrl.active> <div class=close ng-click=ctrl.clear()> &times; </div> <ul class=\\\"nav nav-pills\\\" role=tablist> <li ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=presentation ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" ng-click=ctrl.selectTab(gridSource)> <a href=#{{ctrl.escapeValue(gridSource.source.label)}} data-target=#{{ctrl.escapeValue(gridSource.source.label)}} aria-controls={{ctrl.escapeValue(gridSource.source.label)}} role=tab data-toggle=tab> <span ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.features.length}}) </span> <span ng-if=\\\"gridSource.source.tooManyResults === true\\\"> {{gridSource.source.label | translate}} ({{gridSource.source.totalFeatureCount}}*) </span> </a> </li> </ul> <div class=tab-content> <div ng-repeat=\\\"gridSource in ctrl.getGridSources() track by gridSource.source.label\\\" role=tabpanel class=tab-pane ng-class=\\\"{'active' : ctrl.isSelected(gridSource)}\\\" id={{ctrl.escapeValue(gridSource.source.label)}}> <ngeo-grid ngeo-grid-configuration=gridSource.configuration ng-if=\\\"gridSource.source.tooManyResults !== true\\\"> </ngeo-grid> <div ng-if=\\\"gridSource.source.tooManyResults === true\\\"> <div class=\\\"gmf-displayquerygrid-message alert alert-warning\\\"> <p><span translate>The results can not be displayed because the maximum number has been reached</span> ({{gridSource.source.limit}}).</p> <p translate>Please refine your query.</p> </div> </div> </div> </div> <div class=navbar ng-show=\\\"!ctrl.pending && ctrl.getActiveGridSource() && ctrl.getActiveGridSource().configuration !== null\\\"> <ul class=\\\"nav navbar-nav navbar-right\\\"> <li class=ng-hide ng-show=ctrl.isOneSelected()> <p class=\\\"navbar-text ng-binding\\\"> {{ctrl.getSelectedRowCount()}} <span translate>selected element(s)</span> </p> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Zoom to selection' | translate}}\\\" ng-click=ctrl.zoomToSelection()> <i class=\\\"fa fa-search-plus\\\"></i> <span translate>Zoom to</span> </button> </li> <li ng-show=ctrl.isOneSelected() class=ng-hide> <button class=\\\"btn btn-link btn-xs\\\" title=\\\"{{'Export selection as CSV' | translate}}\\\" ng-click=ctrl.downloadCsv()> <i class=\\\"fa fa-download\\\"></i> <span translate>Export as CSV</span> </button> </li> <li class=\\\"dropdown navbar-link dropup\\\"> <button type=button class=\\\"dropup btn btn-default btn-xs\\\" data-toggle=dropdown aria-haspopup=true aria-expanded=false> <span translate>Select</span> <span class=caret></span> </button> <ul class=dropdown-menu aria-labelledby=dLabel> <li> <a href=\\\"\\\" ng-click=ctrl.selectAll() translate>All</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.unselectAll() translate>None</a> </li> <li> <a href=\\\"\\\" ng-click=ctrl.invertSelection() translate>Reverse selection</a> </li> </ul> </li> </ul> </div> <div ng-show=ctrl.pending class=gmf-displayquerygrid-pending> <span class=\\\"fa fa-spinner fa-spin\\\"></span> </div> </div> \";","module.exports = \"<div class=ngeo-grid-table-container> <table float-thead=ctrl.floatTheadConfig ng-model=ctrl.configuration.data class=\\\"table table-bordered table-striped table-hover\\\"> <thead class=table-header> <tr> <th ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-click=ctrl.sort(columnDefs.name) ng-bind-html=\\\"columnDefs.name | ngeoTrustHtml | translate\\\"> <i ng-show=\\\"ctrl.sortedBy !== columnDefs.name\\\" class=\\\"fa fa-fw\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === true\\\" class=\\\"fa fa-caret-up\\\"></i> <i ng-show=\\\"ctrl.sortedBy === columnDefs.name && ctrl.sortAscending === false\\\" class=\\\"fa fa-caret-down\\\"></i> </th> </tr> </thead> <tbody> <tr ng-repeat=\\\"attributes in ctrl.configuration.data\\\" ng-class=\\\"['row-' + ctrl.configuration.getRowUid(attributes), ctrl.configuration.isRowSelected(attributes) ? 'ngeo-grid-active': '']\\\" ng-click=\\\"ctrl.clickRow(attributes, $event)\\\" ng-mousedown=ctrl.preventTextSelection($event)> <td ng-repeat=\\\"columnDefs in ctrl.configuration.columnDefs\\\" ng-bind-html=\\\"attributes[columnDefs.name] | removeCDATA | ngeoTrustHtml\\\"></td> </tr> </tbody> </table> </div> \";","module.exports = \"<div class=\\\"btn-group dropup\\\"> <a type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span class=gmf-mouseposition-control-target></span> <span class=caret></span> </a> <ul class=\\\"dropdown-menu dropdown-menu-right\\\" role=menu> <li class=dropdown-header translate>Coordinate systems</li> <li ng-repeat=\\\"projitem in ::ctrl.projections\\\"> <a href ng-click=ctrl.setProjection(projitem)> <span class=\\\"fa fa-fw\\\" ng-class=\\\"{'fa-check': ctrl.projection == projitem}\\\"></span> {{::projitem.label}} </a> </li> </ul> </div> \";","module.exports = \"<div ngeo-map=ctrl.map ngeo-map-manage-resize=ctrl.manageResize ngeo-map-resize-transition=ctrl.resizeTransition> </div> \";","module.exports = \"<div class=\\\"btn-group btn-block\\\" ng-class=\\\"::{'dropup': scaleselectorCtrl.options.dropup}\\\"> <button type=button class=\\\"btn btn-default dropdown-toggle\\\" data-toggle=dropdown aria-expanded=false> <span ng-bind-html=\\\"scaleselectorCtrl.currentScale | ngeoScalify | ngeoTrustHtml\\\"></span>&nbsp;<i class=caret></i> </button> <ul class=\\\"dropdown-menu btn-block\\\" role=menu> <li ng-repeat=\\\"zoomLevel in ::scaleselectorCtrl.zoomLevels\\\"> <a href ng-click=scaleselectorCtrl.changeZoom(zoomLevel) ng-bind-html=\\\"scaleselectorCtrl.getScale(zoomLevel) | ngeoScalify | ngeoTrustHtml\\\"> </a> </li> </ul> </div> \";","module.exports = \"<div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=Close><span aria-hidden=true>&times;</span></button> <h4 class=modal-title translate>Share this map</h4> </div> <div class=modal-body> <form role=form name=gmfShareForm novalidate> <div class=form-group> <label for=gmfShareInputShortLink translate>Permalink</label> <input type=text class=form-control id=gmfShareInputShortLink onclick=this.select() ng-model=$ctrl.shortLink readonly=True> <p class=help-block translate>Copy this link to share it.</p> <p class=text-danger ng-if=$ctrl.showLengthWarning> <span class=\\\"fa fa-exclamation-triangle\\\"></span> {{'You have a lot of drawn elements in this map. The above link may not be correctly supported by some browsers.' | translate}} </p> <p class=text-danger ng-if=$ctrl.errorOnGetShortUrl> <span class=\\\"fa fa-exclamation\\\"></span> {{'Error, cannot get the shortened URL.' | translate}} </p> </div> <hr ng-if=::$ctrl.enableEmail> <div class=gmf-share-email ng-if=::$ctrl.enableEmail> <div class=form-group> <label for=gmfShareInputEmail translate>Send this link to</label> <input type=email class=form-control name=inputEmail id=gmfShareInputEmail placeholder=E-mail ng-model=$ctrl.email required> <span ng-show=\\\"gmfShareForm.$submitted || gmfShareForm.inputEmail.$touched\\\"> <span class=text-danger ng-show=\\\"gmfShareForm.inputEmail.$error.email || gmfShareForm.inputEmail.$error.required\\\"> <i class=\\\"fa fa-exclamation-triangle\\\" aria-hidden=true></i> {{'Invalid email.' | translate}}</span> </span> </div> <div class=form-group> <textarea class=form-control ng-attr-placeholder=\\\"{{'Message (optional)' | translate }}\\\" ng-model=$ctrl.message></textarea> </div> <span class=text-success ng-if=$ctrl.successfullySent> <i class=\\\"fa fa-check\\\" aria-hidden=true></i> {{ 'Link successfully sent.' | translate }} </span> <span class=text-danger ng-if=$ctrl.errorOnsend> <i class=\\\"fa fa-exclamation\\\" aria-hidden=true></i> {{ 'Error, the link has not been sent.' | translate }} </span> </div> <div class=text-right> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal translate>Close</button> <button ng-if=::$ctrl.enableEmail type=submit class=\\\"btn btn-default btn-primary\\\" ng-click=$ctrl.sendShortUrl() ng-disabled=!gmfShareForm.$valid translate>Send </button> </div> </form> </div> \";","module.exports = \"<div class=gmf-time-slider> <div ui-slider=sliderCtrl.sliderOptions ng-model=sliderCtrl.dates> <span class=\\\"ui-slider-handle ui-state-default ui-corner-all\\\" tabindex=0 data-toggle=tooltip title=\\\"\\\"> </span> </div> <div class=gmf-time-slider-displayed-dates> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[0])}}</span> </div> <div class=gmf-time-slider-start-date ng-if=\\\"::sliderCtrl.time.mode === 'value'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates)}}</span> </div> <div class=gmf-time-slider-end-date ng-if=\\\"::sliderCtrl.time.mode === 'range'\\\"> <span>{{sliderCtrl.getLocalizedDate(sliderCtrl.dates[1])}}</span> </div> </div> </div> \";","module.exports = \"<div class=gmf-layertree-root-tools ng-if=layertreeCtrl.isRoot> <a href ng-if=\\\"gmfLayertreeCtrl.nodesCount() > 0\\\" ng-click=gmfLayertreeCtrl.removeAllNodes()> <span class=\\\"fa fa-trash\\\"></span> {{'Clear all' | translate}} </a> </div> <div ng-if=::!layertreeCtrl.isRoot id=gmf-layertree-node-{{::layertreeCtrl.uid}} ng-class=\\\"[layertreeCtrl.node.children ? 'gmf-layertree-group' : 'gmf-layertree-leaf', 'gmf-layertree-depth-' + layertreeCtrl.depth, gmfLayertreeCtrl.getResolutionStyle(layertreeCtrl.node), gmfLayertreeCtrl.getNodeState(layertreeCtrl)]\\\"> <div class=ngeo-sortable-handle ng-show=\\\"layertreeCtrl.depth === 1 && layertreeCtrl.parent.children.length > 1\\\"> <i class=\\\"gmf-layertree-sortable-handle-icon fa fa-ellipsis-v\\\"></i> </div> <a ng-if=::layertreeCtrl.node.children data-toggle=collapse href=#gmf-layertree-layer-group-{{::layertreeCtrl.uid}} aria-expanded={{::layertreeCtrl.node.metadata.isExpanded}} class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::!layertreeCtrl.node.children ng-class=\\\"::{'gmf-layertree-no-layer-icon' : !gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl)}\\\" class=gmf-layertree-layer-icon> <div> <img ng-if=\\\"::(legendIconUrl=gmfLayertreeCtrl.getLegendIconURL(layertreeCtrl))\\\" ng-src={{::legendIconUrl}}>  </div> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) ng-if=::layertreeCtrl.node.children> <span ng-switch=\\\"layertreeCtrl.node.children && !layertreeCtrl.layer.loading\\\"> <i ng-switch-when=true class=\\\"fa fa-fw gmf-layertree-state\\\"></i> <i ng-switch-when=false class=\\\"fa fa-fw fa-refresh fa-spin\\\"></i> </span> </a> <a href ng-click=::gmfLayertreeCtrl.toggleActive(layertreeCtrl) class=gmf-layertree-name data-toggle=tooltip data-placement=top title=\\\"{{layertreeCtrl.node.name | translate}}\\\"> {{layertreeCtrl.node.name | translate}} <i class=\\\"gmf-icon gmf-icon-search-go gmf-layertree-zoom\\\" data-toggle=tooltip data-placement=bottom data-title=\\\"{{'Not visible at current scale. Click to zoom.'|translate}}\\\" ng-click=\\\"::gmfLayertreeCtrl.zoomToResolution(layertreeCtrl); $event.preventDefault(); $event.stopPropagation();\\\" ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) == 'on'\\\"> </i> <span ngeo-popover ngeo-popover-dismiss=.content ng-if=\\\"gmfLayertreeCtrl.getNodeState(layertreeCtrl) !== 'off' && layertreeCtrl.node.time && layertreeCtrl.node.time.mode !== 'disabled'\\\"> <span ngeo-popover-anchor class=\\\"fa fa-clock-o\\\" ng-click=\\\"$event.preventDefault(); $event.stopPropagation()\\\"> </span> <div ngeo-popover-content> <ngeo-date-picker ng-if=\\\"::layertreeCtrl.node.time.widget === 'datepicker'\\\" time=layertreeCtrl.node.time on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </ngeo-date-picker> <gmf-time-slider ng-if=\\\"::layertreeCtrl.node.time.widget === 'slider'\\\" gmf-time-slider-time=layertreeCtrl.node.time gmf-time-slider-on-date-selected=\\\"gmfLayertreeCtrl.updateWMSTimeLayerState(layertreeCtrl, time)\\\"> </gmf-time-slider> </div> </span> <span class=\\\"fa fa-pencil\\\" data-toggle=tooltip data-placement=right title=\\\"{{'Currently editing this layer'|translate}}\\\" ng-if=layertreeCtrl.properties.editing> </span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-if=\\\"::layertreeCtrl.depth == 1\\\" ng-click=gmfLayertreeCtrl.removeNode(layertreeCtrl.node)> <span class=\\\"fa fa-trash\\\"></span> </a> <a class=gmf-layertree-node-menu-btn href=\\\"\\\" ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl) ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-menu-' + layertreeCtrl.uid)\\\"> <span class=\\\"fa fa-cog\\\"></span> </a> <span ngeo-popover ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed && !layertreeCtrl.node.children) || (gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend) || layertreeCtrl.getDataSource().filtrable\\\" ngeo-popover-dismiss=.content> <span ngeo-popover-anchor class=\\\"extra-actions fa fa-cog\\\"> </span> <div ngeo-popover-content> <ul> <li ng-if=\\\"::(layertreeCtrl.depth === 1 && !layertreeCtrl.node.mixed) || (layertreeCtrl.depth > 1 && layertreeCtrl.parent.node.mixed)\\\"> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </li> <li ng-if=\\\"::gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\"> <i class=\\\"fa fa-th-list fa-fw\\\"></i> <a ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend'); popoverCtrl.dismissPopover()\\\" data-toggle=collapse href=\\\"\\\"> {{'Show/hide legend'|translate}} </a> </li> <li ng-if=\\\"layertreeCtrl.getDataSource() && layertreeCtrl.getDataSource().filtrable\\\"> <i class=\\\"fa fa-filter fa-fw\\\"></i> <a ng-click=gmfLayertreeCtrl.toggleFiltrableDataSource(layertreeCtrl.getDataSource()) href=\\\"\\\"> {{'Filter'|translate}} </a> </li> </ul> </div> </span> <span class=gmf-layertree-metadata ng-if=::layertreeCtrl.node.metadata.metadataUrl> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow === true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href={{::layertreeCtrl.node.metadata.metadataUrl}} target=blank_> </a> </span> <span ng-if=\\\"::gmfLayertreeCtrl.openLinksInNewWindow !== true\\\"> <a title=\\\"{{'More informations'|translate}}\\\" href=\\\"\\\" ng-click=gmfLayertreeCtrl.displayMetadata(layertreeCtrl)> </a> </span> </span> </span> </div> <div class=gmf-layertree-node-menu id=gmf-layertree-node-menu-{{::layertreeCtrl.uid}} style=display:none ng-if=::gmfLayertreeCtrl.supportsCustomization(layertreeCtrl)> <div ng-if=::gmfLayertreeCtrl.supportsOpacityChange(layertreeCtrl)> <i class=\\\"fa fa-tint fa-fw\\\"></i> <span for=layer-opactity>{{'Opacity'|translate}}</span> <input class=input-action name=layer-opactity type=range min=0 max=1 step=0.01 ng-model=layertreeCtrl.layer.opacity /> </div> <a class=gmf-layertree-node-menu-togglelegend ng-if=::gmfLayertreeCtrl.supportsLegend(layertreeCtrl) data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> <span class=\\\"fa fa-th-list\\\"> </span> {{'Show/hide legend'|translate}} </a> </div> <div ng-if=\\\"::!layertreeCtrl.isRoot && gmfLayertreeCtrl.getLegendsObject(layertreeCtrl) && layertreeCtrl.node.metadata.legend\\\" id=gmf-layertree-node-{{::layertreeCtrl.uid}}-legend class=\\\"collapse gmf-layertree-legend\\\" ng-class=\\\"::[layertreeCtrl.node.metadata.isLegendExpanded ? 'in' : '']\\\"> <a title=\\\"{{'Hide legend'|translate}}\\\" data-toggle=collapse ng-click=\\\"::gmfLayertreeCtrl.toggleNodeLegend('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\" href=\\\"\\\"> {{'Hide legend'|translate}} </a> <div ng-if=\\\"gmfLayertreeCtrl.isNodeLegendVisible('#gmf-layertree-node-' + layertreeCtrl.uid + '-legend')\\\"> <div ng-repeat=\\\"(title, url) in gmfLayertreeCtrl.getLegendsObject(layertreeCtrl)\\\"> <p ng-if=\\\"gmfLayertreeCtrl.getNumberOfLegendsObject(layertreeCtrl) > 1\\\">{{title|translate}}</p> <img ng-src={{url}}> </div> </div> </div> <ul class=gmf-layertree-root-external-datasources ng-if=\\\"layertreeCtrl.isRoot && (gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups.length || gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length)\\\"> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmtsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmtsGroups\\\" group=wmtsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-repeat=\\\"wmsGroup in gmfLayertreeCtrl.gmfExternalDataSourcesManager.wmsGroups\\\" group=wmsGroup> </gmf-datasourcegrouptree> <gmf-datasourcegrouptree class=\\\"gmf-layertree-node gmf-layertree-depth-1\\\" ng-if=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup.dataSources.length group=gmfLayertreeCtrl.gmfExternalDataSourcesManager.fileGroup> </gmf-datasourcegrouptree> </ul> <ul id=gmf-layertree-layer-group-{{::layertreeCtrl.uid}} ng-if=::layertreeCtrl.node.children ng-class=\\\"{collapse: !layertreeCtrl.isRoot, in : layertreeCtrl.node.metadata.isExpanded}\\\" ngeo-sortable=\\\"::layertreeCtrl.isRoot && layertreeCtrl.node.children\\\" ngeo-sortable-options=\\\"{handleClassName: 'ngeo-sortable-handle', draggerClassName: 'gmf-layertree-dragger', placeholderClassName : 'gmf-layertree-curr-drag-item'}\\\" ngeo-sortable-callback=::gmfLayertreeCtrl.afterReorder ngeo-sortable-callback-ctx=::gmfLayertreeCtrl> <li class=gmf-layertree-node ng-repeat=\\\"node in layertreeCtrl.node.children\\\" ng-class=\\\"'gmf-layertree-depth-' + layertreeCtrl.depth\\\" ngeo-layertree=node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<span ng-if=::!layertreeCtrl.isRoot>{{::layertreeCtrl.node.name}}</span> <input type=checkbox ng-if=\\\"::layertreeCtrl.node && !layertreeCtrl.node.children\\\" ng-model=layertreeCtrl.getSetActive ng-model-options=\\\"{getterSetter: true}\\\"/> <ul ng-if=::layertreeCtrl.node.children> <li ng-repeat=\\\"node in ::layertreeCtrl.node.children\\\" ngeo-layertree=::node ngeo-layertree-notroot ngeo-layertree-map=layertreeCtrl.map ngeo-layertree-nodelayerexpr=layertreeCtrl.nodelayerExpr ngeo-layertree-listenersexpr=layertreeCtrl.listenersExpr> </li> </ul> \";","module.exports = \"<div class=\\\"gmf-layertree-group gmf-layertree-depth-1 {{$ctrl.group.visibilityState}}\\\"> <a data-toggle=collapse href=#gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} aria-expanded=true class=\\\"fa gmf-layertree-expand-node fa-fw\\\"> </a> <a class=\\\"fa fa-fw gmf-layertree-state\\\" href ng-click=$ctrl.toggle()> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggle()> <span>{{$ctrl.group.title | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.remove()> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> <ul id=gmf-layertree-layer-group-{{::$ctrl.getGroupUid()}} class=\\\"collapse in\\\"> <li class=\\\"gmf-layertree-node gmf-layertree-depth-2\\\" ng-class=\\\"[dataSource.visible ? 'on' : 'off']\\\" ng-repeat=\\\"dataSource in $ctrl.group.dataSources\\\"> <div class=gmf-layertree-leaf> <a href ng-click=$ctrl.toggleDataSource(dataSource) class=\\\"gmf-layertree-layer-icon gmf-layertree-no-layer-icon\\\"> </a> <a class=gmf-layertree-name href ng-click=$ctrl.toggleDataSource(dataSource)> <span>{{dataSource.name | translate}}</span> </a> <span class=gmf-layertree-right-buttons> <a href=\\\"\\\" ng-click=$ctrl.removeDataSource(dataSource)> <span class=\\\"fa fa-trash\\\"></span> </a> </span> </div> </li> </ul> \";","module.exports = __webpack_public_path__ + \"crosshair.3aa99e.svg\";","module.exports = \"<div class=form-group ng-switch=$ctrl.filtrableDataSources.length> <span ng-switch-when=0 translate>No filtrable layer available!</span> <select class=form-control ng-disabled=$ctrl.aRuleIsActive ng-switch-default ng-model=$ctrl.gmfDataSourceBeingFiltered.dataSource ng-options=\\\"dataSource.name | translate for dataSource in $ctrl.filtrableDataSources\\\"> <option value=\\\"\\\" translate>-- Layer to filter --</option> </select> <div ng-if=\\\"$ctrl.customRules && $ctrl.directedRules && $ctrl.readyDataSource\\\"> <hr class=gmf-filterselector-separator /> <div class=\\\"dropdown gmf-filterselector-savedfilters\\\"> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0}\\\" type=button data-toggle=dropdown ng-disabled=\\\"$ctrl.aRuleIsActive || $ctrl.gmfSavedFilters.currentDataSourceItems.length === 0\\\"> <span translate>Saved</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <a href ng-click=$ctrl.saveFilterLoadItem(item)> <span>{{::item.name}}</span> </a> </li> <li role=separator class=divider></li> <li> <a href ng-click=$ctrl.saveFilterManage()> <span translate>Manage saved filters</span> </a> </li> </ul> </div> <ngeo-filter a-rule-is-active=$ctrl.aRuleIsActive custom-rules=$ctrl.customRules datasource=$ctrl.readyDataSource directed-rules=$ctrl.directedRules feature-overlay=$ctrl.featureOverlay map=$ctrl.map tool-group=$ctrl.toolGroup> </ngeo-filter> <div> <a class=\\\"btn btn-link gmf-filterselector-savebtn\\\" type=button data-toggle=dropdown ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.saveFilterShowModal()\\\" ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-save\\\"></span> <span translate>Save</span> </a> </div> </div> <ngeo-modal ng-model=$ctrl.saveFilterSaveModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Save filter' | translate}}</h4> </div> <div class=modal-body> <p class=gmf-filterselector-savefilter-desc translate> You can save the filter that you created to re-load it later. </p> <input type=text class=form-control name=name ng-model=$ctrl.saveFilterName placeholder=\\\"{{'Filter name' | translate}}\\\"/> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Cancel' | translate}}</button> <button type=button ng-click=$ctrl.saveFilterSave() ng-disabled=\\\"$ctrl.saveFilterName === ''\\\" class=\\\"btn btn-primary\\\">{{'Save' | translate}}</button> </div> </ngeo-modal> <ngeo-modal ng-model=$ctrl.saveFilterManageModalShown> <div class=gmf-filterselector-managefilter-modal> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title>{{'Manage filters' | translate}}</h4> </div> <div class=modal-body> <ul> <li ng-repeat=\\\"item in $ctrl.gmfSavedFilters.currentDataSourceItems\\\"> <span>{{::item.name}}</span> <a href ng-click=$ctrl.saveFilterRemoveItem(item)> {{ 'Delete' | translate }} </a> <div class=gmf-eol></div> </li> </ul> </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'Close' | translate}}</button> </div> </div> </ngeo-modal> </div> \";","module.exports = \"<div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle ngeo-filter-condition-button\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span class=\\\"fa fa-cog\\\"></span> <span class=caret></span> </a> <ul class=dropdown-menu> <li class=ngeo-filter-condition-criteria-header translate>Criteria taken into account</li> <li ng-repeat=\\\"condition in ::$ctrl.conditions\\\"> <a href ng-click=$ctrl.setCondition(condition)> <span ng-class=\\\"{'ngeo-filter-condition-criteria-active': condition.value == $ctrl.datasource.filterCondition}\\\" class=\\\"fa fa-check ngeo-filter-condition-criteria\\\"> </span> <span>{{::condition.text | translate}}</span> </a> </li> </ul> </div> <ngeo-rule ng-repeat=\\\"rule in $ctrl.directedRules\\\" feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-directed map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> <hr class=ngeo-filter-separator-rules /> <div ng-repeat=\\\"rule in $ctrl.customRules\\\"> <a class=\\\"btn btn-xs btn-link ngeo-filter-rule-custom-rm-btn\\\" ng-click=\\\"!$ctrl.aRuleIsActive && $ctrl.removeCustomRule(rule)\\\" ng-disabled=$ctrl.aRuleIsActive href> <span class=\\\"fa fa-remove\\\"></span> </a> <ngeo-rule feature-overlay=::$ctrl.featureOverlay class=ngeo-filter-rule-custom map=$ctrl.map rule=rule tool-group=$ctrl.toolGroup> </ngeo-rule> </div> <div class=dropdown> <a class=\\\"btn btn-link dropdown-toggle\\\" ng-class=\\\"{disabled: $ctrl.aRuleIsActive}\\\" type=button data-toggle=dropdown ng-disabled=$ctrl.aRuleIsActive> <span translate>+ Add a new criteria</span> <span class=caret></span> </a> <ul class=dropdown-menu> <li ng-repeat=\\\"attribute in ::$ctrl.geometryAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span translate>Spatial filter</span> </a> </li> <li role=presentation class=divider></li> <li ng-repeat=\\\"attribute in ::$ctrl.otherAttributes\\\"> <a href ng-click=$ctrl.createAndAddCustomRule(attribute)> <span>{{::attribute.name | translate}}</span> </a> </li> </ul> </div> <hr class=ngeo-filter-separator-criteria /> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.apply() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-check\\\"></span> <span translate>Apply filter</span> </a> <a class=\\\"btn btn-link\\\" type=button ng-click=$ctrl.getData() ng-disabled=\\\"$ctrl.hasARule() === false || $ctrl.datasource.visible === false\\\"> <span class=\\\"fa fa-chevron-right\\\"></span> <span translate>Get data</span> </a> \";","module.exports = \"<div class=dropdown ng-class=\\\"{open: $ctrl.rule.active}\\\"> <a class=\\\"btn btn-default btn-sm dropdown-toggle\\\" type=button ng-click=$ctrl.toggle()> <span>{{ ::$ctrl.clone.name | translate }}</span> <span class=caret></span> </a> <div class=\\\"dropdown-menu form-group\\\"> <select class=\\\"form-control input-sm ngeo-rule-operators-list\\\" ng-disabled=$ctrl.drawActive ng-if=::$ctrl.clone.operators ng-model=$ctrl.clone.operator ng-options=\\\"$ctrl.operators[operator] | translate for operator in ::$ctrl.clone.operators track by operator\\\"> </select> <div ng-switch=::$ctrl.clone.type> <div class=\\\"ngeo-rule-type-date form-group\\\" ng-if=$ctrl.rule.active ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <ngeo-date-picker time=$ctrl.timeRangeMode on-date-selected=$ctrl.onDateRangeSelected(time)> </ngeo-date-picker> </div> <div ng-switch-default> <ngeo-date-picker time=$ctrl.timeValueMode on-date-selected=$ctrl.onDateSelected(time)> </ngeo-date-picker> </div> </div> </div> <div class=\\\"ngeo-rule-type-geometry form-group\\\" ng-switch-when=geometry> <div ng-switch=$ctrl.geomType> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </div> <ngeo-drawfeature ngeo-drawfeature-active=$ctrl.drawActive ngeo-drawfeature-features=$ctrl.drawnFeatures ngeo-drawfeature-map=$ctrl.map> <div ngeo-btn-group class=btn-group> <a data-toggle=tooltip title=\\\"{{'Draw a point on the map' | translate}}\\\" href ngeo-btn ngeo-drawpoint class=\\\"btn btn-sm btn-default ngeo-drawfeature-point\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.drawPoint.active}\\\" ng-model=dfCtrl.drawPoint.active> <span class=\\\"gmf-icon gmf-icon-point\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a line on the map' | translate}}\\\" href ngeo-btn ngeo-measurelength class=\\\"btn btn-sm btn-default ngeo-drawfeature-linestring\\\" ng-show=\\\"['intersects', 'within'].indexOf($ctrl.clone.operator) !== -1\\\" ng-class=\\\"{active: dfCtrl.measureLength.active}\\\" ng-model=dfCtrl.measureLength.active> <span class=\\\"gmf-icon gmf-icon-line\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a polygon on the map' | translate}}\\\" href ngeo-btn ngeo-measurearea class=\\\"btn btn-sm btn-default ngeo-drawfeature-polygon\\\" ng-class=\\\"{active: dfCtrl.measureArea.active}\\\" ng-model=dfCtrl.measureArea.active> <span class=\\\"gmf-icon gmf-icon-polygon\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a circle on the map' | translate}}\\\" href ngeo-btn ngeo-measureazimut class=\\\"btn btn-sm btn-default ngeo-drawfeature-circle\\\" ng-class=\\\"{active: dfCtrl.measureAzimut.active}\\\" ng-model=dfCtrl.measureAzimut.active> <span class=\\\"gmf-icon gmf-icon-circle\\\"></span> </a> <a data-toggle=tooltip title=\\\"{{'Draw a rectangle on the map' | translate}}\\\" href ngeo-btn ngeo-drawrectangle class=\\\"btn btn-sm btn-default ngeo-drawfeature-rectangle\\\" ng-class=\\\"{active: dfCtrl.drawRectangle.active}\\\" ng-model=dfCtrl.drawRectangle.active> <span class=\\\"gmf-icon gmf-icon-rectangle\\\"></span> </a> </div> <div class=ngeo-rule-type-geometry-instructions ng-if=$ctrl.drawActive> <span ng-if=dfCtrl.drawPoint.active> {{ 'Draw a point on the map.' | translate }} </span> <span ng-if=dfCtrl.measureLength.active> {{ 'Draw a line string on the map.' | translate }} </span> <span ng-if=dfCtrl.measureArea.active> {{ 'Draw a polygon on the map.' | translate }} </span> <span ng-if=dfCtrl.measureAzimut.active> {{ 'Draw a circle on the map.' | translate }} </span> <span ng-if=dfCtrl.drawRectangle.active> {{ 'Draw a rectangle on the map.' | translate }} </span> </div> </ngeo-drawfeature> </div> <div class=\\\"checkbox ngeo-rule-type-select\\\" ng-switch-when=select> <a ng-click=$ctrl.selectAllChoices() href>{{ All | translate}} </a> <label class=\\\"form-group ol-unselectable\\\" ng-repeat=\\\"choice in ::$ctrl.clone.choices\\\"> <input ng-checked=\\\"$ctrl.clone.getExpression() && $ctrl.clone.getExpression().split(',').indexOf(choice) > -1\\\" ng-click=$ctrl.toggleChoiceSelection(choice) type=checkbox value=choice /> <span>{{ choice | translate }}</span> </label> </div> <div class=\\\"form-group ngeo-rule-type-text\\\" ng-switch-default> <div ng-switch=$ctrl.clone.operator> <div ng-switch-when=..> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.lowerBoundary /> <input type=number class=\\\"form-control input-sm\\\" ng-model=$ctrl.clone.upperBoundary /> </div> <div ng-switch-default> <input type=number class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type === 'number'\\\" ng-model=$ctrl.clone.expression /> <input type=text class=\\\"form-control input-sm\\\" ng-if=\\\"$ctrl.clone.type !== 'number'\\\" ng-model=$ctrl.clone.expression /> </div> </div> </div> <div class=ngeo-rule-btns> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.apply() type=button>{{'Apply' | translate}}</button> <button class=\\\"btn btn-xs btn-default\\\" ng-click=$ctrl.cancel() type=button>{{'Cancel' | translate}}</button> </div> </div> </div> </div> <div class=ngeo-rule-value ng-if=\\\"$ctrl.rule.value !== null\\\"> <a class=\\\"btn btn-xs btn-link\\\" ng-click=\\\"!$ctrl.rule.active && $ctrl.reset()\\\" ng-disabled=$ctrl.rule.active href> <span class=\\\"fa fa-remove\\\"></span> </a> <div ng-switch=::$ctrl.rule.type> <div ng-switch-when=date|datetime ng-switch-when-separator=|> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>From </span> <span>{{ $ctrl.timeToDate($ctrl.rule.lowerBoundary) }}</span> <span translate> to </span> <span>{{ $ctrl.timeToDate($ctrl.rule.upperBoundary) }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.timeToDate($ctrl.rule.getExpression()) }}</span> </div> </div> </div> <div ng-switch-when=geometry> <span>{{ $ctrl.operators[$ctrl.rule.operator] }}</span> <span ng-switch=$ctrl.getRuleGeometryType()> <span class=\\\"gmf-icon gmf-icon-point\\\" ng-switch-when=Point> </span> <span class=\\\"gmf-icon gmf-icon-line\\\" ng-switch-when=LineString> </span> <span class=\\\"gmf-icon gmf-icon-polygon\\\" ng-switch-when=Polygon> </span> <span class=\\\"gmf-icon gmf-icon-circle\\\" ng-switch-when=Circle> </span> <span class=\\\"gmf-icon gmf-icon-rectangle\\\" ng-switch-when=Rectangle> </span> </span> </div> <div ng-switch-when=select> <span ng-repeat=\\\"choice in $ctrl.rule.getExpression().split(',')\\\"> {{ choice | translate }}{{ $last ? '' : ', ' }} </span> </div> <div ng-switch-default> <div ng-switch=$ctrl.rule.operator> <div ng-switch-when=..|time_during ng-switch-when-separator=|> <span translate>Between </span> <span>{{ $ctrl.rule.lowerBoundary }}</span> <span translate> and </span> <span>{{ $ctrl.rule.upperBoundary }}</span> </div> <div ng-switch-default> <span>{{ $ctrl.operatorsShortFormat[$ctrl.rule.operator] }}</span> <span>{{ $ctrl.rule.getExpression() }}</span> </div> </div> </div> </div> </div> \";","module.exports = \"<div class=ngeo-datepicker> <form name=dateForm class=ngeo-datepicker-form novalidate> <div ng-if=\\\"::datepickerCtrl.time.widget === 'datepicker'\\\"> <div class=ngeo-datepicker-start-date> <span ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\" translate>From:</span> <span ng-if=\\\"::datepickerCtrl.time.mode !== 'range'\\\" translate>Date:</span> <input name=sdate ui-date=datepickerCtrl.sdateOptions ng-model=datepickerCtrl.sdate required=\\\"\\\"/> </div> <div class=ngeo-datepicker-end-date ng-if=\\\"::datepickerCtrl.time.mode === 'range'\\\"> <span translate>To:</span> <input name=edate ui-date=datepickerCtrl.edateOptions ng-model=datepickerCtrl.edate required=\\\"\\\"/> </div> </div> </form> </div> \";","module.exports = \"<h4 class=\\\"popover-title ngeo-popup-title\\\"> <span ng-bind-html=title></span> <button type=button class=close ng-click=\\\"open = false\\\"> &times;</button> </h4> <div class=popover-content ng-bind-html=content></div> \";","module.exports = \"<ul class=gmf-backgroundlayerselector> <li ng-repeat=\\\"layer in ctrl.bgLayers\\\" ng-click=ctrl.setLayer(layer) ng-class=\\\"{'gmf-backgroundlayerselector-active': ctrl.bgLayer == layer, 'gmf-backgroundlayerselector-disabled': ctrl.opacityLayer == layer}\\\"> <img class=gmf-thumb ng-src=\\\"{{::layer.get('metadata')['thumbnail']}}\\\"/> <span class=gmf-text>{{layer.get(\\\"label\\\") | translate}}</span> <span ng-class=\\\"{'gmf-backgroundlayerselector-opacity-check': ctrl.opacityLayer == layer}\\\"></span> </li> <input ng-if=ctrl.opacityLayer class=\\\"input-action gmf-backgroundlayerselector-opacity-slider\\\" name=bg-layer-opacity type=range min=0 max=1 step=0.01 ng-model=ctrl.getSetBgLayerOpacity ng-model-options=\\\"{getterSetter: true}\\\"> </ul> \";","module.exports = \"<div ng-if=$ctrl.gmfUser.username> <div class=form-group> <span>{{'Logged in as' | translate}}</span> <strong>{{ ::$ctrl.gmfUser.username }}</strong>. </div> <form name=logoutForm role=form ng-submit=$ctrl.logout() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=!$ctrl.changingPassword> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Logout' | translate}}\\\"/> </div> <div class=form-group> <input ng-show=$ctrl.allowPasswordChange type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Change password' | translate}}\\\" ng-click=\\\"$ctrl.changingPassword = true\\\"/> </div> </form> <form name=changePasswordForm role=form ng-submit=$ctrl.changePassword() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\" ng-if=$ctrl.changingPassword> <div class=form-group> <input type=password class=form-control name=oldpassword ng-model=$ctrl.oldPwdVal ng-attr-placeholder=\\\"{{'Old password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpassword ng-model=$ctrl.newPwdVal ng-attr-placeholder=\\\"{{'New password' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=newpasswordconfirm ng-model=$ctrl.newPwdConfVal ng-attr-placeholder=\\\"{{'Confirm new password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Change password' | translate}}\\\"/> </div> <div class=form-group> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Cancel' | translate}}\\\" ng-if=!$ctrl.userMustChangeItsPassword ng-click=$ctrl.changePasswordReset() /> <input type=button class=\\\"form-control btn btn-default\\\" value=\\\"{{'Logout' | translate}}\\\" ng-if=$ctrl.userMustChangeItsPassword ng-click=$ctrl.logout() /> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> </div> <div ng-if=!$ctrl.gmfUser.username> <div class=\\\"alert alert-warning\\\" ng-show=$ctrl.infoMessage> <span>{{ $ctrl.infoMessage }}</span> </div> <form name=loginForm role=form ng-submit=$ctrl.login() ng-controller=GmfAuthenticationController ng-class=\\\"{'has-error': $ctrl.error}\\\"> <div class=form-group> <input type=text class=form-control name=login ng-model=$ctrl.loginVal ng-attr-placeholder=\\\"{{'Username' | translate}}\\\"/> </div> <div class=form-group> <input type=password class=form-control name=password ng-model=$ctrl.pwdVal ng-attr-placeholder=\\\"{{'Password' | translate}}\\\"/> </div> <div class=form-group> <input type=submit class=\\\"form-control btn btn-primary\\\" value=\\\"{{'Connect' | translate}}\\\"/> </div> <div ng-show=$ctrl.allowPasswordReset class=form-group> <a ng-click=$ctrl.resetPassword() href=\\\"\\\">{{'Password forgotten?' | translate}}</a> </div> </form> <div ng-show=$ctrl.error class=\\\"gmf-authentication-error help-block\\\"></div> <ngeo-modal ng-model=$ctrl.resetPasswordModalShown> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-label=\\\"{{'Close' | translate}}\\\"> <span aria-hidden=true>&times;</span> </button> <h4 class=modal-title> {{'Password forgotten?' | translate}} </h4> </div> <div class=modal-body translate> A new password has just been sent to you by e-mail. </div> <div class=modal-footer> <button type=button class=\\\"btn btn-default\\\" data-dismiss=modal>{{'OK' | translate}}</button> </div> </ngeo-modal> </div> \";"],"sourceRoot":""}